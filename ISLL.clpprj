<?xml version="1.0" encoding="utf-8"?>
<project name="C:\xampp\htdocs\ISLL\ISLL.clpprj">
	<settings><PM_URL><![CDATA[http://localhost/ISLL/]]></PM_URL><PM_HOME_URL><![CDATA[http://localhost/ISLL/]]></PM_HOME_URL><PM_LIBS><![CDATA[]]></PM_LIBS><PM_FTP_CONNECTION><![CDATA[]]></PM_FTP_CONNECTION><PM_FTP_DIR><![CDATA[]]></PM_FTP_DIR><PM_FTP_UPLOAD_ON_SAVE><![CDATA[INT:0]]></PM_FTP_UPLOAD_ON_SAVE></settings><removed value=";"/><added value=""/><lastopfiles>
		<file name="C:\xampp\htdocs\ISLL\app\Controller\UsersController.php"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Users\register.ctp"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Users\authenticate.ctp"/>
		<file name="C:\xampp\htdocs\ISLL\app\Controller\SysReviewsController.php"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\SysReviews\add.ctp"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\SysReviews\viewall.ctp"/>
		<file name="C:\xampp\htdocs\ISLL\sql\ISLL_tables.sql"/>
	</lastopfiles>
	<errors version="5.3">
		<errfile name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php">
			<error val="5;23;12;23;551;1;"/>
		</errfile>
		<errfile name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php">
			<error val="24;346;29;346;302;2;"/>
			<error val="23;387;28;387;302;2;"/>
		</errfile>
		<errfile name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php">
			<error val="31;1991;37;1991;303;2;"/>
			<error val="24;2082;30;2082;303;2;"/>
		</errfile>
		<errfile name="C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php">
			<error val="5;29;12;29;551;1;"/>
		</errfile>
	</errors>
	<codestructure version="5.0">
		<phptree>
			<treenode node="AclInterface;PHP:Interface Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f0;22;1;72;;;;vpos;;v;;r&#xA;Description&#xA;     Access Control List interface. Implementing classes are used by AclComponent to perform ACL checks in Cake.;;d23,22;;b0,0;;m">
				<treenode node="allow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f8;42;49;42;;;;vpos;;vbool;;r&#xA;Description&#xA;     Allow methods are used to grant an ARO access to an ACO.&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d-1,-1;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f29;42;33;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f35;42;42;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f23;42;27;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f8;32;49;32;;;;vpos;;vbool;;r&#xA;Description&#xA;     Empty method to be overridden in subclasses&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d-1,-1;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f29;32;33;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f35;32;42;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f23;32;27;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f8;52;48;52;;;;vpos;;vbool;;r&#xA;Description&#xA;     Deny methods are used to remove permission from an ARO to access an ACO.&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d-1,-1;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f28;52;32;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f34;52;41;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f22;52;26;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inherit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f8;62;51;62;;;;vpos;;vbool;;r&#xA;Description&#xA;     Inherit methods modify the permission for an ARO to be that of its parent object.&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d-1,-1;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f31;62;35;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f37;62;44;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f25;62;29;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f8;70;49;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initialization method for the Acl implementation&#xA;&#xA;Parameters:&#xA;    Component $component - The AclComponent instance;;d-1,-1;;b1,0;;mComponent $component;;p">
					<treenode node="component;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php;f38;70;48;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ALLOW;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f6;38;12;38;;;;vposbool;;v;;rtrue;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="APP;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;52;12;52;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the application's directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="APP_CONTROLLER_EXISTS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f9;58;30;58;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f9;24;30;24;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="APP_DIR;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f9;38;16;38;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f9;37;16;37;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f9;47;16;47;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f9;46;16;46;;C:\xampp\htdocs\ISLL\index.php;f8;25;15;25;;;;vpos;;v;;r&#xA;Description&#xA;     The actual directory name for the &quot;app&quot;.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="APP_TEST_CASES;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f8;19;22;19;;;;vpos;;v;;rTESTS . 'Case';;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="APPLIBS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;58;16;58;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the application's libs directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ARTICLE_MODEL_CREATED;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f9;38;30;38;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CACHE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;106;14;106;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the cache files directory. It can be shared between hosts in a multi-server setup.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Cake;PHP:PHP Include;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f15;80;19;80;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f15;90;19;90;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f15;89;19;89;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f15;99;19;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CAKE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;46;13;46;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the cake directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CAKE_CORE_INCLUDE_PATH;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f9;61;31;61;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f9;63;31;63;;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;32;31;32;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f9;70;31;70;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f9;72;31;72;;C:\xampp\htdocs\ISLL\index.php;f9;37;31;37;;;;vpos;;v;;r$vendorPath;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CakeEventListener;PHP:Interface Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventListener.php;f0;22;1;45;;;;vpos;;v;;r&#xA;Description&#xA;     Objects implementing this interface should declare the `implementedEvents` function to notify the event manager what methods should be called when an event is triggered.;;d28,22;;b0,0;;m">
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventListener.php;f8;43;36;43;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a list of events this object is implementing. When the class is registered in an event manager, each individual method will be associated with the respective event.&#xA;&#xA;Return:&#xA;   associative array or event key names pointing to the function;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeLogInterface;PHP:Interface Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLogInterface.php;f0;24;1;35;;;;vpos;;v;;r&#xA;Description&#xA;     CakeLogStreamInterface is the interface that should be implemented by all classes that are going to be used as Log streams.;;d27,24;;b0,0;;m">
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLogInterface.php;f8;33;39;33;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Write method to handle writes being made to the Logger&#xA;&#xA;Parameters:&#xA;    string $type - Message type&#xA;    string $message - Message to write;;d-1,-1;;b1,0;;mstring $type;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLogInterface.php;f30;33;38;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLogInterface.php;f23;33;28;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CakeSessionHandlerInterface;PHP:Interface Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f0;22;1;72;;;;vpos;;v;;r&#xA;Description&#xA;     Interface for Session handlers. Custom session handler classes should implement this interface as it allows CakeSession know how to map methods to session_set_save_handler();;d38,22;;b0,0;;m">
				<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f8;36;24;36;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on close of a session.&#xA;&#xA;Return:&#xA;   Success;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f8;61;29;61;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on the destruction of a session.&#xA;&#xA;Parameters:&#xA;    int $id - ID that uniquely identifies session in database&#xA;&#xA;Return:&#xA;   True for successful delete, false otherwise;;d-1,-1;;b1,0;;mint $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f25;61;28;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f8;70;36;70;;;;vpos;;vbool;;r&#xA;Description&#xA;     Run the Garbage collection on the session storage. This method should vacuum all expired or dead sessions.&#xA;&#xA;Parameters:&#xA;    int $expires - Timestamp (defaults to current time)&#xA;&#xA;Return:&#xA;   Success;;d-1,-1;;b1,0;;mint $expires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f20;70;28;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="open;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f8;29;23;29;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on open of a session.&#xA;&#xA;Return:&#xA;   Success;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f8;44;26;44;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Method used to read from a session.&#xA;&#xA;Parameters:&#xA;    string $id - The key of the value to read&#xA;&#xA;Return:&#xA;   The value of the key or false if it does not exist;;d-1,-1;;b1,0;;mstring $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f22;44;25;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f8;53;34;53;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function called on write for sessions.&#xA;&#xA;Parameters:&#xA;    int $id - ID that uniquely identifies session in database&#xA;    mixed $data - The value of the data to be saved&#xA;&#xA;Return:&#xA;   True for successful write, false otherwise;;d-1,-1;;b1,0;;mint $id;;pmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f28;53;33;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php;f23;53;26;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ClassRegistryInterfaceTest;PHP:Interface Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;116;1;120;;;;vpos;;v;;r&#xA;Description&#xA;     Interface for testing ClassRegistry;;d37,116;;b0,0;;m">
				<treenode node="doSomething;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;118;30;118;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConfigReaderInterface;PHP:Interface Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\ConfigReaderInterface.php;f0;21;1;42;;;;vpos;;v;;r&#xA;Description&#xA;     An interface for creating objects compatible with Configure::load();;d32,21;;b0,0;;m">
				<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\ConfigReaderInterface.php;f8;40;34;40;;;;vpos;;vbool;;r&#xA;Description&#xA;     Dumps the configure data into source.&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to write to&#xA;    array $data - The data to dump&#xA;&#xA;Return:&#xA;   True on success or false on failure;;d-1,-1;;b1,0;;mstring $key;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\ConfigReaderInterface.php;f28;40;33;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\ConfigReaderInterface.php;f22;40;26;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\ConfigReaderInterface.php;f8;31;27;31;;;;vpos;;varray;;r&#xA;Description&#xA;     Read method is used for reading configuration information from sources. These sources can either be static resources like files, or dynamic ones like a database, or other datasource.&#xA;&#xA;Parameters:&#xA;    string $key - Key to read&#xA;&#xA;Return:&#xA;   An array of data to merge into the runtime configuration;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\ConfigReaderInterface.php;f22;31;26;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CORE_PATH;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;36;18;36;;;;vpos;;v;;rCAKE_CORE_INCLUDE_PATH . DS;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CORE_TEST_CASES;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f8;18;23;18;;;;vpos;;v;;r&#xA;Description&#xA;     CakeTestSuiteDispatcher controls dispatching TestSuite web based requests.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CSS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;64;12;64;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the public CSS directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CSS_URL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;127;16;127;;;;vpos;;v;;r&#xA;Description&#xA;     Web path to the CSS files directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DAY;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f9;26;12;26;;;;vpos;;v;;r86400;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DENY;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f6;31;11;31;;;;vposbool;;v;;rfalse;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DispatcherTestInterfaceController;PHP:Interface Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;109;1;113;;;;vpos;;v;;r&#xA;Description&#xA;     Interface DispatcherTestInterfaceController;;d44,109;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;111;24;111;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f9;16;11;16;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f9;15;11;15;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php;f9;19;11;19;;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f9;20;11;20;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f9;25;11;25;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f9;24;11;24;;C:\xampp\htdocs\ISLL\app\Console\cake.php;f9;20;11;20;;C:\xampp\htdocs\ISLL\index.php;f8;26;10;26;;;;vpos;;v;;r&#xA;Description&#xA;     Use the DS to separate the directories in other defines;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="E_DEPRECATED;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;23;21;23;;;;vpos;;v;;r8192;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="E_USER_DEPRECATED;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;27;26;27;;;;vpos;;v;;rE_USER_NOTICE;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="FULL_BASE_URL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f9;25;22;25;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f9;28;22;28;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f9;22;22;22;;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f10;164;23;164;;;;vpos;;v;;r&#xA;Description&#xA;     PaginatorHelperTest file;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="HOUR;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f9;25;13;25;;;;vpos;;v;;r3600;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="IMAGES;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;78;15;78;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the public images directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="IMAGES_URL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;120;19;120;;;;vpos;;v;;r&#xA;Description&#xA;     Web path to the public images directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="JS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;71;11;71;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the public JavaScript directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="JS_URL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;134;15;134;;;;vpos;;v;;r&#xA;Description&#xA;     Web path to the js files directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="LOGS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;99;13;99;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the logs directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MINUTE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f9;24;15;24;;;;vpos;;v;;r60;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MONTH;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f9;28;14;28;;;;vpos;;v;;r2592000;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="NORMAL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f6;44;13;44;;;;vposint;;v;;r1;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="PHPUnit/TextUI/Command.php;PHP:PHP Include;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f15;19;41;19;;;;vpos;;v;;r&#xA;Description&#xA;     TestRunner for CakePHP Test suite.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="PHPUnit/TextUI/ResultPrinter.php;PHP:PHP Include;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f15;18;47;18;;;;vpos;;v;;r&#xA;Description&#xA;     CakeBaseReporter contains common functionality to all cake test suite reporters.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="PHPUnit/TextUI/TestRunner.php;PHP:PHP Include;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f15;18;44;18;;;;vpos;;v;;r&#xA;Description&#xA;     TestRunner for CakePHP Test suite.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="QUIET;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f6;51;12;51;;;;vposint;;v;;r0;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ROOT;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f9;30;13;30;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f9;29;13;29;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f9;39;13;39;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f9;38;13;38;;C:\xampp\htdocs\ISLL\index.php;f8;27;12;27;;;;vpos;;v;;r&#xA;Description&#xA;     The full path to the directory which holds &quot;app&quot;, WITHOUT a trailing DS.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="SECOND;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f9;23;15;23;;;;vpos;;v;;r&#xA;Description&#xA;     Basic defines for timing functions.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TESTS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;85;14;85;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the tests directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TIME_START;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f8;20;18;20;;;;vpos;;v;;r&#xA;Description&#xA;     Basic CakePHP functionality.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TMP;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;92;12;92;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the temporary files directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TYPE_ELEMENT;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f6;318;19;318;;;;vposstring;;v;;r'element';;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TYPE_LAYOUT;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f6;325;18;325;;;;vposstring;;v;;r'layout';;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TYPE_VIEW;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f6;311;16;311;;;;vposstring;;v;;r'view';;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="VENDORS;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;113;16;113;;;;vpos;;v;;r&#xA;Description&#xA;     Path to the vendors directory.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="VERBOSE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f6;37;14;37;;;;vposint;;v;;r2;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="webroot;PHP:PHP Include;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\index.php;f9;7;16;7;;C:\xampp\htdocs\ISLL\app\index.php;f9;16;16;16;;;;vpos;;v;;r&#xA;Description&#xA;      link          http://cakephp.org CakePHP(tm) Project;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="WEBROOT_DIR;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f9;70;20;70;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f9;72;20;72;;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f9;40;20;40;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f9;79;20;79;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f9;81;20;81;;C:\xampp\htdocs\ISLL\index.php;f8;28;19;28;;;;vpos;;v;;r&#xA;Description&#xA;     Editing below this line should not be necessary. Change at your own risk.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="WEEK;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f9;27;13;27;;;;vpos;;v;;r604800;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="WWW_ROOT;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f9;73;17;73;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f9;75;17;75;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f9;82;17;82;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f9;84;17;84;;C:\xampp\htdocs\ISLL\index.php;f8;29;16;29;;;;vpos;;v;;rdirname(__FILE__;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="YEAR;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f9;29;13;29;;;;vpos;;v;;r31536000;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="AbstractPasswordHasher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f9;20;1;71;;;;vpos;;v;;r&#xA;Description&#xA;     Abstract password hashing class;;d38,20;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f8;35;2;37;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $config - Array of config;;d48,35;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f29;35;36;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f17;69;59;69;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check hash. Generate hash from user provided password string or data array and check against existing hash.&#xA;&#xA;Parameters:&#xA;    string|array $password - Plain text password to hash or data array&#xA;    string $hashedPassword - Existing hashed password&#xA;&#xA;Return:&#xA;   True if hashes match else false;;d-1,-1;;b1,0;;mstring|array $password;;pstring $hashedPassword;;p">
					<treenode node="hashedPassword;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f43;69;58;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f32;69;41;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f8;45;2;50;;;;vpos;;varray;;r&#xA;Description&#xA;     Get/Set the config&#xA;&#xA;Parameters:&#xA;    array $config - Sets config, if null returns existing config&#xA;&#xA;Return:&#xA;   Returns configs;;d40,45;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f24;45;31;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f17;59;41;59;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates password hash.&#xA;&#xA;Parameters:&#xA;    string|array $password - Plain text password to hash or array of data&#xA;&#xA;Return:&#xA;   Password hash;;d-1,-1;;b1,0;;mstring|array $password;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f31;59;40;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php;f11;28;19;28;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="AbstractTransport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f9;23;1;74;;;;vpos;;v;;r&#xA;Description&#xA;     Abstract transport for sending email;;d33,23;;b0,0;;m">
				<treenode node="_headersToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f11;60;2;72;;;;vpos;;vstring;;r&#xA;Description&#xA;     Help to convert headers in string&#xA;&#xA;Parameters:&#xA;    array $headers - Headers in format key =&gt; value&#xA;    string $eol - End of line string;;d62,60;;b2,0;;marray $headers;;pstring $eol;;p">
					<treenode node="eol;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f47;60;51;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f37;60;45;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f8;46;2;51;;;;vpos;;varray;;r&#xA;Description&#xA;     Set the config&#xA;&#xA;Parameters:&#xA;    array $config - Configuration options&#xA;&#xA;Return:&#xA;   Returns configs;;d40,46;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f24;46;31;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f17;38;48;38;;;;vpos;;varray;;r&#xA;Description&#xA;     Send mail&#xA;&#xA;Parameters:&#xA;    CakeEmail $email - CakeEmail instance;;d-1,-1;;b1,0;;mCakeEmail $email;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f41;38;47;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php;f11;30;19;30;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Account;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2834;1;2856;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Nonconformant Account class;;d36,2834;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2841;13;2841;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2855;19;2855;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2848;17;2848;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AccountFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AccountFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AccountFixture.php;f8;32;15;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AccountFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AccountFixture.php;f8;25;14;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f0;32;1;143;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     ACL behavior;;d40,32;;b0,0;;m">
				<treenode node="afterDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f8;130;2;141;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Destroys the ARO/ACO node bound to the deleted record&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior;;d43,130;;b1,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f35;130;41;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f8;100;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Creates a new ARO/ACO node bound to this record&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    bool $created - True if this is a new record&#xA;    array $options - Options passed from Model::save();;d71,100;;b1,0;;mModel $model;;pbool $created;;parray $options;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f41;100;49;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f33;100;39;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f51;100;59;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="node;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f8;78;2;90;;;;vpos;;varray;;r&#xA;Description&#xA;     Retrieves the Aro/Aco node for this model&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    string|array|Model $ref - Array with 'model' and 'foreign_key', model object, or string value&#xA;    string $type - Only needed when Acl is set up as 'both', specify 'Aro' or 'Aco' to get the correct node;;d63,78;;b1,0;;mModel $model;;pstring|array|Model $ref;;pstring $type;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f28;78;34;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ref;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f36;78;40;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f49;78;54;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f8;48;2;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up the configuration for the model, and loads ACL models if they haven't been already&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    array $config - Configuration options;;d56,48;;b1,0;;mModel $model;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f37;48;44;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f29;48;35;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_typeMaps;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php;f11;39;21;39;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclBehaviorTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f0;176;1;483;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     AclBehaviorTest class;;d43,176;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;204;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set up the test;;d25,204;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;217;2;220;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,217;;b1,0;;m">
				</treenode>
				<treenode node="testAfterDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;397;2;460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test After Delete;;d35,397;;b1,0;;m">
				</treenode>
				<treenode node="testAfterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;258;2;344;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test After Save;;d33,258;;b1,0;;m">
				</treenode>
				<treenode node="testAfterSaveUpdateParentIdNotNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;351;2;390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that an afterSave on an update does not cause parent_id to become null.;;d54,351;;b1,0;;m">
				</treenode>
				<treenode node="testNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;467;2;482;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Node();;d28,467;;b1,0;;m">
				</treenode>
				<treenode node="testSetup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;227;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Setup of AclBehavior;;d29,227;;b1,0;;m">
				</treenode>
				<treenode node="testSetupMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;245;2;251;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Setup of AclBehavior as both requester and controlled;;d34,245;;b1,0;;m">
				</treenode>
				<treenode node="Aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;183;12;183;;;;vposAco;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;190;12;190;;;;vposAro;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;197;17;197;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f0;29;1;179;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Access Control List factory class.;;d37,29;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;59;2;70;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor. Will return an instance of the correct ACL class as defined in `Configure::read('Acl.classname')`&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - Collection instance&#xA;    array $settings - Settings list;;d83,59;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f49;59;60;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f62;59;71;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="adapter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;84;2;97;;;;vpos;;vAclInterface;;r&#xA;Description&#xA;     Sets or gets the Adapter object currently in the AclComponent.&#xA;&#xA;Parameters:&#xA;    AclInterface|string $adapter - Instance of AclInterface or a string name of the class to use&#xA;&#xA;Return:&#xA;   |void either null, or the adapter implementation;;d42,84;;b1,0;;mAclInterface|string $adapter;;p">
					<treenode node="adapter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f25;84;33;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="allow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;121;2;123;;;;vpos;;vbool;;r&#xA;Description&#xA;     Pass-thru function for ACL allow instance. Allow methods are used to grant an ARO access to an ACO.&#xA;&#xA;Parameters:&#xA;    array|string|Model $aro - ARO The requesting object identifier&#xA;    array|string|Model $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d50,121;;b1,0;;marray|string|Model $aro;;parray|string|Model $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f29;121;33;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f35;121;42;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f23;121;27;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;108;2;110;;;;vpos;;vbool;;r&#xA;Description&#xA;     Pass-thru function for ACL check instance. Check methods are used to check whether or not an ARO can access an ACO&#xA;&#xA;Parameters:&#xA;    array|string|Model $aro - ARO The requesting object identifier&#xA;    array|string|Model $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d50,108;;b1,0;;marray|string|Model $aro;;parray|string|Model $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f29;108;33;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f35;108;42;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f23;108;27;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;134;2;136;;;;vpos;;vbool;;r&#xA;Description&#xA;     Pass-thru function for ACL deny instance. Deny methods are used to remove permission from an ARO to access an ACO.&#xA;&#xA;Parameters:&#xA;    array|string|Model $aro - ARO The requesting object identifier&#xA;    array|string|Model $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d49,134;;b1,0;;marray|string|Model $aro;;parray|string|Model $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f28;134;32;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f34;134;41;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f22;134;26;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="grant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;160;2;163;;;;vpos;;vbool;;r&#xA;Description&#xA;     Pass-thru function for ACL grant instance. An alias for AclComponent::allow()&#xA;&#xA;Parameters:&#xA;    array|string|Model $aro - ARO The requesting object identifier&#xA;    array|string|Model $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d50,160;;b1,0;;marray|string|Model $aro;;parray|string|Model $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f29;160;33;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f35;160;42;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f23;160;27;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inherit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;147;2;149;;;;vpos;;vbool;;r&#xA;Description&#xA;     Pass-thru function for ACL inherit instance. Inherit methods modify the permission for an ARO to be that of its parent object.&#xA;&#xA;Parameters:&#xA;    array|string|Model $aro - ARO The requesting object identifier&#xA;    array|string|Model $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d52,147;;b1,0;;marray|string|Model $aro;;parray|string|Model $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f31;147;35;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f37;147;44;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f25;147;29;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="revoke;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;174;2;177;;;;vpos;;vbool;;r&#xA;Description&#xA;     Pass-thru function for ACL grant instance. An alias for AclComponent::deny()&#xA;&#xA;Parameters:&#xA;    array|string|Model $aro - ARO The requesting object identifier&#xA;    array|string|Model $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d51,174;;b1,0;;marray|string|Model $aro;;parray|string|Model $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f30;174;34;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f36;174;43;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f24;174;28;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Instance;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f11;36;21;36;;;;vposAclInterface;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="Aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;50;12;50;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php;f8;43;12;43;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AclComponentTest.php;f0;26;1;90;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test Case for AclComponent;;d44,26;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AclComponentTest.php;f8;33;2;41;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AclComponentTest.php;f8;48;2;51;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,48;;b1,0;;m">
				</treenode>
				<treenode node="testAdapter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AclComponentTest.php;f8;71;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that adapter() allows control of the internal implementation AclComponent uses.;;d31,71;;b1,0;;m">
				</treenode>
				<treenode node="testAdapterException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AclComponentTest.php;f8;85;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that adapter() whines when the class does not implement AclInterface;;d40,85;;b1,0;;m">
				</treenode>
				<treenode node="testConstrutorException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AclComponentTest.php;f8;60;2;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that constructor throws an exception when Acl.classname is a non-existent class;;d43,60;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;510;1;511;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for AclComponent and Interface implementations.;;d41,510;;b0,0;;m">
			</treenode>
			<treenode node="AclNode;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AclNode.php;f0;23;1;183;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     ACL Node;;d28,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AclNode.php;f8;43;2;49;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor;;d31,43;;b1,0;;m">
				</treenode>
				<treenode node="node;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AclNode.php;f8;58;2;181;;;;vpos;;varray;;r&#xA;Description&#xA;     Retrieves the Aro/Aco node for this model&#xA;&#xA;Parameters:&#xA;    string|array|Model $ref - Array with 'model' and 'foreign_key', model object, or string value&#xA;&#xA;Return:&#xA;   Node found in database;;d35,58;;b1,0;;mstring|array|Model $ref;;p">
					<treenode node="ref;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AclNode.php;f22;58;26;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AclNode.php;f8;37;15;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AclNode.php;f8;30;21;30;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclNodeTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;200;1;355;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     AclNodeTest class;;d39,200;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;214;2;218;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,214;;b1,0;;m">
				</treenode>
				<treenode node="testNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;225;2;257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNode method;;d28,225;;b1,0;;m">
				</treenode>
				<treenode node="testNodeActionAuthorize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;336;2;354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNodeActionAuthorize method;;d43,336;;b1,0;;m">
				</treenode>
				<treenode node="testNodeAliasParenting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;312;2;329;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNodeAliasParenting method;;d42,312;;b1,0;;m">
				</treenode>
				<treenode node="testNodeArrayFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;275;2;286;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNodeArrayFind method;;d37,275;;b1,0;;m">
				</treenode>
				<treenode node="testNodeObjectFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;293;2;305;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNodeObjectFind method;;d38,293;;b1,0;;m">
				</treenode>
				<treenode node="testNodeWithDuplicatePathSegments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;264;2;268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that node() doesn't dig deeper than it should.;;d53,264;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;207;17;207;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclNodeTwoTestBase;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f0;30;1;45;;;;vpos;;vAclNode;;c;;r&#xA;Description&#xA;     AclNodeTwoTestBase class;;d41,30;;b0,0;;m">
				<treenode node="cacheSources;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;44;21;44;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;37;20;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclPerson;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f0;31;1;91;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Test Person class - self joined model;;d38,31;;b0,0;;m">
				<treenode node="parentNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;76;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     parentNode method;;d30,76;;b1,0;;m">
				</treenode>
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;45;15;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;52;18;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;64;16;64;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;38;17;38;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f0;137;1;169;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     AclPost class;;d36,137;;b0,0;;m">
				<treenode node="parentNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;165;2;167;;;;vpos;;vnull;;r&#xA;Description&#xA;     parentNode;;d30,165;;b1,0;;m">
				</treenode>
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;158;15;158;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;144;13;144;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;151;17;151;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f0;30;1;618;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Shell for ACL management. This console is known to have issues with zend.ze1_compatibility_mode being enabled. Be sure to turn it off when using this shell.;;d32,30;;b0,0;;m">
				<treenode node="_dataVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f11;605;2;616;;;;vpos;;varray;;r&#xA;Description&#xA;     Build data parameters based on node type&#xA;&#xA;Parameters:&#xA;    string $type - Node type  (ARO/ACO)&#xA;&#xA;Return:&#xA;   Variables;;d44,605;;b2,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f30;605;35;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getNodeId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f11;563;2;573;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the node for a given identifier. $identifier can either be a string alias or an array of properties to use in AcoNode::node()&#xA;&#xA;Parameters:&#xA;    string $class - Class type you want (Aro/Aco)&#xA;    string|array $identifier - A mixed identifier for finding the node&#xA;&#xA;Return:&#xA;   Integer of NodeId;;d52,563;;b2,0;;mstring $class;;pstring|array $identifier;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f31;563;37;563;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="identifier;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f39;563;50;563;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f11;580;2;597;;;;vpos;;varray;;r&#xA;Description&#xA;     get params for standard Acl methods&#xA;&#xA;Return:&#xA;   aro, aco, action;;d33,580;;b2,0;;m">
				</treenode>
				<treenode node="_outputNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f11;225;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Outputs a single node, Either using the alias or Model.key&#xA;&#xA;Parameters:&#xA;    string $class - Class name that is being used&#xA;    array $node - Array of node information&#xA;    int $indent - indent level;;d56,225;;b2,0;;mstring $class;;parray $node;;pint $indent;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f32;225;38;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="indent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f47;225;54;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="node;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f40;225;45;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;240;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check permission for a given ARO to a given ACO.;;d25,240;;b1,0;;m">
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;116;2;142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Creates an ARO/ACO node;;d26,116;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;150;2;166;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Delete an ARO/ACO node. Note there may be (as a result of poor configuration) multiple records with the same logical identifier. All are deleted.;;d26,150;;b1,0;;m">
				</treenode>
				<treenode node="deny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;270;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Deny access for an ARO to an ACO.;;d24,270;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;369;2;516;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,369;;b1,0;;m">
				</treenode>
				<treenode node="getPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;197;2;215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Get path to specified ARO/ACO node.;;d27,197;;b1,0;;m">
				</treenode>
				<treenode node="grant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;255;2;263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Grant permission for a given ARO to a given ACO.;;d25,255;;b1,0;;m">
				</treenode>
				<treenode node="inherit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;285;2;293;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set an ARO to inherit permission to an ACO.;;d27,285;;b1,0;;m">
				</treenode>
				<treenode node="initdb;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;360;2;362;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Initialize ACL database.;;d26,360;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;107;2;109;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override main() for help message hook;;d24,107;;b1,0;;m">
				</treenode>
				<treenode node="nodeExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;523;2;536;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that given node exists&#xA;&#xA;Return:&#xA;   Success;;d30,523;;b1,0;;m">
				</treenode>
				<treenode node="parseIdentifier;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;545;2;553;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Parse an identifier into Model.foreignKey or an alias. Takes an identifier determines its type and returns the result as used by other methods.&#xA;&#xA;Parameters:&#xA;    string $identifier - Identifier to parse&#xA;&#xA;Return:&#xA;   a string for aliases, and an array for model;;d46,545;;b1,0;;mstring $identifier;;p">
					<treenode node="identifier;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f33;545;44;545;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;173;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set parent for an ARO/ACO node.;;d29,173;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;65;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override startup of the Shell;;d27,65;;b1,0;;m">
				</treenode>
				<treenode node="view;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;300;2;353;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Show a specific ARO/ACO node.;;d24,300;;b1,0;;m">
				</treenode>
				<treenode node="Acl;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;37;12;37;;;;vposAclComponent;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;44;13;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;51;19;51;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php;f8;58;14;58;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f0;30;1;310;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     AclShellTest class;;d40,30;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;44;2;60;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,44;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;236;2;257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test checking allowed and denied perms;;d29,236;;b1,0;;m">
				</treenode>
				<treenode node="testCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;130;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test creating aro/aco nodes;;d30,130;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;171;2;180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the delete method with different node types.;;d30,171;;b1,0;;m">
				</treenode>
				<treenode node="testDeny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;218;2;229;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test deny;;d28,218;;b1,0;;m">
				</treenode>
				<treenode node="testGetPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;287;2;297;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the path for an aro/aco;;d31,287;;b1,0;;m">
				</treenode>
				<treenode node="testGrant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;201;2;211;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test grant;;d29,201;;b1,0;;m">
				</treenode>
				<treenode node="testInherit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;264;2;280;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test inherit and that it 0's the permission fields.;;d31,264;;b1,0;;m">
				</treenode>
				<treenode node="testInitDb;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;304;2;309;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that initdb makes the correct call.;;d30,304;;b1,0;;m">
				</treenode>
				<treenode node="testParsingModelAndForeignKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;113;2;123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the method that splits model.foreign key. and that it returns an array.;;d49,113;;b1,0;;m">
				</treenode>
				<treenode node="testSetParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;187;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setParent method.;;d33,187;;b1,0;;m">
				</treenode>
				<treenode node="testViewWithArgument;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;97;2;106;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test view with an argument;;d40,97;;b1,0;;m">
				</treenode>
				<treenode node="testViewWithModelForeignKeyOutput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;67;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that model.foreign_key output works when looking at acl rows;;d53,67;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php;f8;37;17;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AclUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f0;98;1;130;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     AclUser class;;d36,98;;b0,0;;m">
				<treenode node="parentNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;126;2;128;;;;vpos;;vnull;;r&#xA;Description&#xA;     parentNode;;d30,126;;b1,0;;m">
				</treenode>
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;119;15;119;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;105;13;105;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php;f8;112;17;112;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Aco;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Aco.php;f0;23;1;38;;;;vpos;;vAclNode;;c;;r&#xA;Description&#xA;     Access Control Object;;d26,23;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Aco.php;f8;37;28;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Aco.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AcoAction;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AcoAction.php;f0;23;1;38;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Action for Access Control Object;;d33,23;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AcoAction.php;f8;37;18;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\AcoAction.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AcoActionFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoActionFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d47,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoActionFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoActionFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AcoFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoFixture.php;f0;23;1;59;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d41,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AcoTwoFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoTwoFixture.php;f0;23;1;57;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoTwoFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoTwoFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AcoTwoTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f0;81;1;103;;;;vpos;;vAclNodeTwoTestBase;;c;;r&#xA;Description&#xA;     AcoTwoTest class;;d44,81;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;102;28;102;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;88;13;88;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;95;17;95;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ActionsAuthorize;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ActionsAuthorize.php;f0;25;1;40;;;;vpos;;vBaseAuthorize;;c;;r&#xA;Description&#xA;     An authorization adapter for AuthComponent. Provides the ability to authorize using the AclComponent, If AclComponent is not already loaded it will be loaded using the Controller's ComponentCollection.;;d45,25;;b0,0;;m">
				<treenode node="authorize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ActionsAuthorize.php;f8;34;2;38;;;;vpos;;vbool;;r&#xA;Description&#xA;     Authorize a user using the AclComponent.&#xA;&#xA;Parameters:&#xA;    array $user - The user to authorize&#xA;    CakeRequest $request - The request needing authorization;;d56,34;;b1,0;;marray $user;;pCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ActionsAuthorize.php;f46;34;54;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ActionsAuthorize.php;f27;34;32;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ActionsAuthorizeTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f0;29;1;196;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class ActionsAuthorizeTest;;d48,29;;b0,0;;m">
				<treenode node="_mockAcl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f11;51;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup the mock acl.;;d31,51;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f8;36;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,36;;b1,0;;m">
				</treenode>
				<treenode node="testActionMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f8;151;2;161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test action();;d36,151;;b1,0;;m">
				</treenode>
				<treenode node="testActionNoDoubleSlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f8;168;2;178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Make sure that action() doesn't create double slashes anywhere.;;d43,168;;b1,0;;m">
				</treenode>
				<treenode node="testActionWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f8;185;2;195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test action() and plugins;;d40,185;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f8;63;2;85;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test failure;;d40,63;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f8;121;2;144;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthorizeSettings;;d41,121;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php;f8;92;2;114;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test isAuthorized working.;;d40,92;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Ad;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2735;1;2757;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Ad class;;d31,2735;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2749;15;2749;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2756;18;2756;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2742;13;2742;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AdFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdFixture.php;f0;24;1;54;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     AdFixture class;;d40,24;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdFixture.php;f8;31;15;31;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Advertisement;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;877;1;892;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Advertisement class;;d42,877;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;891;16;891;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;884;13;884;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AdvertisementFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdvertisementFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d51,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdvertisementFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdvertisementFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AfterTree;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2764;1;2791;;;;vpos;;vNumberTree;;c;;r&#xA;Description&#xA;     AfterTree class;;d35,2764;;b0,0;;m">
				<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2785;2;2789;;;;vpos;;vvoid;;r&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    bool $created&#xA;    array $options;;d57,2785;;b1,0;;mbool $created;;parray $options;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;2785;35;2785;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;2785;45;2785;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2778;15;2778;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2771;13;2771;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AfterTreeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AfterTreeFixture.php;f0;24;1;53;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     AfterTreeFixture class;;d47,24;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AfterTreeFixture.php;f8;31;15;31;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AfterTreeFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AgainModifiedComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;583;1;618;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Modified Comment Class has afterFind Callback;;d49,583;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;611;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterFind callback;;d55,611;;b1,0;;mresults;;pprimary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;611;45;611;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;611;35;611;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;604;18;604;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;590;13;590;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;597;17;597;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AjaxAuthController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f0;266;1;324;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     AjaxAuthController class;;d44,266;;b0,0;;m">
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;305;2;309;;;;vpos;;vvoid;;r&#xA;Description&#xA;     add method;;d23,305;;b1,0;;m">
				</treenode>
				<treenode node="beforeFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;294;2;298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeFilter method;;d32,294;;b1,0;;m">
				</treenode>
				<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;319;2;322;;;;vpos;;vvoid;;r&#xA;Description&#xA;     redirect method&#xA;&#xA;Parameters:&#xA;    string|array $url&#xA;    mixed $status&#xA;    mixed $exit;;d62,319;;b1,0;;mstring|array $url;;pmixed $status;;pmixed $exit;;p">
					<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f48;319;53;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f32;319;39;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f26;319;30;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;273;19;273;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="testUrl;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;287;16;287;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;280;13;280;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AllBehaviorsTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllBehaviorsTest.php;f0;25;1;41;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllBehaviorsTest class;;d59,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllBehaviorsTest.php;f15;32;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Suite define the tests for this suite;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllCacheTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllCacheTest.php;f0;25;1;38;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllCacheTest class;;d55,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllCacheTest.php;f15;32;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllComponentsTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllComponentsTest.php;f0;25;1;40;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllComponentsTest class;;d60,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllComponentsTest.php;f15;32;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllConfigureTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllConfigureTest.php;f0;25;1;38;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllConfigureTest class;;d59,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllConfigureTest.php;f15;32;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllConsoleLibsTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllConsoleLibsTest.php;f0;25;1;46;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllConsoleLibsTest class;;d61,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllConsoleLibsTest.php;f15;32;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllConsoleTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllConsoleTest.php;f0;25;1;42;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllConsoleTest.php;f0;25;1;42;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllConsoleTest class;;d57,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllConsoleTest.php;f15;32;2;41;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllConsoleTest.php;f15;32;2;41;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllControllersTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllControllerTest.php;f0;25;1;42;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllControllersTest class;;d61,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllControllerTest.php;f15;32;2;41;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllCoreTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllCoreTest.php;f0;25;1;38;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllCoreTest class;;d54,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllCoreTest.php;f15;32;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllDatabaseTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllDatabaseTest.php;f0;25;1;54;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllDatabaseTest class;;d58,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllDatabaseTest.php;f15;32;2;53;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllDbRelatedTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllDbRelatedTest.php;f0;25;1;48;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllDbRelatedTest class;;d59,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllDbRelatedTest.php;f15;32;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Suite define the tests for this suite;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllErrorTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllErrorTest.php;f0;25;1;40;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllErrorTest class;;d55,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllErrorTest.php;f15;32;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllEventTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllEventTest.php;f0;25;1;37;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllEventTest class;;d55,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllEventTest.php;f15;32;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllHelpersTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllHelpersTest.php;f0;25;1;40;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     HelpersGroupTest class;;d57,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllHelpersTest.php;f15;32;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite declares tests to run;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllLocalizationTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllI18nTest.php;f0;25;1;38;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllLocalizationTest class;;d62,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllI18nTest.php;f15;32;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllLogTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllLogTest.php;f0;25;1;38;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllLogTest class;;d53,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllLogTest.php;f15;32;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllNetworkTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllNetworkTest.php;f0;25;1;40;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllNetworkTest class;;d57,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllNetworkTest.php;f15;32;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllRoutingTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllRoutingTest.php;f0;25;1;42;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllRoutingTest class;;d57,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllRoutingTest.php;f15;32;2;41;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllShellsTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllShellsTest.php;f0;25;1;40;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllShellsTest class;;d56,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllShellsTest.php;f15;32;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllTasksTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllTasksTest.php;f0;25;1;39;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllTasksTest class;;d55,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllTasksTest.php;f15;32;2;38;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllTests;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllTestsTest.php;f0;25;1;59;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllTests class;;d51,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllTestsTest.php;f15;32;2;58;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Suite define the tests for this suite;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllTestsTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Test\Case\AllTestsTest.php;f0;18;1;30;;;;vpos;;vCakeTestSuite;;c;;r&#xA;Description&#xA;     AllTests file;;d41,18;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Test\Case\AllTestsTest.php;f15;25;2;29;;;;vpos;;vCakeTestSuite;;r&#xA;Description&#xA;     Get the suite object.&#xA;&#xA;Return:&#xA;   Suite class instance;;d32,25;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllTestSuiteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllTestSuiteTest.php;f0;25;1;38;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllTestSuiteTest class;;d59,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllTestSuiteTest.php;f15;32;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllUtilityTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllUtilityTest.php;f0;25;1;37;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllUtilityTest class;;d57,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllUtilityTest.php;f15;32;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AllViewTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllViewTest.php;f0;25;1;38;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     AllViewTest class;;d54,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllViewTest.php;f15;32;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AnotherArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;855;1;870;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     AnotherArticle class;;d43,855;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;869;16;869;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;862;13;862;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AnotherArticleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AnotherArticleFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AnotherArticleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AnotherArticleFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AnotherTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;353;1;368;;;;vpos;;vControllerTestAppController;;c;;r&#xA;Description&#xA;     AnotherTestController class;;d64,353;;b0,0;;m">
				<treenode node="_mergeParent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f11;367;24;367;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;360;13;360;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ApcEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f0;23;1;190;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     APC storage engine for cache;;d36,23;;b0,0;;m">
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;123;2;143;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache. This will clear every cache config using APC.&#xA;&#xA;Parameters:&#xA;    bool $check - If true, nothing will be cleared, as entries are removed&#xA;&#xA;Return:&#xA;   True Returns true;;d31,123;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f23;123;29;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;185;2;188;;;;vpos;;vbool;;r&#xA;Description&#xA;     Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.&#xA;&#xA;Parameters:&#xA;    string $group - The group to clear&#xA;&#xA;Return:&#xA;   success;;d36,185;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f28;185;34;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;102;2;104;;;;vpos;;vNew;;r&#xA;Description&#xA;     Decrements the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;&#xA;Return:&#xA;   decremented value, false otherwise;;d46,102;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f27;102;31;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f33;102;40;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;112;2;114;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d30,112;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f24;112;28;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;152;2;176;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the `group value` for each of the configured groups If the group initial value was not found, then it initializes the group accordingly.;;d26,152;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;91;2;93;;;;vpos;;vNew;;r&#xA;Description&#xA;     Increments the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to increment&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d46,91;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f27;91;31;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f33;91;40;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;43;2;50;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the Cache Engine&#xA;&#xA;Parameters:&#xA;    array $settings - array of setting for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,43;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f22;43;31;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;75;2;82;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d28,75;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f22;75;26;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f8;60;2;67;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached&#xA;    int $duration - How long to cache the data, in seconds&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d48,60;;b1,0;;mstring $key;;pmixed $value;;pint $duration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f37;60;46;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f23;60;27;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f29;60;35;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_compiledGroupNames;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php;f11;31;31;31;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ApcEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f0;25;1;275;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ApcEngineTest class;;d41,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;32;2;43;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;50;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,50;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;196;2;205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the clearing of cache keys;;d29,196;;b1,0;;m">
				</treenode>
				<treenode node="testDecrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;148;2;165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecrement method;;d33,148;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;134;2;141;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCache method;;d35,134;;b1,0;;m">
				</treenode>
				<treenode node="testExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;100;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExpiry method;;d30,100;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;259;2;274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test clearing a cache group;;d34,259;;b1,0;;m">
				</treenode>
				<treenode node="testGroupDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;240;2;252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deleteing from a groups-enabled config is possible;;d35,240;;b1,0;;m">
				</treenode>
				<treenode node="testGroupsReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;214;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that configuring groups for stored keys return the correct values when read/written Shows that altering the group value is equivalent to deleting all keys under the same group;;d39,214;;b1,0;;m">
				</treenode>
				<treenode node="testIncrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;172;2;189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIncrement method;;d33,172;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;63;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteCache method;;d41,63;;b1,0;;m">
				</treenode>
				<treenode node="testReadWriteDurationZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php;f8;86;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Writing cache entries with duration = 0 (forever) should work.;;d45,86;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ApiShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f0;29;1;241;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     API shell to show method signatures of CakePHP core classes.;;d32,29;;b0,0;;m">
				<treenode node="_parseClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f11;205;2;239;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse a given class (located on given file) and get public methods and their signatures.&#xA;&#xA;Parameters:&#xA;    string $path - File path&#xA;    string $class - Class name&#xA;&#xA;Return:&#xA;   Methods and signatures indexed by method name;;d47,205;;b2,0;;mstring $path;;pstring $class;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f39;205;45;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f32;205;37;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f8;143;2;158;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,143;;b1,0;;m">
				</treenode>
				<treenode node="help;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f8;165;2;195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Show help for this shell.;;d24,165;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f8;43;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override initialize of the Shell;;d30,43;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f8;61;2;136;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override main() to handle action;;d24,61;;b1,0;;m">
				</treenode>
				<treenode node="paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php;f8;36;14;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ApiShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\ApiShellTest.php;f0;29;1;94;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ApiShellTest class;;d40,29;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\ApiShellTest.php;f8;36;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,36;;b1,0;;m">
				</treenode>
				<treenode node="testMethodNameDetection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\ApiShellTest.php;f8;53;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that method names are detected properly including those with no arguments.;;d43,53;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="App;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f0;64;1;933;;;;vpos;;v;;r&#xA;Description&#xA;     App is responsible for path management, class location and class loading.;;d10,64;;b0,0;;m">
				<treenode node="APPEND;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f6;71;13;71;;;;vposstring;;v;;r'append';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PREPEND;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f6;78;14;78;;;;vposstring;;v;;r'prepend';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="REGISTER;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f6;85;15;85;;;;vposstring;;v;;r'register';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="RESET;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f6;92;12;92;;;;vposbool;;v;;rtrue;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="_checkFatalError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;911;2;931;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check if a fatal error happened and trigger the configured handler if configured;;d46,911;;b2,5;;m">
				</treenode>
				<treenode node="_loadClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;667;2;693;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function to include classes This is a compatibility wrapper around using App::uses() and automatic class loading&#xA;&#xA;Parameters:&#xA;    string $name - unique name of the file for identifying it inside the application&#xA;    string $plugin - camel cased plugin name if any&#xA;    string $type - name of the packed where the class is located&#xA;    string $originalType - type name as supplied initially by the user&#xA;    bool $parent - whether to load the class parent or not&#xA;&#xA;Return:&#xA;   true indicating the successful load and existence of the class;;d85,667;;b2,5;;mstring $name;;pstring $plugin;;pstring $type;;pstring $originalType;;pbool $parent;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f38;667;43;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="originalType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f61;667;74;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f76;667;83;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f45;667;52;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f54;667;59;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;705;2;731;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Helper function to include single files&#xA;&#xA;Parameters:&#xA;    string $name - unique name of the file for identifying it inside the application&#xA;    string $plugin - camel cased plugin name if any&#xA;    array $search - list of paths to search the file into&#xA;    string $file - filename if known, the $name param will be used otherwise&#xA;    bool $return - whether this function should return the contents of the file after being parsed by php or just a success notice&#xA;&#xA;Return:&#xA;   if $return contents of the file after php parses it, boolean indicating success otherwise;;d78,705;;b2,5;;mstring $name;;pstring $plugin;;parray $search;;pstring $file;;pbool $return;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f62;705;67;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f37;705;42;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f44;705;51;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="return;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f69;705;76;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="search;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f53;705;60;705;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadVendor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;742;2;767;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function to load files from vendors folders&#xA;&#xA;Parameters:&#xA;    string $name - unique name of the file for identifying it inside the application&#xA;    string $plugin - camel cased plugin name if any&#xA;    string $file - file name if known&#xA;    string $ext - file extension if known&#xA;&#xA;Return:&#xA;   true if the file was loaded successfully, false otherwise;;d68,742;;b2,5;;mstring $name;;pstring $plugin;;pstring $file;;pstring $ext;;p">
					<treenode node="ext;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f62;742;66;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f55;742;60;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f39;742;44;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f46;742;53;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_map;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;787;2;801;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Maps the $name to the $file.&#xA;&#xA;Parameters:&#xA;    string $file - full path to file&#xA;    string $name - unique name for this map&#xA;    string $plugin - camelized if object is from a plugin, the name of the plugin;;d62,787;;b2,5;;mstring $file;;pstring $name;;pstring $plugin;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f32;787;37;787;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f39;787;44;787;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f46;787;53;787;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_mapped;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;810;2;816;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns a file's complete path.&#xA;&#xA;Parameters:&#xA;    string $name - unique name&#xA;    string $plugin - camelized if object is from a plugin, the name of the plugin&#xA;&#xA;Return:&#xA;   file path if found, false otherwise;;d58,810;;b2,5;;mstring $name;;pstring $plugin;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f35;810;40;810;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f42;810;49;810;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_packageFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;823;2;886;;;;vpos;;varray;;r&#xA;Description&#xA;     Sets then returns the templates for each customizable package path&#xA;&#xA;Return:&#xA;   templates for each customizable package path;;d44,823;;b2,5;;m">
				</treenode>
				<treenode node="build;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;277;2;351;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up each package location on the file system. You can configure multiple search paths for each package, those will be used to look for files one folder at a time in the specified order All paths should be terminated with a Directory separator&#xA;&#xA;Parameters:&#xA;    array $paths - associative array with package names as keys and a list of directories for new search paths&#xA;    bool|string $mode - App::RESET will set paths, App::APPEND with append paths, App::PREPEND will prepend paths (default);;d70,277;;b1,5;;marray $paths;;pbool|string $mode;;p">
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f48;277;53;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f30;277;36;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="core;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;401;2;403;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the full path to a package inside the CakePHP core&#xA;&#xA;Parameters:&#xA;    string $type - Package type&#xA;&#xA;Return:&#xA;   full path to package;;d36,401;;b1,5;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f29;401;34;401;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="import;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;605;2;654;;;;vpos;;vbool;;r&#xA;Description&#xA;     Finds classes based on $name or specific file(s) to search. Calling App::import() will not construct any classes contained in the files. It will only find and require() the file.&#xA;&#xA;Parameters:&#xA;    string|array $type - The type of Class if passed as a string, or all params can be passed as&#xA;    string $name - Name of the Class or a unique name for the file&#xA;    bool|array $parent - boolean true if Class Parent should be searched, accepts key =&gt; value&#xA;    array $search - paths to search for files, array('path 1', 'path 2', 'path 3');s&#xA;    string $file - full name of the file to search for including extension&#xA;    bool $return - Return the loaded file, the file must have a return&#xA;&#xA;Return:&#xA;   true if Class is already in memory or if file is found and loaded, false if not;;d125,605;;b1,5;;mstring|array $type;;pstring $name;;pbool|array $parent;;parray $search;;pstring $file;;pbool $return;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f94;605;99;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f45;605;50;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f59;605;66;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="return;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f108;605;115;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="search;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f75;605;82;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f31;605;36;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;774;2;777;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initializes the cache for App, registers a shutdown function.;;d31,774;;b1,5;;m">
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;533;2;571;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method to handle the automatic class loading. It will look for each class' package defined using App::uses() and with this information it will resolve the package name to a full path to load the class from. File name for each class should follow the class name. For instance, if a class is name `MyCustomClass` the file name should be `MyCustomClass.php`&#xA;&#xA;Parameters:&#xA;    string $className - the name of the class to load;;d41,533;;b1,5;;mstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f29;533;39;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="location;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;580;2;585;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the package name where a class was defined to be located at&#xA;&#xA;Parameters:&#xA;    string $className - name of the class to obtain the package name from&#xA;&#xA;Return:&#xA;   |null Package name, or null if not declared;;d45,580;;b1,5;;mstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f33;580;43;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="objects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;428;2;503;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns an array of objects of the given type.&#xA;&#xA;Parameters:&#xA;    string $type - Type of object, i&#xA;    string|array $path - Optional Scan only the path given&#xA;    bool $cache - Set to false to rescan objects of the chosen type&#xA;&#xA;Return:&#xA;   Either false on incorrect / miss;;d68,428;;b1,5;;mstring $type;;pstring|array $path;;pbool $cache;;p">
					<treenode node="cache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f53;428;59;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f39;428;44;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f32;428;37;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="path;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;219;2;240;;;;vpos;;varray;;r&#xA;Description&#xA;     Used to read information stored path&#xA;&#xA;Parameters:&#xA;    string $type - type of path&#xA;    string $plugin - name of plugin;;d52,219;;b1,5;;mstring $type;;pstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f36;219;43;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f29;219;34;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;250;2;252;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all the currently loaded paths from App. Useful for inspecting or storing all paths App knows about. For a paths to a specific package use App::path()&#xA;&#xA;Return:&#xA;   An array of packages and their associated paths;;d32,250;;b1,5;;m">
				</treenode>
				<treenode node="pluginPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;365;2;367;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the path that a plugin is on. Searches through the defined plugin paths.&#xA;&#xA;Parameters:&#xA;    string $plugin - CamelCased/lower_cased plugin name to find the path of&#xA;&#xA;Return:&#xA;   full path to the plugin;;d44,365;;b1,5;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f35;365;42;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="shutdown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;896;2;904;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Object destructor.;;d35,896;;b1,5;;m">
				</treenode>
				<treenode node="themePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;380;2;388;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds the path that a theme is on. Searches through the defined theme paths.&#xA;&#xA;Parameters:&#xA;    string $theme - theme name to find the path of&#xA;&#xA;Return:&#xA;   full path to the theme;;d42,380;;b1,5;;mstring $theme;;p">
					<treenode node="theme;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f34;380;40;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="uses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;520;2;522;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Declares a package for a class. This package location will be used by the automatic class loader if the class is tried to be used&#xA;&#xA;Parameters:&#xA;    string $className - the name of the class to configure package for&#xA;    string $location - the package name;;d52,520;;b1,5;;mstring $className;;pstring $location;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f29;520;39;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="location;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f41;520;50;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_cacheChange;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;188;31;188;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_classMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;147;28;147;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;133;23;133;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_objectCacheChange;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;195;37;195;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_objects;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;140;27;140;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_packageFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;161;33;161;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_packages;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f18;154;28;154;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="bootstrapping;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;203;29;203;;;;vposbool;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="legacy;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;168;22;168;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="return;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;126;22;126;;;;vposbool;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="search;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;119;22;119;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="types;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php;f15;99;21;99;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="AppController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\AppController.php;f0;33;1;34;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f1;33;2;56;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Controller\AppController.php;f0;23;1;24;;C:\xampp\htdocs\ISLL\app\Controller\AppController.php;f0;32;1;33;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     This is a placeholder class. Create the same file in app/Controller/AppController.php;;d39,33;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f9;54;20;54;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f9;40;17;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f9;47;14;47;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AppHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Helper\AppHelper.php;f0;22;1;23;;C:\xampp\htdocs\ISLL\app\View\Helper\AppHelper.php;f0;31;1;32;;;;vpos;;vHelper;;c;;r&#xA;Description&#xA;     Application helper;;d31,22;;b0,0;;m">
			</treenode>
			<treenode node="Apple;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;790;1;826;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Apple class;;d34,790;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;825;18;825;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;818;16;818;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;811;15;811;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;797;13;797;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;804;17;804;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AppleComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;57;1;83;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     AppleComponent class;;d39,57;;b0,0;;m">
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;79;2;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     startup method&#xA;&#xA;Parameters:&#xA;    Controller $controller;;d49,79;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f36;79;47;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;64;19;64;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="testName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;71;17;71;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AppleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AppleFixture.php;f0;23;1;55;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AppleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AppleFixture.php;f8;46;16;46;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AppModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\AppModel.php;f0;32;1;33;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;27;1;56;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Model\AppModel.php;f0;22;1;23;;C:\xampp\htdocs\ISLL\app\Model\AppModel.php;f0;31;1;32;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Application model for Cake.;;d29,32;;b0,0;;m">
				<treenode node="_findPublished;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;48;2;54;;;;vpos;;varray;;r&#xA;Description&#xA;     _findPublished custom find;;d71,48;;b2,0;;mstate;;pquery;;presults;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f43;48;49;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f51;48;59;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f35;48;41;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;34;20;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;41;20;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AppShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\Command\AppShell.php;f0;18;1;20;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AppShell.php;f0;27;1;29;;C:\xampp\htdocs\ISLL\app\Console\Command\AppShell.php;f0;27;1;29;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Application Shell;;d29,18;;b0,0;;m">
			</treenode>
			<treenode node="AppTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f0;23;1;831;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     AppTest class;;d35,23;;b0,0;;m">
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;30;2;33;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,30;;b1,0;;m">
				</treenode>
				<treenode node="testBuild;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;40;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuild method;;d29,40;;b1,0;;m">
				</treenode>
				<treenode node="testBuildPackage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;192;2;228;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test package build() with App::REGISTER.;;d36,192;;b1,0;;m">
				</treenode>
				<treenode node="testBuildWithReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;251;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildWithReset method;;d38,251;;b1,0;;m">
				</treenode>
				<treenode node="testClassLoading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;457;2;529;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClassLoading method;;d36,457;;b1,0;;m">
				</treenode>
				<treenode node="testClassLocation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;799;2;802;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that App::location() returns the defined path for a class;;d37,799;;b1,0;;m">
				</treenode>
				<treenode node="testCompatibleBuild;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;101;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tests that it is possible to set up paths using the CakePHP 1.3 notation for them (models, behaviors, controllers...);;d39,101;;b1,0;;m">
				</treenode>
				<treenode node="testCore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;277;2;295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCore method;;d28,277;;b1,0;;m">
				</treenode>
				<treenode node="testFileLoading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;599;2;605;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileLoading method;;d35,599;;b1,0;;m">
				</treenode>
				<treenode node="testFileLoadingReturnValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;637;2;653;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileLoadingReturnValue method;;d46,637;;b1,0;;m">
				</treenode>
				<treenode node="testFileLoadingWithArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;612;2;630;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileLoadingWithArray method;;d44,612;;b1,0;;m">
				</treenode>
				<treenode node="testImportingHelpersFromAlternatePaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;580;2;592;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that building helper paths actually works.;;d58,580;;b1,0;;m">
				</treenode>
				<treenode node="testListObjects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;302;2;360;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testListObjects method;;d35,302;;b1,0;;m">
				</treenode>
				<treenode node="testListObjectsIgnoreDotDirectories;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;367;2;380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Make sure that .svn and friends are excluded from App::objects('plugin');;d55,367;;b1,0;;m">
				</treenode>
				<treenode node="testListObjectsInPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;387;2;430;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests listing objects within a plugin;;d43,387;;b1,0;;m">
				</treenode>
				<treenode node="testLoadClassInLibs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;778;2;792;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the automatic class loader will also find in &quot;libs&quot; folder for both app and plugins if it does not find the class in other configured paths;;d39,778;;b1,0;;m">
				</treenode>
				<treenode node="testLoadingVendor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;720;2;770;;;;vpos;;v;;r;;d37,720;;b1,0;;m">
				</treenode>
				<treenode node="testLoadingWithSearch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;660;2;666;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadingWithSearch method;;d41,660;;b1,0;;m">
				</treenode>
				<treenode node="testLoadingWithSearchArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;673;2;693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadingWithSearchArray method;;d46,673;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleLoading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;700;2;718;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleLoading method;;d39,700;;b1,0;;m">
				</treenode>
				<treenode node="testPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;809;2;814;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that paths() works.;;d29,809;;b1,0;;m">
				</treenode>
				<treenode node="testPathWithPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;235;2;244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test path() with a plugin.;;d39,235;;b1,0;;m">
				</treenode>
				<treenode node="testPluginImporting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;536;2;572;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test import() with plugins;;d39,536;;b1,0;;m">
				</treenode>
				<treenode node="testPluginLibClasses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;822;2;830;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Proves that it is possible to load plugin libraries in top level Lib dir for plugins;;d40,822;;b1,0;;m">
				</treenode>
				<treenode node="testThemePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php;f8;437;2;450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that themePath can find paths for themes.;;d33,437;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Armor;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4972;1;4979;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Armor class;;d34,4972;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4976;28;4976;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4974;20;4974;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArmorFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorFixture.php;f0;23;1;57;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorFixture.php;f8;39;15;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorFixture.php;f8;51;16;51;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorFixture.php;f8;32;20;32;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArmorsPlayer;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4986;1;4990;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ArmorsPlayer class;;d41,4986;;b0,0;;m">
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4988;20;4988;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArmorsPlayerFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorsPlayerFixture.php;f0;23;1;58;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d50,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorsPlayerFixture.php;f8;39;15;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorsPlayerFixture.php;f8;53;16;53;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorsPlayerFixture.php;f8;32;20;32;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Aro;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Aro.php;f0;23;1;38;;;;vpos;;vAclNode;;c;;r&#xA;Description&#xA;     Access Request Object;;d26,23;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Aro.php;f8;37;28;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Aro.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AroFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroFixture.php;f0;23;1;51;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d41,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArosAcoFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArosAcoTwoFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoTwoFixture.php;f0;23;1;67;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoTwoFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoTwoFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AroTwoFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroTwoFixture.php;f0;23;1;57;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroTwoFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroTwoFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AroTwoTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f0;52;1;74;;;;vpos;;vAclNodeTwoTestBase;;c;;r&#xA;Description&#xA;     AroTwoTest class;;d44,52;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;73;28;73;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;59;13;59;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;66;17;66;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Article;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;234;1;304;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Article class;;d36,234;;b0,0;;m">
				<treenode node="beforeSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;287;2;289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeSave method;;d48,287;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f28;287;36;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="titleDuplicate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f15;297;2;302;;;;vpos;;vvoid;;r&#xA;Description&#xA;     titleDuplicate method&#xA;&#xA;Parameters:&#xA;    string $title;;d47,297;;b1,5;;mstring $title;;p">
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f39;297;45;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeSaveReturn;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;280;25;280;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;248;18;248;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;262;28;262;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;255;16;255;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;241;13;241;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;269;17;269;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Article10;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;354;1;377;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Article10 class;;d38,354;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;375;16;375;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;361;13;361;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;368;17;368;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Article2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4397;1;4462;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Article2 class;;d37,4397;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4435;2;4460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4435;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4435;30;4435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4425;18;4425;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4404;13;4404;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4411;14;4411;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4418;17;4418;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticleB;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3386;1;3401;;;;vpos;;vCakeTestModel;;c;;r;;d37,3386;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3392;28;3392;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3388;13;3388;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3390;17;3390;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticleFeatured;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;384;1;428;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ArticleFeatured class;;d44,384;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;398;18;398;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;419;28;419;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;412;16;412;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;405;15;405;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;391;13;391;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;426;17;426;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticleFeatured2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4629;1;4702;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ArticleFeatured2 class;;d45,4629;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4685;2;4700;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4685;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4685;30;4685;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4657;18;4657;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4676;16;4676;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4667;15;4667;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4636;13;4636;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4643;14;4643;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4650;17;4650;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticleFeaturedFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFeaturedFixture.php;f0;23;1;50;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d53,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFeaturedFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFeaturedFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticleFeaturedsTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;487;1;495;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ArticleFeaturedsTag class;;d48,487;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;494;13;494;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticleFeaturedsTagsFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFeaturedsTagsFixture.php;f0;23;1;35;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d58,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFeaturedsTagsFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFixture.php;f0;23;1;51;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticlesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\Scaffold.ctp;f0;6;1;15;;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoHelpersOrComponents.ctp;f0;8;1;17;;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp;f0;10;1;26;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     Articles Controller;;d47,6;;b0,0;;m">
				<treenode node="Acl;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp;f25;6;30;6;;;;vposAclComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Article;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoHelpersOrComponents.ctp;f20;5;29;5;;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp;f20;5;29;5;;;;vposArticle;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Auth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp;f26;7;32;7;;;;vposAuthComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoHelpersOrComponents.ctp;f8;15;19;15;;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp;f8;24;19;24;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp;f8;17;16;17;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Paginator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoHelpersOrComponents.ctp;f31;6;42;6;;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp;f31;8;42;8;;;;vposPaginatorComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="scaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\Scaffold.ctp;f8;13;17;13;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticlesTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;472;1;480;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ArticlesTag class;;d40,472;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;479;13;479;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticlesTagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticlesTagFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d49,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticlesTagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticlesTagFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ArticlesTestAppController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;287;1;288;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     ArticlesTestAppController class;;d54,287;;b0,0;;m">
			</treenode>
			<treenode node="ArticlesTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;295;1;322;;;;vpos;;vArticlesTestAppController;;c;;r&#xA;Description&#xA;     ArticlesTestController class;;d63,295;;b0,0;;m">
				<treenode node="admin_index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;309;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     admin_index method;;d31,309;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;318;2;320;;;;vpos;;vvoid;;r&#xA;Description&#xA;     fake index method.;;d25,318;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;302;13;302;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AssertTagsTestCase;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AssertTagsTestCase.php;f0;6;1;118;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     This class helps in indirectly testing the functionalities of CakeTestCase::assertTags;;d46,6;;b0,0;;m">
				<treenode node="testAssertTagsQuotes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AssertTagsTestCase.php;f8;13;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that assertTags knows how to handle correct quoting.;;d40,13;;b1,0;;m">
				</treenode>
				<treenode node="testBadAssertTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AssertTagsTestCase.php;f8;93;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBadAssertTags;;d37,93;;b1,0;;m">
				</treenode>
				<treenode node="testBadAssertTags2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AssertTagsTestCase.php;f8;108;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBadAssertTags;;d38,108;;b1,0;;m">
				</treenode>
				<treenode node="testNumericValuesInExpectationForAssertTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AssertTagsTestCase.php;f8;44;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNumericValuesInExpectationForAssertTags;;d63,44;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AssetDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f0;24;1;167;;;;vpos;;vDispatcherFilter;;c;;r&#xA;Description&#xA;     Filters a request and tests whether it is a file in the webroot folder or not and serves the file to the client if appropriate.;;d47,24;;b0,0;;m">
				<treenode node="_deliverAsset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f11;140;2;165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sends an asset file to the client&#xA;&#xA;Parameters:&#xA;    CakeResponse $response - The response object to use&#xA;    string $assetFile - Path to the asset file in the file system&#xA;    string $ext - The extension of the file to determine its mime type;;d76,140;;b2,0;;mCakeResponse $response;;pstring $assetFile;;pstring $ext;;p">
					<treenode node="assetFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f58;140;68;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ext;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f70;140;74;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f47;140;56;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_filterAsset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f11;78;2;105;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     Checks if the client is requesting a filtered asset and runs the corresponding filter if any is configured&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - containing the request and response object&#xA;&#xA;Return:&#xA;   if the client is requesting a recognized asset, null otherwise;;d51,78;;b2,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f43;78;49;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getAssetFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f11;113;2;130;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds asset file path based off url&#xA;&#xA;Parameters:&#xA;    string $url - URL&#xA;&#xA;Return:&#xA;   Absolute path for asset file;;d40,113;;b2,0;;mstring $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f34;113;38;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f8;41;2;69;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Checks if a requested asset exists and sends it to the browser&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - containing the request and response object&#xA;&#xA;Return:&#xA;   The resulting response;;d50,41;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f42;41;48;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="priority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php;f8;32;17;32;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AssetDispatcherTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f0;25;1;265;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class AssetDispatcherTest;;d47,25;;b0,0;;m">
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;32;2;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,32;;b1,0;;m">
				</treenode>
				<treenode node="test404OnDoubleDot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;190;2;205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that attempts to traverse directories are prevented.;;d38,190;;b1,0;;m">
				</treenode>
				<treenode node="test404OnDoubleDotEncoded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;213;2;228;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that attempts to traverse directories with urlencoded paths fail.;;d45,213;;b1,0;;m">
				</treenode>
				<treenode node="test404OnDoubleSlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;173;2;182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that no exceptions are thrown for //index.php type URLs.;;d40,173;;b1,0;;m">
				</treenode>
				<treenode node="testAssetContentLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;238;2;263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test asset content length is unset;;d42,238;;b1,0;;m">
				</treenode>
				<treenode node="testAssetFilterForThemeAndPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;48;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that asset filters work for theme and plugin assets;;d53,48;;b1,0;;m">
				</treenode>
				<treenode node="testNoHandleRoutedExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;98;2;117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     AssetDispatcher should not 404 extensions that could be handled by Routing.;;d47,98;;b1,0;;m">
				</treenode>
				<treenode node="testNotModified;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php;f8;127;2;165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that $response-&gt;checkNotModified() is called and bypasses file dispatching;;d35,127;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AssociationTest1;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1980;1;2004;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     AssociationTest1 class;;d45,1980;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2001;28;2001;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1994;13;1994;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1987;17;1987;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AssociationTest2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2011;1;2035;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     AssociationTest2 class;;d45,2011;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2032;28;2032;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2025;13;2025;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2018;17;2018;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Attachment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;690;1;705;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Attachment class;;d39,690;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;704;18;704;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;697;13;697;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AttachmentFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AttachmentFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AttachmentFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AttachmentFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthBlueberryUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f0;28;1;36;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,28;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;35;17;35;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f0;38;1;845;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Authentication control component class;;d38,38;;b0,0;;m">
				<treenode node="ALL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f6;45;10;45;;;;vposstring;;v;;r'all';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="_getUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;676;2;695;;;;vpos;;vbool;;r&#xA;Description&#xA;     Similar to AuthComponent::user() except if the session user cannot be found, connected authentication objects will have their getUser() methods called. This lets stateless authentication methods function correctly.&#xA;&#xA;Return:&#xA;   true if a user can be found, false if one cannot;;d31,676;;b2,0;;m">
				</treenode>
				<treenode node="_isAllowed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;323;2;329;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether current action is accessible without authentication.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the instantiating controller object&#xA;&#xA;Return:&#xA;   True if action is accessible without authentication else false;;d55,323;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f42;323;53;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_isLoginAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;385;2;394;;;;vpos;;vbool;;r&#xA;Description&#xA;     Normalizes $loginAction and checks if current request URL is same as login action.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the controller object&#xA;&#xA;Return:&#xA;   True if current action is login action else false;;d59,385;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f46;385;57;385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;428;2;439;;;;vpos;;vbool;;r&#xA;Description&#xA;     Attempts to introspect the correct values for object properties.&#xA;&#xA;Return:&#xA;   True;;d35,428;;b2,0;;m">
				</treenode>
				<treenode node="_unauthenticated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;343;2;377;;;;vpos;;vbool;;r&#xA;Description&#xA;     Handles unauthenticated access attempt. First the `unathenticated()` method of the last authenticator in the chain will be called. The authenticator can handle sending response or redirection as appropriate and return `true` to indicate no furthur action is necessary. If authenticator returns null this method redirects user to login action. If it's an ajax request and $ajaxLogin is specified that element is rendered else a 403 http status code is returned.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the controller object&#xA;&#xA;Return:&#xA;   True if current action is login action else false;;d61,343;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f48;343;59;343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_unauthorized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;404;2;421;;;;vpos;;vbool;;r&#xA;Description&#xA;     Handle unauthorized access attempt&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the controller object&#xA;&#xA;Return:&#xA;   Returns false;;d58,404;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f45;404;56;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="allow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;520;2;530;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Takes a list of actions in the current controller for which authentication is not required, or no parameters to allow all actions.&#xA;&#xA;Parameters:&#xA;    string|array $action - Controller action name or array of actions;;d39,520;;b1,0;;mstring|array $action;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f23;520;30;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="constructAuthenticate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;775;2;806;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Loads the configured authentication objects.&#xA;&#xA;Return:&#xA;   either null on empty authenticate value, or an array of loaded objects;;d41,775;;b1,0;;m">
				</treenode>
				<treenode node="constructAuthorize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;479;2;504;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Loads the authorization objects configured.&#xA;&#xA;Return:&#xA;   Either null when authorize is empty, or the loaded authorization objects;;d38,479;;b1,0;;m">
				</treenode>
				<treenode node="deny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;546;2;562;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Removes items from the list of allowed/no authentication required actions.&#xA;&#xA;Parameters:&#xA;    string|array $action - Controller action name or array of actions;;d38,546;;b1,0;;mstring|array $action;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f22;546;29;546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;838;2;843;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set a flash message. Uses the Session component, and values from AuthComponent::$flash.&#xA;&#xA;Parameters:&#xA;    string $message - The message to set;;d33,838;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f23;838;31;838;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="identify;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;756;2;767;;;;vpos;;varray;;r&#xA;Description&#xA;     Use the configured authentication adapters, and attempt to identify the user by credentials contained in $request.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - The request that contains authentication data&#xA;    CakeResponse $response - The response&#xA;&#xA;Return:&#xA;   User record data, or false, if the user could not be identified;;d72,756;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f38;756;46;756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f61;756;70;756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;265;2;273;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initializes AuthComponent for use in the controller.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the instantiating controller object;;d52,265;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f39;265;50;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAuthorized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;452;2;471;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the provided user is authorized for the request.&#xA;&#xA;Parameters:&#xA;    array $user - The user to check the authorization of&#xA;    CakeRequest $request - The request to authenticate for&#xA;&#xA;Return:&#xA;   True if $user is authorized, otherwise false;;d73,452;;b1,0;;marray $user;;pCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f56;452;64;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f30;452;35;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loggedIn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;828;2;830;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check whether or not the current user has data in the session, and is considered logged in.&#xA;&#xA;Return:&#xA;   true if the user is logged in, false otherwise;;d28,828;;b1,0;;m">
				</treenode>
				<treenode node="login;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;602;2;615;;;;vpos;;vbool;;r&#xA;Description&#xA;     Log a user in.&#xA;&#xA;Parameters:&#xA;    array $user - Either an array of user data, or null to identify a user using the current request&#xA;&#xA;Return:&#xA;   True on login success, false on failure;;d37,602;;b1,0;;marray $user;;p">
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f23;602;28;602;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="logout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;630;2;643;;;;vpos;;vstring;;r&#xA;Description&#xA;     Log a user out.&#xA;&#xA;Return:&#xA;   AuthComponent::$logoutRedirect;;d26,630;;b1,0;;m">
				</treenode>
				<treenode node="mapActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;577;2;588;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Maps action names to CRUD operations.&#xA;&#xA;Parameters:&#xA;    array $map - Actions to map;;d44,577;;b1,0;;marray $map;;p">
					<treenode node="map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f28;577;32;577;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="password;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f15;818;2;820;;;;vpos;;vstring;;r&#xA;Description&#xA;     Hash a password with the application's salt value (as defined with Configure::write('Security.salt');s&#xA;&#xA;Parameters:&#xA;    string $password - Password to hash&#xA;&#xA;Return:&#xA;   Hashed password;;d44,818;;b1,5;;mstring $password;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f33;818;42;818;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;704;2;706;;;;vpos;;vstring;;r&#xA;Description&#xA;     Backwards compatible alias for AuthComponent::redirectUrl().&#xA;&#xA;Parameters:&#xA;    string|array $url - Optional URL to write as the login redirect URL&#xA;&#xA;Return:&#xA;   Redirect URL;;d39,704;;b1,0;;mstring|array $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f26;704;30;704;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirectUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;726;2;746;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the URL a user should be redirected to upon login.&#xA;&#xA;Parameters:&#xA;    string|array $url - Optional URL to write as the login redirect URL&#xA;&#xA;Return:&#xA;   Redirect URL;;d42,726;;b1,0;;mstring|array $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f29;726;33;726;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;282;2;315;;;;vpos;;vbool;;r&#xA;Description&#xA;     Main execution method. Handles redirecting of invalid users, and processing of login form data.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the instantiating controller object;;d49,282;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f36;282;47;282;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="user;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f15;656;2;668;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the current user.&#xA;&#xA;Parameters:&#xA;    string $key - field to retrieve&#xA;&#xA;Return:&#xA;   |null User record;;d42,656;;b1,5;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f29;656;33;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_authenticateObjects;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;93;32;93;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_authorizeObjects;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;133;29;133;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f11;257;20;257;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f18;174;24;174;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="ajaxLogin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;141;18;141;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="allowedActions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;236;23;236;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="authenticate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;86;21;86;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="authError;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;217;18;217;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="authorize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;126;18;126;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;52;19;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="flash;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;153;14;153;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="loginAction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;182;20;182;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="loginRedirect;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;197;22;197;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="logoutRedirect;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;208;23;208;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;243;16;243;;;;vposCakeRequest;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;250;17;250;;;;vposCakeResponse;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="sessionKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f15;166;26;166;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="unauthorizedRedirect;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php;f8;228;29;228;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f0;352;1;1737;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     AuthComponentTest class;;d45,352;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;380;2;404;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,380;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;411;2;418;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,411;;b1,0;;m">
				</treenode>
				<treenode node="testAdminRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1215;2;1237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAdminRoute method;;d34,1215;;b1,0;;m">
				</treenode>
				<treenode node="testAjaxLogin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1244;2;1261;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAjaxLogin method;;d33,1244;;b1,0;;m">
				</treenode>
				<treenode node="testAjaxLoginResponseCode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1268;2;1293;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAjaxLoginResponseCode;;d45,1268;;b1,0;;m">
				</treenode>
				<treenode node="testAllConfigWithAuthenticate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;688;2;696;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the * key with authenticate;;d49,688;;b1,0;;m">
				</treenode>
				<treenode node="testAllConfigWithAuthorize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;657;2;665;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the * key with authenticate;;d46,657;;b1,0;;m">
				</treenode>
				<treenode node="testAllowDenyAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;724;2;777;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deny always takes precedence over allow;;d36,724;;b1,0;;m">
				</treenode>
				<treenode node="testAllowedActionsSetWithAllowMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;843;2;850;;;;vpos;;v;;r;;d56,843;;b1,0;;m">
				</treenode>
				<treenode node="testAllowedActionsWithCamelCaseMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;806;2;841;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that allow() and allowedActions work with camelCase method names.;;d58,806;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;544;2;563;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthorizeFalse method;;d38,544;;b1,0;;m">
				</treenode>
				<treenode node="testComponentSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1358;2;1379;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test $settings in Controller::$components;;d41,1358;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultToLoginRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1046;2;1072;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Default to loginRedirect, if set, on authError.;;d46,1046;;b1,0;;m">
				</treenode>
				<treenode node="testDenyWithCamelCaseMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;784;2;799;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that deny() converts camel case inputs to lowercase.;;d48,784;;b1,0;;m">
				</treenode>
				<treenode node="testFlashSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1515;2;1527;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test flash settings.;;d37,1515;;b1,0;;m">
				</treenode>
				<treenode node="testForbiddenException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1156;2;1173;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Throw ForbiddenException if AuthComponent::$unauthorizedRedirect set to false;;d42,1156;;b1,0;;m">
				</treenode>
				<treenode node="testIsAuthorizedDelegation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;579;2;603;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that isAuthorized calls methods correctly;;d46,579;;b1,0;;m">
				</treenode>
				<treenode node="testIsAuthorizedMissingFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;569;2;572;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException CakeException;;d47,569;;b1,0;;m">
				</treenode>
				<treenode node="testIsAuthorizedUsingUserInSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;610;2;625;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that isAuthorized will use the session user if none is given.;;d54,610;;b1,0;;m">
				</treenode>
				<treenode node="testIsErrorOrTests;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;434;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsErrorOrTests;;d38,434;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAuthenticateNoFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;647;2;650;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException CakeException;;d46,647;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAuthenticateResets;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;672;2;681;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that loadAuthorize resets the loaded objects each time.;;d46,672;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAuthorizeResets;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;632;2;641;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that loadAuthorize resets the loaded objects each time.;;d43,632;;b1,0;;m">
				</treenode>
				<treenode node="testLogin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;454;2;490;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLogin method;;d29,454;;b1,0;;m">
				</treenode>
				<treenode node="testLoginActionRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1300;2;1327;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoginActionRedirect method;;d43,1300;;b1,0;;m">
				</treenode>
				<treenode node="testLoginAfterIdentify;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;497;2;517;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLogin afterIdentify event method;;d42,497;;b1,0;;m">
				</treenode>
				<treenode node="testLoginRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;857;2;1017;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoginRedirect method;;d37,857;;b1,0;;m">
				</treenode>
				<treenode node="testLoginWithRequestData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1474;2;1489;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test logging in with a request.;;d44,1474;;b1,0;;m">
				</treenode>
				<treenode node="testLoginWithUserData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1496;2;1508;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test login() with user data;;d41,1496;;b1,0;;m">
				</treenode>
				<treenode node="testLogout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1386;2;1395;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that logout deletes the session variables. and returns the correct URL;;d30,1386;;b1,0;;m">
				</treenode>
				<treenode node="testLogoutTrigger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1402;2;1411;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Logout should trigger a logout method on authentication objects.;;d37,1402;;b1,0;;m">
				</treenode>
				<treenode node="testMapActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1418;2;1450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test mapActions as a getter;;d34,1418;;b1,0;;m">
				</treenode>
				<treenode node="testMapActionsDelegation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1457;2;1467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test mapActions loading and delegating to authorize objects.;;d44,1457;;b1,0;;m">
				</treenode>
				<treenode node="testNoAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;425;2;427;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoAuth method;;d30,425;;b1,0;;m">
				</treenode>
				<treenode node="testNoLoginRedirectForAuthenticatedUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1024;2;1039;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoLoginRedirectForAuthenticatedUser method;;d59,1024;;b1,0;;m">
				</treenode>
				<treenode node="testNoRedirectOn404;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1202;2;1208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that no redirect is performed when a 404 is reached And the user doesn't have a session.;;d39,1202;;b1,0;;m">
				</treenode>
				<treenode node="testNoRedirectOnLoginAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1180;2;1194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that no redirects or authorization tests occur on the loginAction;;d47,1180;;b1,0;;m">
				</treenode>
				<treenode node="testPassword;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1628;2;1632;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test password hashing;;d32,1628;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectSessionRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1546;2;1553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test redirect using Auth.redirect from the session.;;d43,1546;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectSessionReadDuplicateBase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1560;2;1570;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test redirectUrl with duplicate base.;;d56,1560;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectSessionReadEqualToLoginAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1578;2;1586;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that redirect does not return loginAction if that is what's stored in Auth.redirect. instead loginRedirect should be used.;;d61,1578;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1534;2;1539;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the various states of Auth::redirect();;d35,1534;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectToUnauthorizedRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1079;2;1110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRedirectToUnauthorizedRedirect;;d54,1079;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectToUnauthorizedRedirectSuppressedAuthError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1117;2;1149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRedirectToUnauthorizedRedirectSuppressedAuthError;;d73,1117;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectUrlWithBaseSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1595;2;1621;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the returned URL doesn't contain the base URL.&#xA;&#xA;Return:&#xA;   This test method doesn't return anything;;d46,1595;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectVarClearing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;524;2;537;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRedirectVarClearing method;;d43,524;;b1,0;;m">
				</treenode>
				<treenode node="testSameAuthenticateWithDifferentHashers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;703;2;717;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test defining the same Authenticate object but with different password hashers;;d60,703;;b1,0;;m">
				</treenode>
				<treenode node="testStatelessAuthNoRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1679;2;1691;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStatelessAuthNoRedirect method;;d47,1679;;b1,0;;m">
				</treenode>
				<treenode node="testStatelessAuthNoSessionStart;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1698;2;1718;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStatelessAuthNoSessionStart method;;d51,1698;;b1,0;;m">
				</treenode>
				<treenode node="testStatelessAuthWorksWithUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1335;2;1351;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Stateless auth methods like Basic should populate data that can be accessed by $this-&gt;user().;;d50,1335;;b1,0;;m">
				</treenode>
				<treenode node="testStatelessFollowedByStatefulAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1725;2;1736;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStatelessAuthRedirect method;;d55,1725;;b1,0;;m">
				</treenode>
				<treenode node="testUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;1639;2;1670;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUser method;;d28,1639;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;366;17;366;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="initialized;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;373;20;373;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;359;13;359;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthEventTestListener;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f0;331;1;344;;;;vpos;;v;;r&#xA;Description&#xA;     Mock class used to test event dispatching;;d28,331;;b0,0;;m">
				<treenode node="listenerFunction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;340;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test function to be used in event dispatching;;d36,340;;b1,0;;m">
				</treenode>
				<treenode node="callStack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;333;18;333;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Author;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;965;1;992;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Author class;;d35,965;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;987;2;990;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterFind method&#xA;&#xA;Parameters:&#xA;    array $results;;d55,987;;b1,0;;mresults;;pprimary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;987;45;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;987;35;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;979;16;979;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;972;13;972;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthorFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthorFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthorFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthorFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f0;153;1;259;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     AuthTestController class;;d44,153;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;180;2;186;;;;vpos;;v;;r&#xA;Description&#xA;     construct method;;d50,180;;b1,0;;mrequest;;presponse;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f29;180;37;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f39;180;48;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;225;2;227;;;;vpos;;vvoid;;r&#xA;Description&#xA;     add method;;d23,225;;b1,0;;m">
				</treenode>
				<treenode node="admin_add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;209;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     admin_add method;;d29,209;;b1,0;;m">
				</treenode>
				<treenode node="admin_login;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;201;2;202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     admin_login method;;d31,201;;b1,0;;m">
				</treenode>
				<treenode node="camelCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;234;2;236;;;;vpos;;vvoid;;r&#xA;Description&#xA;     add method;;d29,234;;b1,0;;m">
				</treenode>
				<treenode node="isAuthorized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;256;2;257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     isAuthorized method;;d32,256;;b1,0;;m">
				</treenode>
				<treenode node="login;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;193;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     login method;;d25,193;;b1,0;;m">
				</treenode>
				<treenode node="logout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;217;2;218;;;;vpos;;vvoid;;r&#xA;Description&#xA;     logout method;;d26,217;;b1,0;;m">
				</treenode>
				<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;246;2;249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     redirect method&#xA;&#xA;Parameters:&#xA;    string|array $url&#xA;    mixed $status&#xA;    mixed $exit;;d62,246;;b1,0;;mstring|array $url;;pmixed $status;;pmixed $exit;;p">
					<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f48;246;53;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f32;246;39;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f26;246;30;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;167;19;167;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="testUrl;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;174;16;174;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;160;13;160;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f0;137;1;146;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     AuthUser class;;d37,137;;b0,0;;m">
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;144;20;144;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthUserCustomFieldFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserCustomFieldFixture.php;f0;23;1;51;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d57,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserCustomFieldFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserCustomFieldFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="AuthUserFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserFixture.php;f0;23;1;51;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BadRequestException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;72;1;87;;;;vpos;;vHttpException;;c;;r&#xA;Description&#xA;     Represents an HTTP 400 error.;;d48,72;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;80;2;85;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - If no message is given 'Bad Request' will be the message&#xA;    int $code - Status code, defaults to 400;;d59,80;;b1,0;;mstring $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f46;80;51;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;80;37;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="BakeArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f1;43;2;49;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Class BakeArticle;;d33,43;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f9;47;29;47;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f9;45;17;45;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BakeArticleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticleFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d49,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticleFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BakeArticlesBakeTagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticlesBakeTagFixture.php;f0;23;1;42;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d57,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticlesBakeTagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticlesBakeTagFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BakeCommentFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeCommentFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     BakeCommentFixture fixture for testing bake;;d49,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeCommentFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeCommentFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BakeShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php;f0;34;1;254;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Command-line code generation utility to automate programmer chores.;;d33,34;;b0,0;;m">
				<treenode node="all;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php;f8;139;2;202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Quickly bake the MVC;;d23,139;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php;f8;209;2;252;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,209;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php;f8;76;2;132;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Override main() to handle action;;d24,76;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php;f8;55;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assign $this-&gt;connection to the active task if a connection param is set.;;d27,55;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php;f8;48;19;48;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php;f8;41;14;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BakeShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\BakeShellTest.php;f0;33;1;118;;;;vpos;;vCakeTestCase;;c;;r;;d41,33;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\BakeShellTest.php;f8;47;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup test;;d25,47;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\BakeShellTest.php;f8;64;2;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,64;;b1,0;;m">
				</treenode>
				<treenode node="testAllWithModelName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\BakeShellTest.php;f8;74;2;117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake all;;d40,74;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\BakeShellTest.php;f8;40;17;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BakeTagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeTagFixture.php;f0;23;1;43;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeTagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeTagFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BakeTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php;f0;24;1;91;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Base class for Bake Tasks.;;d32,24;;b0,0;;m">
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php;f8;79;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Base execute method parses some parameters and sets some properties on the bake tasks. call when overriding execute();;d27,79;;b1,0;;m">
				</treenode>
				<treenode node="getPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php;f8;65;2;71;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the path for output. Checks the plugin property and returns the correct path.&#xA;&#xA;Return:&#xA;   Path to output;;d27,65;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php;f8;53;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Disable caching and enable debug for baking. This forces the most current database schema to be used.;;d27,53;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php;f8;38;19;38;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="interactive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php;f8;45;20;45;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php;f8;31;15;31;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BananaComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;127;1;146;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     BananaComponent class;;d40,127;;b0,0;;m">
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;142;2;144;;;;vpos;;vstring;;r&#xA;Description&#xA;     startup method&#xA;&#xA;Parameters:&#xA;    Controller $controller;;d49,142;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f36;142;47;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testField;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;134;18;134;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BananaHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Helper\BananaHelper.php;f0;4;1;10;;;;vpos;;vHelper;;c;;r;;d34,4;;b0,0;;m">
				<treenode node="peel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Helper\BananaHelper.php;f8;6;2;8;;;;vpos;;v;;r;;d24,6;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BaseAuthenticate;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f9;23;1;236;;;;vpos;;vCakeEventListener;;c;;r&#xA;Description&#xA;     Base Authentication class with common methods and properties.;;d61,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f8;83;2;86;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - The Component collection used on this request&#xA;    array $settings - Array of settings to use;;d73,83;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f49;83;60;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f62;83;71;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_findUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f11;102;2;145;;;;vpos;;vbool;;r&#xA;Description&#xA;     Find a user record using the standard options.&#xA;&#xA;Parameters:&#xA;    string|array $username - The username/identifier, or an array of find conditions&#xA;    string $password - The password, only used if $username param is string&#xA;&#xA;Return:&#xA;   |array Either false on failure, or an array of user data;;d59,102;;b2,0;;mstring|array $username;;pstring $password;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f41;102;50;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="username;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f30;102;39;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_password;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f11;188;2;190;;;;vpos;;vstring;;r&#xA;Description&#xA;     Hash the plain text password so that it matches the hashed/encrypted password in the datasource.&#xA;&#xA;Parameters:&#xA;    string $password - The plain text password&#xA;&#xA;Return:&#xA;   The hashed form of the password;;d41,188;;b2,0;;mstring $password;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f30;188;39;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="authenticate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f17;199;84;199;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Authenticate a user based on the request information.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request to get authentication information from&#xA;    CakeResponse $response - A response object that can have headers added&#xA;&#xA;Return:&#xA;   Either false on failure, or an array of user data on success;;d-1,-1;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f51;199;59;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f74;199;83;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f8;221;2;223;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get a user based on information in the request. Primarily used by stateless authentication systems like basic and digest auth.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object&#xA;&#xA;Return:&#xA;   Either false or an array of user information;;d47,221;;b1,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f37;221;45;221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f8;73;2;75;;;;vpos;;varray;;r&#xA;Description&#xA;     Implemented events&#xA;&#xA;Return:&#xA;   of events =&gt; callbacks;;d37,73;;b1,0;;m">
				</treenode>
				<treenode node="logout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f8;211;2;212;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Allows you to hook into AuthComponent::logout(), and implement specialized logout behavior.&#xA;&#xA;Parameters:&#xA;    array $user - The user about to be logged out;;d31,211;;b1,0;;marray $user;;p">
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f24;211;29;211;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="passwordHasher;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f8;154;2;178;;;;vpos;;vAbstractPasswordHasher;;r&#xA;Description&#xA;     Return password hasher object&#xA;&#xA;Return:&#xA;   Password hasher instance;;d34,154;;b1,0;;m">
				</treenode>
				<treenode node="unauthenticated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f8;233;2;234;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Handle unauthenticated access attempt.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - A request object&#xA;    CakeResponse $response - A response object&#xA;&#xA;Return:&#xA;   Either true to indicate the unauthenticated request has been;;d79,233;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f45;233;53;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f68;233;77;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f11;59;23;59;;;;vposComponentCollection;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_passwordHasher;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f11;66;27;66;;;;vposAbstractPasswordHasher;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php;f8;41;17;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BaseAuthorize;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f9;23;1;167;;;;vpos;;v;;r&#xA;Description&#xA;     Abstract base authorization adapter for AuthComponent.;;d29,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f8;68;2;73;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - The controller for this request&#xA;    string $settings - An array of settings;;d83,68;;b1,0;;mComponentCollection $collection;;pstring $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f49;68;60;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f62;68;71;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="action;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f8;110;2;119;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the action path for a given request. Primarily used by authorize objects that need to get information about the plugin, controller, and action being invoked.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - The request a path is needed for&#xA;    string $path - Path format&#xA;&#xA;Return:&#xA;   the action path for the given request;;d86,110;;b1,0;;mCakeRequest $request;;pstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f46;110;51;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f36;110;44;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="authorize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f17;82;64;82;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks user authorization.&#xA;&#xA;Parameters:&#xA;    array $user - Active user data&#xA;    CakeRequest $request - Request instance;;d-1,-1;;b1,0;;marray $user;;pCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f55;82;63;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f36;82;41;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="controller;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f8;91;2;100;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Accessor to the controller object.&#xA;&#xA;Parameters:&#xA;    Controller $controller - null to get, a controller to set;;d59,91;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f39;91;50;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f8;152;2;165;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Maps crud actions to actual action names. Used to modify or get the current mapped actions.&#xA;&#xA;Parameters:&#xA;    array $map - Either an array of mappings, or undefined to get current values&#xA;&#xA;Return:&#xA;   Either the current mappings or null when setting;;d44,152;;b1,0;;marray $map;;p">
					<treenode node="map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f28;152;32;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f11;37;23;37;;;;vposComponentCollection;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f11;30;23;30;;;;vposController;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php;f8;49;17;49;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BaseCoverageReport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f9;30;1;181;;;;vpos;;v;;r&#xA;Description&#xA;     Abstract class for common CoverageReport methods. Provides several template methods for custom output.;;d34,30;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f8;67;2;70;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $coverage - Array of coverage data from PHPUnit_Test_Result&#xA;    CakeBaseReporter $reporter - A reporter to use for the coverage report;;d68,67;;b1,0;;marray $coverage;;pCakeBaseReporter $reporter;;p">
					<treenode node="coverage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f29;67;38;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="reporter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f57;67;66;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_calculateCoveredLines;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f11;143;2;162;;;;vpos;;varray;;r&#xA;Description&#xA;     Calculates how many lines are covered and what the total number of executable lines is.&#xA;&#xA;Parameters:&#xA;    array $fileLines - The lines in the file&#xA;    array $coverageData - The raw coverage data&#xA;&#xA;Return:&#xA;   Array of covered, total lines;;d70,143;;b2,0;;marray $fileLines;;parray $coverageData;;p">
					<treenode node="coverageData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f55;143;68;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fileLines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f43;143;53;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f11;78;2;85;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Pulls params out of the reporter.&#xA;&#xA;Parameters:&#xA;    CakeBaseReporter $reporter - Reporter to suck params out of;;d59,78;;b2,0;;mCakeBaseReporter $reporter;;p">
					<treenode node="reporter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f48;78;57;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="filterCoverageDataByPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f8;120;2;129;;;;vpos;;varray;;r&#xA;Description&#xA;     Filters the coverage data by path. Files not in the provided path will be removed.&#xA;&#xA;Parameters:&#xA;    string $path - Path to filter files by&#xA;&#xA;Return:&#xA;   Array of coverage data for files that match the given path;;d49,120;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f42;120;47;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f17;179;76;179;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates an coverage 'diff' for $file based on $coverageData.&#xA;&#xA;Parameters:&#xA;    string $filename - Name of the file having coverage generated&#xA;    array $fileLines - File data as an array&#xA;    array $coverageData - Array of coverage data to use to generate HTML diffs with&#xA;&#xA;Return:&#xA;   prepared report for a single file;;d-1,-1;;b1,0;;mstring $filename;;parray $fileLines;;parray $coverageData;;p">
					<treenode node="coverageData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f62;179;75;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fileLines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f50;179;60;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f39;179;48;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getPathFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f8;102;2;112;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the base path that the files we are interested in live in.&#xA;&#xA;Return:&#xA;   Path;;d33,102;;b1,0;;m">
				</treenode>
				<treenode node="report;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f17;169;34;169;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates report to display.&#xA;&#xA;Return:&#xA;   compiled html report;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="setCoverage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f8;93;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the coverage data array&#xA;&#xA;Parameters:&#xA;    array $coverage - Coverage data to use;;d40,93;;b1,0;;marray $coverage;;p">
					<treenode node="coverage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f29;93;38;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_rawCoverage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f11;37;24;37;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_testNames;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f11;59;22;59;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="appTest;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f8;44;16;44;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="pluginTest;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php;f8;51;19;51;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BaseLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\BaseLog.php;f9;25;1;66;;;;vpos;;vCakeLogInterface;;c;;r&#xA;Description&#xA;     Base log engine class.;;d51,25;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\BaseLog.php;f8;39;2;41;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $config - Configuration array;;d48,39;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\BaseLog.php;f29;39;36;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\BaseLog.php;f8;54;2;64;;;;vpos;;varray;;r&#xA;Description&#xA;     Sets instance config. When $config is null, returns config array&#xA;&#xA;Parameters:&#xA;    array $config - engine configuration;;d43,54;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\BaseLog.php;f24;54;31;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\BaseLog.php;f11;32;19;32;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="BaseModelTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTestBase.php;f9;28;1;95;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ModelBaseTest;;d50,28;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTestBase.php;f8;80;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,80;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTestBase.php;f8;90;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,90;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTestBase.php;f8;35;21;35;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="backupGlobals;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTestBase.php;f8;42;22;42;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTestBase.php;f8;49;17;49;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BasicAuthenticate;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f0;50;1;116;;;;vpos;;vBaseAuthenticate;;c;;r&#xA;Description&#xA;     Basic Authentication adapter for AuthComponent.;;d49,50;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f8;58;2;63;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor, completes configuration for basic authentication.&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - The Component collection used on this request&#xA;    array $settings - An array of settings;;d73,58;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f49;58;60;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f62;58;71;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="authenticate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f8;73;2;75;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Authenticate a user using HTTP auth. Will use the configured User model and attempt a login using HTTP auth.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - The request to authenticate with&#xA;    CakeResponse $response - The response to add headers to&#xA;&#xA;Return:&#xA;   Either false on failure, or an array of user data on success;;d76,73;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f42;73;50;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f65;73;74;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f8;83;2;91;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get a user based on information in the request. Used by cookie-less auth for stateless clients.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object&#xA;&#xA;Return:&#xA;   Either false or an array of user information;;d47,83;;b1,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f37;83;45;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loginHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f8;112;2;114;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the login headers&#xA;&#xA;Return:&#xA;   Headers for logging in;;d32,112;;b1,0;;m">
				</treenode>
				<treenode node="unauthenticated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f8;101;2;105;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Handles an unauthenticated access attempt by sending appropriate login headers&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - A request object&#xA;    CakeResponse $response - A response object;;d79,101;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f45;101;53;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php;f68;101;77;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="BasicAuthenticateTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f0;31;1;328;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for BasicAuthentication;;d49,31;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;45;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,45;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateChallenge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;162;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that challenge headers are sent when no credentials are found.;;d45,162;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateContainSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;204;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test contain success;;d50,204;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateFailReChallenge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;284;2;293;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test scope failure.;;d51,284;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateInjection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;120;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d45,120;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;81;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d42,81;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoPassword;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;107;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d46,107;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoUsername;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;95;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d46,95;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;182;2;197;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test authenticate success;;d43,182;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateUserFieldsRelatedModelsSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;254;2;275;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test userFields and related models success;;d66,254;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateUserFieldsSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;233;2;247;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test userFields success;;d53,233;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateUsernameZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;136;2;155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that username of 0 works.;;d48,136;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateWithBlowfish;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;300;2;326;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticateWithBlowfish;;d48,300;;b1,0;;m">
				</treenode>
				<treenode node="testConstructor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;66;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test applying settings in the constructor;;d35,66;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php;f8;38;17;38;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BasicAuthentication;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f0;23;1;64;;;;vpos;;v;;r&#xA;Description&#xA;     Basic authentication;;d26,23;;b0,0;;m">
				<treenode node="_generateHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f18;60;2;62;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate basic [proxy] authentication header&#xA;&#xA;Parameters:&#xA;    string $user - Username&#xA;    string $pass - Password;;d57,60;;b2,5;;mstring $user;;pstring $pass;;p">
					<treenode node="pass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f50;60;55;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f43;60;48;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="authentication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f15;33;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Authentication&#xA;&#xA;Parameters:&#xA;    HttpSocket $http - Http socket instance&#xA;    array - &amp;$authInfo Authentication info;;d69,33;;b1,5;;mHttpSocket $http;;parray;;p">
					<treenode node="authInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f58;33;67;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="http;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f50;33;55;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="proxyAuthentication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f15;47;2;51;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Proxy Authentication&#xA;&#xA;Parameters:&#xA;    HttpSocket $http - Http socket instance&#xA;    array - &amp;$proxyInfo Proxy info;;d75,47;;b1,5;;mHttpSocket $http;;parray;;p">
					<treenode node="http;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f55;47;60;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="proxyInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php;f63;47;73;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="BasicAuthenticationTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\BasicAuthenticationTest.php;f0;26;1;62;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     BasicMethodTest class;;d51,26;;b0,0;;m">
				<treenode node="testAuthentication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\BasicAuthenticationTest.php;f8;33;2;43;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthentication method;;d38,33;;b1,0;;m">
				</treenode>
				<treenode node="testProxyAuthentication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\BasicAuthenticationTest.php;f8;50;2;60;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testProxyAuthentication method;;d43,50;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BasicsTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f0;29;1;1196;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     BasicsTest class;;d38,29;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;36;2;41;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,36;;b1,0;;m">
				</treenode>
				<treenode node="testAm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;252;2;260;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test am();;d26,252;;b1,0;;m">
				</treenode>
				<treenode node="testArrayDiffKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;48;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the array_diff_key compatibility function.;;d36,48;;b1,0;;m">
				</treenode>
				<treenode node="testCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;267;2;295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test cache();;d29,267;;b1,0;;m">
				</treenode>
				<treenode node="testClearCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;302;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test clearCache();;d34,302;;b1,0;;m">
				</treenode>
				<treenode node="testConvertSlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;864;2;872;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test convertSlash();;d36,864;;b1,0;;m">
				</treenode>
				<treenode node="testDebug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;879;2;1037;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test debug();;d29,879;;b1,0;;m">
				</treenode>
				<treenode node="testEnv;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;78;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHttpBase method;;d27,78;;b1,0;;m">
				</treenode>
				<treenode node="testFileExistsInPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;818;2;857;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test fileExistsInPath();;d40,818;;b1,0;;m">
				</treenode>
				<treenode node="testH;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;183;2;245;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test h();;d25,183;;b1,0;;m">
				</treenode>
				<treenode node="testLogError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;790;2;811;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test LogError();;d32,790;;b1,0;;m">
				</treenode>
				<treenode node="testPluginSplit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;1174;2;1195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test pluginSplit;;d35,1174;;b1,0;;m">
				</treenode>
				<treenode node="testPr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;1044;2;1057;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test pr();;d26,1044;;b1,0;;m">
				</treenode>
				<treenode node="testPrCli;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;1064;2;1077;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test pr();;d29,1064;;b1,0;;m">
				</treenode>
				<treenode node="testStackTrace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;1156;2;1167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the stackTrace() method is a shortcut for Debugger::trace();;d34,1156;;b1,0;;m">
				</treenode>
				<treenode node="testStripslashesDeep;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;1084;2;1114;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test stripslashes_deep();;d40,1084;;b1,0;;m">
				</treenode>
				<treenode node="testStripslashesDeepSybase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;1121;2;1149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test stripslashes_deep() with magic_quotes_sybase on;;d46,1121;;b1,0;;m">
				</treenode>
				<treenode node="testTranslate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;364;2;406;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test __();;d33,364;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;691;2;713;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test __c();;d41,691;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateCategoryWithFormatSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;569;2;581;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test testTranslateCategoryWithFormatSpecifiers;;d61,569;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;621;2;647;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test __d();;d39,621;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateDomainCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;720;2;750;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test __dc();;d47,720;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateDomainCategoryPlural;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;757;2;783;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test __dcn();;d53,757;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateDomainCategoryPluralWithFormatSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;552;2;562;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test testTranslateDomainCategoryPluralWithFormatSpecifiers;;d73,552;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateDomainCategoryWithFormatSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;531;2;545;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test testTranslateDomainCategoryWithFormatSpecifiers;;d67,531;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateDomainPlural;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;654;2;684;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test __dn();;d45,654;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateDomainPluralWithFormatSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;491;2;511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslateDomainPluralWithFormatSpecifiers;;d65,491;;b1,0;;m">
				</treenode>
				<treenode node="testTranslatePercent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;413;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslatePercent;;d40,413;;b1,0;;m">
				</treenode>
				<treenode node="testTranslatePlural;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;588;2;614;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test __n();;d39,588;;b1,0;;m">
				</treenode>
				<treenode node="testTranslatePluralWithFormatSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;518;2;524;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test testTranslatePluralWithFormatSpecifiers;;d59,518;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateWithFormatSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php;f8;448;2;484;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslateWithFormatSpecifiers;;d53,448;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Basket;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2903;1;2917;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Basket test model;;d35,2903;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2907;18;2907;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2905;13;2905;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BasketFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BasketFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BasketFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BasketFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BeforeDeleteComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;312;1;324;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Model stub for beforeDelete testing;;d48,312;;b0,0;;m">
				<treenode node="beforeDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;318;2;322;;;;vpos;;v;;r;;d47,318;;b1,0;;mcascade;;p">
					<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f30;318;38;318;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;314;13;314;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;316;17;316;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BehaviorCollection;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f0;30;1;295;;;;vpos;;vObjectCollection;;cCakeEventListener;;c;;r&#xA;Description&#xA;     Model behavior collection class.;;d79,30;;b0,0;;m">
				<treenode node="attach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;78;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Backwards compatible alias for load()&#xA;&#xA;Parameters:&#xA;    string $behavior - Behavior name&#xA;    array $config - Configuration options;;d54,78;;b1,0;;mstring $behavior;;parray $config;;p">
					<treenode node="behavior;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f24;78;33;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f35;78;42;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="detach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;205;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Backwards compatible alias for unload()&#xA;&#xA;Parameters:&#xA;    string $name - Name of behavior;;d31,205;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f24;205;29;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatchMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;221;2;239;;;;vpos;;varray;;r&#xA;Description&#xA;     Dispatches a behavior method. Will call either normal methods or mapped methods.&#xA;&#xA;Parameters:&#xA;    Model $model - The model the method was originally called on&#xA;    string $method - The method called&#xA;    array $params - Parameters for the called method&#xA;    bool $strict - If methods are not found, trigger an error&#xA;&#xA;Return:&#xA;   All methods for all behaviors attached to this object;;d85,221;;b1,0;;mModel $model;;pstring $method;;parray $params;;pbool $strict;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f40;221;47;221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f32;221;38;221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f49;221;56;221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strict;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f68;221;75;221;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;260;2;274;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Check to see if a behavior in this collection implements the provided method. Will also check mappedMethods.&#xA;&#xA;Parameters:&#xA;    string $method - The method to find&#xA;    bool $callback - Return the callback for the method&#xA;&#xA;Return:&#xA;   If $callback is false, a boolean will be returned, if its true, an array;;d55,260;;b1,0;;mstring $method;;pbool $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f36;260;45;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f27;260;34;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;282;2;293;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the implemented events that will get routed to the trigger function in order to dispatch them separately on each behavior;;d37,282;;b1,0;;m">
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;60;2;68;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Attaches a model object and loads a list of behaviors&#xA;&#xA;Parameters:&#xA;    string $modelName - Model name&#xA;    array $behaviors - Behaviors list;;d56,60;;b1,0;;mstring $modelName;;parray $behaviors;;p">
					<treenode node="behaviors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f34;60;44;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="modelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f22;60;32;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;102;2;177;;;;vpos;;vbool;;r&#xA;Description&#xA;     Loads a behavior into the collection. You can use use `$config['enabled'] = false` to load a behavior with callbacks disabled. By default callbacks are enabled. Disable behaviors can still be used as normal.&#xA;&#xA;Parameters:&#xA;    string $behavior - CamelCased name of the behavior to load&#xA;    array $config - Behavior configuration parameters&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d52,102;;b1,0;;mstring $behavior;;parray $config;;p">
					<treenode node="behavior;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f22;102;31;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f33;102;40;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="methods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;247;2;249;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the method list for attached behaviors, i.e. all public, non-callback methods. This does not include mappedMethods.&#xA;&#xA;Return:&#xA;   All public methods for all behaviors attached to this collection;;d27,247;;b1,0;;m">
				</treenode>
				<treenode node="unload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;185;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Detaches a behavior from a model&#xA;&#xA;Parameters:&#xA;    string $name - CamelCased name of the behavior to unload;;d31,185;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f24;185;29;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_mappedMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f11;51;26;51;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f11;44;20;44;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="modelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php;f8;37;18;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BehaviorCollectionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;462;1;1267;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     BehaviorCollection class;;d50,462;;b0,0;;m">
				<treenode node="testBehaviorAttachAndDetach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1129;2;1137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test attach and detaching;;d47,1129;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorBelongsToFindCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;790;2;841;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorBelongsToFindCallbacks method;;d54,790;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorBinding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;523;2;581;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorBinding method;;d39,523;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorDeleteCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;929;2;955;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorDeleteCallbacks method;;d47,929;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorFindCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;655;2;706;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorFindCallbacks method;;d45,655;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorHasManyFindCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;713;2;747;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorHasManyFindCallbacks method;;d52,713;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorHasOneFindCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;754;2;783;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorHasOneFindCallbacks method;;d51,754;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorMethodDispatching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1043;2;1061;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorMethodDispatching method;;d49,1043;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorMethodDispatchingWithData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1068;2;1077;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorMethodDispatchingWithData method;;d57,1068;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorOnErrorCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;962;2;969;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorOnErrorCallback method;;d47,962;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorOrderCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1197;2;1265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that behavior priority;;d46,1197;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorSaveCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;848;2;922;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorSaveCallbacks method;;d45,848;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorToggling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;621;2;648;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorToggling method;;d40,621;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorValidateAfterCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1004;2;1018;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorValidateAfterCallback method;;d53,1004;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorValidateCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;976;2;997;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorValidateCallback method;;d48,976;;b1,0;;m">
				</treenode>
				<treenode node="testBehaviorValidateMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1025;2;1036;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBehaviorValidateMethods method;;d47,1025;;b1,0;;m">
				</treenode>
				<treenode node="testBindModelCallsInBehaviors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1084;2;1122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     undocumented function;;d49,1084;;b1,0;;m">
				</treenode>
				<treenode node="testDetachWithPluginNames;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;588;2;603;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that attach()/detach() works with plugin.banana;;d45,588;;b1,0;;m">
				</treenode>
				<treenode node="testHasMethodAsCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1174;2;1190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test hasMethod returning a 'callback';;d43,1174;;b1,0;;m">
				</treenode>
				<treenode node="testHasMethodBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1144;2;1153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that hasMethod works with basic functions.;;d38,1144;;b1,0;;m">
				</treenode>
				<treenode node="testHasMethodMappedMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;1160;2;1167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that hasMethod works with mapped methods.;;d46,1160;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidBehaviorCausingCakeError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;611;2;614;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that attaching a non existent Behavior triggers a cake error.;;d55,611;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;494;2;516;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading aliased behaviors;;d33,494;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDisabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;480;2;487;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test load() with enabled =&gt; false;;d36,480;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;469;17;469;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Bid;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1101;1;1116;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Bid class;;d32,1101;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1115;18;1115;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1108;13;1108;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Bidding;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1157;1;1178;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Bidding class;;d36,1157;;b0,0;;m">
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1171;15;1171;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1164;13;1164;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BiddingFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BiddingMessage;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1123;1;1150;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     BiddingMessage class;;d43,1123;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1144;18;1144;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1130;13;1130;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1137;19;1137;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BiddingMessageFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingMessageFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingMessageFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingMessageFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BidFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BidFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d41,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BidFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BidFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BinaryTestFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BinaryTestFixture.php;f0;23;1;41;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BinaryTestFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BinaryTestFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BlowfishAuthenticate;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishAuthenticate.php;f0;39;1;52;;;;vpos;;vFormAuthenticate;;c;;r&#xA;Description&#xA;     An authentication adapter for AuthComponent. Provides the ability to authenticate using POST data using Blowfish hashing. Can be used by configuring AuthComponent to use it via the AuthComponent::$authenticate setting.;;d52,39;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishAuthenticate.php;f8;47;2;50;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor. Sets default passwordHasher to Blowfish&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - The Component collection used on this request&#xA;    array $settings - Array of settings to use;;d73,47;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishAuthenticate.php;f49;47;60;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishAuthenticate.php;f62;47;71;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="BlowfishAuthenticateTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f0;32;1;207;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for BlowfishAuthentication;;d52,32;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;41;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,41;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateInjection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;124;2;131;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticateInjection method;;d45,124;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;76;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticateNoData method;;d42,76;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoPassword;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;98;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticateNoPassword method;;d46,98;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoUsername;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;87;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticateNoUsername method;;d46,87;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticatePasswordIsFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;109;2;117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticatePasswordIsFalse method;;d51,109;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateScopeFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;159;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticateScopeFail method;;d45,159;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;138;2;152;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthenticateSuccess method;;d43,138;;b1,0;;m">
				</treenode>
				<treenode node="testConstructor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;62;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test applying settings in the constructor;;d35,62;;b1,0;;m">
				</treenode>
				<treenode node="testPluginModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;174;2;206;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginModel method;;d35,174;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php;f8;34;17;34;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BlowfishPasswordHasher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishPasswordHasher.php;f0;23;1;47;;;;vpos;;vAbstractPasswordHasher;;c;;r&#xA;Description&#xA;     Blowfish password hashing class.;;d60,23;;b0,0;;m">
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishPasswordHasher.php;f8;43;2;45;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check hash. Generate hash for user provided password and check against existing hash.&#xA;&#xA;Parameters:&#xA;    string $password - Plain text password to hash&#xA;    string $hashedPassword - Existing hashed password&#xA;&#xA;Return:&#xA;   True if hashes match else false;;d51,43;;b1,0;;mstring $password;;pstring $hashedPassword;;p">
					<treenode node="hashedPassword;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishPasswordHasher.php;f34;43;49;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishPasswordHasher.php;f23;43;32;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishPasswordHasher.php;f8;32;2;34;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates password hash.&#xA;&#xA;Parameters:&#xA;    string $password - Plain text password to hash&#xA;&#xA;Return:&#xA;   Password hash;;d33,32;;b1,0;;mstring $password;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishPasswordHasher.php;f22;32;31;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="BlueberryComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f0;43;1;61;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     BlueberryComponent class;;d43,43;;b0,0;;m">
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;57;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     initialize method;;d52,57;;b1,0;;mcontroller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f39;57;50;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;50;17;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testName property;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Book;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2433;1;2455;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Book class;;d33,2433;;b0,0;;m">
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2447;15;2447;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2440;13;2440;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BookFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BookFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BookFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BookFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="BrokenCallbackController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f0;101;1;113;;;;vpos;;vController;;c;;r;;d50,101;;b0,0;;m">
				<treenode node="_fail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f11;110;2;111;;;;vpos;;v;;r;;d28,110;;b2,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;107;2;108;;;;vpos;;v;;r;;d25,107;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;105;19;105;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;103;13;103;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Cache;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f0;42;1;580;;;;vpos;;v;;r&#xA;Description&#xA;     Cache provides a consistent interface to Caching in your application. It allows you to use several different Cache engines, without coupling your application to a specific implementation. It also allows you to change out cache storage or configuration without effecting the rest of your application.;;d12,42;;b0,0;;m">
				<treenode node="_buildEngine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f18;165;2;191;;;;vpos;;vbool;;r&#xA;Description&#xA;     Finds and builds the instance of the required engine class.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the config array that needs an engine instance built;;d47,165;;b2,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f40;165;45;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;464;2;471;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache.&#xA;&#xA;Parameters:&#xA;    bool $check - if true will check expiration, otherwise delete all&#xA;    string $config - name of the configuration to use&#xA;&#xA;Return:&#xA;   True if the cache was successfully cleared, false otherwise;;d67,464;;b1,5;;mbool $check;;pstring $config;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f30;464;36;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f46;464;53;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;480;2;487;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache belonging to the same group.&#xA;&#xA;Parameters:&#xA;    string $group - name of the group to be cleared&#xA;    string $config - name of the configuration to use&#xA;&#xA;Return:&#xA;   True if the cache group was successfully cleared, false otherwise;;d64,480;;b1,5;;mstring $group;;pstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f43;480;50;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f35;480;41;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;121;2;156;;;;vpos;;varray;;r&#xA;Description&#xA;     Set the cache configuration to use. config() can both create new configurations, return the settings for already configured configurations.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the configuration&#xA;    array $settings - Optional associative array of settings passed to the engine&#xA;&#xA;Return:&#xA;   array(engine, settings) on success, false on failure;;d66,121;;b1,5;;mstring $name;;parray $settings;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f31;121;36;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f45;121;54;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configured;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;198;2;200;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array containing the currently configured Cache settings.&#xA;&#xA;Return:&#xA;   Array of configured Cache config names;;d37,198;;b1,5;;m">
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;402;2;419;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Decrement a number under the key and return decremented value.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;    string $config - Optional string configuration name&#xA;&#xA;Return:&#xA;   new value, or false if the data doesn't exist, is not integer,;;d74,402;;b1,5;;mstring $key;;pint $offset;;pstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f53;402;60;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f34;402;38;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f40;402;47;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;438;2;455;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    string $config - name of the configuration to use&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d58,438;;b1,5;;mstring $key;;pstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f37;438;44;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f31;438;35;438;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;210;2;216;;;;vpos;;vbool;;r&#xA;Description&#xA;     Drops a cache engine. Deletes the cache configuration information If the deleted configuration is the last configuration using a certain engine, the Engine instance is also unset.&#xA;&#xA;Parameters:&#xA;    string $name - A currently configured cache config you wish to remove&#xA;&#xA;Return:&#xA;   success of the removal, returns false when the config does not exist;;d36,210;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f29;210;34;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;279;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Garbage collection&#xA;&#xA;Parameters:&#xA;    string $config - [optional] The config name you wish to have garbage collected&#xA;    int $expires - [optional] An expires timestamp;;d65,279;;b1,5;;mstring $config;;pint $expires;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f27;279;34;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f48;279;56;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groupConfigs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;535;2;543;;;;vpos;;varray;;r&#xA;Description&#xA;     Retrieve group names to config mapping.&#xA;&#xA;Parameters:&#xA;    string $group - group name or null to retrieve all group mappings&#xA;&#xA;Return:&#xA;   map of group and all configuration that has the same group;;d52,535;;b1,5;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f37;535;43;535;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;374;2;391;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Increment a number under the key and return incremented value.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to add&#xA;    string $config - Optional string configuration name&#xA;&#xA;Return:&#xA;   new value, or false if the data doesn't exist, is not integer,;;d74,374;;b1,5;;mstring $key;;pint $offset;;pstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f53;374;60;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f34;374;38;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f40;374;47;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isInitialized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;495;2;500;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if Cache has initialized a working config for the given name.&#xA;&#xA;Parameters:&#xA;    string $config - name of the configuration to use&#xA;&#xA;Return:&#xA;   Whether or not the config name has been initialized;;d59,495;;b1,5;;mstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f38;495;45;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;349;2;363;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from a cache config.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    string $config - optional name of the configuration to use&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d56,349;;b1,5;;mstring $key;;pstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f35;349;42;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f29;349;33;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="remember;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;570;2;578;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Provides the ability to easily do read-through caching.&#xA;&#xA;Parameters:&#xA;    string $key - The cache key to read/store data at&#xA;    callable $callable - The callable that provides data in the case when&#xA;    string $config - The cache configuration to use for this operation&#xA;&#xA;Return:&#xA;   The results of the callable or unserialized results;;d71,570;;b1,5;;mstring $key;;pcallable $callable;;pstring $config;;p">
					<treenode node="callable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f39;570;48;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f50;570;57;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f33;570;37;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;241;2;268;;;;vpos;;varray;;r&#xA;Description&#xA;     Temporarily change the settings on a cache config. The settings will persist for the next write operation (write, decrement, increment, clear). Any reads that are done before the write, will use the modified settings. If `$settings` is empty, the settings will be reset to the original configuration.&#xA;&#xA;Parameters:&#xA;    string|array $settings - Optional string for simple name-value pair or array&#xA;    string $value - Optional for a simple name-value pair&#xA;    string $config - The configuration name you are changing&#xA;&#xA;Return:&#xA;   Array of settings;;d85,241;;b1,5;;mstring|array $settings;;pstring $value;;pstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f64;241;71;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f28;241;37;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f49;241;55;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="settings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;509;2;514;;;;vpos;;varray;;r&#xA;Description&#xA;     Return the settings for the named cache engine.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the configuration to get settings for&#xA;&#xA;Return:&#xA;   list of settings for this engine;;d52,509;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f33;509;38;509;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f15;301;2;330;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into a cache engine.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached - anything except a resource&#xA;    string $config - Optional string configuration name to write to&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d65,301;;b1,5;;mstring $key;;pmixed $value;;pstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f44;301;51;301;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f30;301;34;301;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f36;301;42;301;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f18;51;26;51;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_engines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f18;72;27;72;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_groups;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f18;58;26;58;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php;f18;65;25;65;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="CacheDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\CacheDispatcher.php;f0;23;1;72;;;;vpos;;vDispatcherFilter;;c;;r&#xA;Description&#xA;     This filter will check whether the response was previously cached in the file system and served it back to the client if appropriate.;;d47,23;;b0,0;;m">
				<treenode node="beforeDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\CacheDispatcher.php;f8;39;2;70;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     Checks whether the response was cached and set the body accordingly.&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - containing the request and response object&#xA;&#xA;Return:&#xA;   with cached content if found, null otherwise;;d50,39;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\CacheDispatcher.php;f42;39;48;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="priority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\CacheDispatcher.php;f8;31;17;31;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CacheEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f9;21;1;179;;;;vpos;;v;;r&#xA;Description&#xA;     Storage engine for CakePHP caching;;d27,21;;b0,0;;m">
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f17;125;39;125;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache&#xA;&#xA;Parameters:&#xA;    bool $check - if true will check expiration, otherwise delete all&#xA;&#xA;Return:&#xA;   True if the cache was successfully cleared, false otherwise;;d-1,-1;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f32;125;38;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f8;135;2;137;;;;vpos;;vbool;;r&#xA;Description&#xA;     Clears all values belonging to a group. Is up to the implementing engine to decide whether actually delete the keys or just simulate it to achieve the same result.&#xA;&#xA;Parameters:&#xA;    string $group - name of the group to be cleared;;d36,135;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f28;135;34;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f17;109;54;109;;;;vpos;;vNew;;r&#xA;Description&#xA;     Decrement a number under the key and return decremented value&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d-1,-1;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f36;109;40;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f42;109;49;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f17;117;38;117;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f33;117;37;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f8;72;2;73;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Garbage collection&#xA;&#xA;Parameters:&#xA;    int $expires - [optional] An expires timestamp, invalidating all data before;;d37,72;;b1,0;;mint $expires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f20;72;28;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f8;146;2;148;;;;vpos;;varray;;r&#xA;Description&#xA;     Does whatever initialization for each group is required and returns the `group value` for each of them, this is the token representing each group in the cache key;;d26,146;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f17;100;54;100;;;;vpos;;vNew;;r&#xA;Description&#xA;     Increment a number under the key and return incremented value&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to add&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d-1,-1;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f36;100;40;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f42;100;49;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f8;46;2;62;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the cache engine&#xA;&#xA;Parameters:&#xA;    array $settings - Associative array of parameters for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,46;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f22;46;31;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="key;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f8;165;2;177;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Generates a safe key for use with cache engine storage engines.&#xA;&#xA;Parameters:&#xA;    string $key - the key passed over&#xA;&#xA;Return:&#xA;   string $key or false;;d27,165;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f21;165;25;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f17;91;36;91;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d-1,-1;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f31;91;35;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="settings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f8;155;2;157;;;;vpos;;varray;;r&#xA;Description&#xA;     Cache Engine settings&#xA;&#xA;Return:&#xA;   settings;;d28,155;;b1,0;;m">
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f17;83;56;83;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write value for a key into cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached&#xA;    int $duration - How long to cache for&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d-1,-1;;b1,0;;mstring $key;;pmixed $value;;pint $duration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f46;83;55;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f32;83;36;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f38;83;44;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_groupPrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f11;36;24;36;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php;f8;28;17;28;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CacheException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;519;1;520;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for Cache. This exception will be thrown from Cache when it encounters an error.;;d43,519;;b0,0;;m">
			</treenode>
			<treenode node="CacheHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f0;29;1;340;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     CacheHelper helps create full page view caching.;;d36,29;;b0,0;;m">
				<treenode node="_enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;59;2;61;;;;vpos;;vbool;;r&#xA;Description&#xA;     Is CacheHelper enabled? should files + output be parsed.;;d31,59;;b2,0;;m">
				</treenode>
				<treenode node="_parseContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;98;2;102;;;;vpos;;vstring;;r&#xA;Description&#xA;     Parse a file + output. Matches nocache tags between the current output and the current file stores a reference of the file, so the generated can be swapped back with the file contents when writing the cache file.&#xA;&#xA;Parameters:&#xA;    string $file - The filename to process&#xA;    string $out - The output for the file&#xA;&#xA;Return:&#xA;   Updated content;;d47,98;;b2,0;;mstring $file;;pstring $out;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f34;98;39;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="out;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f41;98;45;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;180;2;211;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parse file searching for no cache tags&#xA;&#xA;Parameters:&#xA;    string $file - The filename that needs to be parsed&#xA;    string $cache - The cached content;;d46,180;;b2,0;;mstring $file;;pstring $cache;;p">
					<treenode node="cache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f38;180;44;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f31;180;36;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseOutput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;242;2;266;;;;vpos;;vstring;;r&#xA;Description&#xA;     Parse the output and replace cache tags&#xA;&#xA;Parameters:&#xA;    string $cache - Output to replace content in&#xA;&#xA;Return:&#xA;   with all replacements made to &lt;!--nocache--&gt;&lt;!--nocache--&gt;;;d41,242;;b2,0;;mstring $cache;;p">
					<treenode node="cache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f33;242;39;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_replaceSection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;219;2;222;;;;vpos;;vstring;;r&#xA;Description&#xA;     Munges the output from a view with cache tags, and numbers the sections. This helps solve issues with empty/duplicate content.&#xA;&#xA;Return:&#xA;   The content with cake:nocache tags replaced;;d38,219;;b2,0;;m">
				</treenode>
				<treenode node="_stripTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;232;2;234;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strip cake:nocache tags from a string. Since View::render() only removes un-numbered nocache tags, remove all the numbered ones. This is the complement to _replaceSection.&#xA;&#xA;Parameters:&#xA;    string $content - String to remove tags from&#xA;&#xA;Return:&#xA;   String with tags removed;;d41,232;;b2,0;;mstring $content;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f31;232;39;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_writeFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;277;2;338;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write a cached version of the file&#xA;&#xA;Parameters:&#xA;    string $content - view content to write to a cache file&#xA;    string $timestamp - Duration to set for cache file&#xA;    bool $useCallbacks - Whether to include statements in cached file which&#xA;&#xA;Return:&#xA;   success of caching view;;d76,277;;b2,0;;mstring $content;;pstring $timestamp;;pbool $useCallbacks;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f31;277;39;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timestamp;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f41;277;51;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useCallbacks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f53;277;66;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f8;82;2;87;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parses the layout file and stores content for cache file building.&#xA;&#xA;Parameters:&#xA;    string $layoutFile - Layout file name;;d42,82;;b1,0;;mstring $layoutFile;;p">
					<treenode node="layoutFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f29;82;40;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterRenderFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f8;70;2;74;;;;vpos;;vstring;;r&#xA;Description&#xA;     Parses the view file and stores content for cache file building.&#xA;&#xA;Parameters:&#xA;    string $viewFile - View file name&#xA;    string $output - The output for the file&#xA;&#xA;Return:&#xA;   Updated content;;d53,70;;b1,0;;mstring $viewFile;;pstring $output;;p">
					<treenode node="output;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f44;70;51;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f33;70;42;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f8;113;2;171;;;;vpos;;vstring;;r&#xA;Description&#xA;     Main method used to cache a view&#xA;&#xA;Parameters:&#xA;    string $file - File to cache&#xA;    string $out - output to cache&#xA;&#xA;Return:&#xA;   view output;;d36,113;;b1,0;;mstring $file;;pstring $out;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f23;113;28;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="out;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f30;113;34;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_counter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;52;20;52;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_match;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;45;18;45;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_replace;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php;f11;37;20;37;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="CacheHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f0;58;1;648;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CacheHelperTest class;;d43,58;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;76;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,76;;b1,0;;m">
				</treenode>
				<treenode node="skip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;65;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Checks if TMP/views is writable, and skips the case if it is not.;;d24,65;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;95;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,95;;b1,0;;m">
				</treenode>
				<treenode node="testAfterLayoutConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;577;2;597;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that afterRender checks the conditions correctly.;;d45,577;;b1,0;;m">
				</treenode>
				<treenode node="testAfterRenderConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;550;2;570;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that afterRender checks the conditions correctly.;;d45,550;;b1,0;;m">
				</treenode>
				<treenode node="testCacheActionArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;356;2;379;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test cacheAction set to a boolean;;d40,356;;b1,0;;m">
				</treenode>
				<treenode node="testCacheActionArrayCamelCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;386;2;408;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that cacheAction works with camelcased controller names.;;d49,386;;b1,0;;m">
				</treenode>
				<treenode node="testCacheBaseNameControllerName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;519;2;543;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test ControllerName contains AppName;;d51,519;;b1,0;;m">
				</treenode>
				<treenode node="testCacheCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;322;2;349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that callback code is generated correctly.;;d38,322;;b1,0;;m">
				</treenode>
				<treenode node="testCacheEmptySections;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;606;2;647;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCacheEmptySections method;;d42,606;;b1,0;;m">
				</treenode>
				<treenode node="testCacheNonLatinCharactersInRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;139;2;158;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test cache parsing with non-latin characters in current route;;d54,139;;b1,0;;m">
				</treenode>
				<treenode node="testCacheViewVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;290;2;315;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test cache of view vars;;d37,290;;b1,0;;m">
				</treenode>
				<treenode node="testCacheWithCustomRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;481;2;508;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that custom routes are respected when generating cache files.;;d45,481;;b1,0;;m">
				</treenode>
				<treenode node="testCacheWithNamedAndPassedArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;415;2;442;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test with named and pass args.;;d51,415;;b1,0;;m">
				</treenode>
				<treenode node="testCacheWithQueryStringParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;449;2;474;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that query string parameters are included in the cache filename.;;d50,449;;b1,0;;m">
				</treenode>
				<treenode node="testComplexNoCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;230;2;283;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testComplexNoCache method;;d38,230;;b1,0;;m">
				</treenode>
				<treenode node="testLayoutCacheParsingNoTagsInView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;106;2;132;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test cache parsing with no cake:nocache tags in view file.;;d54,106;;b1,0;;m">
				</treenode>
				<treenode node="testLayoutCacheParsingWithTagsInView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;165;2;192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test cache parsing with cake:nocache tags in view file.;;d56,165;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleNoCacheTagsInViewfile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;199;2;223;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that multiple &lt;!--nocache--&gt; tags function with multiple nocache tags in the layout.;;d53,199;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CacheSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f0;27;1;88;;;;vpos;;vCakeSessionHandlerInterface;;c;;r&#xA;Description&#xA;     CacheSession provides method for saving sessions into a Cache engine. Used with CakeSession;;d58,27;;b0,0;;m">
				<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f8;43;2;45;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on close of a database session.&#xA;&#xA;Return:&#xA;   Success;;d25,43;;b1,0;;m">
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f8;74;2;76;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on the destruction of a database session.&#xA;&#xA;Parameters:&#xA;    int $id - ID that uniquely identifies session in cache&#xA;&#xA;Return:&#xA;   True for successful delete, false otherwise;;d30,74;;b1,0;;mint $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f25;74;28;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f8;84;2;86;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function called on gc for cache sessions.&#xA;&#xA;Parameters:&#xA;    int $expires - Timestamp (defaults to current time)&#xA;&#xA;Return:&#xA;   Success;;d37,84;;b1,0;;mint $expires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f20;84;28;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="open;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f8;34;2;36;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on open of a database session.&#xA;&#xA;Return:&#xA;   Success;;d24,34;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f8;53;2;55;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Method used to read from a database session.&#xA;&#xA;Parameters:&#xA;    string $id - The key of the value to read&#xA;&#xA;Return:&#xA;   The value of the key or false if it does not exist;;d27,53;;b1,0;;mstring $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f22;53;25;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f8;64;2;66;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function called on write for database sessions.&#xA;&#xA;Parameters:&#xA;    int $id - ID that uniquely identifies session in database&#xA;    mixed $data - The value of the data to be saved&#xA;&#xA;Return:&#xA;   True for successful write, false otherwise;;d35,64;;b1,0;;mint $id;;pmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f28;64;33;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php;f23;64;26;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CacheSessionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f0;27;1;120;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class CacheSessionTest;;d44,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f8;63;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,63;;b1,0;;m">
				</treenode>
				<treenode node="setupBeforeClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f15;36;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test case startup;;d43,36;;b1,5;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f8;73;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,73;;b1,0;;m">
				</treenode>
				<treenode node="teardownAfterClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f15;51;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     cleanup after test case.;;d45,51;;b1,5;;m">
				</treenode>
				<treenode node="testDestroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f8;113;2;118;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test destroy;;d31,113;;b1,0;;m">
				</treenode>
				<treenode node="testOpen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f8;83;2;85;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test open;;d28,83;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f8;103;2;106;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reading.;;d28,103;;b1,0;;m">
				</treenode>
				<treenode node="testWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f8;92;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test write();;d29,92;;b1,0;;m">
				</treenode>
				<treenode node="_sessionBackup;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php;f18;29;33;29;;;;vpos;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="CacheTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f0;25;1;521;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CacheTest class;;d37,25;;b0,0;;m">
				<treenode node="cacher;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;518;2;520;;;;vpos;;vstring;;r&#xA;Description&#xA;     Method for testing Cache::remember();;d26,518;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;34;2;41;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;48;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,48;;b1,0;;m">
				</treenode>
				<treenode node="testAttemptingToConfigureANonCacheEngineClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;169;2;174;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that trying to configure classes that don't extend CacheEngine fail.;;d65,169;;b1,0;;m">
				</treenode>
				<treenode node="testCacheDisable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;423;2;455;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCacheDisable method;;d36,423;;b1,0;;m">
				</treenode>
				<treenode node="testConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;62;2;68;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConfig method;;d30,62;;b1,0;;m">
				</treenode>
				<treenode node="testConfigChange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;181;2;193;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConfigChange method;;d36,181;;b1,0;;m">
				</treenode>
				<treenode node="testConfigInvalidEngine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;76;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConfigInvalidEngine method;;d43,76;;b1,0;;m">
				</treenode>
				<treenode node="testConfigSettingDefaultConfigKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;200;2;219;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that calling config() sets the 'default' configuration up.;;d53,200;;b1,0;;m">
				</treenode>
				<treenode node="testConfigured;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;319;2;323;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that configured returns an array of the currently configured cache settings;;d34,319;;b1,0;;m">
				</treenode>
				<treenode node="testConfigWithLibAndPluginEngines;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;103;2;123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test configuring CacheEngines in App/libs;;d53,103;;b1,0;;m">
				</treenode>
				<treenode node="testDrop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;346;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that drop removes cache configs, and that further attempts to use that config do not work.;;d28,346;;b1,0;;m">
				</treenode>
				<treenode node="testGroupConfigs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;253;2;301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGroupConfigs method;;d36,253;;b1,0;;m">
				</treenode>
				<treenode node="testGroupConfigsThrowsException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;309;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGroupConfigsThrowsException method;;d51,309;;b1,0;;m">
				</treenode>
				<treenode node="testInitSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;330;2;338;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInitSettings method;;d36,330;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;133;2;149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInvalidConfig method;;d37,133;;b1,0;;m">
				</treenode>
				<treenode node="testNonFatalErrorsWithCachedisable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;86;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check that no fatal errors are issued doing normal things when Cache.disable is true.;;d54,86;;b1,0;;m">
				</treenode>
				<treenode node="testReadNonExistingConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;156;2;161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading from a config that is undefined.;;d45,156;;b1,0;;m">
				</treenode>
				<treenode node="testRemember;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;503;2;511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test remember method.;;d32,503;;b1,0;;m">
				</treenode>
				<treenode node="testSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;462;2;482;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSet method;;d27,462;;b1,0;;m">
				</treenode>
				<treenode node="testSetOnAlternateConfigs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;489;2;496;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test set() parameter handling for user cache configs.;;d45,489;;b1,0;;m">
				</treenode>
				<treenode node="testWriteEmptyValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;376;2;391;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWriteEmptyValues method;;d40,376;;b1,0;;m">
				</treenode>
				<treenode node="testWriteTriggerError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;398;2;413;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that failed writes cause errors to be triggered.;;d41,398;;b1,0;;m">
				</treenode>
				<treenode node="testWritingWithConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f8;226;2;246;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWritingWithConfig method;;d41,226;;b1,0;;m">
				</treenode>
				<treenode node="_count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php;f11;27;18;27;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="CacheTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f0;28;1;51;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     CacheTestController class;;d45,28;;b0,0;;m">
				<treenode node="cache_parsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;42;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     cache_parsing method;;d33,42;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php;f8;35;16;35;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CacheTestModelFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CacheTestModelFixture.php;f0;23;1;35;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CacheTestModelFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeBaseException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;24;1;53;;;;vpos;;vRuntimeException;;c;;r&#xA;Description&#xA;     Base class that all Exceptions extend.;;d49,24;;b0,0;;m">
				<treenode node="responseHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;43;2;51;;;;vpos;;varray;;r&#xA;Description&#xA;     Get/set the response header to be used&#xA;&#xA;Parameters:&#xA;    string|array $header - An array of header strings or a single header string&#xA;    string $value - The header value;;d63,43;;b1,0;;mstring|array $header;;pstring $value;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f32;43;39;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f48;43;54;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_responseHeaders;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;31;28;31;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeBaseReporter;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f0;26;1;236;;;;vpos;;vPHPUnit_TextUI_ResultPrinter;;c;;r&#xA;Description&#xA;     CakeBaseReporter contains common reporting features used in the CakePHP Test suite;;d60,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;64;2;70;;;;vpos;;v;;r&#xA;Description&#xA;     Does nothing yet. The first output will be sent on the first test start.&#xA;&#xA;Parameters:&#xA;    string $charset - The character set to output with&#xA;    array $params - Array of request parameters the reporter should use;;d68,64;;b1,0;;mstring $charset;;parray $params;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f29;64;37;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f49;64;56;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;150;2;152;;;;vpos;;vvoid;;r&#xA;Description&#xA;     An error occurred.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $test - The test to add an error for&#xA;    Exception $e - The exception object to add&#xA;    float $time - The current time;;d77,150;;b1,0;;mPHPUnit_Framework_Test $test;;pException $e;;pfloat $time;;p">
					<treenode node="e;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f66;150;68;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f49;150;54;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f70;150;75;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;162;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A failure occurred.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $test - The test that failed&#xA;    PHPUnit_Framework_AssertionFailedError $e - The assertion that failed&#xA;    float $time - The current time;;d108,162;;b1,0;;mPHPUnit_Framework_Test $test;;pPHPUnit_Framework_AssertionFailedError $e;;pfloat $time;;p">
					<treenode node="e;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f97;162;99;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f51;162;56;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f101;162;106;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addIncompleteTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;174;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Incomplete test.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $test - The test that was incomplete&#xA;    Exception $e - The incomplete exception&#xA;    float $time - The current time;;d86,174;;b1,0;;mPHPUnit_Framework_Test $test;;pException $e;;pfloat $time;;p">
					<treenode node="e;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f75;174;77;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f58;174;63;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f79;174;84;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addSkippedTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;186;2;188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Skipped test.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $test - The test that failed&#xA;    Exception $e - The skip object&#xA;    float $time - The current time;;d83,186;;b1,0;;mPHPUnit_Framework_Test $test;;pException $e;;pfloat $time;;p">
					<treenode node="e;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f72;186;74;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f55;186;60;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f76;186;81;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="baseUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;115;2;120;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the baseUrl if one is available.&#xA;&#xA;Return:&#xA;   The base URL for the request;;d27,115;;b1,0;;m">
				</treenode>
				<treenode node="endTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;228;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A test ended.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $test - The test that ended&#xA;    float $time - The current time;;d62,228;;b1,0;;mPHPUnit_Framework_Test $test;;pfloat $time;;p">
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f48;228;53;228;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f55;228;60;228;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="endTestSuite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;209;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A test suite ended.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestSuite $suite - The suite that ended;;d66,209;;b1,0;;mPHPUnit_Framework_TestSuite $suite;;p">
					<treenode node="suite;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f58;209;64;209;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintDocumentEnd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;98;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the end of the response from the test suite. Used to paint things like &lt;/body&gt; in an html page.;;d36,98;;b1,0;;m">
				</treenode>
				<treenode node="paintDocumentStart;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;89;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the start of the response from the test suite. Used to paint things like head elements in an html page.;;d38,89;;b1,0;;m">
				</treenode>
				<treenode node="paintResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;138;2;140;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paint result&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestResult $result - The result object;;d67,138;;b1,0;;mPHPUnit_Framework_TestResult $result;;p">
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f58;138;65;138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintTestMenu;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;107;2;108;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paint a list of test sets, core, app, and plugin test sets available.;;d33,107;;b1,0;;m">
				</treenode>
				<treenode node="printResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;128;2;130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Print result&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestResult $result - The result object;;d67,128;;b1,0;;mPHPUnit_Framework_TestResult $result;;p">
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f58;128;65;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;218;2;219;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A test started.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $test - The test that started;;d57,218;;b1,0;;mPHPUnit_Framework_Test $test;;p">
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f50;218;55;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startTestSuite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;196;2;201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A test suite started.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestSuite $suite - The suite to start;;d68,196;;b1,0;;mPHPUnit_Framework_TestSuite $suite;;p">
					<treenode node="suite;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f60;196;66;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCaseList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;78;2;81;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Retrieves a list of test cases from the active Manager class, displaying it in the correct format for the reporter subclass;;d32,78;;b1,0;;m">
				</treenode>
				<treenode node="_characterSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f11;47;25;47;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_headerSent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f11;33;23;33;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php;f8;40;15;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeEmail;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f0;30;1;1735;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP email class.;;d16,30;;b0,0;;m">
				<treenode node="EMAIL_CLIENT;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f6;37;19;37;;;;vposstring;;v;;r'CakePHP Email';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="EMAIL_PATTERN;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f6;72;20;72;;;;vposstring;;v;;r'/^((?:[\p{L}0-9.!#$%&amp;\'*+\/=?^_`{|}~-]+)*@[\p{L}0-9-.]+)$/ui';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LINE_LENGTH_MUST;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f6;51;23;51;;;;vposint;;v;;r998;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LINE_LENGTH_SHOULD;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f6;44;25;44;;;;vposint;;v;;r78;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MESSAGE_HTML;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f6;58;19;58;;;;vposstring;;v;;r'html';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MESSAGE_TEXT;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f6;65;19;65;;;;vposstring;;v;;r'text';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;343;2;359;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array|string $config - Array of configs, or string to load configs from email;;d45,343;;b1,0;;marray|string $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f29;343;36;343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_addEmail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;647;2;666;;;;vpos;;v;;r&#xA;Description&#xA;     Add email&#xA;&#xA;Parameters:&#xA;    string $varName - Property name&#xA;    string|array $email - String with email,&#xA;    string $name - Name;;d55,647;;b2,0;;mstring $varName;;pstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f40;647;46;647;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f48;647;53;647;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="varName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f30;647;38;647;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_applyConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1223;2;1268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Apply the config to an instance&#xA;&#xA;Parameters:&#xA;    array $config - Configuration options;;d42,1223;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f33;1223;40;1223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_attachFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1468;2;1493;;;;vpos;;varray;;r&#xA;Description&#xA;     Attach non-embedded files by adding file contents inside boundaries.&#xA;&#xA;Parameters:&#xA;    string $boundary - Boundary to use&#xA;&#xA;Return:&#xA;   An array of lines to add to the message;;d51,1468;;b2,0;;mstring $boundary;;p">
					<treenode node="boundary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f33;1468;42;1468;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_attachInlineFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1512;2;1534;;;;vpos;;varray;;r&#xA;Description&#xA;     Attach inline/embedded files to the message.&#xA;&#xA;Parameters:&#xA;    string $boundary - Boundary to use&#xA;&#xA;Return:&#xA;   An array of lines to add to the message;;d57,1512;;b2,0;;mstring $boundary;;p">
					<treenode node="boundary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f39;1512;48;1512;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_createBoundary;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1456;2;1460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Create unique boundary identifier;;d38,1456;;b2,0;;m">
				</treenode>
				<treenode node="_encode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1313;2;1327;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encode the specified string using the current charset&#xA;&#xA;Parameters:&#xA;    string $text - String to encode&#xA;&#xA;Return:&#xA;   Encoded string;;d35,1313;;b2,0;;mstring $text;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f28;1313;33;1313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_encodeString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1337;2;1342;;;;vpos;;vstring;;r&#xA;Description&#xA;     Translates a string for one charset to another if the App.encoding value differs and the mb_convert_encoding function exists&#xA;&#xA;Parameters:&#xA;    string $text - The text to be converted&#xA;    string $charset - the target encoding;;d51,1337;;b2,0;;mstring $text;;pstring $charset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f41;1337;49;1337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f34;1337;39;1337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_formatAddress;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;813;2;827;;;;vpos;;varray;;r&#xA;Description&#xA;     Format addresses&#xA;&#xA;Parameters:&#xA;    array $address - Addresses to format;;d45,813;;b2,0;;marray $address;;p">
					<treenode node="address;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f35;813;43;813;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getContentTransferEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1711;2;1717;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return the Content-Transfer Encoding value based on the set charset;;d50,1711;;b2,0;;m">
				</treenode>
				<treenode node="_getContentTypeCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1727;2;1733;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return charset value for Content-Type.;;d45,1727;;b2,0;;m">
				</treenode>
				<treenode node="_getTypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1629;2;1635;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the text body types that are in this email message&#xA;&#xA;Return:&#xA;   Array of types;;d32,1629;;b2,0;;m">
				</treenode>
				<treenode node="_readFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1501;2;1504;;;;vpos;;vstring;;r&#xA;Description&#xA;     Read the file contents and return a base64 version of the file contents.&#xA;&#xA;Parameters:&#xA;    string $path - The absolute path to the file to read&#xA;&#xA;Return:&#xA;   File contents in base64 encoding;;d37,1501;;b2,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f30;1501;35;1501;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1542;2;1622;;;;vpos;;varray;;r&#xA;Description&#xA;     Render the body of the email.&#xA;&#xA;Parameters:&#xA;    array $content - Content to render&#xA;&#xA;Return:&#xA;   Email body ready to be sent;;d38,1542;;b2,0;;marray $content;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f28;1542;36;1542;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_renderTemplates;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1645;2;1704;;;;vpos;;varray;;r&#xA;Description&#xA;     Build and set all the view properties needed to render the templated emails. If there is no template set, the $content will be returned in a hash of the text content types for the email.&#xA;&#xA;Parameters:&#xA;    string $content - The content passed in from send() in most cases&#xA;&#xA;Return:&#xA;   The rendered content with html and text keys;;d47,1645;;b2,0;;mstring $content;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f37;1645;45;1645;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setEmail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;577;2;596;;;;vpos;;v;;r&#xA;Description&#xA;     Set email&#xA;&#xA;Parameters:&#xA;    string $varName - Property name&#xA;    string|array $email - String with email,&#xA;    string $name - Name;;d55,577;;b2,0;;mstring $varName;;pstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f40;577;46;577;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f48;577;53;577;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="varName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f30;577;38;577;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setEmailSingle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;627;2;635;;;;vpos;;v;;r&#xA;Description&#xA;     Set only 1 email&#xA;&#xA;Parameters:&#xA;    string $varName - Property name&#xA;    string|array $email - String with email,&#xA;    string $name - Name&#xA;    string $throwMessage - Exception message;;d76,627;;b2,0;;mstring $varName;;pstring|array $email;;pstring $name;;pstring $throwMessage;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f46;627;52;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f54;627;59;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="throwMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f61;627;74;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="varName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f36;627;44;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_validateEmail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;605;2;614;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Validate email address&#xA;&#xA;Parameters:&#xA;    string $email - Email;;d43,605;;b2,0;;mstring $email;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f35;605;41;605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_wrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;1351;2;1449;;;;vpos;;varray;;r&#xA;Description&#xA;     Wrap the message to follow the RFC 2822 - 2.1.1&#xA;&#xA;Parameters:&#xA;    string $message - Message to wrap&#xA;    int $wrapLength - The line length&#xA;&#xA;Return:&#xA;   Wrapped message;;d79,1351;;b2,0;;mstring $message;;pint $wrapLength;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f26;1351;34;1351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="wrapLength;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f36;1351;47;1351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addAttachments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;1088;2;1093;;;;vpos;;v;;r&#xA;Description&#xA;     Add attachments&#xA;&#xA;Parameters:&#xA;    string|array $attachments - String with the filename or array with filenames;;d46,1088;;b1,0;;mstring|array $attachments;;p">
					<treenode node="attachments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f32;1088;44;1088;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addBcc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;518;2;520;;;;vpos;;v;;r&#xA;Description&#xA;     Add Bcc&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name;;d46,518;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f24;518;30;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f32;518;37;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addCc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;491;2;493;;;;vpos;;v;;r&#xA;Description&#xA;     Add Cc&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name;;d45,491;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f23;491;29;491;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f31;491;36;491;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;704;2;710;;;;vpos;;v;;r&#xA;Description&#xA;     Add header for the message&#xA;&#xA;Parameters:&#xA;    array $headers - Headers to set;;d38,704;;b1,0;;marray $headers;;p">
					<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f28;704;36;704;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;464;2;466;;;;vpos;;v;;r&#xA;Description&#xA;     Add To&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name;;d45,464;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f23;464;29;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f31;464;36;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attachments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;1044;2;1078;;;;vpos;;varray;;r&#xA;Description&#xA;     Add attachments to the email message&#xA;&#xA;Parameters:&#xA;    string|array $attachments - String with the filename or array with filenames&#xA;&#xA;Return:&#xA;   |$this Either the array of attachments when getting or $this when setting;;d50,1044;;b1,0;;mstring|array $attachments;;p">
					<treenode node="attachments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f29;1044;41;1044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bcc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;503;2;508;;;;vpos;;varray;;r&#xA;Description&#xA;     Bcc&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d50,503;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f21;503;27;503;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f36;503;41;503;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;476;2;481;;;;vpos;;varray;;r&#xA;Description&#xA;     Cc&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d49,476;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f20;476;26;476;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f35;476;40;476;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="charset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;528;2;537;;;;vpos;;vstring;;r&#xA;Description&#xA;     Charset setter/getter&#xA;&#xA;Parameters:&#xA;    string $charset - Character set&#xA;&#xA;Return:&#xA;   this-&gt;charset;;d42,528;;b1,0;;mstring $charset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f25;528;33;528;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;1127;2;1137;;;;vpos;;vstring;;r&#xA;Description&#xA;     Configuration to use when send email&#xA;&#xA;Parameters:&#xA;    string|array $config - String with configuration name (from email&#xA;&#xA;Return:&#xA;   |array|$this;;d40,1127;;b1,0;;mstring|array $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f24;1127;31;1127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deliver;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f15;1192;2;1213;;;;vpos;;vCakeEmail;;r&#xA;Description&#xA;     Static method to fast create an instance of CakeEmail&#xA;&#xA;Parameters:&#xA;    string|array $to - Address to send (see CakeEmail::to())&#xA;    string $subject - String of subject or null to use 'subject' from transport config&#xA;    string|array $message - String with message or array with variables to be used in render&#xA;    string|array $transportConfig - String to use config from EmailConfig or array with configs&#xA;    bool $send - Send the email or just return the instance pre-configured&#xA;&#xA;Return:&#xA;   Instance of CakeEmail;;d119,1192;;b1,5;;mstring|array $to;;pstring $subject;;pstring|array $message;;pstring|array $transportConfig;;pbool $send;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f61;1192;69;1192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="send;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f105;1192;110;1192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f44;1192;52;1192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="to;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f32;1192;35;1192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="transportConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f78;1192;94;1192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="domain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;989;2;995;;;;vpos;;vstring;;r&#xA;Description&#xA;     Domain as top level (the part after @)&#xA;&#xA;Parameters:&#xA;    string $domain - Manually set the domain for CLI mailing&#xA;&#xA;Return:&#xA;   |$this;;d40,989;;b1,0;;mstring $domain;;p">
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f24;989;31;989;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="emailFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;913;2;922;;;;vpos;;vstring;;r&#xA;Description&#xA;     Email format&#xA;&#xA;Parameters:&#xA;    string $format - Formatting string&#xA;&#xA;Return:&#xA;   |$this;;d45,913;;b1,0;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f29;913;36;913;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="emailPattern;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;560;2;566;;;;vpos;;vstring;;r&#xA;Description&#xA;     EmailPattern setter/getter&#xA;&#xA;Parameters:&#xA;    string|bool|null $regex - The pattern to use for email address validation,&#xA;&#xA;Return:&#xA;   |$this;;d46,560;;b1,0;;mstring|bool|null $regex;;p">
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f30;560;36;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="from;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;370;2;375;;;;vpos;;varray;;r&#xA;Description&#xA;     From&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d51,370;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f22;370;28;370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f37;370;42;370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;729;2;801;;;;vpos;;varray;;r&#xA;Description&#xA;     Get list of headers&#xA;&#xA;Parameters:&#xA;    array $include - List of headers;;d48,729;;b1,0;;marray $include;;p">
					<treenode node="include;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f28;729;36;729;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="headerCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;545;2;550;;;;vpos;;vstring;;r&#xA;Description&#xA;     HeaderCharset setter/getter&#xA;&#xA;Parameters:&#xA;    string $charset - Character set&#xA;&#xA;Return:&#xA;   this-&gt;charset;;d48,545;;b1,0;;mstring $charset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f31;545;39;545;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="helpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;898;2;904;;;;vpos;;varray;;r&#xA;Description&#xA;     Helpers to be used in render&#xA;&#xA;Parameters:&#xA;    array $helpers - Helpers list&#xA;&#xA;Return:&#xA;   |$this;;d42,898;;b1,0;;marray $helpers;;p">
					<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f25;898;33;898;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="message;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;1101;2;1109;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get generated message (used by transport classes)&#xA;&#xA;Parameters:&#xA;    string $type - Use MESSAGE_* constants or null to return the full message as array&#xA;&#xA;Return:&#xA;   |array String if have type, array if type is null;;d39,1101;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f25;1101;30;1101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="messageId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;968;2;981;;;;vpos;;vbool;;r&#xA;Description&#xA;     Message-ID&#xA;&#xA;Parameters:&#xA;    bool|string $message - True to generate a new Message-ID, False to ignore (not send in email), String to set as Message-ID&#xA;&#xA;Return:&#xA;   |string|$this;;d44,968;;b1,0;;mbool|string $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f27;968;35;968;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="readReceipt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;418;2;423;;;;vpos;;varray;;r&#xA;Description&#xA;     Read Receipt (Disposition-Notification-To header)&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d58,418;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f29;418;35;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f44;418;49;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="replyTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;402;2;407;;;;vpos;;varray;;r&#xA;Description&#xA;     Reply-To&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d54,402;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f25;402;31;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f40;402;45;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;1275;2;1305;;;;vpos;;v;;r&#xA;Description&#xA;     Reset all CakeEmail internal variables to be able to send out a new email.;;d25,1275;;b1,0;;m">
				</treenode>
				<treenode node="returnPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;434;2;439;;;;vpos;;varray;;r&#xA;Description&#xA;     Return Path&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d57,434;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f28;434;34;434;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f43;434;48;434;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;1146;2;1179;;;;vpos;;varray;;r&#xA;Description&#xA;     Send an email using the specified content, template and layout&#xA;&#xA;Parameters:&#xA;    string|array $content - String with message or array with messages;;d39,1146;;b1,0;;mstring|array $content;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f22;1146;30;1146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;386;2;391;;;;vpos;;varray;;r&#xA;Description&#xA;     Sender&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d53,386;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f24;386;30;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f39;386;44;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;689;2;695;;;;vpos;;v;;r&#xA;Description&#xA;     Sets headers for the message&#xA;&#xA;Parameters:&#xA;    array $headers - Associative array containing headers to be set;;d38,689;;b1,0;;marray $headers;;p">
					<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f28;689;36;689;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;674;2;680;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get/Set Subject.&#xA;&#xA;Parameters:&#xA;    string $subject - Subject string&#xA;&#xA;Return:&#xA;   |$this;;d42,674;;b1,0;;mstring $subject;;p">
					<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f25;674;33;674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="template;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;836;2;848;;;;vpos;;varray;;r&#xA;Description&#xA;     Template and layout&#xA;&#xA;Parameters:&#xA;    bool|string $template - Template name or null to not use&#xA;    bool|string $layout - Layout name or null to not use&#xA;&#xA;Return:&#xA;   |$this;;d62,836;;b1,0;;mbool|string $template;;pbool|string $layout;;p">
					<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f45;836;52;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f26;836;35;836;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="theme;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;884;2;890;;;;vpos;;vstring;;r&#xA;Description&#xA;     Theme to use when rendering&#xA;&#xA;Parameters:&#xA;    string $theme - Theme name&#xA;&#xA;Return:&#xA;   |$this;;d38,884;;b1,0;;mstring $theme;;p">
					<treenode node="theme;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f23;884;29;884;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="to;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;449;2;454;;;;vpos;;varray;;r&#xA;Description&#xA;     To&#xA;&#xA;Parameters:&#xA;    string|array $email - Null to get, String with email,&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   |CakeEmail;;d49,449;;b1,0;;mstring|array $email;;pstring $name;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f20;449;26;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f35;449;40;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transport;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;930;2;937;;;;vpos;;vstring;;r&#xA;Description&#xA;     Transport name&#xA;&#xA;Parameters:&#xA;    string $name - Transport name&#xA;&#xA;Return:&#xA;   |$this;;d41,930;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f27;930;32;930;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="transportClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;945;2;959;;;;vpos;;vAbstractTransport;;r&#xA;Description&#xA;     Return the transport class;;d34,945;;b1,0;;m">
				</treenode>
				<treenode node="viewRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;856;2;862;;;;vpos;;vstring;;r&#xA;Description&#xA;     View class for render&#xA;&#xA;Parameters:&#xA;    string $viewClass - View class name&#xA;&#xA;Return:&#xA;   |$this;;d47,856;;b1,0;;mstring $viewClass;;p">
					<treenode node="viewClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f28;856;38;856;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="viewVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;870;2;876;;;;vpos;;varray;;r&#xA;Description&#xA;     Variables to be set on render&#xA;&#xA;Parameters:&#xA;    array $viewVars - Variables to set for view&#xA;&#xA;Return:&#xA;   |$this;;d44,870;;b1,0;;marray $viewVars;;p">
					<treenode node="viewVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f26;870;35;870;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_appCharset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;280;23;280;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_attachments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;289;24;289;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_bcc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;137;16;137;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_boundary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;296;21;296;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_cc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;127;15;127;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_charset8bit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;310;24;310;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;303;19;303;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_configClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;336;24;336;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_contentTypeCharset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;317;31;317;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;152;19;152;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_emailFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;244;24;244;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_emailFormatAvailable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;237;33;237;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_emailPattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;329;25;329;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_from;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;86;17;86;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;167;20;167;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;209;20;209;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_htmlMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;223;24;223;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;174;19;174;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;230;20;230;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_messageId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;144;22;144;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_readReceipt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;107;24;107;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_replyTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;100;20;100;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_returnPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;117;23;117;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_sender;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;93;19;93;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;159;20;159;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;181;21;181;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_textMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;216;24;216;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_theme;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;202;18;202;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_to;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;79;15;79;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_transportClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;258;27;258;;;;vposAbstractTransport;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_transportName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;251;26;251;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_viewRender;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;188;23;188;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_viewVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f11;195;21;195;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;265;16;265;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="headerCharset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php;f8;273;22;273;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeEmailTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f0;138;1;2470;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeEmailTest class;;d41,138;;b0,0;;m">
				<treenode node="_checkContentTransferEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f11;2113;2;2138;;;;vpos;;v;;r;;d70,2113;;b2,0;;mmessage;;pcharset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f60;2113;68;2113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f50;2113;58;2113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getEmailByNewStyleCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f11;2279;2;2296;;;;vpos;;vCakeEmail;;r&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    mixed $charset&#xA;    mixed $headerCharset;;d73,2279;;b2,0;;mmixed $charset;;pmixed $headerCharset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f47;2279;55;2279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headerCharset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f57;2279;71;2279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getEmailByOldStyleCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f11;2255;2;2272;;;;vpos;;vCakeEmail;;r&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    mixed $charset&#xA;    mixed $headerCharset;;d73,2255;;b2,0;;mmixed $charset;;pmixed $headerCharset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f47;2255;55;2255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headerCharset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f57;2255;71;2255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertLineLengths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2462;2;2468;;;;vpos;;vvoid;;r&#xA;Description&#xA;     CakeEmailTest::assertLineLengths()&#xA;&#xA;Parameters:&#xA;    string $message;;d45,2462;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f35;2462;43;2462;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="invalidEmails;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f15;292;2;300;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider function for testBuildInvalidData;;d40,292;;b1,5;;m">
				</treenode>
				<treenode node="invalidHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f15;700;2;708;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider function for testInvalidHeaders;;d41,700;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;145;2;152;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,145;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;159;2;162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,159;;b1,0;;m">
				</treenode>
				<treenode node="testAddresses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;474;2;503;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddresses method;;d33,474;;b1,0;;m">
				</treenode>
				<treenode node="testAttachments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;791;2;820;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAttachments method;;d35,791;;b1,0;;m">
				</treenode>
				<treenode node="testBodyEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2047;2;2063;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the body is encoded using the configured charset;;d36,2047;;b1,0;;m">
				</treenode>
				<treenode node="testBodyEncodingIso2022Jp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2070;2;2087;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the body is encoded using the configured charset (Japanese standard encoding);;d45,2070;;b1,0;;m">
				</treenode>
				<treenode node="testBodyEncodingIso2022JpMs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2094;2;2111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the body is encoded using the configured charset (Japanese irregular encoding, but sometime use this);;d47,2094;;b1,0;;m">
				</treenode>
				<treenode node="testCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2166;2;2175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests charset setter/getter;;d31,2166;;b1,0;;m">
				</treenode>
				<treenode node="testCharsetsCompatible;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2200;2;2248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests for compatible check. charset property and       charset() method. headerCharset property and headerCharset() method.;;d42,2200;;b1,0;;m">
				</treenode>
				<treenode node="testConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;856;2;872;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConfig method;;d30,856;;b1,0;;m">
				</treenode>
				<treenode node="testConfigArrayWithLayoutWithoutTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1921;2;1934;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConfigArrayWithLayoutWithoutTemplate method;;d60,1921;;b1,0;;m">
				</treenode>
				<treenode node="testConfigCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2006;2;2022;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to add charset configuration to a CakeEmail object;;d37,2006;;b1,0;;m">
				</treenode>
				<treenode node="testConfigEmailPattern;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;339;2;343;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to set email regex configuration to a CakeEmail object;;d42,339;;b1,0;;m">
				</treenode>
				<treenode node="testConfigMerge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;910;2;932;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test updating config doesn't reset transport's config.;;d35,910;;b1,0;;m">
				</treenode>
				<treenode node="testConfigString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;879;2;903;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConfigString method;;d36,879;;b1,0;;m">
				</treenode>
				<treenode node="testConstructWithConfigArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1886;2;1914;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConstructWithConfigArray method;;d48,1886;;b1,0;;m">
				</treenode>
				<treenode node="testConstructWithConfigString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1941;2;1964;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConstructWithConfigString method;;d49,1941;;b1,0;;m">
				</treenode>
				<treenode node="testCustomEmailValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;350;2;386;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible set custom email validation;;d45,350;;b1,0;;m">
				</treenode>
				<treenode node="testDeliver;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1700;2;1728;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeliver method;;d31,1700;;b1,0;;m">
				</treenode>
				<treenode node="testDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;543;2;552;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDomain method;;d30,543;;b1,0;;m">
				</treenode>
				<treenode node="testEmailFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1987;2;1999;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEmailFormat method;;d35,1987;;b1,0;;m">
				</treenode>
				<treenode node="testEmailPattern;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;329;2;332;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test emailPattern method;;d36,329;;b1,0;;m">
				</treenode>
				<treenode node="testEncode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2145;2;2159;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test CakeEmail::_encode function;;d30,2145;;b1,0;;m">
				</treenode>
				<treenode node="testExtendTransport;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;845;2;849;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExtendTransport method;;d39,845;;b1,0;;m">
				</treenode>
				<treenode node="testFormatAddress;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;412;2;444;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormatAddress method;;d37,412;;b1,0;;m">
				</treenode>
				<treenode node="testFormatAddressJapanese;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;451;2;467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormatAddressJapanese;;d45,451;;b1,0;;m">
				</treenode>
				<treenode node="testFrom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;169;2;189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFrom method;;d28,169;;b1,0;;m">
				</treenode>
				<treenode node="testFromWithColonsAndQuotes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;196;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that from addresses using colons work.;;d47,196;;b1,0;;m">
				</treenode>
				<treenode node="testHeaderCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2182;2;2191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests headerCharset setter/getter;;d37,2182;;b1,0;;m">
				</treenode>
				<treenode node="testHeaderEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2029;2;2040;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the header is encoded using the configured headerCharset;;d38,2029;;b1,0;;m">
				</treenode>
				<treenode node="testHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;619;2;693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHeaders method;;d31,619;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidAddHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;728;2;730;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInvalidAddHeaders;;d47,728;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f39;728;45;728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testInvalidEmail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;309;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildInvalidData;;d42,309;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f34;309;40;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testInvalidEmailAdd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;320;2;322;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildInvalidData;;d45,320;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f37;320;43;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testInvalidHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;717;2;719;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInvalidHeaders;;d44,717;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f36;717;42;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1735;2;1767;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessage method;;d31,1735;;b1,0;;m">
				</treenode>
				<treenode node="testMessageId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;510;2;526;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessageId method;;d33,510;;b1,0;;m">
				</treenode>
				<treenode node="testMessageIdInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;534;2;536;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessageIdInvalid method;;d40,534;;b1,0;;m">
				</treenode>
				<treenode node="testMessageIdWithDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;559;2;572;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessageIdWithDomain method;;d43,559;;b1,0;;m">
				</treenode>
				<treenode node="testReallyLongLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2442;2;2454;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that really long lines don't cause errors.;;d38,2442;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithLayoutAndAttachment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1870;2;1879;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRender method;;d53,1870;;b1,0;;m">
				</treenode>
				<treenode node="testReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1774;2;1784;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReset method;;d29,1774;;b1,0;;m">
				</treenode>
				<treenode node="testResetWithCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1791;2;1797;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReset with charset;;d40,1791;;b1,0;;m">
				</treenode>
				<treenode node="testSendAttachment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1671;2;1693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendAttachment method;;d38,1671;;b1,0;;m">
				</treenode>
				<treenode node="testSender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;215;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSender method;;d30,215;;b1,0;;m">
				</treenode>
				<treenode node="testSendMultipleMIME;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1635;2;1664;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendMultipleMIME method;;d40,1635;;b1,0;;m">
				</treenode>
				<treenode node="testSendNoTemplateWithAttachments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1028;2;1052;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test send() with no template.;;d53,1028;;b1,0;;m">
				</treenode>
				<treenode node="testSendNoTemplateWithAttachmentsAsBoth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1096;2;1133;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test send() with no template as both;;d59,1096;;b1,0;;m">
				</treenode>
				<treenode node="testSendNoTemplateWithDataStringAttachment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1060;2;1089;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test send() with no template and data string attachment;;d62,1060;;b1,0;;m">
				</treenode>
				<treenode node="testSendRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1330;2;1344;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRender method;;d34,1330;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderBoth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1371;2;1410;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRender both method;;d38,1371;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderJapanese;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1417;2;1435;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRender method for ISO-2022-JP;;d42,1417;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderNoLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1351;2;1364;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sending and rendering with no layout;;d42,1351;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1582;2;1628;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRenderPlugin method;;d40,1582;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderThemed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1442;2;1458;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRenderThemed method;;d40,1442;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderWithHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1529;2;1549;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRenderWithHelpers method;;d45,1529;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderWithHTML;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1465;2;1479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRenderWithHTML method and assert line length is kept below the required limit;;d42,1465;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderWithImage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1556;2;1575;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRenderWithImage method;;d43,1556;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderWithVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1486;2;1499;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRenderWithVars method;;d42,1486;;b1,0;;m">
				</treenode>
				<treenode node="testSendRenderWithVarsJapanese;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1506;2;1522;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendRenderWithVars method for ISO-2022-JP;;d50,1506;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;960;2;993;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendWithContent method;;d39,960;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithInlineAttachments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1140;2;1188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting inline attachments and messages.;;d49,1140;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithInlineAttachmentsHtmlOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1195;2;1230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting inline attachments and HTML only messages.;;d57,1195;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1274;2;1294;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendWithLog method;;d35,1274;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithLogAndScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1301;2;1323;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendWithLogAndScope method;;d43,1301;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithNoContentDispositionAttachments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1237;2;1268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test disabling content-disposition.;;d63,1237;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithNoContentDoesNotOverwriteViewVar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;939;2;953;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Calling send() with no parameters should not overwrite the view variables.;;d64,939;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithoutFrom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1000;2;1007;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendWithoutFrom method;;d39,1000;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithoutTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1014;2;1021;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendWithoutTo method;;d37,1014;;b1,0;;m">
				</treenode>
				<treenode node="testSubject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;579;2;591;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSubject method;;d31,579;;b1,0;;m">
				</treenode>
				<treenode node="testSubjectJapanese;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;598;2;612;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSubjectJapanese;;d39,598;;b1,0;;m">
				</treenode>
				<treenode node="testTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;737;2;753;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTemplate method;;d32,737;;b1,0;;m">
				</treenode>
				<treenode node="testTheme;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;760;2;766;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTheme method;;d29,760;;b1,0;;m">
				</treenode>
				<treenode node="testTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;238;2;285;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTo method;;d26,238;;b1,0;;m">
				</treenode>
				<treenode node="testTransport;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;827;2;838;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTransport method;;d33,827;;b1,0;;m">
				</treenode>
				<treenode node="testUnsetEmailPattern;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;396;2;405;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to unset the email pattern and make use of filter_var() instead.;;d41,396;;b1,0;;m">
				</treenode>
				<treenode node="testViewRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1971;2;1980;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testViewRender method;;d34,1971;;b1,0;;m">
				</treenode>
				<treenode node="testViewVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;773;2;784;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testViewVars method;;d32,773;;b1,0;;m">
				</treenode>
				<treenode node="testWrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;1804;2;1863;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWrap method;;d28,1804;;b1,0;;m">
				</treenode>
				<treenode node="testWrapForJapaneseEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2400;2;2416;;;;vpos;;vvoid;;r&#xA;Description&#xA;     CakeEmailTest::testWrapForJapaneseEncoding();;d47,2400;;b1,0;;m">
				</treenode>
				<treenode node="testWrapIncludeLessThanSign;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2377;2;2393;;;;vpos;;vvoid;;r&#xA;Description&#xA;     CakeEmailTest::testWrapIncludeLessThanSign();;d47,2377;;b1,0;;m">
				</treenode>
				<treenode node="testWrapLongLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2303;2;2341;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWrapLongLine();;d36,2303;;b1,0;;m">
				</treenode>
				<treenode node="testWrapWithTagsAcrossLines;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2348;2;2370;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWrapWithTagsAcrossLines();;d47,2348;;b1,0;;m">
				</treenode>
				<treenode node="testZeroOnlyLinesNotBeingEmptied;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;2423;2;2435;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testZeroOnlyLinesNotBeingEmptied();;d52,2423;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeErrorController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\CakeErrorController.php;f0;29;1;61;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     Error Handling Controller;;d48,29;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\CakeErrorController.php;f8;44;2;59;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request instance&#xA;    CakeResponse $response - Response instance;;d64,44;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\CakeErrorController.php;f29;44;37;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\CakeErrorController.php;f46;44;55;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\CakeErrorController.php;f8;36;13;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeEvent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f0;23;1;129;;;;vpos;;v;;r&#xA;Description&#xA;     Represents the transport class of events across the system. It receives a name, subject and an optional payload. The name can be any string that uniquely identifies the event across the application, while the subject represents the object that the event applies to.;;d16,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;75;2;79;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $name - Name of the event&#xA;    object $subject - the object that this event applies to (usually the object that is generating the event)&#xA;    mixed $data - any value you wish to be transported with this event to it can be read by listeners;;d67,75;;b1,0;;mstring $name;;pobject $subject;;pmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f53;75;58;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f29;75;34;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f36;75;44;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;87;2;91;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Dynamically returns the name and subject if accessed directly&#xA;&#xA;Parameters:&#xA;    string $attribute - Attribute name;;d35,87;;b1,0;;mstring $attribute;;p">
					<treenode node="attribute;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f23;87;33;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isStopped;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;125;2;127;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the event is stopped&#xA;&#xA;Return:&#xA;   True if the event is stopped;;d29,125;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;98;2;100;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the name of this event. This is usually used as the event identifier;;d24,98;;b1,0;;m">
				</treenode>
				<treenode node="stopPropagation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;116;2;118;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Stops the event from being used anymore;;d35,116;;b1,0;;m">
				</treenode>
				<treenode node="subject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;107;2;109;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the subject of this event;;d27,107;;b1,0;;m">
				</treenode>
				<treenode node="_name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f11;30;17;30;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_stopped;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f11;58;20;58;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f11;37;20;37;;;;vposobject;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;44;13;44;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php;f8;51;15;51;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeEventManager;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f0;26;1;298;;;;vpos;;v;;r&#xA;Description&#xA;     The event manager is responsible for keeping track of event listeners, passing the correct data to them, and firing them in the correct order, when associated events are triggered. You can create multiple instances of this object to manage local events or keep a single instance and pass it around to manage all events in your app.;;d23,26;;b0,0;;m">
				<treenode node="_attachSubscriber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f11;121;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Auxiliary function to attach all implemented callbacks of a CakeEventListener class instance as individual methods on this manager&#xA;&#xA;Parameters:&#xA;    CakeEventListener $subscriber - Event listener;;d69,121;;b2,0;;mCakeEventListener $subscriber;;p">
					<treenode node="subscriber;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f56;121;67;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_detachSubscriber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f11;196;2;216;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Auxiliary function to help detach all listeners provided by an object implementing CakeEventListener&#xA;&#xA;Parameters:&#xA;    CakeEventListener $subscriber - the subscriber to be detached&#xA;    string $eventKey - optional event key name to unsubscribe the listener from;;d87,196;;b2,0;;mCakeEventListener $subscriber;;pstring $eventKey;;p">
					<treenode node="eventKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f69;196;78;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subscriber;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f56;196;67;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_extractCallable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f11;149;2;157;;;;vpos;;vcallback;;r&#xA;Description&#xA;     Auxiliary function to extract and return a PHP callback type out of the callable definition from the return value of the `implementedEvents` method on a CakeEventListener&#xA;&#xA;Parameters:&#xA;    array $function - the array taken from a handler definition for an event&#xA;    CakeEventListener $object - The handler object;;d57,149;;b2,0;;marray $function;;pCakeEventListener $object;;p">
					<treenode node="function;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f37;149;46;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f48;149;55;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f8;99;2;112;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Adds a new listener to an event. Listeners&#xA;&#xA;Parameters:&#xA;    callback|CakeEventListener $callable - PHP valid callback type or instance of CakeEventListener to be called&#xA;    string $eventKey - The event unique identifier name with which the callback will be associated&#xA;    array $options - used to set the `priority` and `passParams` flags to the listener;;d73,99;;b1,0;;mcallback|CakeEventListener $callable;;pstring $eventKey;;parray $options;;p">
					<treenode node="callable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f24;99;33;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="eventKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f35;99;44;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f53;99;61;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="detach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f8;166;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Removes a listener from the active listeners.&#xA;&#xA;Parameters:&#xA;    callback|CakeEventListener $callable - any valid PHP callback type or an instance of CakeEventListener&#xA;    string $eventKey - The event unique identifier name with which the callback has been associated;;d53,166;;b1,0;;mcallback|CakeEventListener $callable;;pstring $eventKey;;p">
					<treenode node="callable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f24;166;33;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="eventKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f35;166;44;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f8;225;2;252;;;;vpos;;vCakeEvent;;r&#xA;Description&#xA;     Dispatches a new event to all configured listeners&#xA;&#xA;Parameters:&#xA;    string|CakeEvent $event - the event key name or instance of CakeEvent;;d34,225;;b1,0;;mstring|CakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f26;225;32;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="instance;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f15;67;2;77;;;;vpos;;vCakeEventManager;;r&#xA;Description&#xA;     Returns the globally available instance of a CakeEventManager this is used for dispatching events attached from outside the scope other managers were created. Usually for creating hook systems or inter-class communication&#xA;&#xA;Parameters:&#xA;    CakeEventManager $manager - Optional event manager instance&#xA;&#xA;Return:&#xA;   the global event manager;;d50,67;;b1,5;;mCakeEventManager $manager;;p">
					<treenode node="manager;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f33;67;41;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listeners;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f8;260;2;284;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a list of all listeners for an eventKey in the order they should be called&#xA;&#xA;Parameters:&#xA;    string $eventKey - Event key;;d38,260;;b1,0;;mstring $eventKey;;p">
					<treenode node="eventKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f27;260;36;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prioritisedListeners;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f8;292;2;297;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the listeners for the specified event key indexed by priority&#xA;&#xA;Parameters:&#xA;    string $eventKey - Event key;;d49,292;;b1,0;;mstring $eventKey;;p">
					<treenode node="eventKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f38;292;47;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_generalManager;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f18;40;34;40;;;;vposCakeEventManager;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_isGlobal;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f11;54;21;54;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_listeners;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f11;47;22;47;;;;vposobject;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="defaultPriority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php;f15;33;31;33;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="CakeEventManagerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f0;92;1;534;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Tests the CakeEventManager class functionality;;d48,92;;b0,0;;m">
				<treenode node="onMyEvent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;497;2;499;;;;vpos;;v;;r&#xA;Description&#xA;     test callback;;d35,497;;b1,0;;mevent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f27;497;33;497;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testAttachListeners;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;99;2;124;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the attach() method for a single event key in multiple queues;;d39,99;;b1,0;;m">
				</treenode>
				<treenode node="testAttachMultipleEventKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;131;2;146;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the attach() method for multiple event key in multiple queues;;d47,131;;b1,0;;m">
				</treenode>
				<treenode node="testAttachSubscriber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;327;2;349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests subscribing a listener object and firing the events it subscribed to;;d40,327;;b1,0;;m">
				</treenode>
				<treenode node="testDetach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;153;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests detaching an event from a event key queue;;d30,153;;b1,0;;m">
				</treenode>
				<treenode node="testDetachFromAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;177;2;189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests detaching an event from all event queues;;d37,177;;b1,0;;m">
				</treenode>
				<treenode node="testDetachSubscriber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;356;2;371;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests subscribing a listener object and firing the events it subscribed to;;d40,356;;b1,0;;m">
				</treenode>
				<treenode node="testDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;197;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests event dispatching;;d32,197;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchFalseStopsEvent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;260;2;280;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that returning false in a callback stops the event;;d47,260;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchGlobalBeforeLocal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;469;2;492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests event dispatching using priorities;;d49,469;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchLocalHandledByGlobal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;506;2;513;;;;vpos;;v;;r&#xA;Description&#xA;     Tests events dispatched by a local manager can be handled by handler registered in the global event manager;;d52,506;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchPassingParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;306;2;317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests event dispatching with passed params;;d45,306;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchPrioritized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;288;2;298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests event dispatching using priorities;;d43,288;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchPrioritizedWithGlobal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;437;2;461;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests event dispatching using priorities;;d53,437;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchReturnValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;232;2;252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests event dispatching with a return value;;d43,232;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchWithGlobal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;392;2;401;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the global event manager gets the event too from any other manager;;d42,392;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchWithGlobalAndLocalEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;522;2;532;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that events are dispatched properly when there are global and local listeners at the same priority.;;d56,522;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchWithKeyName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;215;2;224;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests event dispatching using event key name;;d43,215;;b1,0;;m">
				</treenode>
				<treenode node="testGlobalDispatcherGetter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;378;2;384;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to get/set the manager singleton;;d46,378;;b1,0;;m">
				</treenode>
				<treenode node="testStopPropagation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;409;2;429;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that stopping an event will not notify the rest of the listeners;;d39,409;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeEventTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventTest.php;f0;26;1;89;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Tests the CakeEvent class functionality;;d41,26;;b0,0;;m">
				<treenode node="testEventData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventTest.php;f8;73;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to get/set custom data in a event;;d33,73;;b1,0;;m">
				</treenode>
				<treenode node="testEventDirectPropertyAccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventTest.php;f8;84;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to get the name and subject directly;;d49,84;;b1,0;;m">
				</treenode>
				<treenode node="testName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventTest.php;f8;34;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the name() method;;d28,34;;b1,0;;m">
				</treenode>
				<treenode node="testPropagation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventTest.php;f8;60;2;65;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the event propagation stopping property;;d35,60;;b1,0;;m">
				</treenode>
				<treenode node="testSubject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventTest.php;f8;46;2;52;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the subject() method;;d31,46;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeEventTestListener;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f0;25;1;57;;;;vpos;;v;;r&#xA;Description&#xA;     Mock class used to test event dispatching;;d28,25;;b0,0;;m">
				<treenode node="listenerFunction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;34;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test function to be used in event dispatching;;d36,34;;b1,0;;m">
				</treenode>
				<treenode node="secondListenerFunction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;43;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test function to be used in event dispatching;;d42,43;;b1,0;;m">
				</treenode>
				<treenode node="stopListener;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;53;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Auxiliary function to help in stopPropagation testing&#xA;&#xA;Parameters:&#xA;    CakeEvent $event;;d38,53;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f30;53;36;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="callStack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;27;18;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;205;1;249;;;;vpos;;vCakeBaseException;;c;;r&#xA;Description&#xA;     CakeException is used a base class for CakePHP's internal exceptions. In general framework errors are interpreted as 500 code errors.;;d46,205;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;232;2;238;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    string|array $message - Either the string of the error message, or an array of attributes&#xA;    int $code - The code of the error, is also the HTTP status code for the error;;d52,232;;b1,0;;mstring|array $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f39;232;44;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;232;37;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;245;2;247;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the passed in attributes;;d33,245;;b1,0;;m">
				</treenode>
				<treenode node="_attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;213;23;213;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;220;28;220;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeFixtureManager;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f0;26;1;305;;;;vpos;;v;;r&#xA;Description&#xA;     A factory class to manage the life cycle of test fixtures;;d25,26;;b0,0;;m">
				<treenode node="_initDb;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;87;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initializes this class with a DataSource object to use as default for all fixtures;;d30,87;;b2,0;;m">
				</treenode>
				<treenode node="_loadFixtures;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;121;2;174;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Looks for fixture files and instantiates the classes accordingly&#xA;&#xA;Parameters:&#xA;    array $fixtures - the fixture names to load using the notation {type};;d45,121;;b2,0;;marray $fixtures;;p">
					<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f34;121;43;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseFixturePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;104;2;112;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the fixture path included in test cases, to get the fixture class name, and the real fixture path including sub-directories&#xA;&#xA;Parameters:&#xA;    string $fixturePath - the fixture path to parse&#xA;&#xA;Return:&#xA;   containing fixture class name and optional additional path;;d52,104;;b2,0;;mstring $fixturePath;;p">
					<treenode node="fixturePath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f38;104;50;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setupTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;184;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Runs the drop and create commands on the fixtures if necessary.&#xA;&#xA;Parameters:&#xA;    CakeTestFixture $fixture - the fixture object to create&#xA;    DataSource $db - the datasource instance to use&#xA;    bool $drop - whether drop the fixture if it is already created or not;;d68,184;;b2,0;;mCakeTestFixture $fixture;;pDataSource $db;;pbool $drop;;p">
					<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f42;184;45;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="drop;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f54;184;59;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fixture;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f32;184;40;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fixturize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f8;62;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Inspects the test to look for unloaded fixtures and loads them&#xA;&#xA;Parameters:&#xA;    CakeTestCase $test - the test case to inspect;;d34,62;;b1,0;;mCakeTestCase $test;;p">
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f27;62;32;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f8;216;2;236;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Creates the fixtures tables and inserts data on them.&#xA;&#xA;Parameters:&#xA;    CakeTestCase $test - the test to inspect for fixture loading;;d42,216;;b1,0;;mCakeTestCase $test;;p">
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f35;216;40;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadSingle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f8;268;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Creates a single fixture table and loads data into it.&#xA;&#xA;Parameters:&#xA;    string $name - of the fixture&#xA;    DataSource $db - DataSource instance or leave null to get DataSource from the fixture&#xA;    bool $dropTables - Whether or not tables should be dropped and re-created;;d67,268;;b1,0;;mstring $name;;pDataSource $db;;pbool $dropTables;;p">
					<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f35;268;38;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dropTables;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f47;268;58;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f28;268;33;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="shutDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f8;291;2;303;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Drop all fixture tables loaded by this class;;d28,291;;b1,0;;m">
				</treenode>
				<treenode node="unload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f8;244;2;257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Truncates the fixtures tables&#xA;&#xA;Parameters:&#xA;    CakeTestCase $test - the test to inspect for fixture unloading;;d44,244;;b1,0;;mCakeTestCase $test;;p">
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f37;244;42;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;40;15;40;;;;vposDataSource;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_fixtureMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;54;23;54;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_initialized;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;33;24;33;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_loaded;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php;f11;47;19;47;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeFixtureManagerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\Fixture\CakeFixtureManagerTest.php;f0;27;1;102;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test Case for CakeFixtureManager class;;d50,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\Fixture\CakeFixtureManagerTest.php;f8;34;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     reset environment.;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\Fixture\CakeFixtureManagerTest.php;f8;44;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,44;;b1,0;;m">
				</treenode>
				<treenode node="testLoadSingleTruncatesTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\Fixture\CakeFixtureManagerTest.php;f8;81;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadSingleTruncatesTable;;d48,81;;b1,0;;m">
				</treenode>
				<treenode node="testLoadTruncatesTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\Fixture\CakeFixtureManagerTest.php;f8;54;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadTruncatesTable;;d42,54;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeHtmlReporter;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f0;25;1;415;;;;vpos;;vCakeBaseReporter;;c;;r&#xA;Description&#xA;     CakeHtmlReporter Reports Results of TestSuites and Test Cases in an HTML format / context.;;d48,25;;b0,0;;m">
				<treenode node="_getQueryLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f11;392;2;413;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the query string formatted for ouput in links;;d36,392;;b2,0;;m">
				</treenode>
				<treenode node="_getStackTrace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f11;359;2;372;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets a formatted stack trace.&#xA;&#xA;Parameters:&#xA;    Exception $e - Exception to get a stack trace for&#xA;&#xA;Return:&#xA;   Generated stack trace;;d49,359;;b2,0;;mException $e;;p">
					<treenode node="e;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f45;359;47;359;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_htmlEntities;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f11;349;2;351;;;;vpos;;vstring;;r&#xA;Description&#xA;     Character set adjusted entity conversion.&#xA;&#xA;Parameters:&#xA;    string $message - Plain text or Unicode message&#xA;&#xA;Return:&#xA;   Browser readable message;;d44,349;;b2,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f34;349;42;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_paintLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f11;186;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Renders the links that for accessing things in the test suite.;;d34,186;;b2,0;;m">
				</treenode>
				<treenode node="_queryString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f11;215;2;223;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convert an array of parameters into a query string url&#xA;&#xA;Parameters:&#xA;    array $url - Url hash to be converted&#xA;&#xA;Return:&#xA;   Converted url query string;;d39,215;;b2,0;;marray $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f33;215;37;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintCoverage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;174;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints a code coverage report.&#xA;&#xA;Parameters:&#xA;    array $coverage - The coverage data;;d48,174;;b1,0;;marray $coverage;;p">
					<treenode node="coverage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f37;174;46;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintDocumentEnd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;230;2;236;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the end of the document html.;;d36,230;;b1,0;;m">
				</treenode>
				<treenode node="paintDocumentStart;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;58;2;62;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the document start content contained in header.php;;d38,58;;b1,0;;m">
				</treenode>
				<treenode node="paintException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;306;2;317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints a PHP exception.&#xA;&#xA;Parameters:&#xA;    Exception $message - Exception to display&#xA;    mixed $test - The test that failed;;d49,306;;b1,0;;mException $message;;pmixed $test;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f32;306;40;306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f42;306;47;306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;248;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the test failure with a breadcrumbs trail of the nesting test suites below the top level test.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_AssertionFailedError $message - Failure object displayed in&#xA;    mixed $test - The test case to paint a failure for;;d44,248;;b1,0;;mPHPUnit_Framework_AssertionFailedError $message;;pmixed $test;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f27;248;35;248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f37;248;42;248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintFooter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;135;2;166;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the end of the test with a summary of the passes and failures.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestResult $result - Result object;;d38,135;;b1,0;;mPHPUnit_Framework_TestResult $result;;p">
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f29;135;36;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintFormattedMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;339;2;341;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints formatted text such as dumped variables.&#xA;&#xA;Parameters:&#xA;    string $message - Text to show;;d49,339;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f39;339;47;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;33;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the top of the web page setting the title to the name of the starting test.;;d31,33;;b1,0;;m">
				</treenode>
				<treenode node="paintPass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;289;2;297;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the test pass with a breadcrumbs trail of the nesting test suites below the top level test.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $test - Test method that just passed&#xA;    float $time - time spent to run the test method;;d71,289;;b1,0;;mPHPUnit_Framework_Test $test;;pfloat $time;;p">
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f50;289;55;289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f57;289;62;289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintSkip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;326;2;331;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prints the message for skipping tests.&#xA;&#xA;Parameters:&#xA;    string $message - Text of skip condition&#xA;    PHPUnit_Framework_TestCase $test - the test method skipped;;d44,326;;b1,0;;mstring $message;;pPHPUnit_Framework_TestCase $test;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f27;326;35;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f37;326;42;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintTestMenu;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;70;2;75;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the menu on the left side of the test suite interface. Contains all of the various plugin, core, and app buttons.;;d33,70;;b1,0;;m">
				</treenode>
				<treenode node="sendContentType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;47;2;51;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the content-type header so it is in the correct encoding.;;d35,47;;b1,0;;m">
				</treenode>
				<treenode node="sendNoCacheHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;118;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Send the headers necessary to ensure the page is reloaded on every request. Otherwise you could be scratching your head over out of date test data.;;d38,118;;b1,0;;m">
				</treenode>
				<treenode node="startTestSuite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;380;2;385;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A test suite started.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestSuite $suite - The test suite to start;;d68,380;;b1,0;;mPHPUnit_Framework_TestSuite $suite;;p">
					<treenode node="suite;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f60;380;66;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCaseList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php;f8;82;2;109;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Retrieves and paints the list of tests cases in an HTML format.;;d32,82;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f0;74;1;544;;;;vpos;;v;;r&#xA;Description&#xA;     Logs messages to configured Log adapters. One or more adapters can be configured using CakeLogs's methods. If you don't configure any adapters, and write to the logs a default FileLog will be autoconfigured for you.;;d14,74;;b0,0;;m">
				<treenode node="_init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f18;119;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     initialize ObjectCollection;;d35,119;;b2,5;;m">
				</treenode>
				<treenode node="alert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;468;2;470;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log alert messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d58,468;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f30;468;38;468;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f40;468;46;468;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;188;2;200;;;;vpos;;vbool;;r&#xA;Description&#xA;     Configure and add a new logging stream to CakeLog You can use add loggers from app/Log/Engine use app.loggername, or any plugin/Log/Engine using plugin.loggername.&#xA;&#xA;Parameters:&#xA;    string $key - The keyname for this logger, used to remove the&#xA;    array $config - Array of configuration information for the logger&#xA;&#xA;Return:&#xA;   success of configuration;;d46,188;;b1,5;;mstring $key;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f37;188;44;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f31;188;35;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configured;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;207;2;212;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the keynames of the currently active streams&#xA;&#xA;Return:&#xA;   Array of configured log streams;;d37,207;;b1,5;;m">
				</treenode>
				<treenode node="critical;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;480;2;482;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log critical messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d61,480;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f33;480;41;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f43;480;49;480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="debug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;528;2;530;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log debug messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d58,528;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f30;528;38;528;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f40;528;46;528;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultLevels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;282;2;286;;;;vpos;;varray;;r&#xA;Description&#xA;     Reset log levels to the original value&#xA;&#xA;Return:&#xA;   Default log levels;;d40,282;;b1,5;;m">
				</treenode>
				<treenode node="disable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;346;2;354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Disable stream. Disabling a stream will prevent that log stream from receiving any messages until its re-enabled.&#xA;&#xA;Parameters:&#xA;    string $streamName - to disable;;d45,346;;b1,5;;mstring $streamName;;p">
					<treenode node="streamName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f32;346;43;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;295;2;300;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Removes a stream from the active streams. Once a stream has been removed it will no longer have messages sent to it.&#xA;&#xA;Parameters:&#xA;    string $streamName - Key name of a configured stream to remove;;d42,295;;b1,5;;mstring $streamName;;p">
					<treenode node="streamName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f29;295;40;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="emergency;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;456;2;458;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log emergency messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d62,456;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f34;456;42;456;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f44;456;50;456;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;327;2;335;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Enable stream. Streams that were previously disabled can be re-enabled with this method.&#xA;&#xA;Parameters:&#xA;    string $streamName - to enable;;d44,327;;b1,5;;mstring $streamName;;p">
					<treenode node="streamName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f31;327;42;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;309;2;317;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether $streamName is enabled&#xA;&#xA;Parameters:&#xA;    string $streamName - to check;;d45,309;;b1,5;;mstring $streamName;;p">
					<treenode node="streamName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f32;309;43;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="error;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;492;2;494;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log error messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d58,492;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f30;492;38;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f40;492;46;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="info;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;540;2;542;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log info messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d57,540;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f29;540;37;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f39;540;45;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="levels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;260;2;275;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets/sets log levels&#xA;&#xA;Parameters:&#xA;    array $levels - array&#xA;    bool $append - true to append, false to replace&#xA;&#xA;Return:&#xA;   Active log levels;;d66,260;;b1,5;;marray $levels;;pbool $append;;p">
					<treenode node="append;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f50;260;57;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="levels;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f31;260;38;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="notice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;516;2;518;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log notice messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d59,516;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f31;516;39;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f41;516;47;516;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stream;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;363;2;371;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the logging engine from the active streams.&#xA;&#xA;Parameters:&#xA;    string $streamName - Key name of a configured stream to get&#xA;&#xA;Return:&#xA;   instance of BaseLog or false if not found;;d44,363;;b1,5;;mstring $streamName;;p">
					<treenode node="streamName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f31;363;42;363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="warning;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;504;2;506;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to log warning messages&#xA;&#xA;Parameters:&#xA;    string $message - log message&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d60,504;;b1,5;;mstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f32;504;40;504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f42;504;48;504;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f15;404;2;446;;;;vpos;;vbool;;r&#xA;Description&#xA;     Writes the given message and type to all of the configured log adapters. Configured adapters are passed both the $type and $message variables. $type is one of the following strings/values.&#xA;&#xA;Parameters:&#xA;    int|string $type - Type of message being written&#xA;    string $message - Message content to log&#xA;    string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success;;d65,404;;b1,5;;mint|string $type;;pstring $message;;pstring|array $scope;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f37;404;45;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f47;404;53;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f30;404;35;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f18;81;30;81;;;;vposLogEngineCollection;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_defaultLevels;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f18;89;33;89;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_levelMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f18;112;28;112;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_levels;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php;f18;105;26;105;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="CakeLogException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;537;1;538;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for CakeLog. This exception will be thrown from CakeLog when it encounters an error.;;d45,537;;b0,0;;m">
			</treenode>
			<treenode node="CakeLogTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f0;26;1;746;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeLogTest class;;d39,26;;b0,0;;m">
				<treenode node="_deleteLogs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f11;332;2;351;;;;vpos;;vvoid;;r&#xA;Description&#xA;     delete logs;;d34,332;;b2,0;;m">
				</treenode>
				<treenode node="_resetLogConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f11;314;2;325;;;;vpos;;vvoid;;r&#xA;Description&#xA;     resets log config;;d38,314;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;33;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start test callback, clears all streams enabled.;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="testBogusTypeAndScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;511;2;537;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bogus type and scope;;d41,511;;b1,0;;m">
				</treenode>
				<treenode node="testConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;147;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test configuring log streams;;d30,147;;b1,0;;m">
				</treenode>
				<treenode node="testConvenienceMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;592;2;661;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test convenience methods;;d42,592;;b1,0;;m">
				</treenode>
				<treenode node="testConvenienceScopedLogging;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;544;2;585;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test scoped logging with convenience methods;;d48,544;;b1,0;;m">
				</treenode>
				<treenode node="testCustomLevelWrites;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;700;2;744;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test writing log files with custom levels;;d41,700;;b1,0;;m">
				</treenode>
				<treenode node="testDrop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;171;2;182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     explicit tests for drop();;d28,171;;b1,0;;m">
				</treenode>
				<treenode node="testImportingLoggerFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;77;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test all the errors from failed logger imports;;d46,77;;b1,0;;m">
				</treenode>
				<treenode node="testImportingLoggers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;46;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test importing loggers from app/libs and plugins.;;d40,46;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidKeyName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;111;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test config() with invalid key name;;d38,111;;b1,0;;m">
				</treenode>
				<treenode node="testLevelCustomization;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;668;2;693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test levels customization;;d42,668;;b1,0;;m">
				</treenode>
				<treenode node="testLogFileWriting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;189;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLogFileWriting method;;d38,189;;b1,0;;m">
				</treenode>
				<treenode node="testNoStreamListenting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;130;2;140;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that CakeLog does not auto create logs when no streams are there to listen.;;d42,130;;b1,0;;m">
				</treenode>
				<treenode node="testNotImplementingInterface;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;121;2;123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that loggers have to implement the correct interface.;;d48,121;;b1,0;;m">
				</treenode>
				<treenode node="testScopedLogging;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;444;2;504;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test scoped logging;;d37,444;;b1,0;;m">
				</treenode>
				<treenode node="testScopedLoggingBC;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;358;2;405;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test backward compatible scoped logging;;d39,358;;b1,0;;m">
				</treenode>
				<treenode node="testScopedLoggingExclusive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;412;2;437;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that scopes are exclusive and don't bleed.;;d46,412;;b1,0;;m">
				</treenode>
				<treenode node="testSelectiveLoggingByLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;215;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test selective logging by level/type;;d47,215;;b1,0;;m">
				</treenode>
				<treenode node="testStreamDisable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;277;2;287;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test disable;;d37,277;;b1,0;;m">
				</treenode>
				<treenode node="testStreamDisableInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;305;2;307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test disable invalid stream;;d44,305;;b1,0;;m">
				</treenode>
				<treenode node="testStreamEnable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;261;2;269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test enable;;d36,261;;b1,0;;m">
				</treenode>
				<treenode node="testStreamEnabledInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;295;2;297;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test enabled() invalid stream;;d44,295;;b1,0;;m">
				</treenode>
				<treenode node="testValidKeyName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;86;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test config() with valid key name;;d36,86;;b1,0;;m">
				</treenode>
				<treenode node="testValidKeyNameLogSuffix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php;f8;98;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test config() with valid key name including the deprecated Log suffix;;d45,98;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeNumber;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f0;28;1;415;;;;vpos;;v;;r&#xA;Description&#xA;     Number helper library.;;d17,28;;b0,0;;m">
				<treenode node="_numberFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f18;266;2;285;;;;vpos;;vstring;;r&#xA;Description&#xA;     Alternative number_format() to accommodate multibyte decimals and thousands &lt; PHP 5.4&#xA;&#xA;Parameters:&#xA;    float $value - Value to format&#xA;    int $places - Decimal places to use&#xA;    string $decimals - Decimal position string&#xA;    string $thousands - Thousands separator string;;d97,266;;b2,5;;mfloat $value;;pint $places;;pstring $decimals;;pstring $thousands;;p">
					<treenode node="decimals;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f62;266;71;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="places;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f49;266;56;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="thousands;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f79;266;89;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f41;266;47;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;397;2;399;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a currency format to the Number helper. Makes reusing currency formats easier.&#xA;&#xA;Parameters:&#xA;    string $formatName - The format name to be used in the future&#xA;    array $options - The array of options for this format;;d57,397;;b1,5;;mstring $formatName;;parray $options;;p">
					<treenode node="formatName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f34;397;45;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f47;397;55;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="currency;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;324;2;376;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a number into a currency format.&#xA;&#xA;Parameters:&#xA;    float $value - Value to format&#xA;    string $currency - Shortcut to default options&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   Number formatted as a currency;;d79,324;;b1,5;;mfloat $value;;pstring $currency;;parray $options;;p">
					<treenode node="currency;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f41;324;50;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f59;324;67;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f33;324;39;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultCurrency;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;408;2;413;;;;vpos;;vstring;;r&#xA;Description&#xA;     Getter/setter for default currency&#xA;&#xA;Parameters:&#xA;    string $currency - Default currency string used by currency() if $currency argument is not provided&#xA;&#xA;Return:&#xA;   Currency;;d58,408;;b1,5;;mstring $currency;;p">
					<treenode node="currency;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f40;408;49;408;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;195;2;230;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a number into a currency format.&#xA;&#xA;Parameters:&#xA;    float $value - A floating point number&#xA;    int $options - If integer then places, if string then before, if (,&#xA;&#xA;Return:&#xA;   formatted number;;d57,195;;b1,5;;mfloat $value;;pint $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f39;195;47;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f31;195;37;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatDelta;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;249;2;255;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a number into a currency format to show deltas (signed differences in value).&#xA;&#xA;Parameters:&#xA;    float $value - A floating point number&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   formatted delta;;d64,249;;b1,5;;mfloat $value;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f44;249;52;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f36;249;42;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fromReadableSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;137;2;163;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Converts filesize from human readable string to bytes&#xA;&#xA;Parameters:&#xA;    string $size - Size in human readable string like '5MB', '5M', '500B', '50kb' etc&#xA;    mixed $default - Value to be returned when invalid size was used, for example 'Unknown type'&#xA;&#xA;Return:&#xA;   Number of bytes as integer on success, `$default` on failure if not false;;d66,137;;b1,5;;mstring $size;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f48;137;56;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="size;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f41;137;46;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="precision;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;102;2;104;;;;vpos;;vfloat;;r&#xA;Description&#xA;     Formats a number with a level of precision.&#xA;&#xA;Parameters:&#xA;    float $value - A floating point number&#xA;    int $precision - The precision of the returned number&#xA;&#xA;Return:&#xA;   Formatted float;;d58,102;;b1,5;;mfloat $value;;pint $precision;;p">
					<treenode node="precision;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f42;102;52;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f34;102;40;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toPercentage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;178;2;184;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a number into a percentage string.&#xA;&#xA;Parameters:&#xA;    float $value - A floating point number&#xA;    int $precision - The precision of the returned number&#xA;    array $options - Options&#xA;&#xA;Return:&#xA;   Percentage string;;d81,178;;b1,5;;mfloat $value;;pint $precision;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f61;178;69;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="precision;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f45;178;55;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f37;178;43;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toReadableSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f15;113;2;126;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted-for-humans file size.&#xA;&#xA;Parameters:&#xA;    int $size - Size in bytes&#xA;&#xA;Return:&#xA;   Human readable size;;d46,113;;b1,5;;mint $size;;p">
					<treenode node="size;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f39;113;44;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_currencies;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f18;36;30;36;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_currencyDefaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f18;74;36;74;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_defaultCurrency;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f18;85;35;85;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_numberFormatSupport;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php;f18;92;39;92;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="CakeNumberMock;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f0;39;1;40;;;;vpos;;v;;r&#xA;Description&#xA;     CakeNumberMock class;;d21,39;;b0,0;;m">
			</treenode>
			<treenode node="CakeNumberTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f0;26;1;788;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeNumberTest class;;d42,26;;b0,0;;m">
				<treenode node="filesizes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;766;2;786;;;;vpos;;varray;;r&#xA;Description&#xA;     filesizes dataprovider;;d29,766;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;33;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;43;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,43;;b1,0;;m">
				</treenode>
				<treenode node="testCurrency;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;186;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test currency method.;;d32,186;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyAddFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;353;2;372;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test adding currency format options to the number helper;;d41,353;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyCentsNegative;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;499;2;525;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrencyCentsNegative method;;d45,499;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyCentsPositive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;478;2;492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrencyCentsPositive method;;d45,478;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyFractionSymbol;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;340;2;346;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the default fraction handling does not cause issues.;;d46,340;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyNegative;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;445;2;471;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrencyNegative method;;d40,445;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;557;2;595;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrencyOptions method;;d39,557;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyPositive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;412;2;438;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrencyPositive method;;d40,412;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyWithFractionAndPlaces;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;307;2;333;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test currency format with places and fraction exponents. Places should only matter for non fraction values and vice versa.;;d53,307;;b1,0;;m">
				</treenode>
				<treenode node="testCurrencyZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;532;2;550;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrencyZero method;;d36,532;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultCurrency;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;379;2;405;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test default currency;;d39,379;;b1,0;;m">
				</treenode>
				<treenode node="testFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;53;2;87;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormatAndCurrency method;;d30,53;;b1,0;;m">
				</treenode>
				<treenode node="testFormatDelta;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;94;2;131;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormatDelta method;;d35,94;;b1,0;;m">
				</treenode>
				<treenode node="testFromReadableSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;746;2;749;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFromReadableSize;;d58,746;;b1,0;;mparams;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f47;746;56;746;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f38;746;45;746;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFromReadableSizeException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;757;2;759;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFromReadableSize;;d49,757;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;138;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteFormat;;d39,138;;b1,0;;m">
				</treenode>
				<treenode node="testPrecisionLocalized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;683;2;691;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test precision() with locales;;d42,683;;b1,0;;m">
				</treenode>
				<treenode node="testReadableSizeLocalized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;665;2;676;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test toReadableSize() with locales;;d45,665;;b1,0;;m">
				</treenode>
				<treenode node="testToPercentage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;698;2;738;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToPercentage method;;d36,698;;b1,0;;m">
				</treenode>
				<treenode node="testToReadableSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php;f8;602;2;658;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToReadableSize method;;d38,602;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakePlugin;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f0;25;1;249;;;;vpos;;v;;r&#xA;Description&#xA;     CakePlugin is responsible for loading and unloading plugins. It also can retrieve plugin paths and load their bootstrap and routes files.;;d17,25;;b0,0;;m">
				<treenode node="_includeFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f18;242;2;247;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Include file, ignoring include error if needed if file is missing&#xA;&#xA;Parameters:&#xA;    string $file - File to include&#xA;    bool $ignoreMissing - Whether to ignore include error for missing files;;d71,242;;b2,5;;mstring $file;;pbool $ignoreMissing;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f40;242;45;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ignoreMissing;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f47;242;61;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f15;152;2;178;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Loads the bootstrapping files for a plugin, or calls the initialization setup in the configuration&#xA;&#xA;Parameters:&#xA;    string $plugin - name of the plugin;;d43,152;;b1,5;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f34;152;41;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f15;67;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Loads a plugin and optionally loads bootstrapping, routing files or loads an initialization function&#xA;&#xA;Parameters:&#xA;    string|array $plugin - name of the plugin to be loaded in CamelCase format or array or plugins to load&#xA;    array $config - configuration options for the plugin;;d57,67;;b1,5;;mstring|array $plugin;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f38;67;45;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f29;67;36;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f15;120;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Will load all the plugins located in the configured plugins folders If passed an options array, it will be used as a common default for all plugins to be loaded It is possible to set specific defaults for each plugins in the options array. Examples:&#xA;&#xA;Parameters:&#xA;    array $options - Options list;;d52,120;;b1,5;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f32;120;40;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loaded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f15;212;2;219;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns true if the plugin $plugin is already loaded If plugin is null, it will return a list of all loaded plugins&#xA;&#xA;Parameters:&#xA;    string $plugin - Plugin name to check&#xA;&#xA;Return:&#xA;   boolean true if $plugin is already loaded;;d47,212;;b1,5;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f31;212;38;212;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="path;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f15;138;2;143;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the filesystem path for a plugin&#xA;&#xA;Parameters:&#xA;    string $plugin - name of the plugin in CamelCase format&#xA;&#xA;Return:&#xA;   path to the plugin folder;;d38,138;;b1,5;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f29;138;36;138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="routes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f15;187;2;202;;;;vpos;;vbool;;r&#xA;Description&#xA;     Loads the routes file for a plugin, or all plugins configured to load their respective routes file&#xA;&#xA;Parameters:&#xA;    string $plugin - name of the plugin, if null will operate on all plugins having enabled the;;d47,187;;b1,5;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f31;187;38;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f15;227;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Forgets a loaded plugin or all of them if first parameter is null&#xA;&#xA;Parameters:&#xA;    string $plugin - name of the plugin to forget;;d47,227;;b1,5;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f31;227;38;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_plugins;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php;f18;32;27;32;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="CakePluginTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f0;24;1;298;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakePluginTest class;;d42,24;;b0,0;;m">
				<treenode node="pluginBootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;295;2;297;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Auxiliary function to test plugin bootstrap callbacks;;d35,295;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;31;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the plugins folder for this test;;d25,31;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;44;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Reverts the changes done to the environment while testing;;d28,44;;b1,0;;m">
				</treenode>
				<treenode node="testCallbackBootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;163;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to load plugin bootstrap by calling a callback function;;d41,163;;b1,0;;m">
				</treenode>
				<treenode node="testIgnoreMissingFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;185;2;192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test ignoring missing bootstrap/routes file;;d42,185;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;233;2;237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that CakePlugin::loadAll() will load all plugins in the configured folder;;d31,233;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAllWithDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;244;2;252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that CakePlugin::loadAll() will load all plugins in the configured folder with bootstrap loading;;d43,244;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAllWithDefaultsAndOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;260;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that CakePlugin::loadAll() will load all plugins in the configured folder with defaults and merges in global defaults.;;d54,260;;b1,0;;m">
				</treenode>
				<treenode node="testLoadAllWithDefaultsAndOverrideComplex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;278;2;288;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that CakePlugin::loadAll() will load all plugins in the configured folder with defaults and overrides for a plugin;;d61,278;;b1,0;;m">
				</treenode>
				<treenode node="testLoadMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;112;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading multiple plugins at once;;d36,112;;b1,0;;m">
				</treenode>
				<treenode node="testLoadMultipleWithDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;123;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading multiple plugins and their bootstrap files;;d48,123;;b1,0;;m">
				</treenode>
				<treenode node="testLoadMultipleWithDefaultsAndOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;136;2;145;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading multiple plugins with default loading params and some overrides;;d59,136;;b1,0;;m">
				</treenode>
				<treenode node="testLoadMultipleWithDefaultsMissingFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;175;2;178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that loading a missing routes file throws a warning;;d59,175;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNotFound;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;200;2;202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that CakePlugin::load() throws an exception on unknown plugin;;d36,200;;b1,0;;m">
				</treenode>
				<treenode node="testLoadSingle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;54;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading a single plugin;;d34,54;;b1,0;;m">
				</treenode>
				<treenode node="testLoadSingleWithBootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;87;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading a plugin and its bootstrap file;;d47,87;;b1,0;;m">
				</treenode>
				<treenode node="testLoadSingleWithBootstrapAndRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;98;2;105;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading a plugin with bootstrap file and routes file;;d56,98;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleBootstrapFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;152;2;156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to load multiple bootstrap files at once;;d46,152;;b1,0;;m">
				</treenode>
				<treenode node="testPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;209;2;216;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that CakePlugin::path() returns the correct path for the loaded plugins;;d28,209;;b1,0;;m">
				</treenode>
				<treenode node="testPathNotFound;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;224;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that CakePlugin::path() throws an exception on unknown plugin;;d36,224;;b1,0;;m">
				</treenode>
				<treenode node="testUnload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php;f8;66;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests unloading plugins;;d30,66;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeRequest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f0;29;1;1039;;;;vpos;;vArrayAccess;;c;;r&#xA;Description&#xA;     A class that helps wrap Request information and particulars about a single request. Provides methods commonly used to introspect on the request headers and request body.;;d41,29;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;443;2;449;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Missing method handler, handles wrapping older style isAjax() type methods&#xA;&#xA;Parameters:&#xA;    string $name - The method called&#xA;    array $params - Array of parameters for the method call;;d40,443;;b1,0;;mstring $name;;parray $params;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f24;443;29;443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f31;443;38;443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;130;2;146;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $url - Trimmed URL string to use&#xA;    bool $parseEnvironment - Set to false to not auto parse the environment;;d68,130;;b1,0;;mstring $url;;pbool $parseEnvironment;;p">
					<treenode node="parseEnvironment;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f42;130;59;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f29;130;33;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;459;2;464;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Magic get method allows access to parsed routing parameters directly on the object.&#xA;&#xA;Parameters:&#xA;    string $name - The property being accessed&#xA;&#xA;Return:&#xA;   Either the value of the parameter or null;;d30,459;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f23;459;28;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__isset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;473;2;475;;;;vpos;;vbool;;r&#xA;Description&#xA;     Magic isset method allows isset/empty checks on routing parameters.&#xA;&#xA;Parameters:&#xA;    string $name - The property being accessed&#xA;&#xA;Return:&#xA;   Existence;;d32,473;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f25;473;30;473;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_base;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;280;2;336;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a base URL and sets the proper webroot&#xA;&#xA;Return:&#xA;   Base URL;;d28,280;;b2,0;;m">
				</treenode>
				<treenode node="_parseAcceptWithQualifier;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f18;796;2;824;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse Accept* headers with qualifier options.&#xA;&#xA;Parameters:&#xA;    string $header - Header to parse;;d62,796;;b2,5;;mstring $header;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f53;796;60;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_processFileData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;368;2;381;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Recursively walks the FILES array restructuring the data into something sane and useable.&#xA;&#xA;Parameters:&#xA;    string $path - The dot separated path to insert $data into&#xA;    array $data - The data to traverse/insert&#xA;    string $field - The terminal field name, which is the top level key in $_FILES;;d59,368;;b2,0;;mstring $path;;parray $data;;pstring $field;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f44;368;49;368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f51;368;57;368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f37;368;42;368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_processFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;343;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Process $_FILES and move things into the object.;;d36,343;;b2,0;;m">
				</treenode>
				<treenode node="_processGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;201;2;220;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Process the GET parameters and move things into the object.;;d34,201;;b2,0;;m">
				</treenode>
				<treenode node="_processPost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;161;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     process the post data and set what is there into the object. processed data is available at `$this-&gt;data`;;d35,161;;b2,0;;m">
				</treenode>
				<treenode node="_readInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;979;2;987;;;;vpos;;vstring;;r&#xA;Description&#xA;     Read data from php://input, mocked in tests.&#xA;&#xA;Return:&#xA;   contents of php://input;;d33,979;;b2,0;;m">
				</treenode>
				<treenode node="_url;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;229;2;268;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the request uri. Looks in PATH_INFO first, as this is the exact value we need prepared by PHP. Following that, REQUEST_URI, PHP_SELF, HTTP_X_REWRITE_URL and argv are checked in that order. Each of these server variables have the base path, and query strings stripped off&#xA;&#xA;Return:&#xA;   URI The CakePHP request path that is being accessed;;d27,229;;b2,0;;m">
				</treenode>
				<treenode node="acceptLanguage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f15;769;2;785;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the languages accepted by the client, or check if a specific language is accepted.&#xA;&#xA;Parameters:&#xA;    string $language - The language to test&#xA;&#xA;Return:&#xA;   If a $language is provided, a boolean;;d57,769;;b1,5;;mstring $language;;p">
					<treenode node="language;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f39;769;48;769;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="accepts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;730;2;740;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Find out which content types the client accepts or check if they accept a particular type of content.&#xA;&#xA;Parameters:&#xA;    string $type - The content type to check for&#xA;&#xA;Return:&#xA;   Either an array of all the types the client accepts or a boolean if they accept the;;d39,730;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f25;730;30;730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addDetector;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;589;2;595;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a new detector to the list of detectors that a request can use. There are several different formats and types of detectors that can be set.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the detector&#xA;    array $options - The options for the detector definition;;d46,589;;b1,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f29;589;34;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f36;589;44;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;604;2;607;;;;vpos;;v;;r&#xA;Description&#xA;     Add parameters to the request's parsed parameter set. This will overwrite any existing parameters. This modifies the parameters available through `$request-&gt;params`.&#xA;&#xA;Parameters:&#xA;    array $params - Array of parameters to merge in;;d36,604;;b1,0;;marray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f27;604;34;604;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;616;2;623;;;;vpos;;v;;r&#xA;Description&#xA;     Add paths to the requests' paths vars. This will overwrite any existing paths. Provides an easy way to modify, here, webroot and base.&#xA;&#xA;Parameters:&#xA;    array $paths - Array of paths to merge in;;d34,616;;b1,0;;marray $paths;;p">
					<treenode node="paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f26;616;32;616;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="allowMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;943;2;956;;;;vpos;;vbool;;r&#xA;Description&#xA;     Allow only certain HTTP request methods. If the request method does not match a 405 error will be shown and the required &quot;Allow&quot; response header will be set.&#xA;&#xA;Parameters:&#xA;    string|array $methods - Allowed HTTP request methods&#xA;&#xA;Return:&#xA;   true;;d39,943;;b1,0;;mstring|array $methods;;p">
					<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f29;943;37;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clientIp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;390;2;409;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the IP the client is using, or says they are using.&#xA;&#xA;Parameters:&#xA;    bool $safe - Use safe = false when you think the user might manipulate their HTTP_CLIENT_IP&#xA;&#xA;Return:&#xA;   The client IP;;d40,390;;b1,0;;mbool $safe;;p">
					<treenode node="safe;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f26;390;31;390;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="data;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;857;2;864;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Provides a read/write accessor for `$this-&gt;data`. Allows you to use a syntax similar to `CakeSession` for reading post data.&#xA;&#xA;Parameters:&#xA;    string $name - Dot separated name of the value to read/write, one or more args&#xA;&#xA;Return:&#xA;   |$this Either the value being read, or $this so you can chain consecutive writes;;d29,857;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f22;857;27;857;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="domain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;693;2;697;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the domain name and include $tldLength segments of the tld.&#xA;&#xA;Parameters:&#xA;    int $tldLength - Number of segments your tld contains&#xA;&#xA;Return:&#xA;   Domain name without subdomains;;d40,693;;b1,0;;mint $tldLength;;p">
					<treenode node="tldLength;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f24;693;34;693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="header;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f15;648;2;654;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read an HTTP header from the Request information.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the header you want&#xA;&#xA;Return:&#xA;   Either false on no header being set or the value of the header;;d38,648;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f31;648;36;648;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="here;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;631;2;640;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the value of the current requests URL. Will include named parameters and querystring arguments.&#xA;&#xA;Parameters:&#xA;    bool $base - Include the base path, set to false to trim the base path off&#xA;&#xA;Return:&#xA;   the current request URL including query string args;;d36,631;;b1,0;;mbool $base;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f22;631;27;631;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="host;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;679;2;684;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the host that the request was handled on.&#xA;&#xA;Parameters:&#xA;    bool $trustProxy - Whether or not to trust the proxy host;;d43,679;;b1,0;;mbool $trustProxy;;p">
					<treenode node="trustProxy;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f22;679;33;679;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="input;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;904;2;913;;;;vpos;;vThe;;r&#xA;Description&#xA;     Read data from `php://input`. Useful when interacting with XML or JSON request body content.&#xA;&#xA;Parameters:&#xA;    string $callback - A decoding callback that will convert the string data to another&#xA;&#xA;Return:&#xA;   decoded/processed request data;;d41,904;;b1,0;;mstring $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f23;904;32;904;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="is;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;488;2;524;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check whether or not a Request is a certain type.&#xA;&#xA;Parameters:&#xA;    string|array $type - The type of request you want to check&#xA;&#xA;Return:&#xA;   Whether or not the request is the type you are checking;;d27,488;;b1,0;;mstring|array $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f20;488;25;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;537;2;540;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that a request matches all the given types.&#xA;&#xA;Parameters:&#xA;    array $types - The types to check&#xA;&#xA;Return:&#xA;   Success;;d37,537;;b1,0;;marray $types;;p">
					<treenode node="types;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f29;537;35;537;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="method;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;669;2;671;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the HTTP method used for this request. There are a few ways to specify a method.&#xA;&#xA;Return:&#xA;   The name of the HTTP method used;;d26,669;;b1,0;;m">
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;1025;2;1027;;;;vpos;;vbool;;r&#xA;Description&#xA;     Array access isset() implementation&#xA;&#xA;Parameters:&#xA;    string $name - thing to check;;d37,1025;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f30;1025;35;1025;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;995;2;1006;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Array access read implementation&#xA;&#xA;Parameters:&#xA;    string $name - Name of the key being accessed;;d34,995;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f27;995;32;995;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;1015;2;1017;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Array access write implementation&#xA;&#xA;Parameters:&#xA;    string $name - Name of the key being written&#xA;    mixed $value - The value being written;;d42,1015;;b1,0;;mstring $name;;pmixed $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f27;1015;32;1015;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f34;1015;40;1015;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;1035;2;1037;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Array access unset() implementation&#xA;&#xA;Parameters:&#xA;    string $name - Name to unset;;d36,1035;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f29;1035;34;1035;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="onlyAllow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;967;2;972;;;;vpos;;vbool;;r&#xA;Description&#xA;     Alias of CakeRequest::allowMethod() for backwards compatibility.&#xA;&#xA;Parameters:&#xA;    string|array $methods - Allowed HTTP request methods&#xA;&#xA;Return:&#xA;   true;;d37,967;;b1,0;;mstring|array $methods;;p">
					<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f27;967;35;967;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="param;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;873;2;883;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Safely access the values in $this-&gt;params.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the parameter to get&#xA;&#xA;Return:&#xA;   The value of the provided parameter;;d30,873;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f23;873;28;873;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseAccept;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;751;2;753;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the HTTP_ACCEPT header and return a sorted array with content types as the keys, and pref values as the values.&#xA;&#xA;Return:&#xA;   An array of prefValue =&gt; array(content/types);;d31,751;;b1,0;;m">
				</treenode>
				<treenode node="query;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;833;2;835;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Provides a read accessor for `$this-&gt;query`. Allows you to use a syntax similar to `CakeSession` for reading URL query data.&#xA;&#xA;Parameters:&#xA;    string $name - Query string variable name&#xA;&#xA;Return:&#xA;   The value being read;;d30,833;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f23;833;28;833;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="referer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;417;2;433;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the referer that referred this request.&#xA;&#xA;Parameters:&#xA;    bool $local - Attempt to return a local address&#xA;&#xA;Return:&#xA;   The referring address for this request;;d41,417;;b1,0;;mbool $local;;p">
					<treenode node="local;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f25;417;31;417;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;922;2;924;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Modify data originally from `php://input`. Useful for altering json/xml data in middleware or DispatcherFilters before it gets to RequestHandlerComponent&#xA;&#xA;Parameters:&#xA;    string $input - A string to replace original parsed data from input();;d34,922;;b1,0;;mstring $input;;p">
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f26;922;32;922;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subdomains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;706;2;709;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the subdomains for a host.&#xA;&#xA;Parameters:&#xA;    int $tldLength - Number of segments your tld contains&#xA;&#xA;Return:&#xA;   An array of subdomains;;d44,706;;b1,0;;mint $tldLength;;p">
					<treenode node="tldLength;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f28;706;38;706;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_detectors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;97;22;97;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f11;122;18;122;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;73;13;73;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;52;13;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="here;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;87;13;87;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;36;15;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;59;14;59;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;66;12;66;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="webroot;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php;f8;80;16;80;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeRequestTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f0;59;1;2400;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class CakeRequestTest;;d43,59;;b0,0;;m">
				<treenode node="_loadEnvironment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f11;2376;2;2398;;;;vpos;;vvoid;;r&#xA;Description&#xA;     loadEnvironment method&#xA;&#xA;Parameters:&#xA;    array $env;;d43,2376;;b2,0;;marray $env;;p">
					<treenode node="env;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f37;2376;41;2376;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="detectCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1061;2;1063;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function for testing callbacks.&#xA;&#xA;Parameters:&#xA;     $request;;d42,1061;;b1,0;;m $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f32;1061;40;1061;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="environmentGenerator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f15;1539;2;1934;;;;vpos;;varray;;r&#xA;Description&#xA;     Generator for environment configurations&#xA;&#xA;Return:&#xA;   Environment array;;d47,1539;;b1,5;;m">
				</treenode>
				<treenode node="paramReadingDataProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2086;2;2121;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for testing reading values with CakeRequest::param();;d44,2086;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;66;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup callback;;d25,66;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;83;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     TearDown;;d28,83;;b1,0;;m">
				</treenode>
				<treenode node="testAcceptLanguage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2158;2;2194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test accept language;;d38,2158;;b1,0;;m">
				</treenode>
				<treenode node="testAccepts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1084;2;1099;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test accepts() with and without parameters;;d31,1084;;b1,0;;m">
				</treenode>
				<treenode node="testAcceptWithQvalueSorting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1123;2;1129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Content types from accepts() should respect the client's q preference values.;;d47,1123;;b1,0;;m">
				</treenode>
				<treenode node="testAcceptWithWhitespace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1106;2;1116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that accept header types are trimmed for comparisons.;;d44,1106;;b1,0;;m">
				</treenode>
				<treenode node="testAddDetector;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;996;2;1053;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test adding detectors and having them work.;;d35,996;;b1,0;;m">
				</treenode>
				<treenode node="testAddParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;167;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test addParams() method;;d33,167;;b1,0;;m">
				</treenode>
				<treenode node="testAddPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;184;2;197;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test splicing in paths.;;d32,184;;b1,0;;m">
				</treenode>
				<treenode node="testAllowMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2334;2;2348;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test allowMethod method;;d35,2334;;b1,0;;m">
				</treenode>
				<treenode node="testAllowMethodException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2355;2;2368;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test allowMethod throwing exception;;d44,2355;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;965;2;989;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the array access implementation;;d35,965;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlAndWebrootWithBaseUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1390;2;1432;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test baseUrl and webroot with baseUrl;;d52,1390;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlAndWebrootWithModRewrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1204;2;1266;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test baseUrl and webroot with ModRewrite;;d55,1204;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlNoRewriteTopLevelIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1439;2;1447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test baseUrl with no rewrite and using the top level index.php.;;d53,1439;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlNoRewriteWebrootIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1477;2;1485;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test baseUrl with no rewrite, and using the app/webroot/index.php file as is normal with virtual hosts.;;d52,1477;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlWithAppAndWebrootInDirname;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1454;2;1470;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check that a sub-directory containing app|webroot doesn't get mishandled when re-writing is off.;;d57,1454;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlwithModRewriteAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1273;2;1294;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test baseUrl with ModRewrite alias;;d50,1273;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlWithModRewriteAndIndexPhp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1309;2;1359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test base, webroot, URL and here parsing when there is URL rewriting but CakePHP gets called with index.php in URL nonetheless.;;d56,1309;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlWithNoModRewrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1366;2;1383;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test base, webroot, and URL parsing when there is no URL rewriting;;d47,1366;;b1,0;;m">
				</treenode>
				<treenode node="testclientIp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;656;2;672;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the clientIp method.;;d32,656;;b1,0;;m">
				</treenode>
				<treenode node="testConstructionGetParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;109;2;124;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test construction;;d46,109;;b1,0;;m">
				</treenode>
				<treenode node="testDataReading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2002;2;2014;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the data() method reading;;d35,2002;;b1,0;;m">
				</treenode>
				<treenode node="testDataWriting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2021;2;2036;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test writing with data();;d35,2021;;b1,0;;m">
				</treenode>
				<treenode node="testDataWritingFalsey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2043;2;2057;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test writing falsey values.;;d41,2043;;b1,0;;m">
				</treenode>
				<treenode node="testDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;816;2;824;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test domain retrieval.;;d30,816;;b1,0;;m">
				</treenode>
				<treenode node="testEnvironmentDetection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1945;2;1956;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test environment detection&#xA;&#xA;Parameters:&#xA;     $name&#xA;     $env&#xA;     $expected;;d66,1945;;b1,0;;m $name;;p $env;;p $expected;;p">
					<treenode node="env;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f49;1945;53;1945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f55;1945;64;1945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f42;1945;47;1945;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFilesParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;346;2;610;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parsing of FILES array;;d36,346;;b1,0;;m">
				</treenode>
				<treenode node="testFilesZeroithIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;617;2;630;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that files in the 0th index work.;;d41,617;;b1,0;;m">
				</treenode>
				<treenode node="testGetParamsWithDot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1493;2;1509;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a request with a . in the main GET parameter is filtered out. PHP changes GET parameter keys containing dots to _.;;d40,1493;;b1,0;;m">
				</treenode>
				<treenode node="testGetParamWithUrlencodedElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1516;2;1532;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a request with urlencoded bits in the main GET parameter are filtered out.;;d53,1516;;b1,0;;m">
				</treenode>
				<treenode node="testHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1070;2;1077;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting headers;;d30,1070;;b1,0;;m">
				</treenode>
				<treenode node="testHere;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2201;2;2218;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the here() method;;d28,2201;;b1,0;;m">
				</treenode>
				<treenode node="testHereWithSpaceInUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2225;2;2232;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the here() with space in URL;;d42,2225;;b1,0;;m">
				</treenode>
				<treenode node="testHost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;802;2;809;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test host retrieval.;;d28,802;;b1,0;;m">
				</treenode>
				<treenode node="testInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2255;2;2262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the input() method.;;d29,2255;;b1,0;;m">
				</treenode>
				<treenode node="testInputDecode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2269;2;2276;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test input() decoding.;;d35,2269;;b1,0;;m">
				</treenode>
				<treenode node="testInputDecodeExtraParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2283;2;2301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test input() decoding with additional arguments.;;d46,2283;;b1,0;;m">
				</treenode>
				<treenode node="testisAjaxFlashAndFriends;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;852;2;879;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test ajax, flash and friends;;d45,852;;b1,0;;m">
				</treenode>
				<treenode node="testIsAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;774;2;783;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test isAll();;d29,774;;b1,0;;m">
				</treenode>
				<treenode node="testIsHttpMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;728;2;749;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the simple uses of is();;d37,728;;b1,0;;m">
				</treenode>
				<treenode node="testIsMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;756;2;767;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test is() with multiple types.;;d34,756;;b1,0;;m">
				</treenode>
				<treenode node="testIsRequested;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2308;2;2327;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test is('requested') and isRequested();;d35,2308;;b1,0;;m">
				</treenode>
				<treenode node="testIsSsl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;897;2;923;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test is(ssl);;d29,897;;b1,0;;m">
				</treenode>
				<treenode node="testMagicCallExceptionOnUnknownMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;887;2;890;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test __call exceptions;;d57,887;;b1,0;;m">
				</treenode>
				<treenode node="testMagicget;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;930;2;938;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting request params with object properties.;;d32,930;;b1,0;;m">
				</treenode>
				<treenode node="testMagicisset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;945;2;958;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test isset()/empty() with overloaded properties.;;d34,945;;b1,0;;m">
				</treenode>
				<treenode node="testMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;790;2;795;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the method() method.;;d30,790;;b1,0;;m">
				</treenode>
				<treenode node="testMethodOverrides;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;637;2;649;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test method overrides coming in from POST data.;;d39,637;;b1,0;;m">
				</treenode>
				<treenode node="testNoAutoParseConstruction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;96;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the autoparse = false constructor works.;;d47,96;;b1,0;;m">
				</treenode>
				<treenode node="testParamReading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2064;2;2079;;;;vpos;;v;;r&#xA;Description&#xA;     Test reading params;;d54,2064;;b1,0;;mtoRead;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f43;2064;52;2064;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="toRead;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f34;2064;41;2064;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testParamWriting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2128;2;2151;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test writing request params with param();;d36,2128;;b1,0;;m">
				</treenode>
				<treenode node="testParseAcceptIgnoreAcceptExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1169;2;1178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parsing accept ignores index param;;d57,1169;;b1,0;;m">
				</treenode>
				<treenode node="testParseAcceptInvalidSyntax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1187;2;1197;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that parsing accept headers with invalid syntax works.;;d48,1187;;b1,0;;m">
				</treenode>
				<treenode node="testParseAcceptNoQValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1153;2;1162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parsing accept with a confusing accept value.;;d44,1153;;b1,0;;m">
				</treenode>
				<treenode node="testParseAcceptWithQValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1136;2;1146;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the raw parsing of accept headers into the q value formatting.;;d45,1136;;b1,0;;m">
				</treenode>
				<treenode node="testPostParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;204;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parsing POST data into the object.;;d35,204;;b1,0;;m">
				</treenode>
				<treenode node="testPutParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;255;2;322;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parsing PUT data into the object.;;d34,255;;b1,0;;m">
				</treenode>
				<treenode node="testPutParsingJSON;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;329;2;339;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parsing json PUT data into the object.;;d38,329;;b1,0;;m">
				</treenode>
				<treenode node="testQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1963;2;1974;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the query() method;;d29,1963;;b1,0;;m">
				</treenode>
				<treenode node="testQueryStringAndNamedParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;144;2;160;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that named arguments + querystrings are handled correctly.;;d49,144;;b1,0;;m">
				</treenode>
				<treenode node="testQueryStringParsingFromInputUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;131;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that querystring args provided in the URL string are parsed.;;d54,131;;b1,0;;m">
				</treenode>
				<treenode node="testQueryWithArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;1981;2;1995;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the query() method with arrays passed via $_GET;;d38,1981;;b1,0;;m">
				</treenode>
				<treenode node="testReferer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;679;2;702;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the referrer function.;;d31,679;;b1,0;;m">
				</treenode>
				<treenode node="testRefererBasePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;710;2;721;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test referer() with a base path that duplicates the first segment.;;d39,710;;b1,0;;m">
				</treenode>
				<treenode node="testSetInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;2239;2;2248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the input() method.;;d32,2239;;b1,0;;m">
				</treenode>
				<treenode node="testSubdomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;831;2;845;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting subdomains for a host.;;d33,831;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeResponse;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f0;28;1;1516;;;;vpos;;v;;r&#xA;Description&#xA;     CakeResponse is responsible for managing the response text, status and headers of a HTTP response.;;d19,28;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;386;2;403;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $options - list of parameters to setup the response;;d55,386;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f35;386;43;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1176;2;1178;;;;vpos;;vstring;;r&#xA;Description&#xA;     String conversion. Fetches the response body as a string. Does *not* send headers.;;d30,1176;;b1,0;;m">
				</treenode>
				<treenode node="_clearBuffer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;1496;2;1500;;;;vpos;;vbool;;r&#xA;Description&#xA;     Clears the contents of the topmost output buffer and discards them;;d35,1496;;b2,0;;m">
				</treenode>
				<treenode node="_fileRange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;1407;2;1437;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Apply a file range to a file and set the end offset.&#xA;&#xA;Parameters:&#xA;    File $file - The file to set a range on&#xA;    string $httpRange - The range to use;;d50,1407;;b2,0;;mFile $file;;pstring $httpRange;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f31;1407;36;1407;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="httpRange;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f38;1407;48;1407;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_flushBuffer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;1507;2;1514;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Flushes the contents of the output buffer;;d35,1507;;b2,0;;m">
				</treenode>
				<treenode node="_getUTCDate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;1061;2;1071;;;;vpos;;vDateTime;;r&#xA;Description&#xA;     Returns a DateTime object initialized at the $time param and using UTC as timezone&#xA;&#xA;Parameters:&#xA;    string|DateTime $time - Valid time string or unix timestamp or DateTime object;;d46,1061;;b2,0;;mstring|DateTime $time;;p">
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f32;1061;37;1061;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_isActive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;1487;2;1489;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if connection is still active;;d32,1487;;b2,0;;m">
				</treenode>
				<treenode node="_normalizeCorsDomains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;1297;2;1313;;;;vpos;;varray;;r&#xA;Description&#xA;     Normalize the origin to regular expressions and put in an array format&#xA;&#xA;Parameters:&#xA;    array $domains - Domains to normalize&#xA;    bool $requestIsSSL - Whether it's a SSL request;;d75,1297;;b2,0;;marray $domains;;pbool $requestIsSSL;;p">
					<treenode node="domains;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f42;1297;50;1297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="requestIsSSL;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f52;1297;65;1297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_sendContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;538;2;540;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sends a content string to the client.&#xA;&#xA;Parameters:&#xA;    string $content - string to send as response body;;d43,538;;b2,0;;mstring $content;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f33;538;41;538;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_sendFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;1446;2;1480;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reads out a file, and echos the content to the client.&#xA;&#xA;Parameters:&#xA;    File $file - File object&#xA;    array $range - The range to read out of the file&#xA;&#xA;Return:&#xA;   True is whole file is echoed successfully or false if client connection is lost in between;;d45,1446;;b2,0;;mFile $file;;parray $range;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f30;1446;35;1446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="range;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f37;1446;43;1446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_sendHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;521;2;530;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sends a header to the client.&#xA;&#xA;Parameters:&#xA;    string $name - the header name&#xA;    string $value - the header value;;d54,521;;b2,0;;mstring $name;;pstring $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f32;521;37;521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f39;521;45;521;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setCacheControl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;920;2;928;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to generate a valid Cache-Control header from the options set in other methods;;d39,920;;b2,0;;m">
				</treenode>
				<treenode node="_setContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;484;2;488;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the response body to an empty text if the status code is 204 or 304;;d34,484;;b2,0;;m">
				</treenode>
				<treenode node="_setContentLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;496;2;510;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Calculates the correct Content-Length and sets it as a header in the response Will not set the value if already set or if the output is compressed.;;d40,496;;b2,0;;m">
				</treenode>
				<treenode node="_setContentType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;457;2;477;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Formats the Content-Type header based on the configured contentType and charset the charset will only be set in the header if the response is of type text/*;;d38,457;;b2,0;;m">
				</treenode>
				<treenode node="_setCookies;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;442;2;449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the cookies that have been added via CakeResponse::cookie() before any other output is sent to the client. Will set the cookies in the order they have been set.;;d34,442;;b2,0;;m">
				</treenode>
				<treenode node="body;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;611;2;616;;;;vpos;;vstring;;r&#xA;Description&#xA;     Buffers the response message to be sent if $content is null the current buffer is returned&#xA;&#xA;Parameters:&#xA;    string $content - the string message to be sent&#xA;&#xA;Return:&#xA;   current message buffer if $content param is passed as null;;d39,611;;b1,0;;mstring $content;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f22;611;30;611;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;801;2;812;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the correct headers to instruct the client to cache the response.&#xA;&#xA;Parameters:&#xA;    string $since - a valid time since the response text has not been modified&#xA;    string $time - a valid time for cache expiry;;d49,801;;b1,0;;mstring $since;;pstring $time;;p">
					<treenode node="since;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f23;801;29;801;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f31;801;36;801;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="charset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;774;2;779;;;;vpos;;vstring;;r&#xA;Description&#xA;     Sets the response charset if $charset is null the current charset is returned&#xA;&#xA;Parameters:&#xA;    string $charset - Character set string&#xA;&#xA;Return:&#xA;   current charset;;d42,774;;b1,0;;mstring $charset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f25;774;33;774;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="checkNotModified;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1150;2;1168;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether a response has not been modified according to the 'If-None-Match' (Etags) and 'If-Modified-Since' (last modification date) request headers. If the response is detected to be not modified, it is marked as so accordingly so the client can be informed of that.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object&#xA;&#xA;Return:&#xA;   whether the response was marked as not modified or not;;d56,1150;;b1,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f46;1150;54;1150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compress;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1079;2;1084;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the correct output buffering handler to send a compressed response. Responses will be compressed with zlib, if the extension is available.&#xA;&#xA;Return:&#xA;   false if client does not accept compressed responses or no handler is available, true otherwise;;d28,1079;;b1,0;;m">
				</treenode>
				<treenode node="cookie;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1220;2;1244;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Getter/Setter for cookie configs&#xA;&#xA;Parameters:&#xA;    array $options - Either null to get all cookies, string for a specific cookie;;d41,1220;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f24;1220;32;1220;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1272;2;1288;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup access for origin and methods on cross origin requests&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object&#xA;    string|array $allowedDomains - List of allowed domains, see method description for more details&#xA;    string|array $allowedMethods - List of HTTP verbs allowed&#xA;    string|array $allowedHeaders - List of HTTP headers allowed;;d115,1272;;b1,0;;mCakeRequest $request;;pstring|array $allowedDomains;;pstring|array $allowedMethods;;pstring|array $allowedHeaders;;p">
					<treenode node="allowedDomains;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f44;1272;59;1272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="allowedHeaders;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f88;1272;103;1272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="allowedMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f61;1272;76;1272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f34;1272;42;1272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disableCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;786;2;792;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the correct headers to instruct the client to not cache the response;;d32,786;;b1,0;;m">
				</treenode>
				<treenode node="download;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1102;2;1104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the correct headers to instruct the browser to download the response as a file.&#xA;&#xA;Parameters:&#xA;    string $filename - the name of the file as the browser will download the response;;d37,1102;;b1,0;;mstring $filename;;p">
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f26;1102;35;1102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="etag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1044;2;1052;;;;vpos;;vstring;;r&#xA;Description&#xA;     Sets the response Etag, Etags are a strong indicative that a response can be cached by a HTTP client. A bad way of generating Etags is creating a hash of the response output, instead generate a unique hash of the unique components that identifies a request, such as a modification time, a resource Id, and anything else you consider it makes it unique.&#xA;&#xA;Parameters:&#xA;    string $tag - Tag to set&#xA;    bool $weak - whether the response is semantically the same as;;d50,1044;;b1,0;;mstring $tag;;pbool $weak;;p">
					<treenode node="tag;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f22;1044;26;1044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="weak;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f35;1044;40;1044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expires;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;943;2;952;;;;vpos;;vstring;;r&#xA;Description&#xA;     Sets the Expires header for the response by taking an expiration time If called with no parameters it will return the current Expires value&#xA;&#xA;Parameters:&#xA;    string|DateTime $time - Valid time string or DateTime object;;d39,943;;b1,0;;mstring|DateTime $time;;p">
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f25;943;30;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="file;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1332;2;1395;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup for display or download the given file.&#xA;&#xA;Parameters:&#xA;    string $path - Path to file&#xA;    array $options - Options See above;;d49,1332;;b1,0;;mstring $path;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f29;1332;37;1332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f22;1332;27;1332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMimeType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;739;2;744;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the mime type definition for an alias&#xA;&#xA;Parameters:&#xA;    string $alias - the content type alias to map&#xA;&#xA;Return:&#xA;   string mapped mime type or false if $alias is not mapped;;d37,739;;b1,0;;mstring $alias;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f29;739;35;739;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="header;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;569;2;584;;;;vpos;;varray;;r&#xA;Description&#xA;     Buffers a header string to be sent Returns the complete list of buffered headers&#xA;&#xA;Parameters:&#xA;    string|array $header - An array of header strings or a single header string&#xA;    string|array $value - The header value(s)&#xA;&#xA;Return:&#xA;   list of headers to be sent;;d55,569;;b1,0;;mstring|array $header;;pstring|array $value;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f24;569;31;569;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f40;569;46;569;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="httpCodes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;667;2;684;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Queries &amp; sets valid HTTP response codes &amp; messages.&#xA;&#xA;Parameters:&#xA;    int|array $code - If $code is an integer, then the corresponding code/message is&#xA;&#xA;Return:&#xA;   associative array of the HTTP codes as keys, and the message;;d41,667;;b1,0;;mint|array $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f27;667;32;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="length;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1127;2;1135;;;;vpos;;vint;;r&#xA;Description&#xA;     Sets the Content-Length header for the response If called with no arguments returns the last Content-Length set&#xA;&#xA;Parameters:&#xA;    int $bytes - Number of bytes&#xA;&#xA;Return:&#xA;   |null;;d39,1127;;b1,0;;mint $bytes;;p">
					<treenode node="bytes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f24;1127;30;1127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="location;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;595;2;602;;;;vpos;;vstring;;r&#xA;Description&#xA;     Accessor for the location header.&#xA;&#xA;Parameters:&#xA;    null|string $url - Either null to get the current location, or a string to set one&#xA;&#xA;Return:&#xA;   |null When setting the location null will be returned;;d39,595;;b1,0;;mnull|string $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f26;595;30;595;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;754;2;765;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Maps a content-type back to an alias&#xA;&#xA;Parameters:&#xA;    string|array $ctype - Either a string content type to map, or an array of types&#xA;&#xA;Return:&#xA;   Aliases for the types provided;;d33,754;;b1,0;;mstring|array $ctype;;p">
					<treenode node="ctype;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f25;754;31;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="maxAge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;880;2;889;;;;vpos;;vint;;r&#xA;Description&#xA;     Sets the Cache-Control max-age directive. The max-age is the number of seconds after which the response should no longer be considered a good candidate to be fetched from the local (client) cache. If called with no parameters, this function will return the current max-age value if any&#xA;&#xA;Parameters:&#xA;    int $seconds - if null, the method will return the current max-age value;;d41,880;;b1,0;;mint $seconds;;p">
					<treenode node="seconds;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f24;880;32;880;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="modified;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;967;2;976;;;;vpos;;vstring;;r&#xA;Description&#xA;     Sets the Last-Modified header for the response by taking a modification time If called with no parameters it will return the current Last-Modified value&#xA;&#xA;Parameters:&#xA;    string|DateTime $time - Valid time string or DateTime object;;d40,967;;b1,0;;mstring|DateTime $time;;p">
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f26;967;31;967;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mustRevalidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;902;2;912;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the Cache-Control must-revalidate directive. must-revalidate indicates that the response should not be served stale by a cache under any circumstance without first revalidating with the origin. If called with no parameters, this function will return whether must-revalidate is present.&#xA;&#xA;Parameters:&#xA;    bool $enable - If null returns whether directive is set, if boolean;;d48,902;;b1,0;;mbool $enable;;p">
					<treenode node="enable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f32;902;39;902;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="notModified;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;985;2;1000;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the response as Not Modified by removing any body contents setting the status code to &quot;304 Not Modified&quot; and removing all conflicting headers;;d31,985;;b1,0;;m">
				</treenode>
				<treenode node="outputCompressed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1091;2;1094;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether the resulting output will be compressed by PHP;;d36,1091;;b1,0;;m">
				</treenode>
				<treenode node="protocol;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1113;2;1118;;;;vpos;;vstring;;r&#xA;Description&#xA;     Sets the protocol to be used when sending the response. Defaults to HTTP/1.1 If called with no arguments, it will return the current configured protocol&#xA;&#xA;Parameters:&#xA;    string $protocol - Protocol to be used for sending response&#xA;&#xA;Return:&#xA;   protocol currently set;;d44,1113;;b1,0;;mstring $protocol;;p">
					<treenode node="protocol;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f26;1113;35;1113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;411;2;433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sends the complete response to the client including headers and message body. Will echo out the content in the response body.;;d24,411;;b1,0;;m">
				</treenode>
				<treenode node="sharable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;825;2;849;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets whether a response is eligible to be cached by intermediate proxies This method controls the `public` or `private` directive in the Cache-Control header&#xA;&#xA;Parameters:&#xA;    bool $public - If set to true, the Cache-Control header will be set as public&#xA;    int $time - time in seconds after which the response should no longer be considered fresh;;d56,825;;b1,0;;mbool $public;;pint $time;;p">
					<treenode node="public;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f26;825;33;825;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f42;825;47;825;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sharedMaxAge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;860;2;869;;;;vpos;;vint;;r&#xA;Description&#xA;     Sets the Cache-Control s-maxage directive. The max-age is the number of seconds after which the response should no longer be considered a good candidate to be fetched from a shared cache (like in a proxy server). If called with no parameters, this function will return the current max-age value if any&#xA;&#xA;Parameters:&#xA;    int $seconds - if null, the method will return the current s-maxage value;;d47,860;;b1,0;;mint $seconds;;p">
					<treenode node="seconds;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f30;860;38;860;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="statusCode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;626;2;634;;;;vpos;;vint;;r&#xA;Description&#xA;     Sets the HTTP status code to be sent if $code is null the current code is returned&#xA;&#xA;Parameters:&#xA;    int $code - the HTTP status code&#xA;&#xA;Return:&#xA;   current status code;;d42,626;;b1,0;;mint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f28;626;33;626;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="type;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;711;2;729;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Sets the response content type. It can be either a file extension which will be mapped internally to a mime-type or a string representing a mime-type if $contentType is null the current content type is returned if $contentType is an associative array, content type definitions will be stored/replaced&#xA;&#xA;Parameters:&#xA;    string $contentType - Content type key&#xA;&#xA;Return:&#xA;   current content type or false if supplied an invalid content type;;d43,711;;b1,0;;mstring $contentType;;p">
					<treenode node="contentType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f22;711;34;711;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="vary;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f8;1012;2;1021;;;;vpos;;varray;;r&#xA;Description&#xA;     Sets the Vary header for the response, if an array is passed, values will be imploded into a comma separated string. If no parameters are passed, then an array with the current Vary header value is returned&#xA;&#xA;Parameters:&#xA;    string|array $cacheVariances - a single Vary string or an array;;d46,1012;;b1,0;;mstring|array $cacheVariances;;p">
					<treenode node="cacheVariances;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f22;1012;37;1012;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_body;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;338;17;338;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_cacheDirectives;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;367;28;367;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;359;20;359;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_contentType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;324;24;324;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_cookies;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;374;20;374;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;345;17;345;;;;vposFile;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_fileRange;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;352;22;352;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;331;20;331;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_mimeTypes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;83;22;83;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_protocol;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;309;21;309;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;316;19;316;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_statusCodes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php;f11;35;24;35;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeResponseTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f0;24;1;1881;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class CakeResponseTest;;d44,24;;b0,0;;m">
				<treenode node="charsetTypeProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f15;238;2;246;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for content type tests.;;d46,238;;b1,5;;m">
				</treenode>
				<treenode node="corsData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1124;2;1155;;;;vpos;;varray;;r&#xA;Description&#xA;     Feed for testCors;;d28,1124;;b1,0;;m">
				</treenode>
				<treenode node="rangeProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f15;1566;2;1583;;;;vpos;;varray;;r&#xA;Description&#xA;     A data provider for testing various ranges;;d40,1566;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;31;2;34;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup for tests;;d25,31;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;41;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Cleanup after tests;;d28,41;;b1,0;;m">
				</treenode>
				<treenode node="testBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;91;2;97;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the body method;;d28,91;;b1,0;;m">
				</treenode>
				<treenode node="testCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;330;2;367;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the cache method;;d29,330;;b1,0;;m">
				</treenode>
				<treenode node="testCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;104;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the charset method;;d31,104;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagAndTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;933;2;941;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d53,933;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagAndTimeMismatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;948;2;956;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d61,948;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagExact;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;920;2;926;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d51,920;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagMismatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;963;2;971;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d54,963;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagStar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;907;2;913;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d50,907;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;978;2;984;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d46,978;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedNoHints;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;991;2;997;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d47,991;;b1,0;;m">
				</treenode>
				<treenode node="testCompress;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;374;2;395;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the compress method;;d32,374;;b1,0;;m">
				</treenode>
				<treenode node="testConnectionAbortedOnBuffering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1473;2;1501;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectionAbortedOnBuffering method;;d52,1473;;b1,0;;m">
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;51;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the request object constructor;;d33,51;;b1,0;;m">
				</treenode>
				<treenode node="testCookieSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1004;2;1079;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test cookie setting;;d38,1004;;b1,0;;m">
				</treenode>
				<treenode node="testCors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1095;2;1117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test CORS&#xA;&#xA;Parameters:&#xA;    CakeRequest $request&#xA;    string $origin&#xA;    string|array $domains&#xA;    string|array $methods&#xA;    string|array $headers&#xA;    string|bool $expectedOrigin&#xA;    string|bool $expectedMethods&#xA;    string|bool $expectedHeaders;;d144,1095;;b1,0;;mCakeRequest $request;;pstring $origin;;pstring|array $domains;;pstring|array $methods;;pstring|array $headers;;pstring|bool $expectedOrigin;;pstring|bool $expectedMethods;;pstring|bool $expectedHeaders;;p">
					<treenode node="domains;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f45;1095;53;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expectedHeaders;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f118;1095;134;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expectedMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f92;1095;108;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expectedOrigin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f75;1095;90;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f65;1095;73;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f55;1095;63;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="origin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f36;1095;43;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f26;1095;34;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testDisableCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;314;2;323;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the disableCache method;;d36,314;;b1,0;;m">
				</treenode>
				<treenode node="testDownload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;448;2;455;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the download method;;d32,448;;b1,0;;m">
				</treenode>
				<treenode node="testEtag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;868;2;882;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests getting/setting the Etag header;;d28,868;;b1,0;;m">
				</treenode>
				<treenode node="testExpires;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;654;2;679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests setting the expiration date;;d31,654;;b1,0;;m">
				</treenode>
				<treenode node="testFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1198;2;1236;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFile method;;d28,1198;;b1,0;;m">
				</treenode>
				<treenode node="testFileExtensionNotSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1537;2;1559;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test downloading files with extension not explicitly set.;;d43,1537;;b1,0;;m">
				</treenode>
				<treenode node="testFileNotFound;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1163;2;1166;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileNotFound;;d36,1163;;b1,0;;m">
				</treenode>
				<treenode node="testFileRange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1640;2;1693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test fetching ranges from a file.;;d33,1640;;b1,0;;m">
				</treenode>
				<treenode node="testFileRangeInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1700;2;1737;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test invalid file ranges.;;d40,1700;;b1,0;;m">
				</treenode>
				<treenode node="testFileRangeInvalidNoDownload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1838;2;1867;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileRangeInvalidNoDownload method;;d50,1838;;b1,0;;m">
				</treenode>
				<treenode node="testFileRangeNoDownload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1786;2;1831;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileRangeNoDownload method;;d43,1786;;b1,0;;m">
				</treenode>
				<treenode node="testFileRangeOffsets;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1591;2;1633;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the various range offset types.;;d72,1591;;b1,0;;mrange;;plength;;poffsetResponse;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f46;1591;53;1591;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offsetResponse;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f55;1591;70;1591;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="range;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f38;1591;44;1591;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFileRangeOffsetsNoDownload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1745;2;1779;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileRangeOffsetsNoDownload method;;d82,1745;;b1,0;;mrange;;plength;;poffsetResponse;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f56;1745;63;1745;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offsetResponse;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f65;1745;80;1745;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="range;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f48;1745;54;1745;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFileUpperExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1508;2;1530;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test downloading files with UPPERCASE extensions.;;d42,1508;;b1,0;;m">
				</treenode>
				<treenode node="testFileWithDotsInFilename;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1188;2;1191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Although unlikely, a file may contain dots in its filename. This should be allowed, as long as the dots doesn't specify a path (../ or ..\);;d46,1188;;b1,0;;m">
				</treenode>
				<treenode node="testFileWithPathTraversal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1175;2;1178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test file with ..;;d45,1175;;b1,0;;m">
				</treenode>
				<treenode node="testFileWithUnknownFileNoDownload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1432;2;1466;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileWithUnknownFileNoDownload method;;d53,1432;;b1,0;;m">
				</treenode>
				<treenode node="testFileWithUnknownFileTypeGeneric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1243;2;1296;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileWithUnknownFileTypeGeneric method;;d54,1243;;b1,0;;m">
				</treenode>
				<treenode node="testFileWithUnknownFileTypeIE;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1367;2;1426;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileWithUnknownFileTypeIE method;;d49,1367;;b1,0;;m">
				</treenode>
				<treenode node="testFileWithUnknownFileTypeOpera;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1303;2;1360;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileWithUnknownFileTypeOpera method;;d52,1303;;b1,0;;m">
				</treenode>
				<treenode node="testHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;157;2;199;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the header method;;d30,157;;b1,0;;m">
				</treenode>
				<treenode node="testHttpCodes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;403;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the httpCodes method;;d33,403;;b1,0;;m">
				</treenode>
				<treenode node="testLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;604;2;618;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests getting/setting the Content-Length;;d30,604;;b1,0;;m">
				</treenode>
				<treenode node="testLocation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;1874;2;1879;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the location method.;;d32,1874;;b1,0;;m">
				</treenode>
				<treenode node="testMapType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;462;2;472;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the mapType method;;d31,462;;b1,0;;m">
				</treenode>
				<treenode node="testMaxAge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;767;2;786;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests setting of max-age Cache-Control directive;;d30,767;;b1,0;;m">
				</treenode>
				<treenode node="testModified;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;686;2;711;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests setting the modification date;;d32,686;;b1,0;;m">
				</treenode>
				<treenode node="testMustRevalidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;819;2;840;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests setting of must-revalidate Cache-Control directive;;d38,819;;b1,0;;m">
				</treenode>
				<treenode node="testNotModified;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;889;2;900;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the response is able to be marked as not modified;;d35,889;;b1,0;;m">
				</treenode>
				<treenode node="testOutputCompressed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;479;2;510;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the outputCompressed method;;d40,479;;b1,0;;m">
				</treenode>
				<treenode node="testProtocol;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;590;2;597;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests getting/setting the protocol;;d32,590;;b1,0;;m">
				</treenode>
				<treenode node="testSend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;206;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the send method;;d28,206;;b1,0;;m">
				</treenode>
				<treenode node="testSendChangingContentType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;254;2;267;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the send method and changing the content type;;d67,254;;b1,0;;moriginal;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f56;254;65;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="original;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f45;254;54;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSendChangingContentTypeWithoutCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;274;2;289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the send method and changing the content type to JS without adding the charset;;d61,274;;b1,0;;m">
				</treenode>
				<treenode node="testSendContentLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;517;2;583;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the send and setting of Content-Length;;d41,517;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithLocation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;296;2;307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the send method and changing the content type;;d40,296;;b1,0;;m">
				</treenode>
				<treenode node="testSharable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;718;2;760;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests setting of public/private Cache-Control directives;;d32,718;;b1,0;;m">
				</treenode>
				<treenode node="testSharedMaxAge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;793;2;812;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests setting of s-maxage Cache-Control directive;;d36,793;;b1,0;;m">
				</treenode>
				<treenode node="testStatusCode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;118;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the statusCode method;;d34,118;;b1,0;;m">
				</treenode>
				<treenode node="testType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;134;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the type method;;d28,134;;b1,0;;m">
				</treenode>
				<treenode node="testUnmodifiedContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;625;2;647;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the response body is unset if the status code is 304 or 204;;d41,625;;b1,0;;m">
				</treenode>
				<treenode node="testVary;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php;f8;847;2;861;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests getting/setting the Vary header;;d28,847;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeRoute;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f0;26;1;565;;;;vpos;;v;;r&#xA;Description&#xA;     A single Route used by the Router to connect requests to parameter maps.;;d16,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;90;2;94;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor for a Route&#xA;&#xA;Parameters:&#xA;    string $template - Template string with parameter placeholders&#xA;    array $defaults - Array of defaults for the route&#xA;    array $options - Array of additional options for the Route;;d81,90;;b1,0;;mstring $template;;parray $defaults;;parray $options;;p">
					<treenode node="defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f40;90;49;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f61;90;69;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f29;90;38;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set_state;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f15;556;2;563;;;;vpos;;vCakeRoute;;r&#xA;Description&#xA;     Set state magic method to support var_export&#xA;&#xA;Parameters:&#xA;    array $fields - Key/Value of object attributes&#xA;&#xA;Return:&#xA;   A new instance of the route;;d45,556;;b1,5;;marray $fields;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f36;556;43;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_matchNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f11;338;2;364;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if a named parameter matches the current rules.&#xA;&#xA;Parameters:&#xA;    string $val - The value of the named parameter&#xA;    array $rule - The rule(s) to apply, can also be a match string&#xA;    string $context - An array with additional context information (controller / action);;d55,338;;b2,0;;mstring $val;;parray $rule;;pstring $context;;p">
					<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f45;338;53;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f38;338;43;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="val;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f32;338;36;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f11;271;2;325;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse passed and Named parameters into a list of passed args, and a hash of named parameters. The local and global configuration for named parameters will be used.&#xA;&#xA;Parameters:&#xA;    string $args - A string with the passed &amp; named params&#xA;    string $context - The current route context, which should contain controller/action keys&#xA;&#xA;Return:&#xA;   Array of ($pass, $named);;d48,271;;b2,0;;mstring $args;;pstring $context;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f31;271;36;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f38;271;46;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_writeRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f11;129;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Builds a route regular expression.;;d34,129;;b2,0;;m">
				</treenode>
				<treenode node="_writeUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f11;489;2;545;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a matching route array into a URL string.&#xA;&#xA;Parameters:&#xA;    array $params - The params to convert to a string URL&#xA;&#xA;Return:&#xA;   Composed route string;;d39,489;;b2,0;;marray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f30;489;37;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="compile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;113;2;119;;;;vpos;;varray;;r&#xA;Description&#xA;     Compiles the route's regular expression.&#xA;&#xA;Return:&#xA;   Returns a string regular expression of the compiled route;;d27,113;;b1,0;;m">
				</treenode>
				<treenode node="compiled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;101;2;103;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if a Route has been compiled into a regular expression.;;d28,101;;b1,0;;m">
				</treenode>
				<treenode node="match;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;397;2;478;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Check if a URL array matches this route instance.&#xA;&#xA;Parameters:&#xA;    array $url - An array of parameters to check matching with&#xA;&#xA;Return:&#xA;   Either a string URL for the parameters if they match or false;;d29,397;;b1,0;;marray $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f23;397;27;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;190;2;261;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Checks to see if the given URL can be parsed by this route.&#xA;&#xA;Parameters:&#xA;    string $url - The URL to attempt to parse&#xA;&#xA;Return:&#xA;   Boolean false on failure, otherwise an array or parameters;;d29,190;;b1,0;;mstring $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f23;190;27;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="persistParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;375;2;385;;;;vpos;;varray;;r&#xA;Description&#xA;     Apply persistent parameters to a URL array. Persistent parameters are a special key used during route creation to force route parameters to persist when omitted from a URL array.&#xA;&#xA;Parameters:&#xA;    array $url - The array to apply persistent parameters to&#xA;    array $params - An array of persistent values to replace persistent ones&#xA;&#xA;Return:&#xA;   An array with persistent parameters applied;;d46,375;;b1,0;;marray $url;;parray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f37;375;44;375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f31;375;35;375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_compiledRoute;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f11;70;26;70;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_greedy;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f11;63;19;63;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_headerMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f11;77;22;77;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;48;17;48;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;34;13;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php;f8;55;17;55;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeRouteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f0;26;1;1009;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for CakeRoute;;d41,26;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;33;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="testBasicRouteCompiling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;57;2;87;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Route compiling.;;d43,57;;b1,0;;m">
				</treenode>
				<treenode node="testComplexRouteCompilingAndParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;179;2;230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test more complex route compiling &amp; parsing with mid route greedy stars and optional routing parameters;;d55,179;;b1,0;;m">
				</treenode>
				<treenode node="testConstruction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;43;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the construction of a CakeRoute;;d36,43;;b1,0;;m">
				</treenode>
				<treenode node="testGreedyRouteFailureNamedParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;337;2;341;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that non-greedy routes fail with extra passed args;;d52,337;;b1,0;;m">
				</treenode>
				<treenode node="testGreedyRouteFailurePassedArg;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;322;2;330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that non-greedy routes fail with extra passed args;;d51,322;;b1,0;;m">
				</treenode>
				<treenode node="testMatchBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;237;2;315;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that routes match their pattern.;;d34,237;;b1,0;;m">
				</treenode>
				<treenode node="testMatchGreedyNamedExcludesPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;757;2;763;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Having greedNamed enabled should not capture routing.prefixes.;;d56,757;;b1,0;;m">
				</treenode>
				<treenode node="testMatchNamedParametersArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;826;2;855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that match can handle array named parameters;;d49,826;;b1,0;;m">
				</treenode>
				<treenode node="testMatchSimilarParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;862;2;873;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test matching of parameters where one parameter name starts with another parameter name;;d46,862;;b1,0;;m">
				</treenode>
				<treenode node="testMatchTrailing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;880;2;890;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test match() with trailing ** style routes.;;d37,880;;b1,0;;m">
				</treenode>
				<treenode node="testMatchWithFalseyValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;348;2;354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that falsey values do not interrupt a match.;;d45,348;;b1,0;;m">
				</treenode>
				<treenode node="testMatchWithNamedParametersAndPassedArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;361;2;392;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test match() with greedy routes, named parameters and passed args.;;d61,361;;b1,0;;m">
				</treenode>
				<treenode node="testMatchWithPatterns;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;450;2;463;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that match with patterns works.;;d41,450;;b1,0;;m">
				</treenode>
				<treenode node="testNamedParamsWithNullFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;439;2;443;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that named params with null/false are excluded;;d48,439;;b1,0;;m">
				</treenode>
				<treenode node="testParse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;528;2;551;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the parse method of CakeRoute.;;d29,528;;b1,0;;m">
				</treenode>
				<treenode node="testParseArrayNamedParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;770;2;819;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that parsing array format named parameters works;;d49,770;;b1,0;;m">
				</treenode>
				<treenode node="testParseGreedyNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;732;2;750;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that greedyNamed ignores rules.;;d40,732;;b1,0;;m">
				</treenode>
				<treenode node="testParseNamedKeyUrlDecode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;419;2;432;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that keys at named parameters are urldecoded;;d46,419;;b1,0;;m">
				</treenode>
				<treenode node="testParseNamedParametersUrlDecode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;399;2;412;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that named parameters are urldecoded;;d53,399;;b1,0;;m">
				</treenode>
				<treenode node="testParseNamedParametersWithRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;663;2;725;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that only named parameter rules are followed.;;d53,663;;b1,0;;m">
				</treenode>
				<treenode node="testParsePassedArgument;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;634;2;656;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the parseArgs method;;d43,634;;b1,0;;m">
				</treenode>
				<treenode node="testParseTrailing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;917;2;936;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the /** special type on parsing.;;d37,917;;b1,0;;m">
				</treenode>
				<treenode node="testParseTrailingUTF8;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;943;2;953;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the /** special type on parsing - UTF8.;;d41,943;;b1,0;;m">
				</treenode>
				<treenode node="testParseUrlDecodeElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;558;2;573;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that :key elements are urldecoded;;d46,558;;b1,0;;m">
				</treenode>
				<treenode node="testParseWithHttpHeaderConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;597;2;602;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that http header conditions can cause route failures.;;d53,597;;b1,0;;m">
				</treenode>
				<treenode node="testParseWithPassDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;580;2;590;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test numerically indexed defaults, get appended to pass;;d45,580;;b1,0;;m">
				</treenode>
				<treenode node="testPassArgRestructure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;897;2;910;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test restructuring args with pass key;;d42,897;;b1,0;;m">
				</treenode>
				<treenode node="testPatternOnAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;609;2;627;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that patterns work for :action;;d39,609;;b1,0;;m">
				</treenode>
				<treenode node="testPersistParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;470;2;487;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test persistParams ability to persist parameters from $params and remove params.;;d37,470;;b1,0;;m">
				</treenode>
				<treenode node="testPersistParamsNonArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;494;2;521;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test persist with a non array value;;d45,494;;b1,0;;m">
				</treenode>
				<treenode node="testRouteCompilingWithParamPatterns;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;109;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test compiling routes with keys that have patterns;;d55,109;;b1,0;;m">
				</treenode>
				<treenode node="testRouteParameterOverlap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;94;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that route parameters that overlap don't cause errors.;;d45,94;;b1,0;;m">
				</treenode>
				<treenode node="testSetState;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;984;2;1007;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test for __set_state magic method on CakeRoute;;d32,984;;b1,0;;m">
				</treenode>
				<treenode node="testUTF8PatternOnSection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php;f8;960;2;977;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that utf-8 patterns work for :section;;d44,960;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f0;28;24;28;;;;vpos;;v;;r&#xA;Description&#xA;     Base Class for Schema management.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="CakeSchemaTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;392;1;1012;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeSchemaTest;;d42,392;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;411;2;415;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,411;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;422;2;429;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,422;;b1,0;;m">
				</treenode>
				<treenode node="testCompareEmptyStringAndNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;792;2;814;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test comparing '' and null and making sure they are different.;;d49,792;;b1,0;;m">
				</treenode>
				<treenode node="testCompareVarcharToDatetime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;912;2;953;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test comparing with field changed from VARCHAR to DATETIME;;d48,912;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;656;2;686;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that tables are generated correctly;;d37,656;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaComparison;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;712;2;785;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaComparison method;;d40,712;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaCreateTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;988;2;1011;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaCreateTable method;;d41,988;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaLoading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;960;2;964;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaLoading method;;d37,960;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaLoadingFromPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;971;2;981;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test loading schema files inside of plugins.;;d47,971;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;436;2;439;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaName method;;d34,436;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;446;2;492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaRead method;;d34,446;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaReadWithAppModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;499;2;514;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaReadWithAppModel method;;d46,499;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaReadWithConfigPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;561;2;580;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reading schema with config prefix.;;d50,561;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaReadWithCrossDatabase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;616;2;649;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reading schema with tables from another database.;;d51,616;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaReadWithOddTablePrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;521;2;535;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaReadWithOddTablePrefix method;;d52,521;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaReadWithPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;587;2;609;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reading schema from plugins.;;d45,587;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaReadWithTablePrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;542;2;554;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test read() with tablePrefix properties.;;d49,542;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;693;2;705;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchemaWrite method;;d35,693;;b1,0;;m">
				</treenode>
				<treenode node="testTableParametersAndIndexComparison;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;821;2;905;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test comparing tableParameters and indexes.;;d57,821;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;399;17;399;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f0;34;1;747;;;;vpos;;v;;r&#xA;Description&#xA;     Session class for CakePHP.;;d18,34;;b0,0;;m">
				<treenode node="_checkValid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;677;2;704;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to create a new session.;;d41,677;;b2,5;;m">
				</treenode>
				<treenode node="_configureSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;472;2;536;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to initialize a session, based on CakePHP core settings.;;d47,472;;b2,5;;m">
				</treenode>
				<treenode node="_cookieName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;543;2;552;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get session cookie name.;;d41,543;;b2,5;;m">
				</treenode>
				<treenode node="_defaultConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;589;2;648;;;;vpos;;vbool;;r&#xA;Description&#xA;     Get one of the prebaked default session configurations.&#xA;&#xA;Parameters:&#xA;    string $name - Config name&#xA;&#xA;Return:&#xA;   |array;;d49,589;;b2,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f42;589;47;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_error;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;302;2;307;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return error description for given error number.&#xA;&#xA;Parameters:&#xA;    int $errorNumber - Error to set&#xA;&#xA;Return:&#xA;   Error as string;;d48,302;;b2,5;;mint $errorNumber;;p">
					<treenode node="errorNumber;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f34;302;46;302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getHandler;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;570;2;581;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Find the handler class and make sure it implements the correct interface.&#xA;&#xA;Parameters:&#xA;    string $handler - Handler name;;d49,570;;b2,5;;mstring $handler;;p">
					<treenode node="handler;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f39;570;47;570;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_hasSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;559;2;561;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether a session exists;;d41,559;;b2,5;;m">
				</treenode>
				<treenode node="_overwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;283;2;294;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Used to write new data to _SESSION, since PHP doesn't like us setting the _SESSION var itself.&#xA;&#xA;Parameters:&#xA;    array - &amp;$old Set of old variables =&gt; values&#xA;    array $new - New set of variable =&gt; value;;d51,283;;b2,5;;marray;;parray $new;;p">
					<treenode node="new;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f45;283;49;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="old;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f39;283;43;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_returnSessionVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;401;2;407;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns all session variables.&#xA;&#xA;Return:&#xA;   Full $_SESSION array, or false on error;;d48,401;;b2,5;;m">
				</treenode>
				<treenode node="_setError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;739;2;745;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to set an internal error message.&#xA;&#xA;Parameters:&#xA;    int $errorNumber - Number of the error&#xA;    string $errorMessage - Description of the error;;d66,739;;b2,5;;mint $errorNumber;;pstring $errorMessage;;p">
					<treenode node="errorMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f51;739;64;739;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="errorNumber;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f37;739;49;739;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setHost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;185;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the host name&#xA;&#xA;Parameters:&#xA;    string $host - Hostname;;d43,185;;b2,5;;mstring $host;;p">
					<treenode node="host;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f36;185;41;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;165;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup the Path variable&#xA;&#xA;Parameters:&#xA;    string $base - base path;;d50,165;;b2,5;;mstring $base;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f36;165;41;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_startSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;655;2;670;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper method to start a session&#xA;&#xA;Return:&#xA;   Success;;d43,655;;b2,5;;m">
				</treenode>
				<treenode node="_validAgentAndTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;346;2;353;;;;vpos;;vbool;;r&#xA;Description&#xA;     Tests that the user agent is valid and that the session hasn't 'timed out'. Since timeouts are implemented in CakeSession it checks the current self::$time against the time the session is set to expire. The User agent is only checked if Session.checkAgent == true.;;d48,346;;b2,5;;m">
				</treenode>
				<treenode node="_writeConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;711;2;715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Writes configuration variables to the session;;d42,711;;b2,5;;m">
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;229;2;235;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given variable is set in session.&#xA;&#xA;Parameters:&#xA;    string $name - Variable name to check for&#xA;&#xA;Return:&#xA;   True if variable is there;;d44,229;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f30;229;35;229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;458;2;462;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Clears the session, the session id, and renews the session.;;d32,458;;b1,5;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;268;2;274;;;;vpos;;vbool;;r&#xA;Description&#xA;     Removes a variable from session.&#xA;&#xA;Parameters:&#xA;    string $name - Session variable to remove&#xA;&#xA;Return:&#xA;   Success;;d38,268;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f31;268;36;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;439;2;451;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to destroy invalid sessions.;;d34,439;;b1,5;;m">
				</treenode>
				<treenode node="error;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;314;2;319;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns last occurred error as a string, if any.&#xA;&#xA;Return:&#xA;   Error description as a string, or false;;d32,314;;b1,5;;m">
				</treenode>
				<treenode node="id;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;251;2;260;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the session id. Calling this method will not auto start the session. You might have to manually assert a started session.&#xA;&#xA;Parameters:&#xA;    string $id - Id to replace the current session id&#xA;&#xA;Return:&#xA;   Session id;;d39,251;;b1,5;;mstring $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f27;251;30;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;142;2;157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Pseudo constructor.&#xA;&#xA;Parameters:&#xA;    string $base - The base path for the Session;;d43,142;;b1,5;;mstring $base;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f29;142;34;142;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;378;2;394;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns given session variable, or all of them, if no parameters given.&#xA;&#xA;Parameters:&#xA;    string|array $name - The name of the session variable (or a path as sent to Set&#xA;&#xA;Return:&#xA;   The value of the session variable, null if session not available,;;d43,378;;b1,5;;mstring|array $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f29;378;34;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renew;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;722;2;730;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Restarts this session.;;d32,722;;b1,5;;m">
				</treenode>
				<treenode node="start;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;197;2;212;;;;vpos;;vbool;;r&#xA;Description&#xA;     Starts the Session.&#xA;&#xA;Return:&#xA;   True if session was started;;d32,197;;b1,5;;m">
				</treenode>
				<treenode node="started;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;219;2;221;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine if Session has been started.&#xA;&#xA;Return:&#xA;   True if session has been started;;d34,219;;b1,5;;m">
				</treenode>
				<treenode node="userAgent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;361;2;369;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get / Set the user agent&#xA;&#xA;Parameters:&#xA;    string $userAgent - Set the user agent&#xA;&#xA;Return:&#xA;   Current user agent;;d53,361;;b1,5;;mstring $userAgent;;p">
					<treenode node="userAgent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f34;361;44;361;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="valid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;326;2;336;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if session is valid.&#xA;&#xA;Return:&#xA;   Success;;d32,326;;b1,5;;m">
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;416;2;432;;;;vpos;;vbool;;r&#xA;Description&#xA;     Writes value to given session variable name.&#xA;&#xA;Parameters:&#xA;    string|array $name - Name of variable&#xA;    string $value - Value to write&#xA;&#xA;Return:&#xA;   True if the write was successful, false if the write failed;;d52,416;;b1,5;;mstring|array $name;;pstring $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f30;416;35;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f37;416;43;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_cookieName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;134;30;134;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_initialized;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;127;31;127;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_userAgent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f18;55;29;55;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="cookieLifeTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;83;30;83;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;48;21;48;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="host;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;104;20;104;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;97;18;97;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="lastError;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;69;25;69;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;62;20;62;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="requestCountdown;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;120;32;120;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="sessionTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;90;27;90;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;76;20;76;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="timeout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;111;23;111;;;;vposint;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="valid;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php;f15;41;21;41;;;;vposbool;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="CakeSessionException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;546;1;547;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for CakeSession. This exception will be thrown from CakeSession when it encounters an error.;;d49,546;;b0,0;;m">
			</treenode>
			<treenode node="CakeSessionFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CakeSessionFixture.php;f0;21;1;40;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Fixture class for the default session configuration;;d49,21;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CakeSessionFixture.php;f8;28;15;28;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CakeSessionFixture.php;f8;39;16;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeSessionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f0;70;1;785;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeSessionTest class;;d43,70;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;107;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,107;;b1,0;;m">
				</treenode>
				<treenode node="setupBeforeClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f15;86;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup before class.;;d43,86;;b1,5;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;123;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,123;;b1,0;;m">
				</treenode>
				<treenode node="teardownAfterClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f15;97;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     teardown after class;;d45,97;;b1,5;;m">
				</treenode>
				<treenode node="testCakeSessionPathContainsQuestion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;182;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCakeSessionPathContainsParams;;d55,182;;b1,0;;m">
				</treenode>
				<treenode node="testCakeSessionPathEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;172;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCakeSessionPathEmpty;;d44,172;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;242;2;247;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheck method;;d29,242;;b1,0;;m">
				</treenode>
				<treenode node="testCheckEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;430;2;432;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckEmpty;;d34,430;;b1,0;;m">
				</treenode>
				<treenode node="testCheckingSavedEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;397;2;409;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckingSavedEmpty method;;d42,397;;b1,0;;m">
				</treenode>
				<treenode node="testCheckKeyWithSpaces;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;416;2;423;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckKeyWithSpaces method;;d42,416;;b1,0;;m">
				</treenode>
				<treenode node="testCheckUserAgentFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;473;2;477;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckUserAgentFalse method;;d43,473;;b1,0;;m">
				</treenode>
				<treenode node="testCheckUserAgentTrue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;484;2;492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckUserAgentTrue method;;d42,484;;b1,0;;m">
				</treenode>
				<treenode node="testCookieTimeoutFallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;735;2;756;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that cookieTimeout matches timeout when unspecified.;;d45,735;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;366;2;376;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDel method;;d30,366;;b1,0;;m">
				</treenode>
				<treenode node="testDestroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;383;2;390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDestroy method;;d31,383;;b1,0;;m">
				</treenode>
				<treenode node="testId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;335;2;345;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testId method;;d26,335;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidSessionRenew;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;764;2;783;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Proves that invalid sessions will be destroyed and re-created if invalid;;d43,764;;b1,0;;m">
				</treenode>
				<treenode node="testKeyExploit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;439;2;446;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test key exploitation;;d34,439;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteWithCacheStorage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;589;2;618;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteWithCacheStorage method;;d52,589;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteWithCakeStorage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;499;2;527;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteWithCakeStorage method;;d51,499;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteWithCustomCacheConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;625;2;643;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that changing the config name of the cache config works.;;d57,625;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteWithDatabaseStorage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;650;2;696;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteWithDatabaseStorage method;;d55,650;;b1,0;;m">
				</treenode>
				<treenode node="testReadingSavedEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;453;2;466;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadingSavedEmpty method;;d41,453;;b1,0;;m">
				</treenode>
				<treenode node="testReadyEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;281;2;283;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadyEmpty;;d34,281;;b1,0;;m">
				</treenode>
				<treenode node="testSessionConfigIniSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;136;2;152;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting ini properties with Session configuration.;;d47,136;;b1,0;;m">
				</treenode>
				<treenode node="testSessionPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;159;2;165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionPath;;d35,159;;b1,0;;m">
				</treenode>
				<treenode node="testSessionTimeout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;703;2;728;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionTimeout method;;d38,703;;b1,0;;m">
				</treenode>
				<treenode node="testSetHost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;192;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetHost;;d31,192;;b1,0;;m">
				</treenode>
				<treenode node="testSetHostWithPort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;203;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetHostWithPort;;d39,203;;b1,0;;m">
				</treenode>
				<treenode node="testSimpleRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;254;2;274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSimpleRead method;;d34,254;;b1,0;;m">
				</treenode>
				<treenode node="testStarted;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;352;2;359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStarted method;;d31,352;;b1,0;;m">
				</treenode>
				<treenode node="testUsingAppLibsHandler;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;534;2;555;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using a handler from app/Model/Datasource/Session.;;d43,534;;b1,0;;m">
				</treenode>
				<treenode node="testUsingPluginHandler;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;562;2;582;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using a handler from a plugin.;;d42,562;;b1,0;;m">
				</treenode>
				<treenode node="testValidBogusUserAgent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;214;2;221;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test valid with bogus user agent.;;d43,214;;b1,0;;m">
				</treenode>
				<treenode node="testValidTimeExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;228;2;235;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test valid with bogus user agent.;;d39,228;;b1,0;;m">
				</treenode>
				<treenode node="testWriteArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;290;2;301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test writing a hash of values/;;d34,290;;b1,0;;m">
				</treenode>
				<treenode node="testWriteEmptyKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;308;2;312;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWriteEmptyKey;;d37,308;;b1,0;;m">
				</treenode>
				<treenode node="testWriteOverwriteStringValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;319;2;328;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test overwriting a string value as if it were an array.;;d49,319;;b1,0;;m">
				</treenode>
				<treenode node="_gcDivisor;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f18;72;29;72;;;;vpos;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f8;79;17;79;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeSocket;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f0;27;1;386;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP network socket connection class.;;d17,27;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;116;2;118;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    array $config - Socket configuration, which will be merged with the base configuration;;d48,116;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f29;116;36;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;329;2;331;;;;vpos;;v;;r&#xA;Description&#xA;     Destructor, used to disconnect from current connection.;;d30,329;;b1,0;;m">
				</treenode>
				<treenode node="_connectionErrorHandler;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f11;185;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     socket_stream_client() does not populate errNum, or $errStr when there are connection errors, as in the case of SSL verification failure.&#xA;&#xA;Parameters:&#xA;    int $code - Code&#xA;    string $message - Message;;d61,185;;b2,0;;mint $code;;pstring $message;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f44;185;49;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f51;185;59;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="address;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;218;2;223;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the IP address of the current connection.&#xA;&#xA;Return:&#xA;   IP address;;d27,218;;b1,0;;m">
				</treenode>
				<treenode node="addresses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;230;2;235;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets all IP addresses associated with the current connection.&#xA;&#xA;Return:&#xA;   IP addresses;;d29,230;;b1,0;;m">
				</treenode>
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;126;2;173;;;;vpos;;vbool;;r&#xA;Description&#xA;     Connects the socket to the given host and port.&#xA;&#xA;Return:&#xA;   Success;;d27,126;;b1,0;;m">
				</treenode>
				<treenode node="context;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;194;2;199;;;;vpos;;vnull;;r&#xA;Description&#xA;     Gets the connection context.&#xA;&#xA;Return:&#xA;   |array Null when there is no connection, an array when there is;;d27,194;;b1,0;;m">
				</treenode>
				<treenode node="disconnect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;313;2;324;;;;vpos;;vbool;;r&#xA;Description&#xA;     Disconnects the socket from the current connection.&#xA;&#xA;Return:&#xA;   Success;;d30,313;;b1,0;;m">
				</treenode>
				<treenode node="enableCrypto;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;365;2;384;;;;vpos;;vbool;;r&#xA;Description&#xA;     Encrypts current stream socket, using one of the defined encryption methods.&#xA;&#xA;Parameters:&#xA;    string $type - Type which can be one of 'sslv2', 'sslv3', 'sslv23' or 'tls'&#xA;    string $clientOrServer - Can be one of 'client', 'server'&#xA;    bool $enable - Enable or disable encryption&#xA;&#xA;Return:&#xA;   True on success;;d81,365;;b1,0;;mstring $type;;pstring $clientOrServer;;pbool $enable;;p">
					<treenode node="clientOrServer;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f37;365;52;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="enable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f65;365;72;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f30;365;35;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="host;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;206;2;211;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the host name of the current connection.&#xA;&#xA;Return:&#xA;   Host name;;d24,206;;b1,0;;m">
				</treenode>
				<treenode node="lastError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;242;2;247;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the last error as a string.&#xA;&#xA;Return:&#xA;   |null Last error;;d29,242;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;289;2;306;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Reads data from the socket. Returns false if no data is available or no connection could be established.&#xA;&#xA;Parameters:&#xA;    int $length - Optional buffer length to read;s defaults to 1024&#xA;&#xA;Return:&#xA;   Socket data;;d38,289;;b1,0;;mint $length;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f22;289;29;289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;339;2;352;;;;vpos;;vbool;;r&#xA;Description&#xA;     Resets the state of this Socket instance to it's initial state (before Object::__construct got executed)&#xA;&#xA;Parameters:&#xA;    array $state - Array with key and values to reset&#xA;&#xA;Return:&#xA;   True on success;;d38,339;;b1,0;;marray $state;;p">
					<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f23;339;29;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setLastError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;256;2;258;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the last error.&#xA;&#xA;Parameters:&#xA;    int $errNum - Error code&#xA;    string $errStr - Error string;;d48,256;;b1,0;;mint $errNum;;pstring $errStr;;p">
					<treenode node="errNum;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f30;256;37;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="errStr;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f39;256;46;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;266;2;280;;;;vpos;;vbool;;r&#xA;Description&#xA;     Writes data to the socket.&#xA;&#xA;Parameters:&#xA;    string $data - The data to write to the socket&#xA;&#xA;Return:&#xA;   Success;;d30,266;;b1,0;;mstring $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f23;266;28;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_baseConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f11;41;23;41;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_connectionErrors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f11;108;29;108;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_encryptMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f11;89;27;89;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;54;15;54;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="connected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;68;18;68;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;61;19;61;;;;vposresource;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;34;20;34;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="encrypted;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;82;18;82;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lastError;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php;f8;75;18;75;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeSocketTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f0;25;1;372;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SocketTest class;;d42,25;;b0,0;;m">
				<treenode node="_connectSocketToSslTls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f11;272;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     _connectSocketToSslTls;;d45,272;;b2,0;;m">
				</treenode>
				<treenode node="invalidConnections;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f15;108;2;113;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider function for testInvalidConnection;;d45,108;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;32;2;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;42;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,42;;b1,0;;m">
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;52;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConstruct method;;d33,52;;b1,0;;m">
				</treenode>
				<treenode node="testEnableCrypto;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;301;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnableCrypto;;d36,301;;b1,0;;m">
				</treenode>
				<treenode node="testEnableCryptoBadMode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;289;2;294;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnableCryptoBadMode;;d43,289;;b1,0;;m">
				</treenode>
				<treenode node="testEnableCryptoEnableStatus;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;343;2;349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnableCryptoEnableStatus;;d48,343;;b1,0;;m">
				</treenode>
				<treenode node="testEnableCryptoExceptionDisableTwice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;332;2;336;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnableCryptoExceptionDisableTwice;;d57,332;;b1,0;;m">
				</treenode>
				<treenode node="testEnableCryptoExceptionEnableTwice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;319;2;324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnableCryptoExceptionEnableTwice;;d56,319;;b1,0;;m">
				</treenode>
				<treenode node="testEnableCryptoSocketExceptionNoSsl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;242;2;250;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEncrypt;;d56,242;;b1,0;;m">
				</treenode>
				<treenode node="testEnableCryptoSocketExceptionNoTls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;258;2;265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnableCryptoSocketExceptionNoTls;;d56,258;;b1,0;;m">
				</treenode>
				<treenode node="testGetContext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;356;2;370;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the context for a socket.;;d34,356;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;122;2;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInvalidConnection method;;d46,122;;b1,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f39;122;44;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLastError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;212;2;216;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLastError method;;d33,212;;b1,0;;m">
				</treenode>
				<treenode node="testReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;223;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReset method;;d29,223;;b1,0;;m">
				</treenode>
				<treenode node="testSocketConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;83;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSocketConnection method;;d40,83;;b1,0;;m">
				</treenode>
				<treenode node="testSocketHost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;132;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSocketHost method;;d34,132;;b1,0;;m">
				</treenode>
				<treenode node="testSocketReading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;171;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSocketReading method;;d37,171;;b1,0;;m">
				</treenode>
				<treenode node="testSocketWriting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;157;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSocketWriting method;;d37,157;;b1,0;;m">
				</treenode>
				<treenode node="testTimeOutConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php;f8;192;2;205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTimeOutConnection method;;d41,192;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestCase;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f9;26;1;747;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r&#xA;Description&#xA;     CakeTestCase class;;d63,26;;b0,0;;m">
				<treenode node="_assertAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;515;2;536;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check the attributes as part of an assertTags() check.&#xA;&#xA;Parameters:&#xA;    array $assertions - Assertions to run&#xA;    string $string - The HTML string to check;;d60,515;;b2,0;;marray $assertions;;pstring $string;;p">
					<treenode node="assertions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f38;515;49;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f51;515;58;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertEqual;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;549;2;551;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for assertEquals&#xA;&#xA;Parameters:&#xA;    mixed $result&#xA;    mixed $expected&#xA;    string $message - the text to display if the assertion is not correct;;d74,549;;b2,5;;mmixed $result;;pmixed $expected;;pstring $message;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f48;549;57;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f59;549;67;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f39;549;46;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertIdentical;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;588;2;590;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for assertEquals&#xA;&#xA;Parameters:&#xA;    mixed $actual&#xA;    mixed $expected&#xA;    string $message - the text to display if the assertion is not correct;;d78,588;;b2,5;;mmixed $actual;;pmixed $expected;;pstring $message;;p">
					<treenode node="actual;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f43;588;50;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f52;588;61;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f63;588;71;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertIsA;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;676;2;678;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper for assertIsA&#xA;&#xA;Parameters:&#xA;    string $object&#xA;    string $type&#xA;    string $message;;d68,676;;b2,5;;mstring $object;;pstring $type;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f53;676;61;676;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f37;676;44;676;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f46;676;51;676;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertNoErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;624;2;625;;;;vpos;;vvoid;;r&#xA;Description&#xA;     assert no errors;;d37,624;;b2,0;;m">
				</treenode>
				<treenode node="assertNoPattern;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;614;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for assertNotRegExp&#xA;&#xA;Parameters:&#xA;    mixed $pattern - a regular expression&#xA;    string $string - the text to be matched&#xA;    string $message - the text to display if the assertion is not correct;;d77,614;;b2,5;;mmixed $pattern;;pstring $string;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f62;614;70;614;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f43;614;51;614;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f53;614;60;614;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertNotEqual;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;562;2;564;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for assertNotEquals&#xA;&#xA;Parameters:&#xA;    mixed $result&#xA;    mixed $expected&#xA;    string $message - the text to display if the assertion is not correct;;d77,562;;b2,5;;mmixed $result;;pmixed $expected;;pstring $message;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f51;562;60;562;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f62;562;70;562;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f42;562;49;562;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertNotIdentical;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;601;2;603;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for assertNotEquals&#xA;&#xA;Parameters:&#xA;    mixed $actual&#xA;    mixed $expected&#xA;    string $message - the text to display if the assertion is not correct;;d81,601;;b2,5;;mmixed $actual;;pmixed $expected;;pstring $message;;p">
					<treenode node="actual;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f46;601;53;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f55;601;64;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f66;601;74;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertPattern;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;575;2;577;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for assertRegexp&#xA;&#xA;Parameters:&#xA;    mixed $pattern - a regular expression&#xA;    string $string - the text to be matched&#xA;    string $message - the text to display if the assertion is not correct;;d75,575;;b2,5;;mmixed $pattern;;pstring $string;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f60;575;68;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f41;575;49;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f51;575;58;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertPostConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;188;2;191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Announces the end of a test.;;d43,188;;b2,0;;m">
				</treenode>
				<treenode node="assertPreConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;178;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Announces the start of a test.;;d42,178;;b2,0;;m">
				</treenode>
				<treenode node="assertReference;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;663;2;665;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for assertSame&#xA;&#xA;Parameters:&#xA;    mixed $first&#xA;    mixed $second&#xA;    string $message - the text to display if the assertion is not correct;;d77,663;;b2,5;;mmixed $first;;pmixed $second;;pstring $message;;p">
					<treenode node="first;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f44;663;50;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f62;663;70;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="second;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f53;663;60;663;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;378;2;506;;;;vpos;;vbool;;r&#xA;Description&#xA;     Takes an array $expected and generates a regex from it to match the provided $string. Samples for $expected:&#xA;&#xA;Parameters:&#xA;    string $string - An HTML/XHTML/XML string&#xA;    array $expected - An array, see above&#xA;    string $fullDebug - Whether or not more verbose output should be used;;d68,378;;b1,0;;mstring $string;;parray $expected;;pstring $fullDebug;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f37;378;46;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fullDebug;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f48;378;58;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f28;378;35;378;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextContains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;314;2;318;;;;vpos;;vbool;;r&#xA;Description&#xA;     Assert that a string contains another string, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $needle - The string to search for&#xA;    string $haystack - The string to search through&#xA;    string $message - The message to display on failure&#xA;    bool $ignoreCase - Whether or not the search should be case-sensitive;;d92,314;;b1,0;;mstring $needle;;pstring $haystack;;pstring $message;;pbool $ignoreCase;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f45;314;54;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ignoreCase;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f71;314;82;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f56;314;64;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f36;314;43;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextEndsNotWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;298;2;302;;;;vpos;;vbool;;r&#xA;Description&#xA;     Asserts that a string ends not with a given prefix, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $suffix - The suffix to not find&#xA;    string $string - The string to search&#xA;    string $message - The message to use for failure;;d72,298;;b1,0;;mstring $suffix;;pstring $string;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f57;298;65;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f48;298;55;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="suffix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f39;298;46;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextEndsWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;283;2;287;;;;vpos;;vbool;;r&#xA;Description&#xA;     Asserts that a string ends with a given prefix, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $suffix - The suffix to find&#xA;    string $string - The string to search&#xA;    string $message - The message to use for failure;;d69,283;;b1,0;;mstring $suffix;;pstring $string;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f54;283;62;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f45;283;52;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="suffix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f36;283;43;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextEquals;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;238;2;242;;;;vpos;;vbool;;r&#xA;Description&#xA;     Assert text equality, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $expected - The expected value&#xA;    string $result - The actual value&#xA;    string $message - message The message to use for failure;;d69,238;;b1,0;;mstring $expected;;pstring $result;;pstring $message;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f34;238;43;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f54;238;62;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f45;238;52;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextNotContains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;330;2;334;;;;vpos;;vbool;;r&#xA;Description&#xA;     Assert that a text doesn't contain another text, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $needle - The string to search for&#xA;    string $haystack - The string to search through&#xA;    string $message - The message to display on failure&#xA;    bool $ignoreCase - Whether or not the search should be case-sensitive;;d95,330;;b1,0;;mstring $needle;;pstring $haystack;;pstring $message;;pbool $ignoreCase;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f48;330;57;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ignoreCase;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f74;330;85;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f59;330;67;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f39;330;46;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextNotEquals;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;223;2;227;;;;vpos;;vbool;;r&#xA;Description&#xA;     Assert text equality, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $expected - The expected value&#xA;    string $result - The actual value&#xA;    string $message - The message to use for failure;;d72,223;;b1,0;;mstring $expected;;pstring $result;;pstring $message;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f37;223;46;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f57;223;65;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f48;223;55;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextStartsNotWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;268;2;272;;;;vpos;;vbool;;r&#xA;Description&#xA;     Asserts that a string starts not with a given prefix, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix to not find&#xA;    string $string - The string to search&#xA;    string $message - The message to use for failure;;d74,268;;b1,0;;mstring $prefix;;pstring $string;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f59;268;67;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f41;268;48;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f50;268;57;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertTextStartsWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;253;2;257;;;;vpos;;vbool;;r&#xA;Description&#xA;     Asserts that a string starts with a given prefix, ignoring differences in newlines. Helpful for doing cross platform tests of blocks of text.&#xA;&#xA;Parameters:&#xA;    string $prefix - The prefix to check for&#xA;    string $string - The string to search in&#xA;    string $message - The message to use for failure;;d71,253;;b1,0;;mstring $prefix;;pstring $string;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f56;253;64;253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f38;253;45;253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f47;253;54;253;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assertWithinMargin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f18;689;2;693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility function to test if value is between an acceptable range&#xA;&#xA;Parameters:&#xA;    mixed $result&#xA;    mixed $expected&#xA;    mixed $margin - the rage of acceptation&#xA;    string $message - the text to display if the assertion is not correct;;d90,689;;b2,5;;mmixed $result;;pmixed $expected;;pmixed $margin;;pstring $message;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f55;689;64;689;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="margin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f66;689;73;689;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f75;689;83;689;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f46;689;53;689;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="date;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f15;167;2;169;;;;vpos;;vstring;;r&#xA;Description&#xA;     See CakeTestSuiteDispatcher::date()&#xA;&#xA;Parameters:&#xA;    string $format - format to be used;;d54,167;;b1,5;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f29;167;36;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="endTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;103;2;104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Called when a test case method has been executed (to be overridden when needed.)&#xA;&#xA;Parameters:&#xA;    string $method - Test method about that was executed;;d34,103;;b1,0;;mstring $method;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f25;103;32;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expectError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;635;2;640;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for setExpectedException&#xA;&#xA;Parameters:&#xA;    mixed $expected - the name of the Exception or error&#xA;    string $message - the text to display if the assertion is not correct;;d66,635;;b2,0;;mmixed $expected;;pstring $message;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f32;635;41;635;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f51;635;59;635;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expectException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;650;2;652;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Compatibility wrapper function for setExpectedException&#xA;&#xA;Parameters:&#xA;    mixed $expected - the name of the Exception&#xA;    string $message - the text to display if the assertion is not correct;;d72,650;;b2,0;;mmixed $expected;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f57;650;65;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f36;650;41;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getMockForModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;719;2;745;;;;vpos;;vModel;;r&#xA;Description&#xA;     Mock a model, maintain fixtures and table association&#xA;&#xA;Parameters:&#xA;    string $model - The model to get a mock for&#xA;    mixed $methods - The list of methods to mock&#xA;    array $config - The config data for the mock's constructor;;d80,719;;b1,0;;mstring $model;;pmixed $methods;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f61;719;68;719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f41;719;49;719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f33;719;39;719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadFixtures;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;204;2;212;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Chooses which fixtures to load for a given test;;d32,204;;b1,0;;m">
				</treenode>
				<treenode node="run;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;77;2;86;;;;vpos;;vPHPUnit_Framework_TestResult;;r&#xA;Description&#xA;     Runs the test case and collects the results in a TestResult object. If no TestResult object is passed a new one will be created. This method is run for each test method in this class&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestResult $result - The test result object;;d66,77;;b1,0;;mPHPUnit_Framework_TestResult $result;;p">
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f50;77;57;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;127;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup the test case, backup the static object values so they can be restored. Specifically backs up the contents of Configure and paths in App if they have not already been backed up.;;d25,127;;b1,0;;m">
				</treenode>
				<treenode node="skipIf;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;113;2;118;;;;vpos;;vbool;;r&#xA;Description&#xA;     Overrides SimpleTestCase::skipIf to provide a boolean return value&#xA;&#xA;Parameters:&#xA;    bool $shouldSkip - Whether or not the test should be skipped&#xA;    string $message - The message to display;;d52,113;;b1,0;;mbool $shouldSkip;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f37;113;45;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="shouldSkip;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f24;113;35;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="skipUnless;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;702;2;707;;;;vpos;;vbool;;r&#xA;Description&#xA;     Compatibility function for skipping.&#xA;&#xA;Parameters:&#xA;    bool $condition - Condition to trigger skipping&#xA;    string $message - Message for skip;;d58,702;;b2,0;;mbool $condition;;pstring $message;;p">
					<treenode node="condition;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f31;702;41;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f43;702;51;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;94;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Called when a test case method is about to start (to be overridden when needed.)&#xA;&#xA;Parameters:&#xA;    string $method - Test method about to get executed;;d36,94;;b1,0;;mstring $method;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f27;94;34;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;146;2;159;;;;vpos;;vvoid;;r&#xA;Description&#xA;     teardown any static object changes and restore them.;;d28,146;;b1,0;;m">
				</treenode>
				<treenode node="_configure;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;59;22;59;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_pathRestore;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f11;66;24;66;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;41;21;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="dropTables;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;52;19;52;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtureManager;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php;f8;33;23;33;;;;vposCakeFixtureManager;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestCaseTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f0;46;1;513;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeTestCaseTest;;d44,46;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;70;2;73;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,70;;b1,0;;m">
				</treenode>
				<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f15;60;2;63;;;;vpos;;vvoid;;r&#xA;Description&#xA;     CakeTestCaseTest::setUpBeforeClass();;d43,60;;b1,5;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;80;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,80;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTagsBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;91;2;97;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAssertTags;;d39,91;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTagsQuoting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;104;2;148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTags works with single and double quotes;;d41,104;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTagsRuntimeComplexity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;155;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that assertTags runs quickly.;;d51,155;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextContains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;382;2;390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextContains();;d42,382;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextEndsNotWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;369;2;375;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextEndsNotWith();;d45,369;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextEndsWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;356;2;362;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextEndsWith();;d42,356;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextEquals;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;316;2;320;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextEquals();;d40,316;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextNotContains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;397;2;402;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextNotContains();;d45,397;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextNotEquals;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;305;2;309;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextNotEquals();;d43,305;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextStartsNotWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;344;2;349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextStartsNotWith();;d47,344;;b1,0;;m">
				</treenode>
				<treenode node="testAssertTextStartsWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;327;2;337;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assertTextStartsWith();;d44,327;;b1,0;;m">
				</treenode>
				<treenode node="testBadAssertTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;195;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBadAssertTags;;d37,195;;b1,0;;m">
				</treenode>
				<treenode node="testGetMockForModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;409;2;426;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getMockForModel();;d39,409;;b1,0;;m">
				</treenode>
				<treenode node="testGetMockForModelDoesNotExist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;510;2;512;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetMockForModelDoesNotExist;;d51,510;;b1,0;;m">
				</treenode>
				<treenode node="testGetMockForModelModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;486;2;501;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetMockForModelModel;;d44,486;;b1,0;;m">
				</treenode>
				<treenode node="testGetMockForModelSecondaryDatasource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;433;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getMockForModel on secondary datasources.;;d58,433;;b1,0;;m">
				</treenode>
				<treenode node="testGetMockForModelWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;454;2;479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getMockForModel() with plugin models;;d49,454;;b1,0;;m">
				</treenode>
				<treenode node="testLoadFixtures;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;214;2;225;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadFixtures;;d36,214;;b1,0;;m">
				</treenode>
				<treenode node="testLoadFixturesOnDemand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;232;2;241;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadFixturesOnDemand;;d44,232;;b1,0;;m">
				</treenode>
				<treenode node="testNumericValuesInExpectationForAssertTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;182;2;188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNumericValuesInExpectationForAssertTags;;d63,182;;b1,0;;m">
				</treenode>
				<treenode node="testSetupBackUpValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;295;2;298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that CakeTestCase::setUp() backs up values.;;d41,295;;b1,0;;m">
				</treenode>
				<treenode node="testSkipIf;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;280;2;288;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSkipIf;;d30,280;;b1,0;;m">
				</treenode>
				<treenode node="testThrowException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;264;2;273;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testThrowException;;d38,264;;b1,0;;m">
				</treenode>
				<treenode node="testUnoadFixturesAfterFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;248;2;257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadFixturesOnDemand;;d49,248;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;53;17;53;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f0;24;1;335;;;;vpos;;v;;r&#xA;Description&#xA;     CakeTestFixture is responsible for building and destroying tables to be used during testing.;;d22,24;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;97;2;120;;;;vpos;;v;;r&#xA;Description&#xA;     Instantiate the fixture.;;d31,97;;b1,0;;m">
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;204;2;247;;;;vpos;;vbool;;r&#xA;Description&#xA;     Run before all tests execute, should return SQL statement to create table for this fixture could be executed successfully.&#xA;&#xA;Parameters:&#xA;    DboSource $db - An instance of the database object used to create the fixture table&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d29,204;;b1,0;;mDboSource $db;;p">
					<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f24;204;27;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;255;2;268;;;;vpos;;vbool;;r&#xA;Description&#xA;     Run after all tests executed, should return SQL statement to drop table for this fixture.&#xA;&#xA;Parameters:&#xA;    DboSource $db - An instance of the database object used to create the fixture table&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d27,255;;b1,0;;mDboSource $db;;p">
					<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f22;255;25;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;128;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initialize the fixture.;;d24,128;;b1,0;;m">
				</treenode>
				<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;278;2;318;;;;vpos;;vbool;;r&#xA;Description&#xA;     Run before each tests is executed, should return a set of SQL statements to insert records for the table of this fixture could be executed successfully.&#xA;&#xA;Parameters:&#xA;    DboSource $db - An instance of the database into which the records will be inserted&#xA;&#xA;Return:&#xA;   on success or if there are no records to insert, or false on failure;;d29,278;;b1,0;;mDboSource $db;;p">
					<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f24;278;27;278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="truncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;327;2;333;;;;vpos;;vbool;;r&#xA;Description&#xA;     Truncates the current fixture. Can be overwritten by classes extending CakeFixture to trigger other events before / after truncate.&#xA;&#xA;Parameters:&#xA;    DboSource $db - A reference to a db instance;;d31,327;;b1,0;;mDboSource $db;;p">
					<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f26;327;29;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="canUseMemory;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;90;21;90;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;59;16;59;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;38;11;38;;;;vposobject;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;67;15;67;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;31;13;31;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;81;19;81;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;74;16;74;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;52;14;52;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php;f8;45;20;45;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestFixtureDefaultImportFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;182;1;190;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     CakeTestFixtureDefaultImportFixture class;;d66,182;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;189;13;189;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestFixtureImportFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;160;1;175;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     CakeTestFixtureImportFixture class;;d59,160;;b0,0;;m">
				<treenode node="import;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;174;15;174;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;167;13;167;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestFixtureTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;223;1;573;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for CakeTestFixture;;d47,223;;b0,0;;m">
				<treenode node="insertCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;475;2;484;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function to be used as callback and store the parameters of an insertMulti call&#xA;&#xA;Parameters:&#xA;    string $table&#xA;    string $fields&#xA;    string $values&#xA;&#xA;Return:&#xA;   true;;d58,475;;b1,0;;mstring $table;;pstring $fields;;pstring $values;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f40;475;47;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f32;475;38;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f49;475;56;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;230;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,230;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;246;2;250;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,246;;b1,0;;m">
				</treenode>
				<treenode node="testCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;429;2;440;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test create method;;d30,429;;b1,0;;m">
				</treenode>
				<treenode node="testDrop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;544;2;560;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the drop method;;d28,544;;b1,0;;m">
				</treenode>
				<treenode node="testImport;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;373;2;393;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testImport;;d30,373;;b1,0;;m">
				</treenode>
				<treenode node="testImportWithRecords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;401;2;422;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that importing with records works. Make sure to try with postgres as its handling of aliases is a workaround at best.;;d41,401;;b1,0;;m">
				</treenode>
				<treenode node="testInit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;257;2;268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInit;;d28,257;;b1,0;;m">
				</treenode>
				<treenode node="testInitDbPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;276;2;310;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that init() correctly sets the fixture table when the connection or model have prefixes defined.;;d36,276;;b1,0;;m">
				</treenode>
				<treenode node="testInitDbPrefixDuplication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;317;2;340;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fixtures don't duplicate the test db prefix.;;d47,317;;b1,0;;m">
				</treenode>
				<treenode node="testInitModelTablePrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;347;2;366;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test init with a model that has a tablePrefix declared.;;d44,347;;b1,0;;m">
				</treenode>
				<treenode node="testInsert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;447;2;465;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the insert method;;d30,447;;b1,0;;m">
				</treenode>
				<treenode node="testInsertInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;534;2;537;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the insert method with invalid fixture;;d37,534;;b1,0;;m">
				</treenode>
				<treenode node="testInsertStrings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;491;2;526;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the insert method;;d37,491;;b1,0;;m">
				</treenode>
				<treenode node="testTruncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;567;2;572;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the truncate method.;;d32,567;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestFixtureTestFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;27;1;64;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     CakeTestFixtureTestFixture class;;d57,27;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;48;15;48;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;34;13;34;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;59;16;59;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;41;14;41;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestLoader;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f0;27;1;124;;;;vpos;;vPHPUnit_Runner_StandardTestSuiteLoader;;c;;r&#xA;Description&#xA;     TestLoader for CakePHP Test suite.;;d68,27;;b0,0;;m">
				<treenode node="_basePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f18;60;2;78;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates the base path to a set of tests based on the parameters.&#xA;&#xA;Parameters:&#xA;    array $params - The path parameters&#xA;&#xA;Return:&#xA;   The base path;;d46,60;;b2,5;;marray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f37;60;44;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getRecursiveFileList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f18;107;2;122;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets a recursive list of files from a given directory and matches then against a given fileTestFunction, like isTestCaseFile()&#xA;&#xA;Parameters:&#xA;    string $directory - The directory to scan for files;;d67,107;;b2,5;;mstring $directory;;p">
					<treenode node="directory;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f49;107;59;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_resolveTestFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f11;48;2;52;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Convert path fragments used by CakePHP's test runner to absolute paths that can be fed to PHPUnit.&#xA;&#xA;Parameters:&#xA;    string $filePath - The file path to load&#xA;    string $params - Additional parameters;;d57,48;;b2,0;;mstring $filePath;;pstring $params;;p">
					<treenode node="filePath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f37;48;46;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f48;48;55;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateTestList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f15;86;2;98;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the list of files for the test listing.&#xA;&#xA;Parameters:&#xA;    string $params - Path parameters;;d50,86;;b1,5;;mstring $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f41;86;48;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f8;36;2;39;;;;vpos;;vReflectionClass;;r&#xA;Description&#xA;     Load a file and find the first test case / suite in that file.&#xA;&#xA;Parameters:&#xA;    string $filePath - The file path to load&#xA;    string $params - Additional parameters;;d47,36;;b1,0;;mstring $filePath;;pstring $params;;p">
					<treenode node="filePath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f22;36;31;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php;f33;36;40;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CakeTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f0;23;1;57;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     A model to extend from to help you during testing.;;d34,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f8;38;2;41;;;;vpos;;v;;r&#xA;Description&#xA;     Sets default order for the model to avoid failing tests caused by incorrect order when no order has been defined in the finds. Postgres can return the results in any order it considers appropriate if none is specified&#xA;&#xA;Parameters:&#xA;    int|string|array $id - Set this ID for this model on startup, can also be an array of options, see above&#xA;    string $table - Name of database table to use&#xA;    string $ds - DataSource connection name;;d69,38;;b1,0;;mint|string|array $id;;pstring $table;;pstring $ds;;p">
					<treenode node="ds;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f57;38;60;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f29;38;32;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f42;38;48;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="save;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f8;51;2;55;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Overriding save() to set CakeTestSuiteDispatcher::date() as formatter for created, modified and updated fields&#xA;&#xA;Parameters:&#xA;    array $data - Data to save&#xA;    bool|array $validate - Validate or options&#xA;    array $fieldList - Whitelist of fields;;d76,51;;b1,0;;marray $data;;pbool|array $validate;;parray $fieldList;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f22;51;27;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldList;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f54;51;64;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f36;51;45;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cacheSources;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f8;27;21;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php;f8;25;20;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestRunner;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f0;28;1;108;;;;vpos;;vPHPUnit_TextUI_TestRunner;;c;;r&#xA;Description&#xA;     A custom test runner for CakePHP's use of PHPUnit.;;d55,28;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f8;36;2;39;;;;vpos;;v;;r&#xA;Description&#xA;     Lets us pass in some options needed for CakePHP's webrunner.&#xA;&#xA;Parameters:&#xA;    mixed $loader - The test suite loader&#xA;    array $params - list of options to be used for this run;;d47,36;;b1,0;;mmixed $loader;;parray $params;;p">
					<treenode node="loader;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f29;36;36;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f38;36;45;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getFixtureManager;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f11;93;2;106;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the fixture manager class specified or use the default one.&#xA;&#xA;Parameters:&#xA;    array $arguments - The CLI arguments&#xA;&#xA;Return:&#xA;   instance of a fixture manager;;d51,93;;b2,0;;marray $arguments;;p">
					<treenode node="arguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f39;93;49;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createTestResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f11;72;2;83;;;;vpos;;vPHPUnit_Framework_TestResult;;r&#xA;Description&#xA;     Create the test result and splice on our code coverage reports.;;d39,72;;b2,0;;m">
				</treenode>
				<treenode node="doRun;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f8;48;2;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Actually run a suite of tests. Cake initializes fixtures here using the chosen fixture manager&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_Test $suite - The test suite to run&#xA;    array $arguments - The CLI arguments;;d82,48;;b1,0;;mPHPUnit_Framework_Test $suite;;parray $arguments;;p">
					<treenode node="arguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f60;48;70;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="suite;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php;f46;48;52;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CakeTestSuite;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuite.php;f0;25;1;61;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     A class to contain test cases and run them with shared fixtures;;d56,25;;b0,0;;m">
				<treenode node="addTestDirectory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuite.php;f8;33;2;42;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Adds all the files in a directory to the test suite. Does not recurse through directories.&#xA;&#xA;Parameters:&#xA;    string $directory - The directory to add tests from;;d52,33;;b1,0;;mstring $directory;;p">
					<treenode node="directory;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuite.php;f34;33;44;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addTestDirectoryRecursive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuite.php;f8;50;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Recursively adds all the files in a directory to the test suite.&#xA;&#xA;Parameters:&#xA;    string $directory - The directory subtree to add tests from;;d61,50;;b1,0;;mstring $directory;;p">
					<treenode node="directory;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuite.php;f43;50;53;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CakeTestSuiteCommand;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f0;34;1;156;;;;vpos;;vPHPUnit_TextUI_Command;;c;;r&#xA;Description&#xA;     Class to customize loading of test suites from CLI;;d58,34;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f8;43;2;54;;;;vpos;;v;;r&#xA;Description&#xA;     Construct method&#xA;&#xA;Parameters:&#xA;    mixed $loader - The loader instance to use&#xA;    array $params - list of options to be used for this run;;d57,43;;b1,0;;mmixed $loader;;parray $params;;p">
					<treenode node="loader;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f29;43;36;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f38;43;45;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRunner;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f8;118;2;120;;;;vpos;;vCakeTestRunner;;r&#xA;Description&#xA;     Create a runner for the command.&#xA;&#xA;Parameters:&#xA;    mixed $loader - The loader to be used for the test run;;d36,118;;b1,0;;mmixed $loader;;p">
					<treenode node="loader;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f27;118;34;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="handleFixture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f8;128;2;130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Handler for customizing the FixtureManager class/&#xA;&#xA;Parameters:&#xA;    string $class - Name of the class that will be the fixture manager;;d39,128;;b1,0;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f31;128;37;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="handleReporter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f8;138;2;154;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Handles output flag used to change printing on webrunner.&#xA;&#xA;Parameters:&#xA;    string $reporter - The reporter class to use;;d43,138;;b1,0;;mstring $reporter;;p">
					<treenode node="reporter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f32;138;41;138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="run;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f8;63;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ugly hack to get around PHPUnit having a hard coded class name for the Runner. :(&#xA;&#xA;Parameters:&#xA;    array $argv - The command arguments&#xA;    bool $exit - The exit mode;;d48,63;;b1,0;;marray $argv;;pbool $exit;;p">
					<treenode node="argv;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f27;63;32;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php;f34;63;39;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CakeTestSuiteDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f0;28;1;292;;;;vpos;;v;;r&#xA;Description&#xA;     CakeTestSuiteDispatcher handles web requests to the test suite and runs the correct action.;;d30,28;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f8;79;2;83;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor;;d31,79;;b1,0;;m">
				</treenode>
				<treenode node="_checkPHPUnit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;120;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Checks that PHPUnit is installed. Will exit if it doesn't;;d36,120;;b2,0;;m">
				</treenode>
				<treenode node="_checkXdebug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;171;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Checks for the xdebug extension required to do code coverage. Displays an error if xdebug isn't installed.;;d35,171;;b2,0;;m">
				</treenode>
				<treenode node="_parseParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;209;2;229;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parse URL params into a 'request';;d35,209;;b2,0;;m">
				</treenode>
				<treenode node="_runTestCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;236;2;265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Runs a test case file.;;d35,236;;b2,0;;m">
				</treenode>
				<treenode node="_testCaseList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;184;2;191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generates a page containing the a list of test cases that could be run.;;d36,184;;b2,0;;m">
				</treenode>
				<treenode node="date;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f15;288;2;290;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns formatted date string using static time This method is being used as formatter for created, modified and updated fields in Model::save()&#xA;&#xA;Parameters:&#xA;    string $format - format to be used&#xA;&#xA;Return:&#xA;   formatted date;;d38,288;;b1,5;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f29;288;36;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f8;90;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Runs the actions required by the URL parameters.;;d28,90;;b1,0;;m">
				</treenode>
				<treenode node="loadTestFramework;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f8;134;2;163;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks for the existence of the test framework files&#xA;&#xA;Return:&#xA;   true if found, false otherwise;;d37,134;;b1,0;;m">
				</treenode>
				<treenode node="run;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f15;110;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Static method to initialize the test runner, keeps global space clean;;d30,110;;b1,5;;m">
				</treenode>
				<treenode node="setParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f8;199;2;202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the params, calling this will bypass the auto parameter parsing.&#xA;&#xA;Parameters:&#xA;    array $params - Array of parameters for the dispatcher;;d36,199;;b1,0;;marray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f27;199;34;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="time;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f15;273;2;279;;;;vpos;;vint;;r&#xA;Description&#xA;     Sets a static timestamp&#xA;&#xA;Parameters:&#xA;    bool $reset - to set new static timestamp&#xA;&#xA;Return:&#xA;   timestamp;;d45,273;;b1,5;;mbool $reset;;p">
					<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f29;273;35;273;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_baseDir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;60;20;60;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_baseUrl;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;53;20;53;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_paramsParsed;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f11;67;25;67;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_Reporter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f18;74;28;74;;;;vposCakeBaseReporter;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php;f8;35;15;35;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTestSuiteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestSuiteTest.php;f0;21;1;104;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeTestSuiteTest;;d45,21;;b0,0;;m">
				<treenode node="testAddTestDirectory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestSuiteTest.php;f8;28;2;38;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddTestDirectory;;d40,28;;b1,0;;m">
				</treenode>
				<treenode node="testAddTestDirectoryRecursive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestSuiteTest.php;f8;45;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddTestDirectoryRecursive;;d49,45;;b1,0;;m">
				</treenode>
				<treenode node="testAddTestDirectoryRecursiveWithHidden;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestSuiteTest.php;f8;63;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddTestDirectoryRecursiveWithHidden;;d59,63;;b1,0;;m">
				</treenode>
				<treenode node="testAddTestDirectoryRecursiveWithNonPhp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestSuiteTest.php;f8;87;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddTestDirectoryRecursiveWithNonPhp;;d59,87;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTextReporter;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f0;25;1;182;;;;vpos;;vCakeBaseReporter;;c;;r&#xA;Description&#xA;     CakeTextReporter contains reporting features used for plain text based output;;d48,25;;b0,0;;m">
				<treenode node="paintCoverage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;177;2;180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generates a Text summary of the coverage data.&#xA;&#xA;Parameters:&#xA;    array $coverage - Array of coverage data;;d42,177;;b1,0;;marray $coverage;;p">
					<treenode node="coverage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f31;177;40;177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintDocumentStart;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;32;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the text/plain header if the test is not a CLI test.;;d38,32;;b1,0;;m">
				</treenode>
				<treenode node="paintException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;110;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints a PHP exception.&#xA;&#xA;Parameters:&#xA;    Exception $exception - Exception to describe;;d44,110;;b1,0;;mException $exception;;p">
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f32;110;42;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;54;2;63;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints a failing test.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_AssertionFailedError $message - Failure object displayed in;;d37,54;;b1,0;;mPHPUnit_Framework_AssertionFailedError $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f27;54;35;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintFooter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;72;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the end of the test with a summary of the passes and failures.&#xA;&#xA;Parameters:&#xA;    PHPUnit_Framework_TestResult $result - Result object;;d38,72;;b1,0;;mPHPUnit_Framework_TestResult $result;;p">
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f29;72;36;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintFormattedMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;134;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints formatted text such as dumped variables.&#xA;&#xA;Parameters:&#xA;    string $message - Text to show;;d49,134;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f39;134;47;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paintHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;99;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints the title only.;;d31,99;;b1,0;;m">
				</treenode>
				<treenode node="paintPass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;43;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Paints a pass;;d29,43;;b1,0;;m">
				</treenode>
				<treenode node="paintSkip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;124;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prints the message for skipping tests.&#xA;&#xA;Parameters:&#xA;    string $message - Text of skip condition;;d37,124;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f27;124;35;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCaseList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php;f8;146;2;169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generate a test case list in plain text. Creates as series of URLs for tests that can be run. One case per line.;;d32,146;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTime;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f0;28;1;1149;;;;vpos;;v;;r&#xA;Description&#xA;     Time Helper class for easy use of time data.;;d15,28;;b0,0;;m">
				<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f8;114;2;121;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Magic set method for backwards compatibility. Used by TimeHelper to get static variables in CakeTime&#xA;&#xA;Parameters:&#xA;    string $name - Variable name;;d30,114;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f23;114;28;114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f8;99;2;105;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Magic set method for backwards compatibility. Used by TimeHelper to modify static variables in CakeTime&#xA;&#xA;Parameters:&#xA;    string $name - Variable name&#xA;    mixes $value - Variable value;;d38,99;;b1,0;;mstring $name;;pmixes $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f23;99;28;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f30;99;36;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_strftime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f18;1132;2;1147;;;;vpos;;vstring;;r&#xA;Description&#xA;     Multibyte wrapper for strftime.&#xA;&#xA;Parameters:&#xA;    string $format - Format string&#xA;    int $date - Timestamp to format&#xA;&#xA;Return:&#xA;   formatted string with correct encoding;;d53,1132;;b2,5;;mstring $format;;pint $date;;p">
					<treenode node="date;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f46;1132;51;1132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f37;1132;44;1132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_translateSpecifier;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f18;148;2;236;;;;vpos;;vstring;;r&#xA;Description&#xA;     Auxiliary function to translate a matched specifier element from a regular expression into a windows safe and i18n aware specifier&#xA;&#xA;Parameters:&#xA;    array $specifier - match from regular expression&#xA;&#xA;Return:&#xA;   converted element;;d59,148;;b2,5;;marray $specifier;;p">
					<treenode node="specifier;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f47;148;57;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="convert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;246;2;261;;;;vpos;;vint;;r&#xA;Description&#xA;     Converts given time (in server's time zone) to user's local time, given his/her timezone.&#xA;&#xA;Parameters:&#xA;    string $serverTime - UNIX timestamp&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   UNIX timestamp;;d56,246;;b1,5;;mstring $serverTime;;pstring|DateTimeZone $timezone;;p">
					<treenode node="serverTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f32;246;43;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f45;246;54;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="convertSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;133;2;139;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a string representing the format for the function strftime and returns a windows safe and i18n aware format.&#xA;&#xA;Parameters:&#xA;    string $format - Format with specifiers for strftime function&#xA;    string $time - UNIX timestamp&#xA;&#xA;Return:&#xA;   windows safe and date() function compatible format for strftime;;d65,133;;b1,5;;mstring $format;;pstring $time;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f42;133;49;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f51;133;56;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dayAsSql;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;458;2;460;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a partial SQL string to search for all records between two times occurring on the same day.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string $fieldName - Name of database field to compare with&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Partial SQL string;;d76,458;;b1,5;;mint|string|DateTime $dateString;;pstring $fieldName;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f33;458;44;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f46;458;56;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f58;458;67;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="daysAsSql;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;439;2;446;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a partial SQL string to search for all records between two dates.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $begin - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    int|string|DateTime $end - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string $fieldName - Name of database field to compare with&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Partial SQL string;;d78,439;;b1,5;;mint|string|DateTime $begin;;pint|string|DateTime $end;;pstring $fieldName;;pstring|DateTimeZone $timezone;;p">
					<treenode node="begin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f34;439;40;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="end;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f42;439;46;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f48;439;58;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f60;439;69;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;1035;2;1043;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted date string, given either a UNIX timestamp or a valid strtotime() date string. This function also accepts a time string and a format string as first and second parameters. In that case this function behaves as a wrapper for TimeHelper::i18nFormat()&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $date - UNIX timestamp, strtotime() valid string or DateTime object (or a date format string)&#xA;    int|string|DateTime $format - date format string (or UNIX timestamp, strtotime() valid string or DateTime object)&#xA;    bool|string $default - if an invalid date is passed it will output supplied default value&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted date string;;d90,1035;;b1,5;;mint|string|DateTime $date;;pint|string|DateTime $format;;pbool|string $default;;pstring|DateTimeZone $timezone;;p">
					<treenode node="date;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f31;1035;36;1035;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f54;1035;62;1035;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f38;1035;45;1035;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f72;1035;81;1035;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fromString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;312;2;348;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a UNIX timestamp, given either a UNIX timestamp or a valid strtotime() date string.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Parsed timestamp;;d66,312;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f35;312;46;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f48;312;57;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gmt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;996;2;1009;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns gmt as a UNIX timestamp.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;&#xA;Return:&#xA;   UNIX timestamp;;d48,996;;b1,5;;mint|string|DateTime $dateString;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f28;996;39;996;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="i18nFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;1056;2;1068;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted date string, given either a UNIX timestamp or a valid strtotime() date string. It takes into account the default date format for the current language if a LC_TIME file is used.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $date - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string $format - strftime format string&#xA;    bool|string $default - if an invalid date is passed it will output supplied default value&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted and translated date string;;d94,1056;;b1,5;;mint|string|DateTime $date;;pstring $format;;pbool|string $default;;pstring|DateTimeZone $timezone;;p">
					<treenode node="date;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f35;1056;40;1056;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f58;1056;66;1056;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f42;1056;49;1056;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f76;1056;85;1056;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isFuture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;484;2;487;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is in the future.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is in the future;;d64,484;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f33;484;44;484;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f46;484;55;484;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isPast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;497;2;500;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is in the past.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is in the past;;d62,497;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f31;497;42;497;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f44;497;53;497;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isThisMonth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;524;2;528;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is within this month&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is within current month;;d67,524;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f36;524;47;524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f49;524;58;524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isThisWeek;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;510;2;514;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is within this week.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is within current week;;d66,510;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f35;510;46;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f48;510;57;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isThisYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;538;2;542;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is within current year.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is within current year;;d66,538;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f35;538;46;538;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f48;538;57;538;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isToday;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;470;2;474;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is today.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is today;;d63,470;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f32;470;43;470;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f45;470;54;470;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isTomorrow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;566;2;570;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is tomorrow.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string was yesterday;;d66,566;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f35;566;46;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f48;566;57;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isWithinNext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;976;2;987;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if specified datetime is within the interval specified, else false.&#xA;&#xA;Parameters:&#xA;    string|int $timeInterval - the numeric value with space then time type&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object;;d83,976;;b1,5;;mstring|int $timeInterval;;pint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f52;976;63;976;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timeInterval;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f37;976;50;976;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f65;976;74;976;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listTimezones;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;1082;2;1121;;;;vpos;;varray;;r&#xA;Description&#xA;     Get list of timezone identifiers&#xA;&#xA;Parameters:&#xA;    int|string $filter - A regex to filter identifier&#xA;    string $country - A two-letter ISO 3166-1 compatible country code&#xA;    bool $group - If true (default value) groups the identifiers list by primary region&#xA;&#xA;Return:&#xA;   List of timezone identifiers;;d86,1082;;b1,5;;mint|string $filter;;pstring $country;;pbool $group;;p">
					<treenode node="country;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f54;1082;62;1082;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="filter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f38;1082;45;1082;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f71;1082;77;1082;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;362;2;372;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a nicely formatted date string for given Datetime string.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;    string $format - The format to use&#xA;&#xA;Return:&#xA;   Formatted date string;;d83,362;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;pstring $format;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f29;362;40;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f67;362;74;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f49;362;58;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="niceShort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;389;2;427;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted descriptive date string for given datetime string.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Described, relative date string;;d72,389;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f34;389;45;389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f54;389;63;389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serverOffset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;300;2;302;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns server's offset from GMT in seconds.&#xA;&#xA;Return:&#xA;   Offset;;d39,300;;b1,5;;m">
				</treenode>
				<treenode node="timeAgoInWords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;737;2;942;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns either a relative or a formatted absolute date depending on the difference between the current time and given datetime. $datetime should be in a *strtotime* - parsable format, like MySQL's datetime datatype.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateTime - Datetime UNIX timestamp, strtotime() valid string or DateTime object&#xA;    array $options - Default format if timestamp is used in $dateString&#xA;&#xA;Return:&#xA;   Relative time string;;d70,737;;b1,5;;mint|string|DateTime $dateTime;;parray $options;;p">
					<treenode node="dateTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f39;737;48;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f50;737;58;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="timezone;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;271;2;292;;;;vpos;;vDateTimeZone;;r&#xA;Description&#xA;     Returns a timezone object from a string or the user's timezone object&#xA;&#xA;Parameters:&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Timezone object;;d51,271;;b1,5;;mstring|DateTimeZone $timezone;;p">
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f33;271;42;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toAtom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;659;2;661;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a date formatted for Atom RSS feeds.&#xA;&#xA;Parameters:&#xA;    string $dateString - Datetime string or Unix timestamp&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted date string;;d62,659;;b1,5;;mstring $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f31;659;42;659;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f44;659;53;659;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toQuarter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;580;2;598;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the quarter&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    bool $range - if true returns a range in Y-m-d format&#xA;&#xA;Return:&#xA;   |array 1, 2, 3, or 4 quarter of year or array if $range true;;d63,580;;b1,5;;mint|string|DateTime $dateString;;pbool $range;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f34;580;45;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="range;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f47;580;53;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toRSS;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;671;2;695;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats date for RSS feeds&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted date string;;d61,671;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f30;671;41;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f43;671;52;671;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toServer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;627;2;649;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns a formatted date in server's timezone.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;    string $format - date format string&#xA;&#xA;Return:&#xA;   Formatted date;;d89,627;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;pstring $format;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f33;627;44;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f64;627;71;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f46;627;55;627;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toUnix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;608;2;610;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns a UNIX timestamp from a textual datetime description. Wrapper for PHP function strtotime().&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Unix timestamp;;d62,608;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f31;608;42;608;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f44;608;53;608;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wasWithinLast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;954;2;965;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if specified datetime was within the interval specified, else false.&#xA;&#xA;Parameters:&#xA;    string|int $timeInterval - the numeric value with space then time type&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object;;d84,954;;b1,5;;mstring|int $timeInterval;;pint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f53;954;64;954;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timeInterval;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f38;954;51;954;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f66;954;75;954;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wasYesterday;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;552;2;556;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string was yesterday.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - Timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string was yesterday;;d68,552;;b1,5;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f37;552;48;552;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f50;552;59;552;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f18;89;24;89;;;;vposint;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="niceFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;39;26;39;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="niceShortFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;57;31;57;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="wordAccuracy;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;66;28;66;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="wordEnd;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;82;23;82;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="wordFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php;f15;48;26;48;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="CakeTimeMock;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f0;44;1;45;;;;vpos;;v;;r&#xA;Description&#xA;     CakeTimeMock class;;d19,44;;b0,0;;m">
			</treenode>
			<treenode node="CakeTimeTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f0;25;1;1198;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeTimeTest class;;d40,25;;b0,0;;m">
				<treenode node="_restoreSystemTimezone;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f11;63;2;65;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Restored the original system timezone&#xA;&#xA;Parameters:&#xA;    string $timezoneIdentifier - Timezone string;;d45,63;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;39;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,39;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;51;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,51;;b1,0;;m">
				</treenode>
				<treenode node="testConvertPercentE;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;1081;2;1092;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test convert %e on windows.;;d39,1081;;b1,0;;m">
				</treenode>
				<treenode node="testConvertSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;992;2;1074;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test converting time specifiers using a time definition localfe file;;d41,992;;b1,0;;m">
				</treenode>
				<treenode node="testCorrectTimezoneConversion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;1189;2;1196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that using CakeTime::format() with the correct sytax actually converts from one timezone to the other correctly;;d49,1189;;b1,0;;m">
				</treenode>
				<treenode node="testDayAsSql;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;474;2;479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDayAsSql method;;d32,474;;b1,0;;m">
				</treenode>
				<treenode node="testDaysAsSql;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;461;2;467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDaysAsSql method;;d33,461;;b1,0;;m">
				</treenode>
				<treenode node="testFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;606;2;632;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormat method;;d30,606;;b1,0;;m">
				</treenode>
				<treenode node="testFormatNewSyntax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;1143;2;1147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test new format() syntax which inverts first and second parameters;;d39,1143;;b1,0;;m">
				</treenode>
				<treenode node="testFromString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;919;2;946;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test fromString();;d34,919;;b1,0;;m">
				</treenode>
				<treenode node="testFromStringWithDateTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;953;2;973;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test fromString() with a DateTime object as the dateString;;d46,953;;b1,0;;m">
				</treenode>
				<treenode node="testFromStringWithDateTimeNoConversion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;980;2;985;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that datetimes in the default timezone are not modified.;;d58,980;;b1,0;;m">
				</treenode>
				<treenode node="testGmt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;639;2;658;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOfGmt method;;d27,639;;b1,0;;m">
				</treenode>
				<treenode node="testI18nFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;1099;2;1136;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test formatting dates taking in account preferred i18n locale file;;d34,1099;;b1,0;;m">
				</treenode>
				<treenode node="testIsFuture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;681;2;691;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsFuture method;;d32,681;;b1,0;;m">
				</treenode>
				<treenode node="testIsPast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;698;2;708;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsPast method;;d30,698;;b1,0;;m">
				</treenode>
				<treenode node="testIsThisMonth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;736;2;745;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsThisMonth method;;d35,736;;b1,0;;m">
				</treenode>
				<treenode node="testIsThisWeek;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;715;2;729;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsThisWeek method;;d34,715;;b1,0;;m">
				</treenode>
				<treenode node="testIsThisYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;752;2;757;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsThisYear method;;d34,752;;b1,0;;m">
				</treenode>
				<treenode node="testIsToday;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;665;2;674;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsToday method;;d31,665;;b1,0;;m">
				</treenode>
				<treenode node="testIsTomorrow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;784;2;793;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsTomorrow method;;d34,784;;b1,0;;m">
				</treenode>
				<treenode node="testIsWithinNext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;845;2;886;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWasWithinLast method;;d36,845;;b1,0;;m">
				</treenode>
				<treenode node="testListTimezones;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;1154;2;1181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testListTimezones;;d37,1154;;b1,0;;m">
				</treenode>
				<treenode node="testNice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;387;2;421;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNice method;;d28,387;;b1,0;;m">
				</treenode>
				<treenode node="testNiceShort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;428;2;454;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNiceShort method;;d33,428;;b1,0;;m">
				</treenode>
				<treenode node="testTimeAgoInWords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;124;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTimeAgoInWords method;;d55,124;;b1,0;;minput;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f44;124;53;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f36;124;42;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTimeAgoInWordsAccuracy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;220;2;269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the accuracy option for timeAgoInWords();;d46,220;;b1,0;;m">
				</treenode>
				<treenode node="testTimeAgoInWordsCustomStrings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;192;2;213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the custom string options for timeAgoInWords;;d51,192;;b1,0;;m">
				</treenode>
				<treenode node="testTimeAgoInWordsEnd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;180;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the end option for timeAgoInWords;;d64,180;;b1,0;;minput;;pexpected;;pend;;p">
					<treenode node="end;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f58;180;62;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f47;180;56;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f39;180;45;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTimeAgoInWordsNegativeValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;313;2;380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test timeAgoInWords() with negative values.;;d52,313;;b1,0;;m">
				</treenode>
				<treenode node="testTimeAgoInWordsWithFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;276;2;306;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the format option of timeAgoInWords() with date() and strftime compatible strings;;d48,276;;b1,0;;m">
				</treenode>
				<treenode node="testToAtom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;576;2;578;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToAtom method;;d30,576;;b1,0;;m">
				</treenode>
				<treenode node="testToQuarter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;72;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToQuarter method;;d33,72;;b1,0;;m">
				</treenode>
				<treenode node="testToRss;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;585;2;599;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToRss method;;d29,585;;b1,0;;m">
				</treenode>
				<treenode node="testToServer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;500;2;569;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToServer method;;d32,500;;b1,0;;m">
				</treenode>
				<treenode node="testToUnix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;486;2;493;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToUnix method;;d30,486;;b1,0;;m">
				</treenode>
				<treenode node="testUserOffset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;893;2;912;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUserOffset method;;d34,893;;b1,0;;m">
				</treenode>
				<treenode node="testWasWithinLast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;800;2;838;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWasWithinLast method;;d37,800;;b1,0;;m">
				</treenode>
				<treenode node="testWasYesterday;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;764;2;777;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWasYesterday method;;d36,764;;b1,0;;m">
				</treenode>
				<treenode node="timeAgoEndProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f8;134;2;172;;;;vpos;;vvoid;;r&#xA;Description&#xA;     provider for timeAgo with an end date.;;d38,134;;b1,0;;m">
				</treenode>
				<treenode node="timeAgoProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f15;100;2;116;;;;vpos;;varray;;r&#xA;Description&#xA;     provider for timeAgoInWords() tests;;d42,100;;b1,5;;m">
				</treenode>
				<treenode node="_systemTimezoneIdentifier;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php;f11;32;37;32;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeValidationRule;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f0;29;1;349;;;;vpos;;v;;r&#xA;Description&#xA;     CakeValidationRule object. Represents a validation method, error message and rules for applying such method to a field.;;d25,29;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;113;2;115;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $validator - [optional] The validator properties;;d51,113;;b1,0;;marray $validator;;p">
					<treenode node="validator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f29;113;39;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_addValidatorProps;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;317;2;330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the rule properties from the rule entry in validate&#xA;&#xA;Parameters:&#xA;    array $validator - [optional];;d61,317;;b2,0;;marray $validator;;p">
					<treenode node="validator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f39;317;49;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getPropertiesArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;224;2;237;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets an array with the rule properties;;d42,224;;b2,0;;m">
				</treenode>
				<treenode node="_parseRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;339;2;347;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parses the rule and sets the rule and ruleParams&#xA;&#xA;Parameters:&#xA;    string $field - Field name&#xA;    array - &amp;$data Data array;;d47,339;;b2,0;;mstring $field;;parray;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f40;339;45;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f31;339;37;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="checkEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;179;2;184;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the allowEmpty key applies&#xA;&#xA;Parameters:&#xA;    string $field - Field name&#xA;    array - &amp;$data data to check rule against;;d44,179;;b1,0;;mstring $field;;parray;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f37;179;42;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f28;179;34;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="checkRequired;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;162;2;170;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether the field failed the `field should be present` validation&#xA;&#xA;Parameters:&#xA;    string $field - Field name&#xA;    array - &amp;$data Data to check rule against;;d47,162;;b1,0;;mstring $field;;parray;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f40;162;45;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f31;162;37;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;304;2;309;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns passed options for this rule&#xA;&#xA;Parameters:&#xA;    string|int $key - Array index&#xA;&#xA;Return:&#xA;   |null;;d34,304;;b1,0;;mstring|int $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f28;304;32;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getValidationResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;215;2;217;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the validation error message;;d39,215;;b1,0;;m">
				</treenode>
				<treenode node="isEmptyAllowed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;135;2;137;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether the field can be left blank according to this rule;;d34,135;;b1,0;;m">
				</treenode>
				<treenode node="isLast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;206;2;208;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether this rule should break validation process for associated field after it fails;;d26,206;;b1,0;;m">
				</treenode>
				<treenode node="isRequired;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;144;2;153;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the field is required according to the `required` property;;d30,144;;b1,0;;m">
				</treenode>
				<treenode node="isUpdate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;250;2;255;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the recordExists configuration value for this rule, ir refers to whether the model record it is validating exists exists in the collection or not (create or update operation)&#xA;&#xA;Parameters:&#xA;    bool $exists - Boolean to indicate if records exists;;d42,250;;b1,0;;mbool $exists;;p">
					<treenode node="exists;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f26;250;33;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isValid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;122;2;128;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the rule is valid;;d27,122;;b1,0;;m">
				</treenode>
				<treenode node="process;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;265;2;285;;;;vpos;;vbool;;r&#xA;Description&#xA;     Dispatches the validation rule to the given validator method&#xA;&#xA;Parameters:&#xA;    string $field - Field name&#xA;    array - &amp;$data Data array&#xA;    array - &amp;$methods Methods list&#xA;&#xA;Return:&#xA;   True if the rule could be dispatched, false otherwise;;d52,265;;b1,0;;mstring $field;;parray;;parray;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f34;265;39;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f25;265;31;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f42;265;50;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;293;2;296;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Resets internal state for this rule, by default it will become valid and it will set isUpdate() to false;;d25,293;;b1,0;;m">
				</treenode>
				<treenode node="skip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;191;2;198;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the validation rule should be skipped&#xA;&#xA;Return:&#xA;   True if the ValidationRule can be skipped;;d24,191;;b1,0;;m">
				</treenode>
				<treenode node="_passedOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;64;26;64;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_recordExists;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;43;25;43;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;50;17;50;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_ruleParams;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;57;23;57;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_valid;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f11;36;18;36;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="allowEmpty;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;85;19;85;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="last;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;99;13;99;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;106;16;106;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="on;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;92;11;92;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="required;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;78;17;78;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php;f8;71;13;71;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeValidationRuleTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f0;25;1;197;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeValidationRuleTest;;d50,25;;b0,0;;m">
				<treenode node="myTestRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;32;2;34;;;;vpos;;vbool;;r&#xA;Description&#xA;     Auxiliary method to test custom validators;;d30,32;;b1,0;;m">
				</treenode>
				<treenode node="myTestRule2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;41;2;43;;;;vpos;;vbool;;r&#xA;Description&#xA;     Auxiliary method to test custom validators;;d31,41;;b1,0;;m">
				</treenode>
				<treenode node="myTestRule3;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;50;2;52;;;;vpos;;vstring;;r&#xA;Description&#xA;     Auxiliary method to test custom validators;;d31,50;;b1,0;;m">
				</treenode>
				<treenode node="testCheckRequiredWhenRequiredAndAllowEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;178;2;195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkRequired method;;d62,178;;b1,0;;m">
				</treenode>
				<treenode node="testCustomMethodMissingError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;107;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Make sure errors are triggered when validation is missing.;;d48,107;;b1,0;;m">
				</treenode>
				<treenode node="testCustomMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;80;2;98;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tests that passing custom validation methods work;;d37,80;;b1,0;;m">
				</treenode>
				<treenode node="testIsEmptyAllowed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;149;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test isEmptyAllowed method;;d38,149;;b1,0;;m">
				</treenode>
				<treenode node="testIsRequired;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;123;2;142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test isRequired method;;d34,123;;b1,0;;m">
				</treenode>
				<treenode node="testIsValid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php;f8;59;2;73;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test isValid method;;d31,59;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeValidationSet;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f0;29;1;369;;;;vpos;;vArrayAccess;;cIteratorAggregate;;cCountable;;c;;r&#xA;Description&#xA;     CakeValidationSet object. Holds all validation rules for a field and exposes methods to dynamically add or remove validation rules;;d77,29;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;79;2;90;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $fieldName - The fieldname&#xA;    array $ruleSet - Rules set;;d51,79;;b1,0;;mstring $fieldName;;parray $ruleSet;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f29;79;39;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ruleSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f41;79;49;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_processValidationResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f11;255;2;289;;;;vpos;;vstring;;r&#xA;Description&#xA;     Fetches the correct error message for a failed validation&#xA;&#xA;Parameters:&#xA;    string $name - the name of the rule as it was configured&#xA;    CakeValidationRule $rule - the object containing validation information;;d61,255;;b2,0;;mstring $name;;pCakeValidationRule $rule;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f47;255;52;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f54;255;59;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_translateArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f11;297;2;304;;;;vpos;;varray;;r&#xA;Description&#xA;     Applies translations to validator arguments.&#xA;&#xA;Parameters:&#xA;    array $args - The args to translate&#xA;&#xA;Return:&#xA;   Translated args;;d42,297;;b2,0;;marray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f35;297;40;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="count;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;365;2;367;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the number of rules in this set;;d25,365;;b1,0;;m">
				</treenode>
				<treenode node="getIterator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;356;2;358;;;;vpos;;vArrayIterator;;r&#xA;Description&#xA;     Returns an iterator for each of the rules to be applied;;d31,356;;b1,0;;m">
				</treenode>
				<treenode node="getRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;165;2;169;;;;vpos;;vCakeValidationRule;;r&#xA;Description&#xA;     Gets a rule for a given name if exists&#xA;&#xA;Parameters:&#xA;    string $name - Field name;;d32,165;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f25;165;30;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;176;2;178;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns all rules for this validation set;;d28,176;;b1,0;;m">
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;312;2;314;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether an index exists in the rule set&#xA;&#xA;Parameters:&#xA;    string $index - name of the rule;;d38,312;;b1,0;;mstring $index;;p">
					<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f30;312;36;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;322;2;324;;;;vpos;;vCakeValidationRule;;r&#xA;Description&#xA;     Returns a rule object by its index&#xA;&#xA;Parameters:&#xA;    string $index - name of the rule;;d35,322;;b1,0;;mstring $index;;p">
					<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f27;322;33;322;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;337;2;339;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets or replace a validation rule.&#xA;&#xA;Parameters:&#xA;    string $index - Name of the rule&#xA;    CakeValidationRule|array $rule - Rule to add to $index;;d42,337;;b1,0;;mstring $index;;pCakeValidationRule|array $rule;;p">
					<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f27;337;33;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f35;337;40;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;347;2;349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Unsets a validation rule&#xA;&#xA;Parameters:&#xA;    string $index - name of the rule;;d37,347;;b1,0;;mstring $index;;p">
					<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f29;347;35;347;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;217;2;220;;;;vpos;;v;;r&#xA;Description&#xA;     Removes a validation rule from the set&#xA;&#xA;Parameters:&#xA;    string $name - The name under which the rule should be unset;;d35,217;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f28;217;33;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;153;2;157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Resets internal state for all validation rules in this set;;d25,153;;b1,0;;m">
				</treenode>
				<treenode node="setMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;98;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the list of methods to use for validation&#xA;&#xA;Parameters:&#xA;    array - &amp;$methods Methods list;;d39,98;;b1,0;;marray;;p">
					<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f29;98;37;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;195;2;201;;;;vpos;;v;;r&#xA;Description&#xA;     Sets a CakeValidationRule $rule with a $name&#xA;&#xA;Parameters:&#xA;    string $name - The name under which the rule should be set&#xA;    CakeValidationRule|array $rule - The validation rule to be set;;d39,195;;b1,0;;mstring $name;;pCakeValidationRule|array $rule;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f25;195;30;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f32;195;37;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;238;2;246;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the rules for a given field&#xA;&#xA;Parameters:&#xA;    array $rules - The rules to be set&#xA;    bool $mergeVars - [optional] If true, merges vars instead of replace;;d63,238;;b1,0;;marray $rules;;pbool $mergeVars;;p">
					<treenode node="mergeVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f44;238;54;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rules;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f26;238;32;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setValidationDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;108;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the I18n domain for validation messages.&#xA;&#xA;Parameters:&#xA;    string $validationDomain - The validation domain to be used;;d56,108;;b1,0;;mstring $validationDomain;;p">
					<treenode node="validationDomain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f37;108;54;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;120;2;146;;;;vpos;;varray;;r&#xA;Description&#xA;     Runs all validation rules in this set and returns a list of validation errors&#xA;&#xA;Parameters:&#xA;    array $data - Data array&#xA;    bool $isUpdate - Is record being updated or created&#xA;&#xA;Return:&#xA;   list of validation errors for this field;;d52,120;;b1,0;;marray $data;;pbool $isUpdate;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f26;120;31;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="isUpdate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f33;120;42;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f11;43;20;43;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_rules;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f11;36;18;36;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_validationDomain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f11;50;29;50;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;64;14;64;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="isStopped;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;57;18;57;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="ruleSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php;f8;71;16;71;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CakeValidationSetTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f0;25;1;336;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeValidationSetTest;;d49,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;32;2;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     override locale to the default (eng).;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;210;2;221;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests checking a rule from the set using array access;;d41,210;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;185;2;203;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests getting a rule from the set using array access;;d38,185;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;228;2;244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests setting a rule in the set using array access;;d38,228;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessUnset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;251;2;266;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests unseting a rule from the set using array access;;d40,251;;b1,0;;m">
				</treenode>
				<treenode node="testCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;302;2;312;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests countable interface;;d29,302;;b1,0;;m">
				</treenode>
				<treenode node="testGetRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;84;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetRule method;;d31,84;;b1,0;;m">
				</treenode>
				<treenode node="testGetRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;102;2;109;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetRules method;;d32,102;;b1,0;;m">
				</treenode>
				<treenode node="testIterator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;273;2;295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to iterate a validation set object;;d32,273;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;319;2;334;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test removeRule method;;d34,319;;b1,0;;m">
				</treenode>
				<treenode node="testSetRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;116;2;142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetRule method;;d31,116;;b1,0;;m">
				</treenode>
				<treenode node="testSetRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;149;2;178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetRules method;;d32,149;;b1,0;;m">
				</treenode>
				<treenode node="testValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php;f8;42;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidate method;;d32,42;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Callback;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2042;1;2044;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Callback class;;d37,2042;;b0,0;;m">
			</treenode>
			<treenode node="CallbackFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CallbackFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CallbackFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CallbackFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CallbackPostTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2051;1;2105;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     CallbackPostTestModel class;;d50,2051;;b0,0;;m">
				<treenode node="beforeDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2101;2;2103;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeDelete callback;;d47,2101;;b1,0;;mcascade;;p">
					<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f30;2101;38;2101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2081;2;2083;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeSave callback;;d48,2081;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f28;2081;36;2081;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2092;2;2094;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeValidate callback&#xA;&#xA;Parameters:&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   True if validate operation should continue, false to abort;;d52,2092;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f32;2092;40;2092;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDeleteReturn;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2074;27;2074;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="beforeSaveReturn;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2067;25;2067;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="beforeValidateReturn;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2060;29;2060;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2053;17;2053;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Campaign;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2713;1;2728;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Campaign class;;d37,2713;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2727;16;2727;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2720;13;2720;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CampaignFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CampaignFixture.php;f0;24;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     CampaignFixture class;;d46,24;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CampaignFixture.php;f8;31;15;31;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CampaignFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Category;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;753;1;761;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Category class;;d37,753;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;760;13;760;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Category2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4314;1;4390;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Category2 class;;d38,4314;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4375;2;4388;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4375;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4375;30;4375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4342;18;4342;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4358;16;4358;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4321;13;4321;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4328;14;4328;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4335;17;4335;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CategoryFeatured2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4469;1;4510;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     CategoryFeatured2 class;;d46,4469;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4497;2;4508;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4497;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4497;30;4497;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4476;13;4476;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4483;14;4483;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4490;17;4490;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CategoryFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryFixture.php;f0;23;1;53;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CategoryThread;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;768;1;783;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     CategoryThread class;;d43,768;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;782;18;782;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;775;13;775;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CategoryThreadFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryThreadFixture.php;f0;23;1;52;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryThreadFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryThreadFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Cd;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2404;1;2426;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Cd class;;d31,2404;;b0,0;;m">
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2418;15;2418;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2411;13;2411;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CdFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CdFixture.php;f0;23;1;45;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d40,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CdFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CdFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ClassRegisterModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;25;1;33;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ClassRegisterModel class;;d47,25;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;32;17;32;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ClassRegistry;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f0;32;1;364;;;;vpos;;v;;r&#xA;Description&#xA;     Class Collections.;;d20,32;;b0,0;;m">
				<treenode node="_duplicate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f11;304;2;314;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks to see if $alias is a duplicate $class Object&#xA;&#xA;Parameters:&#xA;    string $alias - Alias to check&#xA;    string $class - Class name;;d48,304;;b2,0;;mstring $alias;;pstring $class;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f32;304;38;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f40;304;46;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f11;347;2;351;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return the name of a class in the registry.&#xA;&#xA;Parameters:&#xA;    string $key - Key to find in map&#xA;&#xA;Return:&#xA;   Mapped value;;d34,347;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f28;347;32;347;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;204;2;212;;;;vpos;;vbool;;r&#xA;Description&#xA;     Add $object to the registry, associating it with the name $key.&#xA;&#xA;Parameters:&#xA;    string $key - Key for the object in registry&#xA;    object $object - Object to store&#xA;&#xA;Return:&#xA;   True if the object was written, false if $key already exists;;d49,204;;b1,5;;mstring $key;;pobject $object;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f34;204;38;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f40;204;47;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;280;2;295;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Sets the default constructor parameter for an object type&#xA;&#xA;Parameters:&#xA;    string $type - Type of object&#xA;    array $param - The parameter that will be passed to object constructors when objects&#xA;&#xA;Return:&#xA;   Void if $param is being set;;d56,280;;b1,5;;mstring $type;;parray $param;;p">
					<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f38;280;44;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f31;280;36;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flush;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;358;2;362;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Flushes all objects from the ClassRegistry.;;d32,358;;b1,5;;m">
				</treenode>
				<treenode node="getInstance;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;60;2;66;;;;vpos;;vClassRegistry;;r&#xA;Description&#xA;     Return a singleton instance of the ClassRegistry.&#xA;&#xA;Return:&#xA;   instance;;d38,60;;b1,5;;m">
				</treenode>
				<treenode node="getObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;256;2;269;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Return object which corresponds to given key.&#xA;&#xA;Parameters:&#xA;    string $key - Key of object to look for&#xA;&#xA;Return:&#xA;   Object stored in registry or boolean false if the object does not exist;;d40,256;;b1,5;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f34;256;38;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;96;2;195;;;;vpos;;v;;r&#xA;Description&#xA;     Loads a class, registers the object in the registry and returns instance of the object. ClassRegistry::init() is used as a factory for models, and handle correct injecting of settings, that assist in testing.&#xA;&#xA;Parameters:&#xA;    string|array $class - as a string or a single key =&gt; value array instance will be created,&#xA;    bool $strict - if set to true it will return false if the class was not found instead;;d54,96;;b1,5;;mstring|array $class;;pbool $strict;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f29;96;35;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strict;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f37;96;44;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isKeySet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;234;2;239;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given key is present in the ClassRegistry.&#xA;&#xA;Parameters:&#xA;    string $key - Key to look for&#xA;&#xA;Return:&#xA;   true if key exists in registry, false otherwise;;d39,234;;b1,5;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f33;234;37;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="keys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;246;2;248;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all keys from the registry.&#xA;&#xA;Return:&#xA;   Set of keys stored in registry;;d31,246;;b1,5;;m">
				</treenode>
				<treenode node="map;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;323;2;330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a key name pair to the registry to map name to class in the registry.&#xA;&#xA;Parameters:&#xA;    string $key - Key to include in map&#xA;    string $name - Key that is being mapped;;d41,323;;b1,5;;mstring $key;;pstring $name;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f28;323;32;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f34;323;39;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;337;2;339;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all keys from the map in the registry.&#xA;&#xA;Return:&#xA;   Keys of registry's map;;d34,337;;b1,5;;m">
				</treenode>
				<treenode node="removeObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f15;220;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Remove object which corresponds to given key.&#xA;&#xA;Parameters:&#xA;    string $key - Key of object to remove from registry;;d43,220;;b1,5;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f37;220;41;220;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f11;53;19;53;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f11;46;16;46;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_objects;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php;f11;39;20;39;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ClassRegistryAbstractModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f9;107;1;111;;;;vpos;;vClassRegisterModel;;c;;r&#xA;Description&#xA;     Abstract class for testing ClassRegistry.;;d69,107;;b0,0;;m">
				<treenode node="doSomething;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f17;109;39;109;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ClassRegistryTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;127;1;315;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ClassRegistryTest class;;d45,127;;b0,0;;m">
				<treenode node="testAddModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;134;2;182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddModel method;;d32,134;;b1,0;;m">
				</treenode>
				<treenode node="testAddMultipleModels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;206;2;240;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddMultipleModels method;;d41,206;;b1,0;;m">
				</treenode>
				<treenode node="testClassRegistryFlush;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;189;2;199;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClassRegistryFlush method;;d42,189;;b1,0;;m">
				</treenode>
				<treenode node="testInitAbstractClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;302;2;304;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that you cannot init() an abstract class. An exception will be raised.;;d41,302;;b1,0;;m">
				</treenode>
				<treenode node="testInitInterface;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;312;2;314;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that you cannot init() an abstract class. A exception will be raised.;;d37,312;;b1,0;;m">
				</treenode>
				<treenode node="testInitStrict;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;292;2;294;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that passing the string parameter to init() will return false if the model does not exists;;d34,292;;b1,0;;m">
				</treenode>
				<treenode node="testPluginAppModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;247;2;265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginAppModel method;;d38,247;;b1,0;;m">
				</treenode>
				<treenode node="testPrefixedTestDatasource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;272;2;285;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests prefixed datasource names for test purposes;;d46,272;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CommandListShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f0;24;1;142;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Shows a list of commands available from the console.;;d40,24;;b0,0;;m">
				<treenode node="_asText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f11;82;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Output text.&#xA;&#xA;Parameters:&#xA;    array $shellList - The shell list;;d40,82;;b2,0;;marray $shellList;;p">
					<treenode node="shellList;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f28;82;38;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_asXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f11;100;2;119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Output as XML&#xA;&#xA;Parameters:&#xA;    array $shellList - The shell list;;d39,100;;b2,0;;marray $shellList;;p">
					<treenode node="shellList;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f27;100;37;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f8;126;2;140;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,126;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f8;49;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Main function Prints out the list of shells.;;d24,49;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f8;38;2;42;;;;vpos;;vvoid;;r&#xA;Description&#xA;     startup;;d27,38;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php;f8;31;14;31;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CommandListShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f0;44;1;132;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class CommandListShellTest;;d48,44;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f8;51;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,51;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f8;84;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,84;;b1,0;;m">
				</treenode>
				<treenode node="testMain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f8;95;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that main finds core shells.;;d28,95;;b1,0;;m">
				</treenode>
				<treenode node="testMainXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f8;117;2;131;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test xml output.;;d31,117;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CommandTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f0;22;1;182;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Base class for Shell Command reflection.;;d35,22;;b0,0;;m">
				<treenode node="_appendShells;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f11;60;2;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Scan the provided paths for shells, and append them into $shellList&#xA;&#xA;Parameters:&#xA;    string $type - The type of object&#xA;    array $shells - The shell name&#xA;    array - &amp;$shellList List of shells;;d63,60;;b2,0;;mstring $type;;parray $shells;;parray;;p">
					<treenode node="shellList;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f51;60;61;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="shells;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f41;60;48;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f34;60;39;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="commands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f8;71;2;87;;;;vpos;;varray;;r&#xA;Description&#xA;     Return a list of all commands;;d28,71;;b1,0;;m">
				</treenode>
				<treenode node="getShell;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f8;132;2;154;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get Shell instance for the given command&#xA;&#xA;Parameters:&#xA;    mixed $commandName - The command you want;;d40,132;;b1,0;;mmixed $commandName;;p">
					<treenode node="commandName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f26;132;38;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getShellList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f8;29;2;50;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the shell command listing.;;d32,29;;b1,0;;m">
				</treenode>
				<treenode node="options;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f8;162;2;180;;;;vpos;;varray;;r&#xA;Description&#xA;     Get Shell instance for the given command&#xA;&#xA;Parameters:&#xA;    mixed $commandName - The command to get options for;;d39,162;;b1,0;;mmixed $commandName;;p">
					<treenode node="commandName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f25;162;37;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subCommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f8;95;2;124;;;;vpos;;varray;;r&#xA;Description&#xA;     Return a list of subcommands for a given command&#xA;&#xA;Parameters:&#xA;    string $commandName - The command you want subcommands from;;d43,95;;b1,0;;mstring $commandName;;p">
					<treenode node="commandName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php;f29;95;41;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CommandTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f0;23;1;239;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CommandTaskTest class;;d43,23;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;30;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,30;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;57;2;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,57;;b1,0;;m">
				</treenode>
				<treenode node="testCommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;105;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the resulting list of commands;;d32,105;;b1,0;;m">
				</treenode>
				<treenode node="testGetShell;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;172;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that getting a existing shell returns the shell instance;;d32,172;;b1,0;;m">
				</treenode>
				<treenode node="testGetShellCore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;192;2;195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that getting a existing core shell with 'core.' prefix returns the correct shell instance;;d36,192;;b1,0;;m">
				</treenode>
				<treenode node="testGetShellList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;68;2;98;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the resulting list of shells;;d36,68;;b1,0;;m">
				</treenode>
				<treenode node="testGetShellNonExisting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;182;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that getting a non-existing shell returns false;;d43,182;;b1,0;;m">
				</treenode>
				<treenode node="testOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;202;2;218;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the options array for a known command;;d31,202;;b1,0;;m">
				</treenode>
				<treenode node="testOptionsUnknownCommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;225;2;237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the options array for an unknown command;;d45,225;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;134;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the resulting list of subcommands for the given command;;d35,134;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommandsUnknownCommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php;f8;160;2;165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that unknown commands return an empty array;;d49,160;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Comment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Comment.php;f0;23;1;32;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;502;1;524;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Comment Model;;d31,23;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;516;18;516;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;523;15;523;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;509;13;509;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Comment.php;f8;30;17;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Comment2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4575;1;4622;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Comment2 class;;d37,4575;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4610;2;4620;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4610;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4610;30;4610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4596;18;4596;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4582;13;4582;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4589;14;4589;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4603;17;4603;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CommentFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CommentFixture.php;f0;23;1;53;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CommentFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CommentFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CompletionShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f0;23;1;154;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Provide command completion shells such as bash.;;d39,23;;b0,0;;m">
				<treenode node="_output;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f11;149;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Emit results as a string, space delimited&#xA;&#xA;Parameters:&#xA;    array $options - The options to output;;d48,149;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f28;149;36;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="commands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;54;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     list commands;;d28,54;;b1,0;;m">
				</treenode>
				<treenode node="fuzzy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;93;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Guess autocomplete from the whole argument string;;d25,93;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;102;2;141;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,102;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;45;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Not called by the autocomplete shell - this is for curious users;;d24,45;;b1,0;;m">
				</treenode>
				<treenode node="options;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;64;2;72;;;;vpos;;vvoid;;r&#xA;Description&#xA;     list options for the named command;;d27,64;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;37;2;38;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Echo no header by overriding the startup method;;d27,37;;b1,0;;m">
				</treenode>
				<treenode node="subCommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;79;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     list subcommands for the named command;;d31,79;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php;f8;30;14;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CompletionShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f0;46;1;260;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class CompletionShellTest;;d47,46;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;53;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,53;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;86;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,86;;b1,0;;m">
				</treenode>
				<treenode node="testCommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;123;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test commands method that list all available commands;;d32,123;;b1,0;;m">
				</treenode>
				<treenode node="testFuzzy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;253;2;259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fuzzy returns nothing;;d29,253;;b1,0;;m">
				</treenode>
				<treenode node="testMain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;110;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that main displays a warning;;d28,110;;b1,0;;m">
				</treenode>
				<treenode node="testOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;162;2;168;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that options with a existing command returns the proper options;;d31,162;;b1,0;;m">
				</treenode>
				<treenode node="testOptionsNoArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;136;2;142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that options without argument returns the default options;;d42,136;;b1,0;;m">
				</treenode>
				<treenode node="testOptionsNonExistingCommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;149;2;155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that options with a nonexisting command returns the default options;;d49,149;;b1,0;;m">
				</treenode>
				<treenode node="testStartup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;97;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the startup method supresses the shell header;;d31,97;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;240;2;246;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that subcommands returns the available subcommands for the given command;;d35,240;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommandsAppPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;188;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that subCommands with a existing APP command returns the proper sub commands (in this case none);;d44,188;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommandsCorePlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;175;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that subCommands with a existing CORE command returns the proper sub commands;;d45,175;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommandsNoArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;214;2;220;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that subcommands without arguments returns nothing;;d46,214;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommandsNonExistingCommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;227;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that subcommands with a nonexisting command returns nothing;;d53,227;;b1,0;;m">
				</treenode>
				<treenode node="testSubCommandsPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;201;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that subCommands with a existing plugin command returns the proper sub commands;;d41,201;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Component;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f0;39;23;39;;;;vpos;;v;;r&#xA;Description&#xA;     Base class for an individual Component. Components provide reusable bits of controller logic that can be composed into a controller. Components also provide request life-cycle callbacks for injecting logic at specific points.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ComponentCollection;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f0;29;1;139;;;;vpos;;vObjectCollection;;cCakeEventListener;;c;;r&#xA;Description&#xA;     Components collection is used as a registry for loaded components and handles loading and constructing component class objects.;;d80,29;;b0,0;;m">
				<treenode node="getController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f8;71;2;73;;;;vpos;;vController;;r&#xA;Description&#xA;     Get the controller associated with the collection.&#xA;&#xA;Return:&#xA;   Controller instance;;d33,71;;b1,0;;m">
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f8;129;2;137;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the implemented events that will get routed to the trigger function in order to dispatch them separately on each component;;d37,129;;b1,0;;m">
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f8;45;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initializes all the Components for a controller. Attaches a reference of each component to the Controller.&#xA;&#xA;Parameters:&#xA;    Controller $Controller - Controller to initialize components for;;d46,45;;b1,0;;mController $Controller;;p">
					<treenode node="Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f33;45;44;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f8;95;2;121;;;;vpos;;vComponent;;r&#xA;Description&#xA;     Loads/constructs a component. Will return the instance in the registry if it already exists. You can use `$settings['enabled'] = false` to disable callbacks on a component when loading it. Callbacks default to on. Disabled component methods work as normal, only callbacks are disabled.&#xA;&#xA;Parameters:&#xA;    string $component - Component name to load&#xA;    array $settings - Settings for the component&#xA;&#xA;Return:&#xA;   A component object, Either the existing loaded component or a new one;;d55,95;;b1,0;;mstring $component;;parray $settings;;p">
					<treenode node="component;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f22;95;32;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f34;95;43;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f8;62;2;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the controller associated with the collection.&#xA;&#xA;Parameters:&#xA;    Controller $Controller - Controller to set;;d55,62;;b1,0;;mController $Controller;;p">
					<treenode node="Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f42;62;53;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php;f11;36;23;36;;;;vposController;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ComponentCollectionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f0;29;1;177;;;;vpos;;vCakeTestCase;;c;;r;;d51,29;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;36;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,36;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;46;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,46;;b1,0;;m">
				</treenode>
				<treenode node="testGetController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;169;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the controller out of the collection;;d37,169;;b1,0;;m">
				</treenode>
				<treenode node="testLoad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;56;2;68;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test triggering callbacks on loaded helpers;;d28,56;;b1,0;;m">
				</treenode>
				<treenode node="testLoadMissingComponent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;120;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test missingcomponent exception;;d44,120;;b1,0;;m">
				</treenode>
				<treenode node="testLoadPluginComponent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;129;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test loading a plugin component.;;d43,129;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;75;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading as an alias;;d37,75;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithEnableFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;106;2;112;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test load and enable = false;;d43,106;;b1,0;;m">
				</treenode>
				<treenode node="testUnload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f8;146;2;162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test unload();;d30,146;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;198;1;288;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ComponentTest class;;d41,198;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;205;2;211;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,205;;b1,0;;m">
				</treenode>
				<treenode node="testInnerComponentConstruction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;218;2;223;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test accessing inner components.;;d50,218;;b1,0;;m">
				</treenode>
				<treenode node="testInnerComponentsAreNotEnabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;245;2;252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that component components are not enabled in the collection.;;d52,245;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleComponentInitialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;259;2;268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a component being used more than once.;;d51,259;;b1,0;;m">
				</treenode>
				<treenode node="testNestedComponentLoading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;230;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test component loading;;d46,230;;b1,0;;m">
				</treenode>
				<treenode node="testSomethingReferencingEmailComponent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;275;2;286;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test mutually referencing components.;;d58,275;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ComponentTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;41;1;50;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ComponentTestController class;;d49,41;;b0,0;;m">
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;48;13;48;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Configure;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f0;34;1;449;;;;vpos;;v;;r&#xA;Description&#xA;     Configuration class. Used for managing runtime configuration information.;;d16,34;;b0,0;;m">
				<treenode node="_appDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f18;118;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set app's default configs;;d42,118;;b2,5;;m">
				</treenode>
				<treenode node="_getReader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f18;359;2;368;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the configured reader. Internally used by `Configure::load()` and `Configure::dump()` Will create new PhpReader for default if not configured yet.&#xA;&#xA;Parameters:&#xA;    string $config - The name of the configured adapter&#xA;&#xA;Return:&#xA;   Reader instance or false;;d47,359;;b2,5;;mstring $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f38;359;45;359;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setErrorHandlers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f18;435;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the error and exception handlers.&#xA;&#xA;Parameters:&#xA;    array $error - The Error handling configuration&#xA;    array $exception - The exception handling configuration;;d65,435;;b2,5;;marray $error;;parray $exception;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f45;435;51;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f53;435;63;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;67;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initializes configure and runs the bootstrap process. Bootstrapping includes the following steps:&#xA;&#xA;Parameters:&#xA;    bool $boot - Whether to do bootstrapping;;d48,67;;b1,5;;mbool $boot;;p">
					<treenode node="boot;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f34;67;39;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;198;2;203;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given variable is set in Configure.&#xA;&#xA;Parameters:&#xA;    string $var - Variable name to check for&#xA;&#xA;Return:&#xA;   True if variable is there;;d43,198;;b1,5;;mstring $var;;p">
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f30;198;34;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;423;2;426;;;;vpos;;vbool;;r&#xA;Description&#xA;     Clear all values stored in Configure.&#xA;&#xA;Return:&#xA;   success;;d32,423;;b1,5;;m">
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;236;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a new reader to Configure. Readers allow you to read configuration files in various formats/storage locations. CakePHP comes with two built-in readers PhpReader and IniReader. You can also implement your own reader classes in your application.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the reader being configured&#xA;    ConfigReaderInterface $reader - The reader to append;;d69,236;;b1,5;;mstring $name;;pConfigReaderInterface $reader;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f31;236;36;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="reader;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f60;236;67;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configured;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;246;2;251;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the names of the configured reader objects.&#xA;&#xA;Parameters:&#xA;    string $name - Name to check&#xA;&#xA;Return:&#xA;   Array of the configured reader objects;;d49,246;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f35;246;40;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;218;2;220;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Used to delete a variable from Configure.&#xA;&#xA;Parameters:&#xA;    string $var - the var to be deleted;;d44,218;;b1,5;;mstring $var;;p">
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f31;218;35;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;260;2;266;;;;vpos;;vbool;;r&#xA;Description&#xA;     Remove a configured reader. This will unset the reader and make any future attempts to use it cause an Exception.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the reader to drop&#xA;&#xA;Return:&#xA;   Success;;d36,260;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f29;260;34;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;337;2;350;;;;vpos;;vbool;;r&#xA;Description&#xA;     Dump data currently in Configure into $key. The serialization format is decided by the config reader attached as $config. For example, if the 'default' adapter is a PhpReader, the generated file will be a PHP configuration file loadable by the PhpReader.&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to create in the config adapter&#xA;    string $config - The name of the configured adapter to dump data with&#xA;    array $keys - The name of the top-level keys you want to dump&#xA;&#xA;Return:&#xA;   success;;d73,337;;b1,5;;mstring $key;;pstring $config;;parray $keys;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f35;337;42;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f29;337;33;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f56;337;61;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;293;2;310;;;;vpos;;vbool;;r&#xA;Description&#xA;     Loads stored configuration information from a resource. You can add config file resource readers with `Configure::config()`.&#xA;&#xA;Parameters:&#xA;    string $key - name of configuration resource to load&#xA;    string $config - Name of the configured reader to use to read the resource identified by $key&#xA;    bool $merge - if config files should be merged instead of simply overridden&#xA;&#xA;Return:&#xA;   False if file not found, true if load successful;;d71,293;;b1,5;;mstring $key;;pstring $config;;pbool $merge;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f35;293;42;293;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f29;293;33;293;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f56;293;62;293;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;185;2;190;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Used to read information stored in Configure. It's not possible to store `null` values in Configure.&#xA;&#xA;Parameters:&#xA;    string $var - Variable to obtain&#xA;&#xA;Return:&#xA;   value stored in configure, or null;;d42,185;;b1,5;;mstring $var;;p">
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f29;185;33;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="restore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;410;2;416;;;;vpos;;vbool;;r&#xA;Description&#xA;     Restores configuration data stored in the Cache into configure. Restored values will overwrite existing ones.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the stored config file to load&#xA;    string $cacheConfig - Name of the Cache configuration to read from&#xA;&#xA;Return:&#xA;   Success;;d65,410;;b1,5;;mstring $name;;pstring $cacheConfig;;p">
					<treenode node="cacheConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f39;410;51;410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f32;410;37;410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="store;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;395;2;400;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to write runtime configuration into Cache. Stored runtime configuration can be restored using `Configure::restore()`. These methods can be used to enable configuration managers frontends, or other GUI type interfaces for configuration.&#xA;&#xA;Parameters:&#xA;    string $name - The storage name for the saved configuration&#xA;    string $cacheConfig - The cache configuration to save into&#xA;    array $data - Either an array of data to store, or leave empty to store all values&#xA;&#xA;Return:&#xA;   Success;;d77,395;;b1,5;;mstring $name;;pstring $cacheConfig;;parray $data;;p">
					<treenode node="cacheConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f37;395;49;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f63;395;68;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f30;395;35;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="version;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;377;2;383;;;;vpos;;vstring;;r&#xA;Description&#xA;     Used to determine the current version of CakePHP.&#xA;&#xA;Return:&#xA;   Current version of CakePHP;;d34,377;;b1,5;;m">
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f15;152;2;169;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to store a dynamic variable in Configure.&#xA;&#xA;Parameters:&#xA;    string|array $config - The key to write, can be a dot notation value&#xA;    mixed $value - Value to set for var&#xA;&#xA;Return:&#xA;   True if write was successful;;d54,152;;b1,5;;mstring|array $config;;pmixed $value;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f30;152;37;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f39;152;45;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_readers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f18;51;27;51;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php;f18;41;26;41;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="ConfigureException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;555;1;556;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for Configure. This exception will be thrown from Configure when it encounters an error.;;d47,555;;b0,0;;m">
			</treenode>
			<treenode node="ConfigureTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f0;27;1;483;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ConfigureTest;;d41,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;34;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;46;2;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,46;;b1,0;;m">
				</treenode>
				<treenode node="testBootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;73;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test to ensure bootrapping doesn't overwrite prior configs set under 'App' key;;d33,73;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;201;2;206;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheck method;;d29,201;;b1,0;;m">
				</treenode>
				<treenode node="testCheckEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;246;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckEmpty;;d34,246;;b1,0;;m">
				</treenode>
				<treenode node="testCheckingSavedEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;213;2;225;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckingSavedEmpty method;;d42,213;;b1,0;;m">
				</treenode>
				<treenode node="testCheckKeyWithSpaces;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;232;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckKeyWithSpaces method;;d42,232;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;429;2;434;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that clear wipes all values.;;d29,429;;b1,0;;m">
				</treenode>
				<treenode node="testDebugSettingDisplayErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;155;2;163;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting display_errors with debug.;;d49,155;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;170;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDelete method;;d30,170;;b1,0;;m">
				</treenode>
				<treenode node="testDump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;449;2;460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test dump integrated with the PhpReader.;;d28,449;;b1,0;;m">
				</treenode>
				<treenode node="testDumpNoAdapter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;440;2;442;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException ConfigureException;;d37,440;;b1,0;;m">
				</treenode>
				<treenode node="testDumpPartial;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;467;2;481;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test dumping only some of the data.;;d35,467;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDefaultConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;266;2;273;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test load method for default config creation;;d41,266;;b1,0;;m">
				</treenode>
				<treenode node="testLoadExceptionOnNonExistantFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;256;2;259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoad method;;d54,256;;b1,0;;m">
				</treenode>
				<treenode node="testLoadNoMerge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;303;2;317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test loading with overwrite;;d35,303;;b1,0;;m">
				</treenode>
				<treenode node="testLoadPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;324;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoad method;;d34,324;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithMerge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;280;2;296;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test load with merging;;d37,280;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;91;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRead method;;d28,91;;b1,0;;m">
				</treenode>
				<treenode node="testReaderExceptionOnIncorrectClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;419;2;422;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reader() throwing exceptions on missing interface.;;d55,419;;b1,0;;m">
				</treenode>
				<treenode node="testReaderSetup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;399;2;411;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding new readers.;;d35,399;;b1,0;;m">
				</treenode>
				<treenode node="testStoreAndRestore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;349;2;362;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStore method;;d39,349;;b1,0;;m">
				</treenode>
				<treenode node="testStoreAndRestoreWithData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;369;2;382;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that store and restore only store/restore the provided data.;;d47,369;;b1,0;;m">
				</treenode>
				<treenode node="testVersion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;389;2;392;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testVersion method;;d31,389;;b1,0;;m">
				</treenode>
				<treenode node="testWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php;f8;118;2;148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWrite method;;d29,118;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConfigureTestVendorSample;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Vendor\sample\configure_test_vendor_sample.php;f0;23;1;24;;;;vpos;;v;;r&#xA;Description&#xA;     Class ConfigureTestVendorSample;;d32,23;;b0,0;;m">
			</treenode>
			<treenode node="ConnectionManager;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f0;30;1;269;;;;vpos;;v;;r&#xA;Description&#xA;     Manages loaded instances of DataSource objects;;d24,30;;b0,0;;m">
				<treenode node="_connectionData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f18;258;2;267;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the file, class name, and parent for the given driver.&#xA;&#xA;Parameters:&#xA;    array $config - Array with connection configuration&#xA;&#xA;Return:&#xA;   An indexed array with: filename, classname, plugin and parent;;d52,258;;b2,5;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f43;258;50;258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getConnectionObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f18;244;2;250;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Gets a list of class and file names associated with the user-defined DataSource connections&#xA;&#xA;Parameters:&#xA;    string $name - Connection name;;d55,244;;b2,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f48;244;53;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f18;65;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Loads connections configuration.;;d35,65;;b2,5;;m">
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;205;2;217;;;;vpos;;vDataSource;;r&#xA;Description&#xA;     Dynamically creates a DataSource object at runtime, with the given name and settings&#xA;&#xA;Parameters:&#xA;    string $name - The DataSource name&#xA;    array $config - The DataSource configuration settings&#xA;&#xA;Return:&#xA;   |null A reference to the DataSource object, or null if creation failed;;d62,205;;b1,5;;mstring $name;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f43;205;50;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f31;205;36;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;225;2;235;;;;vpos;;vbool;;r&#xA;Description&#xA;     Removes a connection configuration at runtime given its name&#xA;&#xA;Parameters:&#xA;    string $name - the connection name as it was created&#xA;&#xA;Return:&#xA;   success if connection was removed, false if it does not exist;;d36,225;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f29;225;34;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enumConnectionObjects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;191;2;196;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a list of connections&#xA;&#xA;Return:&#xA;   An associative array of elements where the key is the connection name;;d48,191;;b1,5;;m">
				</treenode>
				<treenode node="getDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;80;2;108;;;;vpos;;vDataSource;;r&#xA;Description&#xA;     Gets a reference to a DataSource object&#xA;&#xA;Parameters:&#xA;    string $name - The name of the DataSource, as defined in app/Config/database&#xA;&#xA;Return:&#xA;   Instance;;d45,80;;b1,5;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f38;80;43;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getSourceName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;131;2;141;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets a DataSource name from an object reference.&#xA;&#xA;Parameters:&#xA;    DataSource $source - DataSource object&#xA;&#xA;Return:&#xA;   |null Datasource name, or null if source is not present;;d47,131;;b1,5;;mDataSource $source;;p">
					<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f38;131;45;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;152;2;183;;;;vpos;;vbool;;r&#xA;Description&#xA;     Loads the DataSource class for the given connection name&#xA;&#xA;Parameters:&#xA;    string|array $connName - A string name of the connection, as defined in app/Config/database&#xA;&#xA;Return:&#xA;   True on success, null on failure or false if the class is already loaded;;d50,152;;b1,5;;mstring|array $connName;;p">
					<treenode node="connName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f39;152;48;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sourceList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;117;2;122;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the list of available DataSource connections This will only return the datasources instantiated by this manager It differs from enumConnectionObjects, since the latter will return all configured connections&#xA;&#xA;Return:&#xA;   List of available connections;;d37,117;;b1,5;;m">
				</treenode>
				<treenode node="_connectionsEnum;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f18;51;35;51;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_dataSources;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f18;44;31;44;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_init;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f18;58;24;58;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php;f15;37;22;37;;;;vposDATABASE_CONFIG;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="ConnectionManagerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f0;24;1;344;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ConnectionManagerTest;;d49,24;;b0,0;;m">
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;31;2;34;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,31;;b1,0;;m">
				</treenode>
				<treenode node="testConnectionData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;269;2;323;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectionData method;;d38,269;;b1,0;;m">
				</treenode>
				<treenode node="testCreateDataSourceWithIntegrationTests;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;237;2;262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreateDataSource method;;d60,237;;b1,0;;m">
				</treenode>
				<treenode node="testDrop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;330;2;343;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that a connection configuration can be deleted in runtime;;d28,330;;b1,0;;m">
				</treenode>
				<treenode node="testEnumConnectionObjects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;41;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnumConnectionObjects method;;d45,41;;b1,0;;m">
				</treenode>
				<treenode node="testGetDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;54;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetDataSource method;;d37,54;;b1,0;;m">
				</treenode>
				<treenode node="testGetDataSourceException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;79;2;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetDataSourceException() method;;d46,79;;b1,0;;m">
				</treenode>
				<treenode node="testGetLocalDataSourceAndPluginDriver;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;132;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetLocalDataSourceAndPluginDriver method;;d57,132;;b1,0;;m">
				</treenode>
				<treenode node="testGetPluginDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;88;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetPluginDataSource method;;d43,88;;b1,0;;m">
				</treenode>
				<treenode node="testGetPluginDataSourceAndLocalDriver;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;154;2;172;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetPluginDataSourceAndLocalDriver method;;d57,154;;b1,0;;m">
				</treenode>
				<treenode node="testGetPluginDataSourceAndPluginDriver;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;109;2;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetPluginDataSourceAndPluginDriver method;;d58,109;;b1,0;;m">
				</treenode>
				<treenode node="testGetSourceName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;191;2;200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetSourceName method;;d37,191;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;207;2;219;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadDataSource method;;d38,207;;b1,0;;m">
				</treenode>
				<treenode node="testLoadDataSourceException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;227;2;230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadDataSourceException() method;;d47,227;;b1,0;;m">
				</treenode>
				<treenode node="testSourceList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php;f8;179;2;184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSourceList method;;d34,179;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleErrorHandler;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f0;27;1;104;;;;vpos;;v;;r&#xA;Description&#xA;     Error Handler for Cake console. Does simple printing of the exception that occurred and the stack trace of the error.;;d26,27;;b0,0;;m">
				<treenode node="_stop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f11;100;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Wrapper for exit(), used for testing.&#xA;&#xA;Parameters:&#xA;    int $code - The exit code;;d37,100;;b2,0;;mint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f26;100;31;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getStderr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f15;41;2;46;;;;vpos;;vConsoleOutput;;r&#xA;Description&#xA;     Get the stderr object for the console error handling.;;d36,41;;b1,5;;m">
				</treenode>
				<treenode node="handleError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f8;76;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Handle errors in the console environment. Writes errors to stderr, and logs messages if Configure::read('debug') is 0.&#xA;&#xA;Parameters:&#xA;    int $code - Error code&#xA;    string $description - Description of the error&#xA;    string $file - The file the error occurred in&#xA;    int $line - The line the error occurred on&#xA;    array $context - The backtrace of the error;;d95,76;;b1,0;;mint $code;;pstring $description;;pstring $file;;pint $line;;parray $context;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f29;76;34;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f78;76;86;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f36;76;48;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f50;76;55;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f64;76;69;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="handleException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f8;54;2;63;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Handle an exception in the console environment. Prints a message to stderr.&#xA;&#xA;Parameters:&#xA;    Exception $exception - The exception to handle;;d55,54;;b1,0;;mException $exception;;p">
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f43;54;53;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stderr;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php;f15;34;22;34;;;;vposConsoleOutput;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleErrorHandlerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f0;25;1;176;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ConsoleErrorHandler Test case.;;d51,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;32;2;36;;;;vpos;;vMock;;r&#xA;Description&#xA;     setup, create mocks&#xA;&#xA;Return:&#xA;   object;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;43;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,43;;b1,0;;m">
				</treenode>
				<treenode node="testCakeErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;83;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the console error handler can deal with CakeExceptions.;;d34,83;;b1,0;;m">
				</treenode>
				<treenode node="testError404Exception;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;118;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a Error404 exception.;;d41,118;;b1,0;;m">
				</treenode>
				<treenode node="testError500Exception;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;136;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a Error500 exception.;;d41,136;;b1,0;;m">
				</treenode>
				<treenode node="testHandleError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;53;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the console error handler can deal with CakeExceptions.;;d35,53;;b1,0;;m">
				</treenode>
				<treenode node="testHandleFatalError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;66;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the console error handler can deal with fatal errors.;;d40,66;;b1,0;;m">
				</treenode>
				<treenode node="testNonCakeExceptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;100;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a non CakeException exception.;;d41,100;;b1,0;;m">
				</treenode>
				<treenode node="testNonIntegerExceptionCode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php;f8;154;2;174;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a exception with non-integer code;;d47,154;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;582;1;583;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for Console libraries. This exception will be thrown from Console library classes when they encounter an error.;;d45,582;;b0,0;;m">
			</treenode>
			<treenode node="ConsoleInput;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f0;23;1;81;;;;vpos;;v;;r&#xA;Description&#xA;     Object wrapper for interacting with stdin;;d19,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f8;48;2;51;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $handle - The location of the stream to use as input;;d54,48;;b1,0;;mstring $handle;;p">
					<treenode node="handle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f29;48;36;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dataAvailable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f8;75;2;79;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if data is available on the stream&#xA;&#xA;Parameters:&#xA;    int $timeout - An optional time to wait for data&#xA;&#xA;Return:&#xA;   True for data available, false otherwise;;d45,75;;b1,0;;mint $timeout;;p">
					<treenode node="timeout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f31;75;39;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f8;58;2;67;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a value from the stream&#xA;&#xA;Return:&#xA;   The value of the stream;;d24,58;;b1,0;;m">
				</treenode>
				<treenode node="_canReadline;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f11;41;24;41;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php;f11;30;18;30;;;;vposresource;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleInputArgument;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f0;24;1;169;;;;vpos;;v;;r&#xA;Description&#xA;     An object to represent a single argument used in the command line. ConsoleOptionParser creates these when you use addArgument();;d27,24;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f8;62;2;73;;;;vpos;;v;;r&#xA;Description&#xA;     Make a new Input Argument&#xA;&#xA;Parameters:&#xA;    string|array $name - The long name of the option, or an array with all the properties&#xA;    string $help - The help text for this option&#xA;    bool $required - Whether this argument is required&#xA;    array $choices - Valid choices for this option;;d87,62;;b1,0;;mstring|array $name;;pstring $help;;pbool $required;;parray $choices;;p">
					<treenode node="choices;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f67;62;75;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="help;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f36;62;41;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f29;62;34;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="required;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f48;62;57;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="help;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f8;90;2;103;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the help for this argument.&#xA;&#xA;Parameters:&#xA;    int $width - The width to make the name of the option;;d34,90;;b1,0;;mint $width;;p">
					<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f22;90;28;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isRequired;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f8;127;2;129;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if this argument is a required argument;;d30,127;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f8;80;2;82;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the value of the name attribute.&#xA;&#xA;Return:&#xA;   Value of this-&gt;_name;;d24,80;;b1,0;;m">
				</treenode>
				<treenode node="usage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f8;110;2;120;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the usage value for this argument;;d25,110;;b1,0;;m">
				</treenode>
				<treenode node="validChoice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f8;138;2;149;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that $value is a valid choice for this argument.&#xA;&#xA;Parameters:&#xA;    string $value - The choice to validate;;d37,138;;b1,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f29;138;35;138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="xml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f8;157;2;167;;;;vpos;;vSimpleXmlElement;;r&#xA;Description&#xA;     Append this arguments XML representation to the passed in SimpleXml object.&#xA;&#xA;Parameters:&#xA;    SimpleXmlElement $parent - The parent element&#xA;&#xA;Return:&#xA;   The parent with this argument appended;;d47,157;;b1,0;;mSimpleXmlElement $parent;;p">
					<treenode node="parent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f38;157;45;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_choices;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f11;52;20;52;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_help;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f11;38;17;38;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f11;31;17;31;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_required;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php;f11;45;21;45;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleInputOption;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f0;24;1;219;;;;vpos;;v;;r&#xA;Description&#xA;     An object to represent a single option used in the command line. ConsoleOptionParser creates these when you use addOption();;d25,24;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;79;2;97;;;;vpos;;v;;r&#xA;Description&#xA;     Make a new Input Option&#xA;&#xA;Parameters:&#xA;    string|array $name - The long name of the option, or an array with all the properties&#xA;    string $short - The short alias for this option&#xA;    string $help - The help text for this option&#xA;    bool $boolean - Whether this option is a boolean option&#xA;    string $default - The default value for this option&#xA;    array $choices - Valid choices for this option;;d116,79;;b1,0;;mstring|array $name;;pstring $short;;pstring $help;;pbool $boolean;;pstring $default;;parray $choices;;p">
					<treenode node="boolean;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f63;79;71;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="choices;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f96;79;104;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f81;79;89;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="help;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f51;79;56;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f29;79;34;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="short;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f36;79;42;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;163;2;165;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the default value for this option;;d32,163;;b1,0;;m">
				</treenode>
				<treenode node="help;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;123;2;139;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the help for this this option.&#xA;&#xA;Parameters:&#xA;    int $width - The width to make the name of the option;;d34,123;;b1,0;;mint $width;;p">
					<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f22;123;28;123;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isBoolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;172;2;174;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if this option is a boolean option;;d29,172;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;104;2;106;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the value of the name attribute.&#xA;&#xA;Return:&#xA;   Value of this-&gt;_name;;d24,104;;b1,0;;m">
				</treenode>
				<treenode node="short;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;113;2;115;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the value of the short attribute.&#xA;&#xA;Return:&#xA;   Value of this-&gt;_short;;d25,113;;b1,0;;m">
				</treenode>
				<treenode node="usage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;146;2;156;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the usage value for this option;;d25,146;;b1,0;;m">
				</treenode>
				<treenode node="validChoice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;183;2;194;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that a value is a valid choice for this option.&#xA;&#xA;Parameters:&#xA;    string $value - The choice to validate;;d37,183;;b1,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f29;183;35;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="xml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f8;202;2;217;;;;vpos;;vSimpleXmlElement;;r&#xA;Description&#xA;     Append the option's xml into the parent.&#xA;&#xA;Parameters:&#xA;    SimpleXmlElement $parent - The parent element&#xA;&#xA;Return:&#xA;   The parent with this option appended;;d47,202;;b1,0;;mSimpleXmlElement $parent;;p">
					<treenode node="parent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f38;202;45;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_boolean;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f11;52;20;52;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_choices;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f11;66;20;66;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f11;59;20;59;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_help;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f11;45;17;45;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f11;31;17;31;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_short;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php;f11;38;18;38;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleInputSubcommand;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f0;24;1;119;;;;vpos;;v;;r&#xA;Description&#xA;     An object to represent a single subcommand used in the command line. Created when you call ConsoleOptionParser::addSubcommand();;d29,24;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f8;55;2;69;;;;vpos;;v;;r&#xA;Description&#xA;     Make a new Subcommand&#xA;&#xA;Parameters:&#xA;    string|array $name - The long name of the subcommand, or an array with all the properties&#xA;    string $help - The help text for this option&#xA;    ConsoleOptionParser|array $parser - A parser for this subcommand;;d64,55;;b1,0;;mstring|array $name;;pstring $help;;pConsoleOptionParser|array $parser;;p">
					<treenode node="help;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f36;55;41;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f29;55;34;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parser;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f48;55;55;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="help;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f8;86;2;92;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the help for this this subcommand.&#xA;&#xA;Parameters:&#xA;    int $width - The width to make the name of the subcommand;;d34,86;;b1,0;;mint $width;;p">
					<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f22;86;28;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f8;76;2;78;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the value of the name attribute.&#xA;&#xA;Return:&#xA;   Value of this-&gt;_name;;d24,76;;b1,0;;m">
				</treenode>
				<treenode node="parser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f8;99;2;104;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the usage value for this option&#xA;&#xA;Return:&#xA;   Either false or a ConsoleOptionParser;;d26,99;;b1,0;;m">
				</treenode>
				<treenode node="xml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f8;112;2;117;;;;vpos;;vSimpleXmlElement;;r&#xA;Description&#xA;     Append this subcommand to the Parent element&#xA;&#xA;Parameters:&#xA;    SimpleXmlElement $parent - The parent element&#xA;&#xA;Return:&#xA;   The parent with this subcommand appended;;d47,112;;b1,0;;mSimpleXmlElement $parent;;p">
					<treenode node="parent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f38;112;45;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_help;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f11;38;17;38;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f11;31;17;31;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_parser;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php;f11;45;19;45;;;;vposConsoleOptionParser;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php;f0;26;1;86;;;;vpos;;vBaseLog;;c;;r&#xA;Description&#xA;     Console logging. Writes logs to console output.;;d33,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php;f8;48;2;72;;;;vpos;;v;;r&#xA;Description&#xA;     Constructs a new Console Logger.&#xA;&#xA;Parameters:&#xA;    array $config - Options for the FileLog, see above;;d48,48;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php;f29;48;36;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php;f8;81;2;84;;;;vpos;;vbool;;r&#xA;Description&#xA;     Implements writing to console.&#xA;&#xA;Parameters:&#xA;    string $type - The type of log you are making&#xA;    string $message - The message you want to log&#xA;&#xA;Return:&#xA;   success of write;;d40,81;;b1,0;;mstring $type;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php;f30;81;38;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php;f23;81;28;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_output;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php;f11;33;19;33;;;;vposConsoleOutput;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleLogTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f0;47;1;153;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ConsoleLogTest class;;d42,47;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f8;49;2;61;;;;vpos;;v;;r;;d25,49;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f8;63;2;71;;;;vpos;;v;;r;;d28,63;;b1,0;;m">
				</treenode>
				<treenode node="testCombinedLogWriting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f8;99;2;130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test logging to both ConsoleLog and FileLog;;d42,99;;b1,0;;m">
				</treenode>
				<treenode node="testConsoleOutputWrites;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f8;78;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test writing to ConsoleOutput;;d43,78;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultOutputAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f8;137;2;151;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test default value of stream 'outputAs';;d39,137;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleOptionParser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f0;78;1;662;;;;vpos;;v;;r&#xA;Description&#xA;     Handles parsing the ARGV in the command line and provides support for GetOpt compatible option definition. Provides a builder pattern implementation for creating shell option parsers.;;d26,78;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;141;2;161;;;;vpos;;v;;r&#xA;Description&#xA;     Construct an OptionParser so you can define its behavior&#xA;&#xA;Parameters:&#xA;    string $command - The command name this parser is for&#xA;    bool $defaultOptions - Whether you want the verbose and quiet options set;;d70,141;;b1,0;;mstring $command;;pbool $defaultOptions;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f29;141;37;141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="defaultOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f46;141;61;141;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_nextToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;658;2;660;;;;vpos;;vstring;;r&#xA;Description&#xA;     Find the next token in the argv set.&#xA;&#xA;Return:&#xA;   next token or '';;d33,658;;b2,0;;m">
				</treenode>
				<treenode node="_optionExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;618;2;626;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check to see if $name has an option (short/long) defined for it.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the option;;d41,618;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f34;618;39;618;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseArg;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;637;2;651;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse an argument, and ensure that the argument doesn't exceed the number of arguments and that the argument is a valid choice.&#xA;&#xA;Parameters:&#xA;    string $argument - The argument to append&#xA;    array $args - The array of parsed args to append to&#xA;&#xA;Return:&#xA;   Args;;d48,637;;b2,0;;mstring $argument;;parray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f41;637;46;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="argument;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f30;637;39;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseLongOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;546;2;553;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the value for a long option out of $this-&gt;_tokens. Will handle options with an `=` in them.&#xA;&#xA;Parameters:&#xA;    string $option - The option to parse&#xA;    array $params - The params to append the parsed value into&#xA;&#xA;Return:&#xA;   Params with $option added in;;d55,546;;b2,0;;mstring $option;;parray $params;;p">
					<treenode node="option;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f37;546;44;546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f46;546;53;546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;589;2;610;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse an option by its name index.&#xA;&#xA;Parameters:&#xA;    string $name - The name to parse&#xA;    array $params - The params to append the parsed value into&#xA;&#xA;Return:&#xA;   Params with $option added in;;d49,589;;b2,0;;mstring $name;;parray $params;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f33;589;38;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f40;589;47;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseShortOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;565;2;579;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the value for a short option out of $this-&gt;_tokens If the $option is a combination of multiple shortcuts like -otf they will be shifted onto the token stack and parsed individually.&#xA;&#xA;Parameters:&#xA;    string $option - The option to parse&#xA;    array $params - The params to append the parsed value into&#xA;&#xA;Return:&#xA;   Params with $option added in;;d56,565;;b2,0;;mstring $option;;parray $params;;p">
					<treenode node="option;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f38;565;45;565;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f47;565;54;565;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addArgument;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;328;2;348;;;;vpos;;v;;r&#xA;Description&#xA;     Add a positional argument to the option parser.&#xA;&#xA;Parameters:&#xA;    ConsoleInputArgument|string $name - The name of the argument&#xA;    array $params - Parameters for the argument, see above;;d55,328;;b1,0;;mConsoleInputArgument|string $name;;parray $params;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f29;328;34;328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f36;328;43;328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;358;2;363;;;;vpos;;v;;r&#xA;Description&#xA;     Add multiple arguments at once. Take an array of argument definitions. The keys are used as the argument names, and the values as params for the argument.&#xA;&#xA;Parameters:&#xA;    array $args - Array of arguments to add;;d43,358;;b1,0;;marray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f36;358;41;358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;288;2;309;;;;vpos;;v;;r&#xA;Description&#xA;     Add an option to the option parser. Options allow you to define optional or required parameters for your console application. Options are defined by the parameters they use.&#xA;&#xA;Parameters:&#xA;    ConsoleInputOption|string $name - The long name you want to the value to be parsed out as when options are parsed&#xA;    array $options - An array of parameters that define the behavior of the option;;d54,288;;b1,0;;mConsoleInputOption|string $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f27;288;32;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f34;288;42;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;373;2;378;;;;vpos;;v;;r&#xA;Description&#xA;     Add multiple options at once. Takes an array of option definitions. The keys are used as option names, and the values as params for the option.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options to add;;d44,373;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f34;373;42;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addSubcommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;395;2;410;;;;vpos;;v;;r&#xA;Description&#xA;     Append a subcommand to the subcommand list. Subcommands are usually methods on your Shell, but can also be used to document Tasks.&#xA;&#xA;Parameters:&#xA;    ConsoleInputSubcommand|string $name - Name of the subcommand&#xA;    array $options - Array of params, see above;;d58,395;;b1,0;;mConsoleInputSubcommand|string $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f31;395;36;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f38;395;46;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addSubcommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;429;2;434;;;;vpos;;v;;r&#xA;Description&#xA;     Add multiple subcommands at once.&#xA;&#xA;Parameters:&#xA;    array $commands - Array of subcommands;;d49,429;;b1,0;;marray $commands;;p">
					<treenode node="commands;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f38;429;47;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="arguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;441;2;443;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the arguments defined in the parser.&#xA;&#xA;Return:&#xA;   Array of argument descriptions;;d29,441;;b1,0;;m">
				</treenode>
				<treenode node="buildFromArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f15;196;2;214;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Build a parser from an array. Uses an array like&#xA;&#xA;Parameters:&#xA;    array $spec - The spec to build the OptionParser with;;d46,196;;b1,5;;marray $spec;;p">
					<treenode node="spec;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f39;196;44;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="command;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;222;2;228;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get or set the command name for shell/task.&#xA;&#xA;Parameters:&#xA;    string $text - The text to set, or null if you want to read&#xA;&#xA;Return:&#xA;   |$this If reading, the value of the command;;d39,222;;b1,0;;mstring $text;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f25;222;30;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f15;170;2;172;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Static factory method for creating new OptionParsers so you can chain methods off of them.&#xA;&#xA;Parameters:&#xA;    string $command - The command name this parser is for&#xA;    bool $defaultOptions - Whether you want the verbose and quiet options set;;d65,170;;b1,5;;mstring $command;;pbool $defaultOptions;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f31;170;39;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="defaultOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f41;170;56;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="description;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;237;2;246;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get or set the description text for shell/task.&#xA;&#xA;Parameters:&#xA;    string|array $text - The text to set, or null if you want to read&#xA;&#xA;Return:&#xA;   |$this If reading, the value of the description;;d43,237;;b1,0;;mstring|array $text;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f29;237;34;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="epilog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;255;2;264;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get or set an epilog to the parser. The epilog is added to the end of the options and arguments listing when help is generated.&#xA;&#xA;Parameters:&#xA;    string|array $text - Text when setting or null when reading&#xA;&#xA;Return:&#xA;   |$this If reading, the value of the epilog;;d38,255;;b1,0;;mstring|array $text;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f24;255;29;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="help;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;522;2;536;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets formatted help for this parser object. Generates help text based on the description, options, arguments, subcommands and epilog in the parser.&#xA;&#xA;Parameters:&#xA;    string $subcommand - If present and a valid subcommand that has a linked parser&#xA;    string $format - Define the output format, can be text or xml&#xA;    int $width - The width to format user content to&#xA;&#xA;Return:&#xA;   Generated help;;d73,522;;b1,0;;mstring $subcommand;;pstring $format;;pint $width;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f42;522;49;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subcommand;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f22;522;33;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f60;522;66;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="options;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;450;2;452;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the defined options in the parser.;;d27,450;;b1,0;;m">
				</treenode>
				<treenode node="parse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;474;2;509;;;;vpos;;vArray;;r&#xA;Description&#xA;     Parse the argv array into a set of params and args. If $command is not null and $command is equal to a subcommand that has a parser, that parser will be used to parse the $argv&#xA;&#xA;Parameters:&#xA;    array $argv - Array of args (argv) to parse&#xA;    string $command - The subcommand to use&#xA;&#xA;Return:&#xA;   array($params, $args);;d47,474;;b1,0;;marray $argv;;pstring $command;;p">
					<treenode node="argv;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f23;474;28;474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f30;474;38;474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeSubcommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;418;2;421;;;;vpos;;v;;r&#xA;Description&#xA;     Remove a subcommand from the option parser.&#xA;&#xA;Parameters:&#xA;    string $name - The subcommand name to remove;;d41,418;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f34;418;39;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subcommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f8;459;2;461;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the array of defined subcommands;;d31,459;;b1,0;;m">
				</treenode>
				<treenode node="_args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;117;17;117;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;132;20;132;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;86;24;86;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_epilog;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;94;19;94;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;102;20;102;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_shortOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;109;25;109;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_subcommands;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php;f11;125;24;125;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleOptionParserTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f0;25;1;645;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class ConsoleOptionParserTest;;d51,25;;b0,0;;m">
				<treenode node="testAddArgumentObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;330;2;336;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test addOption with an object.;;d41,330;;b1,0;;m">
				</treenode>
				<treenode node="testAddArgumentOutOfOrder;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;343;2;355;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test adding arguments out of order.;;d45,343;;b1,0;;m">
				</treenode>
				<treenode node="testAddArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;440;2;450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test adding multiple arguments.;;d36,440;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionBoolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;174;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding and using boolean options.;;d40,174;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionDefault;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;127;2;141;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an option and using the default.;;d40,127;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionLong;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;75;2;82;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an option and using the long value for parsing.;;d37,75;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionLongEquals;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;113;2;120;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an option and using the long value for parsing.;;d43,113;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionMultipleShort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;194;2;206;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an multiple shorts.;;d46,194;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;101;2;106;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test addOption with an object.;;d39,101;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionReturnSelf;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;64;2;68;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an option returns self.;;d43,64;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;229;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test adding multiple options.;;d34,229;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionShort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;148;2;155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an option and using the short value for parsing.;;d38,148;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionShortOneLetter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;164;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that adding an option using a two letter short value causes an exception. As they will not parse correctly.;;d47,164;;b1,0;;m">
				</treenode>
				<treenode node="testAddOptionZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;89;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an option with a zero value;;d37,89;;b1,0;;m">
				</treenode>
				<treenode node="testAddSubcommandObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;470;2;476;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test addSubcommand with an object.;;d43,470;;b1,0;;m">
				</treenode>
				<treenode node="testAddSubcommands;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;498;2;507;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding multiple subcommands;;d38,498;;b1,0;;m">
				</treenode>
				<treenode node="testBuildFromArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;558;2;589;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test building a parser from an array.;;d38,558;;b1,0;;m">
				</treenode>
				<treenode node="testCommandInflection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;607;2;610;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that command() inflects the command name.;;d41,607;;b1,0;;m">
				</treenode>
				<treenode node="testCreateFactory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;596;2;600;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that create() returns instances;;d37,596;;b1,0;;m">
				</treenode>
				<treenode node="testDescription;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;32;2;41;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting the console description;;d35,32;;b1,0;;m">
				</treenode>
				<treenode node="testEpilog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;48;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting the console epilog;;d30,48;;b1,0;;m">
				</treenode>
				<treenode node="testHelpNoExceptionWhenGettingHelp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;514;2;521;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that no exception is triggered when help is being generated;;d54,514;;b1,0;;m">
				</treenode>
				<treenode node="testHelpSubcommandHelp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;528;2;551;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that help() with a command param shows the help for a subcommand;;d42,528;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;213;2;222;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test multiple options at once.;;d39,213;;b1,0;;m">
				</treenode>
				<treenode node="testOptionThatDoesNotExist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;262;2;267;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test parsing options that do not exist.;;d46,262;;b1,0;;m">
				</treenode>
				<treenode node="testOptionWithBooleanParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;246;2;254;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that boolean options work;;d46,246;;b1,0;;m">
				</treenode>
				<treenode node="testOptionWithChoices;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;288;2;297;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that options with choices enforce them.;;d41,288;;b1,0;;m">
				</treenode>
				<treenode node="testOptionWithValueStartingWithMinus;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;304;2;312;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that option values can start with -;;d56,304;;b1,0;;m">
				</treenode>
				<treenode node="testParseArgumentTooMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;377;2;387;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test parsing arguments.;;d44,377;;b1,0;;m">
				</treenode>
				<treenode node="testParseArgumentZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;394;2;400;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test parsing arguments with 0 value.;;d41,394;;b1,0;;m">
				</treenode>
				<treenode node="testParsingWithSubParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;618;2;643;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that parse() takes a subcommand argument, and that the subcommand parser is used.;;d44,618;;b1,0;;m">
				</treenode>
				<treenode node="testPositionalArgNotEnough;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;408;2;414;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that when there are not enough arguments an exception is raised;;d46,408;;b1,0;;m">
				</treenode>
				<treenode node="testPositionalArgOverwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;362;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test overwriting positional arguments.;;d46,362;;b1,0;;m">
				</treenode>
				<treenode node="testPositionalArgument;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;319;2;323;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test positional argument parsing.;;d42,319;;b1,0;;m">
				</treenode>
				<treenode node="testPositionalArgWithChoices;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;422;2;433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that arguments with choices enforce them.;;d48,422;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveSubcommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;483;2;491;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test removeSubcommand with an object.;;d40,483;;b1,0;;m">
				</treenode>
				<treenode node="testShortOptionThatDoesNotExist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;275;2;280;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test parsing short options that do not exist.;;d51,275;;b1,0;;m">
				</treenode>
				<treenode node="testSubcommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php;f8;457;2;463;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting a subcommand up.;;d34,457;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleOutput;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f0;44;1;305;;;;vpos;;v;;r&#xA;Description&#xA;     Object wrapper for outputting information from a shell application. Can be connected to any stream resource that can be used with fopen();;d20,44;;b0,0;;m">
				<treenode node="COLOR;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f6;65;12;65;;;;vposint;;v;;r2;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LF;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f6;72;9;72;;;;vposstring;;v;;r;;d-1,-1;;b0,0;;m">
					<treenode node="PHP_EOL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f11;72;19;72;;;;vpos;;v;;rPHP_EOL;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="PLAIN;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f6;58;12;58;;;;vposint;;v;;r1;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="RAW;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f6;51;10;51;;;;vposint;;v;;r0;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f8;160;2;169;;;;vpos;;v;;r&#xA;Description&#xA;     Construct the output object.&#xA;&#xA;Parameters:&#xA;    string $stream - The identifier of the stream to write output to;;d55,160;;b1,0;;mstring $stream;;p">
					<treenode node="stream;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f29;160;36;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f8;299;2;303;;;;vpos;;v;;r&#xA;Description&#xA;     Clean up and close handles;;d30,299;;b1,0;;m">
				</treenode>
				<treenode node="_replaceTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f11;211;2;231;;;;vpos;;vstring;;r&#xA;Description&#xA;     Replace tags with color codes.&#xA;&#xA;Parameters:&#xA;    array $matches - An array of matches to replace;;d43,211;;b2,0;;marray $matches;;p">
					<treenode node="matches;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f33;211;41;211;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f11;239;2;241;;;;vpos;;vbool;;r&#xA;Description&#xA;     Writes a message to the output stream.&#xA;&#xA;Parameters:&#xA;    string $message - Message to write&#xA;&#xA;Return:&#xA;   success;;d37,239;;b2,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f27;239;35;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="outputAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f8;289;2;294;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get/Set the output type to use. The output type how formatting tags are treated.&#xA;&#xA;Parameters:&#xA;    int $type - The output type to use&#xA;&#xA;Return:&#xA;   Either null or the value if getting;;d40,289;;b1,0;;mint $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f26;289;31;289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="styles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f8;268;2;281;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the current styles offered, or append new ones in.&#xA;&#xA;Parameters:&#xA;    string $style - The style to get or create&#xA;    array $definition - The array definition of the style to change or create a style&#xA;&#xA;Return:&#xA;   If you are getting styles, the style or null will be returned;;d59,268;;b1,0;;mstring $style;;parray $definition;;p">
					<treenode node="definition;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f39;268;50;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="style;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f24;268;30;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="styleText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f8;192;2;203;;;;vpos;;vstring;;r&#xA;Description&#xA;     Apply styling to text.&#xA;&#xA;Parameters:&#xA;    string $text - Text with styling tags&#xA;&#xA;Return:&#xA;   String with color codes added;;d34,192;;b1,0;;mstring $text;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f27;192;32;192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f8;179;2;184;;;;vpos;;vint;;r&#xA;Description&#xA;     Outputs a single or multiple messages to stdout. If no parameters are passed, outputs just a newline.&#xA;&#xA;Parameters:&#xA;    string|array $message - A string or an array of strings to output&#xA;    int $newlines - Number of newlines to append&#xA;&#xA;Return:&#xA;   Returns the number of bytes returned from writing to stdout;;d48,179;;b1,0;;mstring|array $message;;pint $newlines;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f23;179;31;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="newlines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f33;179;42;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_backgroundColors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f18;109;36;109;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_foregroundColors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f18;93;36;93;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f18;125;27;125;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_outputAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f11;86;21;86;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_styles;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php;f18;138;26;138;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleOutputTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f0;25;1;256;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class ConsoleOutputTest;;d45,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;32;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;43;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,43;;b1,0;;m">
				</treenode>
				<treenode node="testFormattingCustom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;157;2;169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test formatting with custom styles.;;d40,157;;b1,0;;m">
				</treenode>
				<treenode node="testFormattingMissingStyleName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;176;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test formatting text with missing styles.;;d50,176;;b1,0;;m">
				</treenode>
				<treenode node="testFormattingMultipleSameTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;200;2;205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that multiple tags of the same name work in one string.;;d50,200;;b1,0;;m">
				</treenode>
				<treenode node="testFormattingMultipleStylesName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;188;2;193;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test formatting text with multiple styles.;;d52,188;;b1,0;;m">
				</treenode>
				<treenode node="testFormattingNotEatingTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;145;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that formatting doesn't eat tags it doesn't know about.;;d47,145;;b1,0;;m">
				</treenode>
				<treenode node="testFormattingSimple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;133;2;138;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test formatting text with styles.;;d40,133;;b1,0;;m">
				</treenode>
				<treenode node="testOutputAsPlain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;225;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test plain output.;;d37,225;;b1,0;;m">
				</treenode>
				<treenode node="testOutputAsPlainSelectiveTagRemoval;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;249;2;255;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test plain output only strips tags used for formatting.;;d56,249;;b1,0;;m">
				</treenode>
				<treenode node="testOutputAsPlainWhenOutputStream;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;239;2;242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test plain output when php://output, as php://output is not compatible with posix_ functions.;;d53,239;;b1,0;;m">
				</treenode>
				<treenode node="testOutputAsRaw;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;212;2;218;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test raw output not getting tags replaced.;;d35,212;;b1,0;;m">
				</treenode>
				<treenode node="testStylesAdding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;118;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding a style.;;d36,118;;b1,0;;m">
				</treenode>
				<treenode node="testStylesGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;101;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting a style.;;d33,101;;b1,0;;m">
				</treenode>
				<treenode node="testWriteArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;89;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test writing an array of messages.;;d34,89;;b1,0;;m">
				</treenode>
				<treenode node="testWriteMultipleNewLines;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;77;2;82;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test write() with multiple new lines;;d45,77;;b1,0;;m">
				</treenode>
				<treenode node="testWriteNewLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;65;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test writing with no new line;;d36,65;;b1,0;;m">
				</treenode>
				<treenode node="testWriteNoNewLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php;f8;53;2;58;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test writing with no new line;;d38,53;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ConsoleShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f0;23;1;513;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Provides a very basic 'interactive' console for CakePHP apps.;;d36,23;;b0,0;;m">
				<treenode node="_bind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;261;2;280;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Bind an association&#xA;&#xA;Parameters:&#xA;    mixed $command - The command to run;;d36,261;;b2,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f26;261;34;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_columns;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;411;2;431;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Show the columns for a model&#xA;&#xA;Parameters:&#xA;    mixed $command - The command to run;;d39,411;;b2,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f29;411;37;411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_exit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;238;2;240;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the finiished property so that the loop in main method ends;;d28,238;;b2,0;;m">
				</treenode>
				<treenode node="_find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;325;2;379;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Perform a find&#xA;&#xA;Parameters:&#xA;    mixed $command - The command to run;;d36,325;;b2,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f26;325;34;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_isValidModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;488;2;490;;;;vpos;;vbool;;r&#xA;Description&#xA;     Tells if the specified model is included in the list of available models&#xA;&#xA;Parameters:&#xA;    string $modelToCheck - The model to check&#xA;&#xA;Return:&#xA;   true if is an available model, false otherwise;;d49,488;;b2,0;;mstring $modelToCheck;;p">
					<treenode node="modelToCheck;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f34;488;47;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;498;2;511;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reloads the routes configuration from app/Config/routes.php, and compiles all routes found&#xA;&#xA;Return:&#xA;   True if config reload was a success, otherwise false;;d34,498;;b2,0;;m">
				</treenode>
				<treenode node="_method;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;223;2;231;;;;vpos;;vstring;;r&#xA;Description&#xA;     Determine the method to process the current command&#xA;&#xA;Parameters:&#xA;    string $command - The command to run&#xA;&#xA;Return:&#xA;   or false;;d38,223;;b2,0;;mstring $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f28;223;36;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_models;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;247;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     List all models;;d30,247;;b2,0;;m">
				</treenode>
				<treenode node="_routesReload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;438;2;443;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Reload route definitions;;d36,438;;b2,0;;m">
				</treenode>
				<treenode node="_routesShow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;450;2;452;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Show all routes;;d34,450;;b2,0;;m">
				</treenode>
				<treenode node="_routeToArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;476;2;480;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parse a string URL and show as an array&#xA;&#xA;Parameters:&#xA;    mixed $command - The command to run;;d44,476;;b2,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f34;476;42;476;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_routeToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;460;2;468;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parse an array URL and show the equivalent URL as a string&#xA;&#xA;Parameters:&#xA;    mixed $command - The command to run;;d45,460;;b2,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f35;460;43;460;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_save;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;387;2;403;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Save a record&#xA;&#xA;Parameters:&#xA;    mixed $command - The command to run;;d36,387;;b2,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f26;387;34;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_unbind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;288;2;317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Unbind an association&#xA;&#xA;Parameters:&#xA;    mixed $command - The command to run;;d38,288;;b2,0;;mmixed $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f28;288;36;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f8;111;2;181;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,111;;b1,0;;m">
				</treenode>
				<treenode node="help;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f8;187;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prints the help message;;d24,187;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f8;198;2;215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override main() to handle action&#xA;&#xA;Parameters:&#xA;    string $command - The command to run;;d39,198;;b1,0;;mstring $command;;p">
					<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f22;198;30;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f8;80;2;104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override startup of the Shell;;d27,80;;b1,0;;m">
				</treenode>
				<treenode node="_finished;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;53;21;53;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_methodPatterns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f11;60;27;60;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f8;30;21;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="badCommandChars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f8;37;24;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="models;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php;f8;44;15;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Contact;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;48;1;132;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Contact class;;d36,48;;b0,0;;m">
				<treenode node="setSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;115;2;117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d36,115;;b1,0;;mschema;;p">
					<treenode node="schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f27;115;34;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;62;19;62;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;131;18;131;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;124;28;124;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;55;17;55;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;79;17;79;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContactNonStandardPk;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;176;1;197;;;;vpos;;vContact;;c;;r&#xA;Description&#xA;     ContactNonStandardPk class;;d43,176;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;190;2;195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,190;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f24;190;30;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;183;19;183;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContactTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;204;1;224;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     ContactTag class;;d31,204;;b0,0;;m">
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;218;19;218;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;211;17;211;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContactTagsContact;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;139;1;169;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ContactTagsContact class;;d47,139;;b0,0;;m">
				<treenode node="setSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;165;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d36,165;;b1,0;;mschema;;p">
					<treenode node="schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f27;165;34;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;153;19;153;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;146;17;146;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContactTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;33;1;41;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ContactTestController class;;d47,33;;b0,0;;m">
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;40;13;40;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContainableBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f0;30;1;430;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Behavior to allow for dynamic and atomic manipulation of a Model's associations used for a find call. Most useful for limiting the amount of associations and data returned.;;d48,30;;b0,0;;m">
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;92;2;220;;;;vpos;;varray;;r&#xA;Description&#xA;     Runs before a find() operation. Used to allow 'contain' setting as part of the find call, like this:&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using the behavior&#xA;    array $query - Query parameters as set by cake;;d50,92;;b1,0;;mModel $Model;;parray $query;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f34;92;40;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f42;92;48;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="contain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;230;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Unbinds all relations from a model except the specified ones. Calling this function without parameters unbinds all related models.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model on which binding restriction is being applied;;d39,230;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f31;230;37;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="containments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;268;2;360;;;;vpos;;varray;;r&#xA;Description&#xA;     Process containments for model.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model on which binding restriction is being applied&#xA;    array $contain - Parameters to use for restricting this model&#xA;    array $containments - Current set of containments&#xA;    bool $throwErrors - Whether non-existent bindings show throw errors&#xA;&#xA;Return:&#xA;   Containments;;d100,268;;b1,0;;mModel $Model;;parray $contain;;parray $containments;;pbool $throwErrors;;p">
					<treenode node="contain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f44;268;52;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="containments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f54;268;67;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f36;268;42;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="throwErrors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f79;268;91;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="containmentsMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;415;2;428;;;;vpos;;varray;;r&#xA;Description&#xA;     Build the map of containments&#xA;&#xA;Parameters:&#xA;    array $containments - Containments&#xA;&#xA;Return:&#xA;   Built containments;;d48,415;;b1,0;;marray $containments;;p">
					<treenode node="containments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f33;415;46;415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fieldDependencies;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;370;2;407;;;;vpos;;varray;;r&#xA;Description&#xA;     Calculate needed fields to fetch the required bindings for the given model.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model&#xA;    array $map - Map of relations for given model&#xA;    array|bool $fields - If array, fields to initially load, if false use $Model as primary model&#xA;&#xA;Return:&#xA;   Fields;;d74,370;;b1,0;;mModel $Model;;parray $map;;parray|bool $fields;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f55;370;62;370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f49;370;53;370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f41;370;47;370;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resetBindings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;244;2;257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Permanently restore the original binding settings of given model, useful for restoring the bindings after using 'reset' =&gt; false as part of the contain call.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model on which to reset bindings;;d45,244;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f37;244;43;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;64;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initiate behavior for the model using specified settings.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using the behavior&#xA;    array $settings - Settings to override for model;;d58,64;;b1,0;;mModel $Model;;parray $settings;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f29;64;35;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f37;64;46;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="runtime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="types;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php;f8;37;14;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContainableBehaviorTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f0;28;1;3766;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ContainableTest class;;d51,28;;b0,0;;m">
				<treenode node="_assertBindings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f11;3755;2;3765;;;;vpos;;vvoid;;r&#xA;Description&#xA;     _assertBindings method&#xA;&#xA;Parameters:&#xA;    Model $Model&#xA;    array $expected;;d71,3755;;b2,0;;mModel $Model;;parray $expected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f50;3755;59;3755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f42;3755;48;3755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_containments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f11;3736;2;3746;;;;vpos;;vvoid;;r&#xA;Description&#xA;     _containments method&#xA;&#xA;Parameters:&#xA;    Model $Model&#xA;    array $contain;;d62,3736;;b2,0;;mModel $Model;;parray $contain;;p">
					<treenode node="contain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f42;3736;50;3736;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f34;3736;40;3736;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;47;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Method executed before each test;;d25,47;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;73;2;78;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Method executed after each test;;d28,73;;b1,0;;m">
				</treenode>
				<treenode node="testAutoFieldsWithMultipleDatabases;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3658;2;3680;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that autoFields doesn't splice in fields from other databases.;;d55,3658;;b1,0;;m">
				</treenode>
				<treenode node="testAutoFieldsWithRecursiveNegativeOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3687;2;3692;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that autoFields doesn't splice in columns that aren't part of the join.;;d58,3687;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;174;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBeforeFind method;;d34,174;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeFindWithNonExistingBinding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;246;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBeforeFindWithNonExistingBinding method;;d56,246;;b1,0;;m">
				</treenode>
				<treenode node="testBindMultipleTimesWithFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3621;2;3651;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that bindModel and unbindModel work with find() calls in between.;;d49,3621;;b1,0;;m">
				</treenode>
				<treenode node="testContain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;255;2;263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testContain method;;d31,255;;b1,0;;m">
				</treenode>
				<treenode node="testContainAndContainOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;294;2;300;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that mixing contain() and the contain find option.;;d47,294;;b1,0;;m">
				</treenode>
				<treenode node="testContainFindList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;270;2;287;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testContainFindList method;;d39,270;;b1,0;;m">
				</treenode>
				<treenode node="testContainments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;85;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testContainments method;;d36,85;;b1,0;;m">
				</treenode>
				<treenode node="testEmbeddedFindFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;2988;2;3055;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEmbeddedFindFields method;;d42,2988;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllReturn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3699;2;3704;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that find(all) doesn't return incorrect values when mixed with containable.;;d37,3699;;b1,0;;m">
				</treenode>
				<treenode node="testFindConditionalBinding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3096;2;3232;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindConditionalBinding method;;d46,3096;;b1,0;;m">
				</treenode>
				<treenode node="testFindEmbeddedFirstLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;439;2;538;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindEmbeddedFirstLevel method;;d46,439;;b1,0;;m">
				</treenode>
				<treenode node="testFindEmbeddedNoBindings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;307;2;324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindEmbeddedNoBindings method;;d46,307;;b1,0;;m">
				</treenode>
				<treenode node="testFindEmbeddedSecondLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;950;2;1285;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindEmbeddedSecondLevel method;;d47,950;;b1,0;;m">
				</treenode>
				<treenode node="testFindEmbeddedThirdLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;1612;2;1922;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindEmbeddedThirdLevel method;;d46,1612;;b1,0;;m">
				</treenode>
				<treenode node="testFindEmbeddedThirdLevelNonReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;2499;2;2981;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindEmbeddedThirdLevelNonReset method;;d54,2499;;b1,0;;m">
				</treenode>
				<treenode node="testFindFirstLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;331;2;432;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindFirstLevel method;;d38,331;;b1,0;;m">
				</treenode>
				<treenode node="testFindSecondLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;545;2;943;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindSecondLevel method;;d39,545;;b1,0;;m">
				</treenode>
				<treenode node="testFindThirdLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;1292;2;1605;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindThirdLevel method;;d38,1292;;b1,0;;m">
				</treenode>
				<treenode node="testFindThirdLevelNonReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;2175;2;2492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindThirdLevelNonReset method;;d46,2175;;b1,0;;m">
				</treenode>
				<treenode node="testHasOneFieldsInContain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3062;2;3089;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that hasOne and belongsTo fields act the same in a contain array.;;d45,3062;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidContainments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;155;2;157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInvalidContainments method;;d43,155;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidContainmentsNoNotices;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;164;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInvalidContainments method with suppressing error notices;;d52,164;;b1,0;;m">
				</treenode>
				<treenode node="testLazyLoad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3711;2;3727;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLazyLoad method;;d32,3711;;b1,0;;m">
				</treenode>
				<treenode node="testOriginalAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3302;2;3387;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOriginalAssociations method;;d44,3302;;b1,0;;m">
				</treenode>
				<treenode node="testOtherFinds;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3239;2;3295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOtherFinds method;;d34,3239;;b1,0;;m">
				</treenode>
				<treenode node="testResetAddedAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3394;2;3429;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testResetAddedAssociation method;;d45,3394;;b1,0;;m">
				</treenode>
				<treenode node="testResetAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3436;2;3461;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testResetAssociation method;;d40,3436;;b1,0;;m">
				</treenode>
				<treenode node="testResetDeeperHasOneAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3468;2;3522;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testResetDeeperHasOneAssociations method;;d53,3468;;b1,0;;m">
				</treenode>
				<treenode node="testResetMultipleHabtmAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;3529;2;3614;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testResetMultipleHabtmAssociations method;;d54,3529;;b1,0;;m">
				</treenode>
				<treenode node="testSettingsThirdLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;1929;2;2168;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSettingsThirdLevel method;;d42,1929;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php;f8;35;17;35;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Content;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2798;1;2827;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Nonconformant Content class;;d36,2798;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2826;28;2826;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2805;13;2805;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2819;19;2819;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2812;17;2812;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContentAccount;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2863;1;2885;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Nonconformant ContentAccount class;;d43,2863;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2870;13;2870;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2884;19;2884;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2877;17;2877;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContentAccountFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentAccountFixture.php;f0;23;1;51;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentAccountFixture.php;f8;32;15;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentAccountFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentAccountFixture.php;f8;25;14;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ContentFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentFixture.php;f8;32;15;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentFixture.php;f8;25;14;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Controller;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f0;56;24;56;;;;vpos;;v;;r&#xA;Description&#xA;     Application controller class for organization of business logic. Provides basic functionality, such as rendering views inside layouts, automatic model availability, redirection, callbacks, and more.;;d-1,-1;;b0,0;;m">
				<treenode node="Acl;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f30;46;35;46;;;;vposAclComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Auth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f31;47;37;47;;;;vposAuthComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Cookie;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f33;48;41;48;;;;vposCookieComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f32;49;39;49;;;;vposEmailComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Paginator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f36;50;47;50;;;;vposPaginatorComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="RequestHandler;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f41;51;57;51;;;;vposRequestHandlerComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Security;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f35;52;45;52;;;;vposSecurityComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Session;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f34;53;43;53;;;;vposSessionComponent;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerAlias;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;159;1;174;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ControllerAlias class;;d44,159;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;166;14;166;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;173;17;173;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerAuthorize;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ControllerAuthorize.php;f0;36;1;65;;;;vpos;;vBaseAuthorize;;c;;r&#xA;Description&#xA;     An authorization adapter for AuthComponent. Provides the ability to authorize using a controller callback. Your controller's isAuthorized() method should return a boolean to indicate whether or not the user is authorized.;;d48,36;;b0,0;;m">
				<treenode node="authorize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ControllerAuthorize.php;f8;61;2;63;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks user authorization using a controller callback.&#xA;&#xA;Parameters:&#xA;    array $user - Active user data&#xA;    CakeRequest $request - Request instance;;d56,61;;b1,0;;marray $user;;pCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ControllerAuthorize.php;f46;61;54;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ControllerAuthorize.php;f27;61;32;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="controller;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ControllerAuthorize.php;f8;45;2;52;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get/set the controller this authorize object will be working with. Also checks that isAuthorized is implemented.&#xA;&#xA;Parameters:&#xA;    Controller $controller - null to get, a controller to set;;d59,45;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ControllerAuthorize.php;f39;45;50;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ControllerAuthorizeTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ControllerAuthorizeTest.php;f0;28;1;90;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class ControllerAuthorizeTest;;d51,28;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ControllerAuthorizeTest.php;f8;35;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,35;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ControllerAuthorizeTest.php;f8;67;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test failure;;d40,67;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ControllerAuthorizeTest.php;f8;78;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test isAuthorized working.;;d40,78;;b1,0;;m">
				</treenode>
				<treenode node="testControllerErrorOnMissingMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ControllerAuthorizeTest.php;f8;58;2;60;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException CakeException;;d54,58;;b1,0;;m">
				</treenode>
				<treenode node="testControllerTypeError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ControllerAuthorizeTest.php;f8;50;2;52;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException PHPUnit_Framework_Error;;d43,50;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;123;1;152;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ControllerComment class;;d46,123;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;151;14;151;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;144;13;144;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;130;13;130;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;137;17;137;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerCommentsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;113;1;116;;;;vpos;;vControllerTestAppController;;c;;r&#xA;Description&#xA;     ControllerPostsController class;;d71,113;;b0,0;;m">
				<treenode node="_mergeParent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f11;115;24;115;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerMergeVarsTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f0;124;1;249;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test Case for Controller Merging of Vars.;;d51,124;;b0,0;;m">
				<treenode node="testComponentMergingWithRedeclarations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;144;2;151;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test component merges with redeclared components;;d58,144;;b1,0;;m">
				</treenode>
				<treenode node="testComponentParamMergingNoDuplication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;131;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that component settings are not duplicated when merging component settings;;d58,131;;b1,0;;m">
				</treenode>
				<treenode node="testHelperOrderPrecedence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;172;2;183;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that helpers declared in appcontroller come before those in the subclass orderwise;;d45,172;;b1,0;;m">
				</treenode>
				<treenode node="testHelperSettingMergingNoDuplication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;158;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test merging of helpers array, ensure no duplication occurs;;d57,158;;b1,0;;m">
				</treenode>
				<treenode node="testMergeVarsModelClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;242;2;247;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that $modelClass is correct even when Controller::$uses has been iterated, eg: by a Component, or event handlers.;;d43,242;;b1,0;;m">
				</treenode>
				<treenode node="testMergeVarsNotGreedy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;227;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that _mergeControllerVars is not being greedy and merging with AppController when you make an instance of Controller;;d42,227;;b1,0;;m">
				</treenode>
				<treenode node="testMergeVarsWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;190;2;219;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test merging of vars with plugin;;d43,190;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerPaginateModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f0;108;1;136;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ControllerPaginateModel class;;d52,108;;b0,0;;m">
				<treenode node="paginate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;122;2;125;;;;vpos;;vbool;;r&#xA;Description&#xA;     paginate method;;d91,122;;b1,0;;mconditions;;pfields;;porder;;plimit;;ppage;;precursive;;pextra;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f26;122;37;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extra;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f83;122;89;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f39;122;46;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="limit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f56;122;62;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f48;122;54;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="page;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f64;122;69;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f71;122;81;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paginateCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;132;2;134;;;;vpos;;vvoid;;r&#xA;Description&#xA;     paginateCount;;d64,132;;b1,0;;mconditions;;precursive;;pextra;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f31;132;42;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extra;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f56;132;62;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f44;132;54;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;115;17;115;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;57;1;106;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ControllerPost class;;d43,57;;b0,0;;m">
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;86;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeFind method&#xA;&#xA;Parameters:&#xA;    mixed $query;;d36,86;;b1,0;;mmixed $query;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f28;86;34;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;97;2;104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     find method&#xA;&#xA;Parameters:&#xA;    string $type&#xA;    array $options;;d59,97;;b1,0;;mstring $type;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f39;97;47;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f22;97;27;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="invalidFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;71;22;71;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lastQuery;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;78;18;78;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;64;17;64;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f0;26;1;507;;;;vpos;;vBakeTask;;c;;r&#xA;Description&#xA;     Task class for creating and updating controller files.;;d38,26;;b0,0;;m">
				<treenode node="_askAboutMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f11;271;2;281;;;;vpos;;varray;;r&#xA;Description&#xA;     Interact with the user and ask about which methods (admin or regular they want to bake)&#xA;&#xA;Return:&#xA;   Array containing (bakeRegular, bakeAdmin) answers;;d39,271;;b2,0;;m">
				</treenode>
				<treenode node="_doPropertyChoices;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f11;400;2;409;;;;vpos;;varray;;r&#xA;Description&#xA;     Common code for property choice handling.&#xA;&#xA;Parameters:&#xA;    string $prompt - A yes/no question to precede the list&#xA;    string $example - A question for a comma separated list, with examples&#xA;&#xA;Return:&#xA;   Array of values for property;;d58,400;;b2,0;;mstring $prompt;;pstring $example;;p">
					<treenode node="example;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f48;400;56;400;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prompt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f39;400;46;400;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_interactive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f11;140;2;222;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Interactive;;d35,140;;b2,0;;m">
				</treenode>
				<treenode node="all;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;101;2;133;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Bake All the controllers at once. Will only bake controllers for models that exist.;;d23,101;;b1,0;;m">
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;330;2;353;;;;vpos;;vstring;;r&#xA;Description&#xA;     Assembles and writes a Controller file&#xA;&#xA;Parameters:&#xA;    string $controllerName - Controller name already pluralized and correctly cased&#xA;    string $actions - Actions to add, or set the whole controller to use $scaffold (set $actions to 'scaffold')&#xA;    array $helpers - Helpers to use in controller&#xA;    array $components - Components to use in controller&#xA;&#xA;Return:&#xA;   Baked controller;;d91,330;;b1,0;;mstring $controllerName;;pstring $actions;;parray $helpers;;parray $components;;p">
					<treenode node="actions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f39;330;47;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f71;330;82;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="controllerName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f22;330;37;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f54;330;62;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bakeActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;291;2;319;;;;vpos;;vstring;;r&#xA;Description&#xA;     Bake scaffold actions&#xA;&#xA;Parameters:&#xA;    string $controllerName - Controller name&#xA;    string $admin - Admin route to use&#xA;    bool $wannaUseSession - Set to true to use sessions, false otherwise&#xA;&#xA;Return:&#xA;   Baked actions;;d86,291;;b1,0;;mstring $controllerName;;pstring $admin;;pbool $wannaUseSession;;p">
					<treenode node="admin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f46;291;52;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="controllerName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f29;291;44;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="wannaUseSession;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f61;291;77;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bakeTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;361;2;366;;;;vpos;;vstring;;r&#xA;Description&#xA;     Assembles and writes a unit test file&#xA;&#xA;Parameters:&#xA;    string $className - Controller class name&#xA;&#xA;Return:&#xA;   Baked test;;d38,361;;b1,0;;mstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f26;361;36;361;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="confirmController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;233;2;264;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Confirm a to be baked controller with the user&#xA;&#xA;Parameters:&#xA;    string $controllerName - The name of the controller&#xA;    string $useDynamicScaffold - Whether or not to use dynamic scaffolds&#xA;    array $helpers - The list of helpers to include&#xA;    array $components - The list of components to include;;d96,233;;b1,0;;mstring $controllerName;;pstring $useDynamicScaffold;;parray $helpers;;parray $components;;p">
					<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f83;233;94;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="controllerName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f35;233;50;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f73;233;81;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useDynamicScaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f52;233;71;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="doComponents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;385;2;391;;;;vpos;;varray;;r&#xA;Description&#xA;     Interact with the user and get a list of additional components&#xA;&#xA;Return:&#xA;   Components the user wants to use;;d32,385;;b1,0;;m">
				</treenode>
				<treenode node="doHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;373;2;378;;;;vpos;;varray;;r&#xA;Description&#xA;     Interact with the user and get a list of additional helpers&#xA;&#xA;Return:&#xA;   Helpers that the user wants to use;;d29,373;;b1,0;;m">
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;56;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Execution method always used for tasks;;d27,56;;b1,0;;m">
				</treenode>
				<treenode node="getName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;443;2;466;;;;vpos;;vstring;;r&#xA;Description&#xA;     Forces the user to specify the controller he wants to bake, and returns the selected controller name.&#xA;&#xA;Parameters:&#xA;    string $useDbConfig - Connection name to get a controller name for&#xA;&#xA;Return:&#xA;   Controller name;;d46,443;;b1,0;;mstring $useDbConfig;;p">
					<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f25;443;37;443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;473;2;505;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,473;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;47;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override initialize;;d30,47;;b1,0;;m">
				</treenode>
				<treenode node="listAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;417;2;435;;;;vpos;;varray;;r&#xA;Description&#xA;     Outputs and gets the list of possible controllers from database&#xA;&#xA;Parameters:&#xA;    string $useDbConfig - Database configuration name&#xA;&#xA;Return:&#xA;   Set of controllers;;d46,417;;b1,0;;mstring $useDbConfig;;p">
					<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f25;417;37;417;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;40;13;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php;f8;33;14;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f0;57;1;617;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ControllerTaskTest class;;d46,57;;b0,0;;m">
				<treenode node="nameVariations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f15;537;2;541;;;;vpos;;vvoid;;r&#xA;Description&#xA;     data provider for testExecuteWithControllerNameVariations;;d41,537;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;71;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,71;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;103;2;108;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,103;;b1,0;;m">
				</treenode>
				<treenode node="testBake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;277;2;293;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the bake method;;d28,277;;b1,0;;m">
				</treenode>
				<treenode node="testBakeActionsUsingSessions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;334;2;345;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that bakeActions is creating the correct controller Code. (Using sessions);;d48,334;;b1,0;;m">
				</treenode>
				<treenode node="testBakeActionsWithNoSessions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;352;2;356;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test baking with Controller::flash() or no sessions.;;d49,352;;b1,0;;m">
				</treenode>
				<treenode node="testBakeTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;363;2;374;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking a test;;d32,363;;b1,0;;m">
				</treenode>
				<treenode node="testBakeWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;300;2;327;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake() with a -plugin param;;d38,300;;b1,0;;m">
				</treenode>
				<treenode node="testConfirmController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;260;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Confirming controller user interaction;;d41,260;;b1,0;;m">
				</treenode>
				<treenode node="testDoComponentsNo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;221;2;225;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test component interactions;;d38,221;;b1,0;;m">
				</treenode>
				<treenode node="testDoComponentsTrailingCommas;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;246;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test components with commas;;d50,246;;b1,0;;m">
				</treenode>
				<treenode node="testDoComponentsTrailingSpaces;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;232;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test components with spaces;;d50,232;;b1,0;;m">
				</treenode>
				<treenode node="testDoHelpersNo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;184;2;188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test helper interactions;;d35,184;;b1,0;;m">
				</treenode>
				<treenode node="testDoHelpersTrailingCommas;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;208;2;214;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test doHelpers with extra commas;;d47,208;;b1,0;;m">
				</treenode>
				<treenode node="testDoHelpersTrailingSpace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;195;2;201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting helper values;;d46,195;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;458;2;478;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute runs all when the first arg == all;;d38,458;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoAllAdmin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;485;2;511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test execute() with all and --admin;;d43,485;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;518;2;530;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that `cake bake controller foos` works.;;d45,518;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithControllerAndAdmin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;604;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that `cake bake controller foos admin` works.;;d53,604;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithControllerAndBoth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;585;2;597;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that `cake bake controller foos both` works.;;d52,585;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithControllerNameVariations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;549;2;559;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that both plural and singular forms work for controller baking.;;d64,549;;b1,0;;mname;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f57;549;62;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testExecuteWithPublicParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;566;2;578;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that `cake bake controller foo scaffold` works.;;d46,566;;b1,0;;m">
				</treenode>
				<treenode node="testGetNameInvalidIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;168;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting invalid indexes.;;d43,168;;b1,0;;m">
				</treenode>
				<treenode node="testGetNameValidIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;144;2;161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that getName interacts with the user and returns the controller name.;;d41,144;;b1,0;;m">
				</treenode>
				<treenode node="testInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;381;2;409;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Interactive mode.;;d35,381;;b1,0;;m">
				</treenode>
				<treenode node="testInteractiveAdminMethodsNotInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;416;2;451;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Interactive mode.;;d61,416;;b1,0;;m">
				</treenode>
				<treenode node="testListAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;115;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test ListAll;;d31,115;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f8;64;17;64;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;375;1;1468;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ControllerTest class;;d42,375;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;392;2;397;;;;vpos;;vvoid;;r&#xA;Description&#xA;     reset environment.;;d25,392;;b1,0;;m">
				</treenode>
				<treenode node="statusCodeProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f15;728;2;739;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generates status codes for redirect test.;;d45,728;;b1,5;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;404;2;407;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,404;;b1,0;;m">
				</treenode>
				<treenode node="testAliasName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;523;2;533;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAliasName method;;d33,523;;b1,0;;m">
				</treenode>
				<treenode node="testChildComponentOptionsSupercedeParents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;969;2;978;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that options from child classes replace those in the parent classes.;;d61,969;;b1,0;;m">
				</treenode>
				<treenode node="testComponentBeforeRenderChangingViewClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;676;2;692;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a component beforeRender can change the controller view class.;;d62,676;;b1,0;;m">
				</treenode>
				<treenode node="testComponentCancelRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;699;2;706;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a component beforeRender can change the controller view class.;;d45,699;;b1,0;;m">
				</treenode>
				<treenode node="testConstructClasses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;478;2;500;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConstructClasses method;;d40,478;;b1,0;;m">
				</treenode>
				<treenode node="testConstructClassesWithComponents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;507;2;516;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConstructClassesWithComponents method;;d54,507;;b1,0;;m">
				</treenode>
				<treenode node="testControllerHttpCodes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1183;2;1190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testControllerHttpCodes method;;d43,1183;;b1,0;;m">
				</treenode>
				<treenode node="testControllerSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;584;2;618;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testControllerSet method;;d37,584;;b1,0;;m">
				</treenode>
				<treenode node="testFlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;540;2;577;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFlash method;;d29,540;;b1,0;;m">
				</treenode>
				<treenode node="testInvokeActionBaseMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1421;2;1428;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test invoking controller methods.;;d47,1421;;b1,0;;m">
				</treenode>
				<treenode node="testInvokeActionHidden;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1405;2;1412;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test invoking hidden methods.;;d42,1405;;b1,0;;m">
				</treenode>
				<treenode node="testInvokeActionMissingAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1357;2;1364;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingAction method;;d49,1357;;b1,0;;m">
				</treenode>
				<treenode node="testInvokeActionPrefixProtection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1437;2;1447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test invoking controller methods.;;d52,1437;;b1,0;;m">
				</treenode>
				<treenode node="testInvokeActionPrivate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1373;2;1380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test invoking private methods.;;d43,1373;;b1,0;;m">
				</treenode>
				<treenode node="testInvokeActionProtected;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1389;2;1396;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test invoking protected methods.;;d45,1389;;b1,0;;m">
				</treenode>
				<treenode node="testInvokeActionReturnValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1454;2;1466;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test invoking controller methods.;;d47,1454;;b1,0;;m">
				</treenode>
				<treenode node="testLoadModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;414;2;425;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadModel method;;d33,414;;b1,0;;m">
				</treenode>
				<treenode node="testLoadModelInPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;448;2;471;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadModel method from a plugin controller;;d42,448;;b1,0;;m">
				</treenode>
				<treenode node="testLoadModelUsesTrue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;432;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test loadModel() when uses = true.;;d41,432;;b1,0;;m">
				</treenode>
				<treenode node="testMergeVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;911;2;962;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMergeVars method;;d33,911;;b1,0;;m">
				</treenode>
				<treenode node="testMergeVarsNotGreedy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;986;2;995;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that _mergeControllerVars is not being greedy and merging with ControllerTestAppController when you make an instance of Controller;;d42,986;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateBackwardsCompatibility;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1324;2;1348;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that using Controller::paginate() falls back to PaginatorComponent;;d54,1324;;b1,0;;m">
				</treenode>
				<treenode node="testPostConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1121;2;1176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPostConditions method;;d38,1121;;b1,0;;m">
				</treenode>
				<treenode node="testPropertyBackwardsCompatibility;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1283;2;1303;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that BC works for attributes on the request object.;;d54,1283;;b1,0;;m">
				</treenode>
				<treenode node="testPropertyCompatibilityAndModelsComponents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1310;2;1317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the BC wrapper doesn't interfere with models and components.;;d64,1310;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectBeforeRedirectInController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;866;2;877;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that beforeRedirect callback returning false in controller;;d58,866;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectBeforeRedirectInControllerWithArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;884;2;904;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that beforeRedirect works with returning an array from the controller method.;;d67,884;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectBeforeRedirectModifyingParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;811;2;826;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that beforeRedirect callback returning null doesn't affect things.;;d61,811;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectBeforeRedirectModifyingParamsArrayReturn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;833;2;859;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that beforeRedirect callback returning null doesn't affect things.;;d72,833;;b1,0;;m">
				</treenode>
				<treenode node="testRedirectByCode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;747;2;760;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRedirect method;;d49,747;;b1,0;;mcode;;pmsg;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f36;747;41;747;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f43;747;47;747;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRedirectByMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;768;2;782;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test redirecting by message;;d52,768;;b1,0;;mcode;;pmsg;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f39;768;44;768;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f46;768;50;768;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRedirectTriggeringComponentsReturnNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;789;2;804;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that redirect triggers methods on the components.;;d62,789;;b1,0;;m">
				</treenode>
				<treenode node="testReferer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1002;2;1031;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReferer method;;d31,1002;;b1,0;;m">
				</treenode>
				<treenode node="testRefererSlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1040;2;1055;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the referer is not absolute if it is '/'.;;d36,1040;;b1,0;;m">
				</treenode>
				<treenode node="testRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;625;2;669;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRender method;;d30,625;;b1,0;;m">
				</treenode>
				<treenode node="testSetAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1062;2;1071;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetAction method;;d33,1062;;b1,0;;m">
				</treenode>
				<treenode node="testShutdownProcess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1244;2;1259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the shutdown process calls the correct functions;;d39,1244;;b1,0;;m">
				</treenode>
				<treenode node="testShutdownProcessIndirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1266;2;1276;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the shutdown process calls the correct functions;;d47,1266;;b1,0;;m">
				</treenode>
				<treenode node="testStartupProcess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1197;2;1220;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the startup process calls the correct functions;;d38,1197;;b1,0;;m">
				</treenode>
				<treenode node="testStartupProcessIndirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1227;2;1237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the shutdown process calls the correct functions;;d46,1227;;b1,0;;m">
				</treenode>
				<treenode node="testToBeInheritedGuardmethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;713;2;721;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToBeInheritedGuardmethods method;;d49,713;;b1,0;;m">
				</treenode>
				<treenode node="testValidateErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1078;2;1096;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateErrors method;;d38,1078;;b1,0;;m">
				</treenode>
				<treenode node="testValidateErrorsOnArbitraryModels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;1103;2;1114;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that validateErrors works with any old model.;;d55,1103;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;382;17;382;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTestAppController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;28;1;50;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     AppController class;;d53,28;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;49;19;49;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;35;16;35;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;42;13;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTestCase;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f9;112;1;381;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ControllerTestCase class;;d55,112;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;188;2;193;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Used to enable calling ControllerTestCase::testAction() without the testing framework thinking that it's a test case&#xA;&#xA;Parameters:&#xA;    string $name - The name of the function&#xA;    array $arguments - Array of arguments&#xA;&#xA;Return:&#xA;   The return of _testAction;;d43,188;;b1,0;;mstring $name;;parray $arguments;;p">
					<treenode node="arguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f31;188;41;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f24;188;29;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_testAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f11;217;2;288;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Lets you do functional tests of a controller action.&#xA;&#xA;Parameters:&#xA;    string $url - The URL to test&#xA;    array $options - See options&#xA;&#xA;Return:&#xA;   The specified return type;;d58,217;;b2,0;;mstring $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f38;217;46;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f32;217;36;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;311;2;379;;;;vpos;;vController;;r&#xA;Description&#xA;     Generates a mocked controller and mocks any classes passed to `$mocks`. By default, `_stop()` is stubbed as is sending the response headers, so to not interfere with testing.&#xA;&#xA;Parameters:&#xA;    string $controller - Controller name&#xA;    array $mocks - List of classes and methods to mock&#xA;&#xA;Return:&#xA;   Mocked controller;;d57,311;;b1,0;;mstring $controller;;parray $mocks;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f26;311;37;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mocks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f39;311;45;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_dirtyController;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f11;177;28;177;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="autoMock;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;126;17;126;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="contents;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;154;17;154;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;119;19;119;;;;vposController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;168;16;168;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="loadRoutes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;133;19;133;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;161;15;161;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="vars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;140;13;140;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="view;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;147;13;147;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTestCaseTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f0;107;1;604;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ControllerTestCaseTest;;d50,107;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;121;2;132;;;;vpos;;vvoid;;r&#xA;Description&#xA;     reset environment.;;d25,121;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;139;2;143;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,139;;b1,0;;m">
				</treenode>
				<treenode node="testAutoMock;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;486;2;494;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests autoMock ability;;d32,486;;b1,0;;m">
				</treenode>
				<treenode node="testBCSetReturn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;353;2;377;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests backwards compatibility with setting the return type;;d35,353;;b1,0;;m">
				</treenode>
				<treenode node="testComponentsSameRequestAndResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;577;2;583;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that Components storing response or request objects internally during construct will always have a fresh reference to those object available;;d56,577;;b1,0;;m">
				</treenode>
				<treenode node="testGenerate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;150;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that ControllerTestCase::generate() creates mock objects correctly;;d32,150;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateWithComponentConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;217;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateWithComponentConfig;;d51,217;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;241;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests ControllerTestCase::generate() using classes from plugins;;d42,241;;b1,0;;m">
				</treenode>
				<treenode node="testNoControllerReuse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;530;2;555;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that controllers don't get reused.;;d41,530;;b1,0;;m">
				</treenode>
				<treenode node="testNoMocking;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;501;2;523;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test using testAction and not mocking;;d33,501;;b1,0;;m">
				</treenode>
				<treenode node="testRestoreGetPost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;590;2;602;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that testAction() doesn't destroy data in GET &amp; POST;;d38,590;;b1,0;;m">
				</treenode>
				<treenode node="testSkipRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;340;2;346;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests not using loaded routes during tests;;d34,340;;b1,0;;m">
				</treenode>
				<treenode node="testTestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;277;2;300;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests testAction;;d34,277;;b1,0;;m">
				</treenode>
				<treenode node="testTestActionGetData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;428;2;464;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests sending GET data to testAction;;d41,428;;b1,0;;m">
				</treenode>
				<treenode node="testTestActionJsonData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;471;2;479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that REST actions with XML/JSON input work.;;d42,471;;b1,0;;m">
				</treenode>
				<treenode node="testTestActionPostData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;384;2;421;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests sending POST data to testAction;;d42,384;;b1,0;;m">
				</treenode>
				<treenode node="testTestActionWithMultipleRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;562;2;568;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that multiple calls to redirect in the same test method don't cause issues.;;d54,562;;b1,0;;m">
				</treenode>
				<treenode node="testTestActionWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;307;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Make sure testAction() can hit plugin controllers.;;d44,307;;b1,0;;m">
				</treenode>
				<treenode node="testUseRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;318;2;332;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests using loaded routes during tests;;d33,318;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;114;17;114;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTestCaseTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f0;91;1;100;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     ControllerTestCaseTest controller;;d61,91;;b0,0;;m">
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f8;98;13;98;;;;vpos;;v;;r&#xA;Description&#xA;     Uses array&#xA;&#xA;Parameters:&#xA;    array;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ControllerTestDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f0;31;1;85;;;;vpos;;vDispatcher;;c;;r&#xA;Description&#xA;     ControllerTestDispatcher class;;d50,31;;b0,0;;m">
				<treenode node="_getController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f11;54;2;71;;;;vpos;;vController;;r&#xA;Description&#xA;     Returns the test controller&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - The request instance&#xA;    CakeResponse $response - The response instance;;d56,54;;b2,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f35;54;43;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f45;54;54;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f11;78;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Loads routes and resets if the test case dictates it should;;d34,78;;b2,0;;m">
				</treenode>
				<treenode node="loadRoutes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;45;19;45;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="testController;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;38;23;38;;;;vposController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CookieAliasComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php;f0;26;1;27;;;;vpos;;vCookieComponent;;c;;r&#xA;Description&#xA;     Extended CookieComponent;;d51,26;;b0,0;;m">
			</treenode>
			<treenode node="CookieComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f0;31;1;570;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Cookie Component.;;d40,31;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;169;2;182;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - A ComponentCollection for this component&#xA;    array $settings - Array of settings;;d83,169;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f49;169;60;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f62;169;71;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_decode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;518;2;535;;;;vpos;;vstring;;r&#xA;Description&#xA;     Decodes and decrypts a single value.&#xA;&#xA;Parameters:&#xA;    string $value - The value to decode &amp; decrypt&#xA;&#xA;Return:&#xA;   Decoded value;;d36,518;;b2,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f28;518;34;518;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_decrypt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;496;2;510;;;;vpos;;vstring;;r&#xA;Description&#xA;     Decrypts $value using public $type method in Security class&#xA;&#xA;Parameters:&#xA;    array $values - Values to decrypt&#xA;&#xA;Return:&#xA;   decrypted string;;d38,496;;b2,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f29;496;36;496;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;452;2;462;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets a cookie expire time to remove cookie value&#xA;&#xA;Parameters:&#xA;    string $name - Name of cookie;;d35,452;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f28;452;33;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_encrypt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;470;2;488;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encrypts $value using public $type method in Security class&#xA;&#xA;Parameters:&#xA;    string $value - Value to encrypt&#xA;&#xA;Return:&#xA;   Encoded values;;d37,470;;b2,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f29;470;35;470;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_expire;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;405;2;420;;;;vpos;;vint;;r&#xA;Description&#xA;     Set the expire time for a session variable.&#xA;&#xA;Parameters:&#xA;    int|string $expires - Can be either Unix timestamp, or date string&#xA;&#xA;Return:&#xA;   Unix timestamp;;d45,405;;b2,0;;mint|string $expires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f28;405;36;405;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_explode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;554;2;569;;;;vpos;;varray;;r&#xA;Description&#xA;     Explode method to return array from string set in CookieComponent::_implode() Maintains reading backwards compatibility with 1.x CookieComponent::_implode().&#xA;&#xA;Parameters:&#xA;    string $string - A string containing JSON encoded data, or a bare string&#xA;&#xA;Return:&#xA;   Map of key and values;;d38,554;;b2,0;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f29;554;36;554;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_implode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;543;2;545;;;;vpos;;vstring;;r&#xA;Description&#xA;     Implode method to keep keys are multidimensional arrays&#xA;&#xA;Parameters:&#xA;    array $array - Map of key and values&#xA;&#xA;Return:&#xA;   A json encoded string;;d43,543;;b2,0;;marray $array;;p">
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f35;543;41;543;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;429;2;444;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set cookie&#xA;&#xA;Parameters:&#xA;    string $name - Name for cookie&#xA;    string $value - Value for cookie;;d42,429;;b2,0;;mstring $name;;pstring $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f27;429;32;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f34;429;40;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;298;2;303;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given variable is set in cookie.&#xA;&#xA;Parameters:&#xA;    string $key - Variable name to check for&#xA;&#xA;Return:&#xA;   True if variable is there;;d36,298;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f23;298;27;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;324;2;343;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Delete a cookie value&#xA;&#xA;Parameters:&#xA;    string $key - Key of the value to be deleted;;d30,324;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f24;324;28;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;354;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Destroy current cookie;;d27,354;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;267;2;290;;;;vpos;;vstring;;r&#xA;Description&#xA;     Read the value of the $_COOKIE[$key];s&#xA;&#xA;Parameters:&#xA;    string $key - Key of the value to be obtained&#xA;&#xA;Return:&#xA;   |null Value for specified key;;d35,267;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f22;267;26;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;190;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start CookieComponent for use in the controller&#xA;&#xA;Parameters:&#xA;    Controller $controller - Controller instance;;d49,190;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f36;190;47;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="type;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;379;2;390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Will allow overriding default encryption method. Use this method in ex: AppController::beforeFilter() before you have read or written any cookies.&#xA;&#xA;Parameters:&#xA;    string $type - Encryption method;;d40,379;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f22;379;27;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;216;2;255;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Write a value to the $_COOKIE[$key];s&#xA;&#xA;Parameters:&#xA;    string|array $key - Key for the value&#xA;    mixed $value - Value&#xA;    bool $encrypt - Set to true to encrypt value, false otherwise&#xA;    int|string $expires - Can be either the number of seconds until a cookie;;d78,216;;b1,0;;mstring|array $key;;pmixed $value;;pbool $encrypt;;pint|string $expires;;p">
					<treenode node="encrypt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f44;216;52;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f61;216;69;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f23;216;27;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f29;216;35;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;154;20;154;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;145;18;145;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;161;21;161;;;;vposCakeResponse;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;138;17;138;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f11;126;19;126;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;83;15;83;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="httpOnly;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;116;17;116;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;106;12;106;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;41;13;41;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;68;13;68;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="secure;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;96;15;96;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php;f8;53;13;53;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CookieComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f0;57;1;776;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CookieComponentTest class;;d47,57;;b0,0;;m">
				<treenode node="_encrypt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f11;769;2;774;;;;vpos;;vstring;;r&#xA;Description&#xA;     encrypt method&#xA;&#xA;Parameters:&#xA;    array|string $value;;d37,769;;b2,0;;marray|string $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f29;769;35;769;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_implode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f11;759;2;761;;;;vpos;;vstring;;r&#xA;Description&#xA;     Implode method to keep keys are multidimensional arrays&#xA;&#xA;Parameters:&#xA;    array $array - Map of key and values&#xA;&#xA;Return:&#xA;   String in the form key1|value1,key2|value2;;d43,759;;b2,0;;marray $array;;p">
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f35;759;41;759;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_oldImplode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f11;745;2;751;;;;vpos;;vstring;;r&#xA;Description&#xA;     Helper method for generating old style encoded cookie values.&#xA;&#xA;Return:&#xA;   .;;d46,745;;b2,0;;marray;;p">
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f38;745;44;745;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setCookieData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f11;103;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     sets up some default cookie data.;;d37,103;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;71;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     start;;d25,71;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;93;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     end;;d28,93;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;664;2;669;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheck method;;d29,664;;b1,0;;m">
				</treenode>
				<treenode node="testCheckEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;709;2;711;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckEmpty;;d34,709;;b1,0;;m">
				</treenode>
				<treenode node="testCheckingSavedEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;676;2;688;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckingSavedEmpty method;;d42,676;;b1,0;;m">
				</treenode>
				<treenode node="testCheckKeyWithSpaces;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;695;2;702;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckKeyWithSpaces method;;d42,695;;b1,0;;m">
				</treenode>
				<treenode node="testCookieName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;135;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCookieName;;d34,135;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteChildrenNotExist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;735;2;738;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test deleting recursively with keys that don't exist.;;d46,735;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCookieValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;432;2;451;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCookieValue;;d41,432;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteHttpOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;306;2;320;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test delete with httpOnly;;d38,306;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteRemovesChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;718;2;728;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that deleting a top level keys kills the child elements too.;;d45,718;;b1,0;;m">
				</treenode>
				<treenode node="testNoErrorOnNonArrayData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;652;2;657;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that no error is issued for non array data.;;d45,652;;b1,0;;m">
				</treenode>
				<treenode node="testReadEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;633;2;645;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading empty values.;;d33,633;;b1,0;;m">
				</treenode>
				<treenode node="testReadEncryptedCookieData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;144;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadEncryptedCookieData;;d47,144;;b1,0;;m">
				</treenode>
				<treenode node="testReadingCookieArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;458;2;508;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadingCookieArray;;d42,458;;b1,0;;m">
				</treenode>
				<treenode node="testReadingCookieDataOnStartup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;515;2;559;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadingCookieDataOnStartup;;d50,515;;b1,0;;m">
				</treenode>
				<treenode node="testReadingCookieDataWithoutStartup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;566;2;612;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadingCookieDataWithoutStartup;;d55,566;;b1,0;;m">
				</treenode>
				<treenode node="testReadingCookieValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;404;2;425;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadingCookieValue;;d42,404;;b1,0;;m">
				</treenode>
				<treenode node="testReadLegacyCookieValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;619;2;626;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Reading legacy cookie values.;;d45,619;;b1,0;;m">
				</treenode>
				<treenode node="testReadPlainCookieData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;160;2;169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadPlainCookieData;;d43,160;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithNameSwitch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;176;2;189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test read() after switching the cookie name.;;d42,176;;b1,0;;m">
				</treenode>
				<treenode node="testSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;120;2;128;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that initialize sets settings from components array;;d32,120;;b1,0;;m">
				</treenode>
				<treenode node="testWriteArrayValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;344;2;359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test writing values that are not scalars;;d40,344;;b1,0;;m">
				</treenode>
				<treenode node="testWriteFarFuture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;260;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test write with distant future cookies;;d38,260;;b1,0;;m">
				</treenode>
				<treenode node="testWriteHttpOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;285;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test write with httpOnly cookies;;d37,285;;b1,0;;m">
				</treenode>
				<treenode node="testWriteMixedArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;366;2;397;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that writing mixed arrays results in the correct data.;;d39,366;;b1,0;;m">
				</treenode>
				<treenode node="testWriteMultipleShareExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;242;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that two write() calls use the expiry.;;d48,242;;b1,0;;m">
				</treenode>
				<treenode node="testWritePlainCookieArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;327;2;337;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWritePlainCookieArray;;d45,327;;b1,0;;m">
				</treenode>
				<treenode node="testWriteSimple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;196;2;201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a simple write();;d35,196;;b1,0;;m">
				</treenode>
				<treenode node="testWriteWithFalseyValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;208;2;235;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test write() encrypted data with falsey value;;d44,208;;b1,0;;m">
				</treenode>
				<treenode node="Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;64;19;64;;;;vposCookieComponentTestController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CookieComponentTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f0;27;1;50;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     CookieComponentTestController class;;d55,27;;b0,0;;m">
				<treenode node="beforeFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;41;2;48;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeFilter method;;d32,41;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php;f8;34;19;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCachePost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3336;1;3349;;;;vpos;;vCakeTestModel;;c;;r;;d45,3336;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3340;14;3340;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3342;18;3342;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3338;13;3338;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCachePostFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostFixture.php;f0;23;1;37;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d54,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostFixture.php;f8;25;15;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostFixture.php;f8;32;16;32;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCachePostNonstandardPrimaryKey;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3368;1;3384;;;;vpos;;vCakeTestModel;;c;;r;;d66,3368;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3372;14;3372;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3376;18;3376;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3370;13;3370;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3374;19;3374;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCachePostNonstandardPrimaryKeyFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostNonstandardPrimaryKeyFixture.php;f0;23;1;36;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d75,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostNonstandardPrimaryKeyFixture.php;f8;25;15;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostNonstandardPrimaryKeyFixture.php;f8;31;16;31;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCacheUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3322;1;3334;;;;vpos;;vCakeTestModel;;c;;r;;d45,3322;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3326;14;3326;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3328;16;3328;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3324;13;3324;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCacheUserFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserFixture.php;f0;23;1;36;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d54,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserFixture.php;f8;25;15;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserFixture.php;f8;32;16;32;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCacheUserNonstandardPrimaryKey;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3351;1;3366;;;;vpos;;vCakeTestModel;;c;;r;;d66,3351;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3355;14;3355;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3359;16;3359;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3353;13;3353;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3357;19;3357;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CounterCacheUserNonstandardPrimaryKeyFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserNonstandardPrimaryKeyFixture.php;f0;23;1;35;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d75,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserNonstandardPrimaryKeyFixture.php;f8;25;15;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserNonstandardPrimaryKeyFixture.php;f8;31;16;31;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CrudAuthorize;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f0;32;1;100;;;;vpos;;vBaseAuthorize;;c;;r&#xA;Description&#xA;     An authorization adapter for AuthComponent. Provides the ability to authorize using CRUD mappings. CRUD mappings allow you to translate controller actions into *C*reate *R*ead *U*pdate *D*elete actions. This is then checked in the AclComponent as specific permissions.;;d42,32;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f8;40;2;43;;;;vpos;;v;;r&#xA;Description&#xA;     Sets up additional actionMap values that match the configured `Routing.prefixes`.&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - The component collection from the controller&#xA;    string $settings - An array of settings;;d83,40;;b1,0;;mComponentCollection $collection;;pstring $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f49;40;60;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f62;40;71;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setPrefixMappings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f11;50;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     sets the crud mappings for prefix routes.;;d41,50;;b2,0;;m">
				</treenode>
				<treenode node="authorize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f8;80;2;98;;;;vpos;;vbool;;r&#xA;Description&#xA;     Authorize a user using the mapped actions and the AclComponent.&#xA;&#xA;Parameters:&#xA;    array $user - The user to authorize&#xA;    CakeRequest $request - The request needing authorization;;d56,80;;b1,0;;marray $user;;pCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f46;80;54;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php;f27;80;32;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="CrudAuthorizeTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f0;29;1;188;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class CrudAuthorizeTest;;d45,29;;b0,0;;m">
				<treenode node="_mockAcl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f11;52;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup the mock acl.;;d31,52;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f8;36;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,36;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeCheckFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f8;103;2;118;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test check() failing;;d45,103;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeCheckSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f8;81;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test check() passing;;d45,81;;b1,0;;m">
				</treenode>
				<treenode node="testAuthorizeNoMappedAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f8;65;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test authorize() without a mapped action, ensure an error is generated.;;d47,65;;b1,0;;m">
				</treenode>
				<treenode node="testAutoPrefixMapActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f8;180;2;186;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test prefix routes getting auto mapped.;;d44,180;;b1,0;;m">
				</treenode>
				<treenode node="testMapActionsGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f8;125;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting actionMap;;d37,125;;b1,0;;m">
				</treenode>
				<treenode node="testMapActionsSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php;f8;146;2;173;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding into mapActions;;d37,146;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CustomArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4997;1;5049;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     CustomArticle class;;d37,4997;;b0,0;;m">
				<treenode node="_findUnPublished;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;5025;2;5031;;;;vpos;;varray;;r&#xA;Description&#xA;     _findUnPublished custom find;;d73,5025;;b2,0;;mstate;;pquery;;presults;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f45;5025;51;5025;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f53;5025;61;5025;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;5025;43;5025;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;5040;2;5047;;;;vpos;;vbool;;r&#xA;Description&#xA;     Alters title data&#xA;&#xA;Parameters:&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   True if validate operation should continue, false to abort;;d52,5040;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f32;5040;40;5040;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;5018;18;5018;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="findMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;5011;20;5011;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;5004;17;5004;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CustomJsonView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f0;78;1;80;;;;vpos;;vJsonView;;c;;r&#xA;Description&#xA;     CustomJsonView class;;d38,78;;b0,0;;m">
			</treenode>
			<treenode node="CustomLibClass;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Custom\Package\CustomLibClass.php;f0;23;1;24;;;;vpos;;v;;r&#xA;Description&#xA;     Class CustomLibClass;;d21,23;;b0,0;;m">
			</treenode>
			<treenode node="CustomResponse;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f0;56;1;73;;;;vpos;;v;;r&#xA;Description&#xA;     CustomResponse;;d21,56;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;69;2;71;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor;;d39,69;;b1,0;;mmessage;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f29;69;37;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="first10;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;63;16;63;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CustomTestEventListener;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f0;64;1;86;;;;vpos;;vCakeEventTestListener;;cCakeEventListener;;c;;r&#xA;Description&#xA;     Mock used for testing the subscriber objects;;d89,64;;b0,0;;m">
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;66;2;75;;;;vpos;;v;;r;;d37,66;;b1,0;;m">
				</treenode>
				<treenode node="thirdListenerFunction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php;f8;82;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test function to be used in event dispatching;;d41,82;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="CustomValidator;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f0;25;1;37;;;;vpos;;v;;r&#xA;Description&#xA;     CustomValidator class;;d22,25;;b0,0;;m">
				<treenode node="customValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f15;33;2;35;;;;vpos;;vbool;;r&#xA;Description&#xA;     Makes sure that a given $email address is valid and unique&#xA;&#xA;Parameters:&#xA;    string $email;;d47,33;;b1,5;;mstring $email;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f39;33;45;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DATABASE_CONFIG;PHP:Class Name;C:\xampp\htdocs\ISLL\app\Config\database.php;f0;68;1;91;;;;vpos;;v;;r&#xA;Description&#xA;     Database configuration class.;;d22,68;;b0,0;;m">
				<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Config\database.php;f8;70;16;70;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Config\database.php;f8;81;13;81;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DatabaseSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f0;26;1;144;;;;vpos;;vCakeSessionHandlerInterface;;c;;r&#xA;Description&#xA;     DatabaseSession provides methods to be used with CakeSession.;;d61,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f8;47;2;64;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor. Looks at Session configuration information and sets up the session model.;;d31,47;;b1,0;;m">
				</treenode>
				<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f8;80;2;82;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on close of a database session.&#xA;&#xA;Return:&#xA;   Success;;d25,80;;b1,0;;m">
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f8;125;2;127;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on the destruction of a database session.&#xA;&#xA;Parameters:&#xA;    int $id - ID that uniquely identifies session in database&#xA;&#xA;Return:&#xA;   True for successful delete, false otherwise;;d30,125;;b1,0;;mint $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f25;125;28;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f8;135;2;142;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function called on gc for database sessions.&#xA;&#xA;Parameters:&#xA;    int $expires - Timestamp (defaults to current time)&#xA;&#xA;Return:&#xA;   Success;;d37,135;;b1,0;;mint $expires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f20;135;28;135;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="open;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f8;71;2;73;;;;vpos;;vbool;;r&#xA;Description&#xA;     Method called on open of a database session.&#xA;&#xA;Return:&#xA;   Success;;d24,71;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f8;90;2;100;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Method used to read from a database session.&#xA;&#xA;Parameters:&#xA;    int|string $id - The key of the value to read&#xA;&#xA;Return:&#xA;   The value of the key or false if it does not exist;;d27,90;;b1,0;;mint|string $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f22;90;25;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f8;109;2;117;;;;vpos;;vbool;;r&#xA;Description&#xA;     Helper function called on write for database sessions.&#xA;&#xA;Parameters:&#xA;    int $id - ID that uniquely identifies session in database&#xA;    mixed $data - The value of the data to be saved&#xA;&#xA;Return:&#xA;   True for successful write, false otherwise;;d35,109;;b1,0;;mint $id;;pmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f28;109;33;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f23;109;26;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f11;33;18;33;;;;vposModel;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_timeout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php;f11;40;20;40;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="DatabaseSessionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f0;39;1;193;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Database session test.;;d47,39;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;77;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,77;;b1,0;;m">
				</treenode>
				<treenode node="setupBeforeClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f15;55;2;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test case startup;;d43,55;;b1,5;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;87;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,87;;b1,0;;m">
				</treenode>
				<treenode node="teardownAfterClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f15;68;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     cleanup after test case.;;d45,68;;b1,5;;m">
				</treenode>
				<treenode node="testConstructionSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;98;2;107;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that constructor sets the right things up.;;d44,98;;b1,0;;m">
				</treenode>
				<treenode node="testDestroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;170;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test blowing up the session.;;d31,170;;b1,0;;m">
				</treenode>
				<treenode node="testGc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;182;2;192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the garbage collector;;d26,182;;b1,0;;m">
				</treenode>
				<treenode node="testOpen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;114;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test opening the session;;d28,114;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;154;2;163;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test read();;d28,154;;b1,0;;m">
				</treenode>
				<treenode node="testWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;123;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test write();;d29,123;;b1,0;;m">
				</treenode>
				<treenode node="testWriteEmptySessionId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;144;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteWithDatabaseStorage method;;d43,144;;b1,0;;m">
				</treenode>
				<treenode node="_sessionBackup;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f18;41;33;41;;;;vpos;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;48;17;48;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DataSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f0;26;24;26;;;;vpos;;v;;r&#xA;Description&#xA;     DataSource base class;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DataSourceTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f0;95;1;248;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DataSourceTest class;;d42,95;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;109;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,109;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;134;2;138;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,134;;b1,0;;m">
				</treenode>
				<treenode node="testCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;145;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreate;;d30,145;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;233;2;246;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDelete;;d30,233;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;171;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRead;;d28,171;;b1,0;;m">
				</treenode>
				<treenode node="testUpdate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;201;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdate;;d30,201;;b1,0;;m">
				</treenode>
				<treenode node="sourceName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;102;19;102;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DataTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2127;1;2135;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     DataTest class;;d37,2127;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2134;13;2134;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DataTestFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DataTestFixture.php;f0;23;1;51;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DataTestFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DataTestFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DatatypeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DatatypeFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DatatypeFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DatatypeFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAcl;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f0;39;19;39;;;;vpos;;v;;r&#xA;Description&#xA;     DbAcl implements an ACL control system in the database. ARO's and ACO's are structured into trees and a linking table is used to define permissions. You can install the schema for DbAcl with the Schema Shell.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="DbAclNodeTestBase;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;26;1;41;;;;vpos;;vAclNode;;c;;r&#xA;Description&#xA;     DB ACL wrapper test class;;d40,26;;b0,0;;m">
				<treenode node="cacheSources;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;40;21;40;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;33;20;33;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAclSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f0;17;1;81;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f0;25;1;101;;;;vpos;;vCakeSchema;;c;;r&#xA;Description&#xA;     This is Acl Schema file;;d37,17;;b0,0;;m">
				<treenode node="after;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f8;35;2;36;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f8;43;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After event.&#xA;&#xA;Parameters:&#xA;    array $event - The event data;;d41,35;;b1,0;;marray $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f23;35;29;35;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f23;43;29;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="before;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f8;25;2;27;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f8;33;2;35;;;;vpos;;vbool;;r&#xA;Description&#xA;     Before event.&#xA;&#xA;Parameters:&#xA;    array $event - The event data&#xA;&#xA;Return:&#xA;   success;;d42,25;;b1,0;;marray $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f24;25;30;25;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f24;33;30;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="acos;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f8;41;13;41;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f8;49;13;49;;;;vpos;;v;;r&#xA;Description&#xA;     ACO - Access Control Object - Something that is wanted;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="aros;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f8;55;13;55;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f8;67;13;67;;;;vpos;;v;;r&#xA;Description&#xA;     ARO - Access Request Object - Something that wants something;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="aros_acos;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php;f8;70;18;70;;C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php;f8;86;18;86;;;;vpos;;v;;r&#xA;Description&#xA;     Used by the Cake::Model:Permission class. Checks if the given $aro has access to action $action in $aco.;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAclTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f0;177;1;542;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for AclComponent using the DbAcl implementation.;;d37,177;;b0,0;;m">
				<treenode node="_debug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f11;492;2;529;;;;vpos;;vvoid;;r&#xA;Description&#xA;     debug function - to help editing/creating test cases for the ACL component&#xA;&#xA;Parameters:&#xA;    bool $treesToo;;d51,492;;b2,0;;mbool $treesToo;;p">
					<treenode node="printTreesToo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f27;492;41;492;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_pad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f11;539;2;541;;;;vpos;;vvoid;;r&#xA;Description&#xA;     pad function Used by debug to format strings used in the data dump&#xA;&#xA;Parameters:&#xA;    string $string&#xA;    int $len;;d50,539;;b2,0;;mstring $string;;pint $len;;p">
					<treenode node="len;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f39;539;43;539;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f25;539;32;539;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;191;2;197;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,191;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;204;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,204;;b1,0;;m">
				</treenode>
				<treenode node="testAclCascadingDeny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;365;2;372;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbAclCascadingDeny function;;d40,365;;b1,0;;m">
				</treenode>
				<treenode node="testAclNodeLookup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;407;2;424;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAclNodeLookup method;;d37,407;;b1,0;;m">
				</treenode>
				<treenode node="testAllow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;260;2;289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbAclAllow method;;d29,260;;b1,0;;m">
				</treenode>
				<treenode node="testAllowInvalidNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;306;2;308;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAllowInvalidNode method;;d40,306;;b1,0;;m">
				</treenode>
				<treenode node="testAllowInvalidPermission;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;297;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that allow() with an invalid permission name triggers an error.;;d46,297;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;315;2;328;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbAclCheck method;;d29,315;;b1,0;;m">
				</treenode>
				<treenode node="testCheckInvalidNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;335;2;337;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckInvalidNode method;;d40,335;;b1,0;;m">
				</treenode>
				<treenode node="testCheckInvalidPermission;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;344;2;346;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckInvalidPermission method;;d46,344;;b1,0;;m">
				</treenode>
				<treenode node="testCheckMissingPermission;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;353;2;355;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckMissingPermission method;;d46,353;;b1,0;;m">
				</treenode>
				<treenode node="testCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;214;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAclCreate method;;d30,214;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;241;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAclCreateWithParent method;;d40,241;;b1,0;;m">
				</treenode>
				<treenode node="testDeny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;379;2;400;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbAclDeny method;;d28,379;;b1,0;;m">
				</treenode>
				<treenode node="testGrant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;448;2;461;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbGrant method;;d29,448;;b1,0;;m">
				</treenode>
				<treenode node="testInherit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;431;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbInherit method;;d31,431;;b1,0;;m">
				</treenode>
				<treenode node="testRevoke;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;468;2;480;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbRevoke method;;d30,468;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;184;17;184;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAclTwoTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f0;153;1;170;;;;vpos;;vDbAcl;;c;;r&#xA;Description&#xA;     DbAclTwoTest class;;d33,153;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;159;2;168;;;;vpos;;v;;r&#xA;Description&#xA;     construct method;;d31,159;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAcoActionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;121;1;136;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     DboActionTest class;;d44,121;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;135;18;135;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;128;17;128;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAcoTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;70;1;85;;;;vpos;;vDbAclNodeTestBase;;c;;r&#xA;Description&#xA;     Aco Test Wrapper;;d42,70;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;84;28;84;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;77;17;77;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAroTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;48;1;63;;;;vpos;;vDbAclNodeTestBase;;c;;r&#xA;Description&#xA;     Aro Test Wrapper;;d42,48;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;62;28;62;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;55;17;55;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbAroUserTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;143;1;173;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     DbAroUserTest class;;d42,143;;b0,0;;m">
				<treenode node="bindNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;165;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     bindNode method&#xA;&#xA;Parameters:&#xA;    string|array|Model $ref;;d39,165;;b1,0;;mstring|array|Model $ref;;p">
					<treenode node="ref;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f26;165;30;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;150;13;150;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;157;17;157;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbConfigAliasedTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f0;24;1;25;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Extended Task;;d40,24;;b0,0;;m">
			</treenode>
			<treenode node="DbConfigTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f0;24;1;384;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Task class for creating and updating the database configuration file.;;d36,24;;b0,0;;m">
				<treenode node="_interactive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f11;86;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Interactive interface;;d35,86;;b2,0;;m">
				</treenode>
				<treenode node="_verify;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f11;204;2;243;;;;vpos;;vbool;;r&#xA;Description&#xA;     Output verification message and bake if it looks good&#xA;&#xA;Parameters:&#xA;    array $config - The config data&#xA;&#xA;Return:&#xA;   True if user says it looks good, false otherwise;;d37,204;;b2,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f28;204;35;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f8;251;2;346;;;;vpos;;vbool;;r&#xA;Description&#xA;     Assembles and writes database.php&#xA;&#xA;Parameters:&#xA;    array $configs - Configuration settings to use&#xA;&#xA;Return:&#xA;   Success;;d32,251;;b1,0;;marray $configs;;p">
					<treenode node="configs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f22;251;30;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f8;74;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Execution method always used for tasks;;d27,74;;b1,0;;m">
				</treenode>
				<treenode node="getConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f8;353;2;367;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Get a user specified Connection name;;d29,353;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f8;374;2;382;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,374;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f8;65;2;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     initialization callback;;d30,65;;b1,0;;m">
				</treenode>
				<treenode node="_defaultConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f11;38;26;38;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="databaseClassName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f8;58;26;58;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php;f8;31;13;31;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbConfigTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\DbConfigTaskTest.php;f0;29;1;131;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DbConfigTest class;;d44,29;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\DbConfigTaskTest.php;f8;36;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,36;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\DbConfigTaskTest.php;f8;54;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,54;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\DbConfigTaskTest.php;f8;89;2;130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test execute and by extension _interactive;;d46,89;;b1,0;;m">
				</treenode>
				<treenode node="testGetConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\DbConfigTaskTest.php;f8;64;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the getConfig method.;;d33,64;;b1,0;;m">
				</treenode>
				<treenode node="testInitialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\DbConfigTaskTest.php;f8;78;2;82;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that initialize sets the path up.;;d34,78;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DboDummy;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Database\DboDummy.php;f0;4;1;10;;;;vpos;;vDboSource;;c;;r;;d33,4;;b0,0;;m">
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Database\DboDummy.php;f8;6;2;8;;;;vpos;;v;;r;;d27,6;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DboMock;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f0;27;1;47;;;;vpos;;vDboSource;;c;;r&#xA;Description&#xA;     DboMock class A Dbo Source driver to mock a connection and a identity name() method;;d32,27;;b0,0;;m">
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;43;2;45;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true to fake a database connection&#xA;&#xA;Return:&#xA;   true;;d27,43;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;34;2;36;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the $field without modifications;;d30,34;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f22;34;28;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DboPostgresTestDb;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f0;28;1;57;;;;vpos;;vPostgres;;c;;r&#xA;Description&#xA;     DboPostgresTestDb class;;d41,28;;b0,0;;m">
				<treenode node="_execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f11;43;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     execute method&#xA;&#xA;Parameters:&#xA;    mixed $sql;;d81,43;;b2,0;;msql;;pparams;;pprepareOptions;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f35;43;42;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepareOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f54;43;69;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f29;43;33;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLastQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;53;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     getLastQuery method;;d32,53;;b1,0;;m">
				</treenode>
				<treenode node="simulated;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;35;18;35;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DboSecondTestSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f0;87;1;109;;;;vpos;;vDboSource;;c;;r&#xA;Description&#xA;     Class DboSecondTestSource;;d44,87;;b0,0;;m">
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;93;2;95;;;;vpos;;v;;r;;d44,93;;b1,0;;mconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f25;93;32;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;97;2;99;;;;vpos;;v;;r;;d91,97;;b1,0;;mdata;;pmerge;;passociation;;ptype;;pselfJoin;;p">
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f51;97;63;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f35;97;40;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f43;97;49;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="selfJoin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f72;97;81;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f65;97;70;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;101;2;103;;;;vpos;;v;;r;;d46,101;;b1,0;;mconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f27;101;34;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;105;2;107;;;;vpos;;v;;r;;d38,105;;b1,0;;mconn;;p">
					<treenode node="conn;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f31;105;36;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="endQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;91;17;91;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="startQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;89;19;89;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DboSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f0;29;1;3567;;;;vpos;;vDataSource;;c;;r&#xA;Description&#xA;     DboSource;;d35,29;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;245;2;261;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $config - Array of configuration information for the Datasource&#xA;    bool $autoConnect - Whether or not the datasource should automatically connect;;d66,245;;b1,0;;marray $config;;pbool $autoConnect;;p">
					<treenode node="autoConnect;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f45;245;57;245;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f29;245;36;245;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3561;2;3565;;;;vpos;;v;;r&#xA;Description&#xA;     Used for storing in cache the results of the in-memory methodCache;;d30,3561;;b1,0;;m">
				</treenode>
				<treenode node="_beginNested;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2301;2;2308;;;;vpos;;vbool;;r&#xA;Description&#xA;     Begin a nested transaction;;d35,2301;;b2,0;;m">
				</treenode>
				<treenode node="_buildFieldParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;3385;2;3402;;;;vpos;;vstring;;r&#xA;Description&#xA;     Build the field parameters, in a position&#xA;&#xA;Parameters:&#xA;    string $columnString - The partially built column string&#xA;    array $columnData - The array of column data&#xA;    string $position - The position type to use&#xA;&#xA;Return:&#xA;   a built column with the field parameters added;;d81,3385;;b2,0;;mstring $columnString;;parray $columnData;;pstring $position;;p">
					<treenode node="columnData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f57;3385;68;3385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="columnString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f42;3385;55;3385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="position;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f70;3385;79;3385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_commitNested;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2343;2;2350;;;;vpos;;vbool;;r&#xA;Description&#xA;     Commit a nested transaction;;d36,2343;;b2,0;;m">
				</treenode>
				<treenode node="_constructVirtualFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2474;2;2482;;;;vpos;;varray;;r&#xA;Description&#xA;     Converts model virtual fields into sql expressions to be fetched later&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to get virtual fields for&#xA;    string $alias - Alias table name&#xA;    array $fields - virtual fields to be used on query;;d75,2474;;b2,0;;mModel $Model;;pstring $alias;;parray $fields;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f58;2474;64;2474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f66;2474;73;2474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f50;2474;56;2474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_dropTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;3310;2;3312;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a &quot;drop table&quot; statement for a single table&#xA;&#xA;Parameters:&#xA;    type $table - Name of the table to drop&#xA;&#xA;Return:&#xA;   Drop table SQL statement;;d39,3310;;b2,0;;mtype $table;;p">
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f31;3310;37;3310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;446;2;479;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Executes given SQL statement.&#xA;&#xA;Parameters:&#xA;    string $sql - SQL statement&#xA;    array $params - list of params to be bound to query&#xA;    array $prepareOptions - Options to be used in the prepare statement&#xA;&#xA;Return:&#xA;   PDOStatement if query executes with no problem, true as the result of a successful, false on error;;d81,446;;b2,0;;mstring $sql;;parray $params;;parray $prepareOptions;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f35;446;42;446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepareOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f54;446;69;446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f29;446;33;446;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_fetchHasAndBelongsToMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;1455;2;1467;;;;vpos;;varray;;r&#xA;Description&#xA;     Fetch 'hasAndBelongsToMany' associations.&#xA;&#xA;Parameters:&#xA;    Model $Model - Primary model object&#xA;    string $query - Association query&#xA;    array $ids - Array of IDs of associated records&#xA;    string $association - Association name&#xA;&#xA;Return:&#xA;   Association results;;d88,1455;;b2,0;;mModel $Model;;pstring $query;;parray $ids;;pstring $association;;p">
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f74;1455;86;1455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ids;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f68;1455;72;1455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f52;1455;58;1455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f60;1455;66;1455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_fetchHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;1436;2;1444;;;;vpos;;varray;;r&#xA;Description&#xA;     Fetch 'hasMany' associations.&#xA;&#xA;Parameters:&#xA;    Model $Model - Primary model object&#xA;    string $query - Association query template&#xA;    array $ids - Array of IDs of associated records&#xA;&#xA;Return:&#xA;   Association results;;d62,1436;;b2,0;;mModel $Model;;pstring $query;;parray $ids;;p">
					<treenode node="ids;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f56;1436;60;1436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f40;1436;46;1436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f48;1436;54;1436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_filterResults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;1168;2;1200;;;;vpos;;varray;;r&#xA;Description&#xA;     Passes association results through afterFind filters of the corresponding model.&#xA;&#xA;Parameters:&#xA;    array - &amp;$resultSet Reference of resultset to be filtered&#xA;    Model $Model - Instance of model to operate against&#xA;    array $filtered - List of classes already filtered, to be skipped&#xA;&#xA;Return:&#xA;   Array of results that have been filtered through $Model-&gt;afterFind;;d83,1168;;b2,0;;marray;;pModel $Model;;parray $filtered;;p">
					<treenode node="filtered;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f62;1168;71;1168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f54;1168;60;1168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resultSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f36;1168;46;1168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_filterResultsInclusive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;1213;2;1224;;;;vpos;;varray;;r&#xA;Description&#xA;     Passes association results through afterFind filters of the corresponding model.&#xA;&#xA;Parameters:&#xA;    array - &amp;$resultSet Reference of resultset to be filtered&#xA;    Model $Model - Instance of model to operate against&#xA;    array $toBeFiltered - List of classes to be filtered&#xA;&#xA;Return:&#xA;   Array of results that have been filtered through $Model-&gt;afterFind;;d96,1213;;b2,0;;marray;;pModel $Model;;parray $toBeFiltered;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f63;1213;69;1213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resultSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f45;1213;55;1213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="toBeFiltered;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f71;1213;84;1213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getJoins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2181;2;2212;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of SQL JOIN conditions from a model's associations.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to get joins for;;d44,2181;;b2,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f36;2181;42;2181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_matchRecords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2132;2;2173;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets a list of record IDs for the given conditions. Used for multi-record updates and deletes in databases that do not support aliases in UPDATE/DELETE queries.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to find matching records for&#xA;    mixed $conditions - The conditions to match against&#xA;&#xA;Return:&#xA;   List of record IDs;;d68,2132;;b2,0;;mModel $Model;;pmixed $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f48;2132;59;2132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f40;2132;46;2132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_mergeAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;1527;2;1598;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Merge association of merge into data&#xA;&#xA;Parameters:&#xA;    array - &amp;$data The data to merge&#xA;    array - &amp;$merge The data to merge&#xA;    string $association - The association name to merge&#xA;    string $type - The type of association&#xA;    bool $selfJoin - Whether or not this is a self join;;d95,1527;;b2,0;;marray;;parray;;pstring $association;;pstring $type;;pbool $selfJoin;;p">
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f55;1527;67;1527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;1527;44;1527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f47;1527;53;1527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="selfJoin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f76;1527;85;1527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f69;1527;74;1527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_mergeConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;1997;2;2017;;;;vpos;;varray;;r&#xA;Description&#xA;     Merges a mixed set of string/array conditions.&#xA;&#xA;Parameters:&#xA;    mixed $query - The query to merge conditions for&#xA;    mixed $assoc - The association names;;d53,1997;;b2,0;;mmixed $query;;pmixed $assoc;;p">
					<treenode node="assoc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f45;1997;51;1997;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f37;1997;43;1997;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_mergeHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;1480;2;1515;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Merge the results of 'hasMany' associations.&#xA;&#xA;Parameters:&#xA;    array - &amp;$resultSet Data to merge into&#xA;    array $assocResultSet - Data to merge&#xA;    string $association - Name of Model being merged&#xA;    Model $Model - Model being merged onto;;d92,1480;;b2,0;;marray;;parray $assocResultSet;;pstring $association;;pModel $Model;;p">
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f64;1480;76;1480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="assocResultSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f47;1480;62;1480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f84;1480;90;1480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resultSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f35;1480;45;1480;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2765;2;2853;;;;vpos;;vstring;;r&#xA;Description&#xA;     Extracts a Model.field identifier and an SQL condition operator from a string, formats and inserts values, and composes them into an SQL snippet.&#xA;&#xA;Parameters:&#xA;    string $key - An SQL key snippet containing a field and optional SQL operator&#xA;    mixed $value - The value(s) to be inserted in the string&#xA;    Model $Model - Model object initiating the query;;d65,2765;;b2,0;;mstring $key;;pmixed $value;;pModel $Model;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;2765;34;2765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f50;2765;56;2765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f36;2765;42;2765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_prepareUpdateFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2063;2;2098;;;;vpos;;varray;;r&#xA;Description&#xA;     Quotes and prepares fields and values for an SQL UPDATE statement&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to prepare fields for&#xA;    array $fields - The fields to update&#xA;    bool $quoteValues - If values should be quoted, or treated as SQL snippets&#xA;    bool $alias - Include the model alias in the field name&#xA;&#xA;Return:&#xA;   Fields and values, quoted and prepared;;d101,2063;;b2,0;;mModel $Model;;parray $fields;;pbool $quoteValues;;pbool $alias;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f85;2063;91;2063;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f55;2063;62;2063;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f47;2063;53;2063;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quoteValues;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f64;2063;76;2063;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_quoteFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2861;2;2881;;;;vpos;;vstring;;r&#xA;Description&#xA;     Quotes Model.fields&#xA;&#xA;Parameters:&#xA;    string $conditions - The conditions to quote&#xA;&#xA;Return:&#xA;   or false if no match;;d46,2861;;b2,0;;mstring $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f33;2861;44;2861;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_quoteMatchedField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2889;2;2894;;;;vpos;;vstring;;r&#xA;Description&#xA;     Auxiliary function to quote matches `Model.fields` from a preg_replace_callback call&#xA;&#xA;Parameters:&#xA;    string $match - matched string&#xA;&#xA;Return:&#xA;   quoted string;;d47,2889;;b2,0;;mstring $match;;p">
					<treenode node="match;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;2889;45;2889;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_rollbackNested;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2385;2;2392;;;;vpos;;vbool;;r&#xA;Description&#xA;     Rollback a nested transaction;;d38,2385;;b2,0;;m">
				</treenode>
				<treenode node="_scrubQueryData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;2457;2;2464;;;;vpos;;varray;;r&#xA;Description&#xA;     Private helper method to remove query metadata in given data array.&#xA;&#xA;Parameters:&#xA;    array $data - The data to scrub;;d43,2457;;b2,0;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f36;2457;41;2457;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_writeQueryCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;3535;2;3539;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Writes a new key for the in memory sql query cache&#xA;&#xA;Parameters:&#xA;    string $sql - SQL query&#xA;    mixed $data - result of $sql query&#xA;    array $params - query params bound as values;;d69,3535;;b2,0;;mstring $sql;;pmixed $data;;parray $params;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f43;3535;48;3535;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f50;3535;57;3535;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f37;3535;41;3535;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="alterSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3277;2;3279;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generate an alter syntax from CakeSchema::compare()&#xA;&#xA;Parameters:&#xA;    mixed $compare - The comparison data&#xA;    string $table - The table name;;d54,3277;;b1,0;;mmixed $compare;;pstring $table;;p">
					<treenode node="compare;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f29;3277;37;3277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;3277;45;3277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="begin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2280;2;2294;;;;vpos;;vbool;;r&#xA;Description&#xA;     Begin a transaction&#xA;&#xA;Return:&#xA;   True on success, false on fail;;d25,2280;;b1,0;;m">
				</treenode>
				<treenode node="boolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3127;2;3132;;;;vpos;;vstring;;r&#xA;Description&#xA;     Translates between PHP boolean values and Database (faked) boolean values&#xA;&#xA;Parameters:&#xA;    mixed $data - Value to be translated&#xA;    bool $quote - Whether or not the field should be cast to a string&#xA;&#xA;Return:&#xA;   |bool Converted boolean value;;d48,3127;;b1,0;;mmixed $data;;pbool $quote;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f25;3127;30;3127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f32;3127;38;3127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildAssociationQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1638;2;1655;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds an SQL statement.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to build an association query for&#xA;    array $queryData - An array of queryData information containing keys similar to Model::find()&#xA;&#xA;Return:&#xA;   String containing an SQL statement;;d65,1638;;b1,0;;mModel $Model;;parray $queryData;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f45;1638;51;1638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f53;1638;63;1638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3321;2;3375;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a database-native column schema string&#xA;&#xA;Parameters:&#xA;    array $column - An array structured like the following: array('name' =&gt; 'value', 'type' =&gt; 'value'[, options]),;;d38,3321;;b1,0;;marray $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f29;3321;36;3321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3411;2;3432;;;;vpos;;varray;;r&#xA;Description&#xA;     Format indexes for create table.&#xA;&#xA;Parameters:&#xA;    array $indexes - The indexes to build&#xA;    string $table - The table name;;d53,3411;;b1,0;;marray $indexes;;pstring $table;;p">
					<treenode node="indexes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f28;3411;36;3411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;3411;44;3411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildJoinStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1882;2;1900;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds and generates a JOIN condition from an array. Handles final clean-up before conversion.&#xA;&#xA;Parameters:&#xA;    array $join - An array defining a JOIN condition in a query&#xA;&#xA;Return:&#xA;   An SQL JOIN condition to be used in a query;;d43,1882;;b1,0;;marray $join;;p">
					<treenode node="join;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f36;1882;41;1882;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1910;2;1932;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds and generates an SQL statement from an array. Handles final clean-up before conversion.&#xA;&#xA;Parameters:&#xA;    array $query - An array defining an SQL query&#xA;    Model $Model - The model object which initiated the query&#xA;&#xA;Return:&#xA;   An executable SQL statement;;d54,1910;;b1,0;;marray $query;;pModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f46;1910;52;1910;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f32;1910;38;1910;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildTableParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3460;2;3471;;;;vpos;;varray;;r&#xA;Description&#xA;     Format parameters for create table&#xA;&#xA;Parameters:&#xA;    array $parameters - The parameters to create SQL for&#xA;    string $table - The table name;;d66,3460;;b1,0;;marray $parameters;;pstring $table;;p">
					<treenode node="parameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;3460;49;3460;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f51;3460;57;3460;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cacheMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;775;2;787;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Cache a value into the methodCaches. Will respect the value of DboSource::$cacheMethods. Will retrieve a value from the cache if $value is null.&#xA;&#xA;Parameters:&#xA;    string $method - Name of the method being cached&#xA;    string $key - The key name for the cache operation&#xA;    mixed $value - The value to cache into memory&#xA;&#xA;Return:&#xA;   Either null on failure, or the value if its set;;d59,775;;b1,0;;mstring $method;;pstring $key;;pmixed $value;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;775;42;775;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f29;775;36;775;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f44;775;50;775;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="calculate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2222;2;2251;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns an SQL calculation, i.e. COUNT() or MAX()&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to get a calculated field for&#xA;    string $func - Lowercase name of SQL function, i&#xA;    array $params - Function parameters (any values must be quoted manually)&#xA;&#xA;Return:&#xA;   An SQL calculation function;;d67,2222;;b1,0;;mModel $Model;;pstring $func;;parray $params;;p">
					<treenode node="func;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f41;2222;46;2222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f33;2222;39;2222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f48;2222;55;2222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3035;2;3037;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Disconnects database, kills the connection and says the connection is closed.;;d25,3035;;b1,0;;m">
				</treenode>
				<treenode node="commit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2317;2;2336;;;;vpos;;vbool;;r&#xA;Description&#xA;     Commit a transaction&#xA;&#xA;Return:&#xA;   True on success, false on fail;;d26,2317;;b1,0;;m">
				</treenode>
				<treenode node="conditionKeysToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2658;2;2754;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a WHERE clause by parsing given conditions array. Used by DboSource::conditions().&#xA;&#xA;Parameters:&#xA;    array $conditions - Array or string of conditions&#xA;    bool $quoteValues - If true, values should be quoted&#xA;    Model $Model - A reference to the Model instance making the query&#xA;&#xA;Return:&#xA;   SQL fragment;;d94,2658;;b1,0;;marray $conditions;;pbool $quoteValues;;pModel $Model;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;2658;50;2658;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f79;2658;85;2658;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quoteValues;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f52;2658;64;2658;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="conditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2615;2;2648;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a WHERE clause by parsing given conditions data. If an array or string conditions are provided those conditions will be parsed and quoted. If a boolean is given it will be integer cast as condition. Null will return 1 = 1.&#xA;&#xA;Parameters:&#xA;    mixed $conditions - Array or string of conditions, or any value&#xA;    bool $quoteValues - If true, values should be quoted&#xA;    bool $where - If true, &quot;WHERE &quot; will be prepended to the return value&#xA;    Model $Model - A reference to the Model instance making the query&#xA;&#xA;Return:&#xA;   SQL fragment;;d98,2615;;b1,0;;mmixed $conditions;;pbool $quoteValues;;pbool $where;;pModel $Model;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f28;2615;39;2615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f83;2615;89;2615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quoteValues;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f41;2615;53;2615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="where;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f62;2615;68;2615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;987;2;1022;;;;vpos;;vbool;;r&#xA;Description&#xA;     The &quot;C&quot; in CRUD&#xA;&#xA;Parameters:&#xA;    Model $Model - Model object that the record is for&#xA;    array $fields - An array of field names to insert&#xA;    array $values - An array of values with keys matching the fields&#xA;&#xA;Return:&#xA;   Success;;d70,987;;b1,0;;mModel $Model;;parray $fields;;parray $values;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;987;45;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;987;36;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f54;987;61;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="createSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3214;2;3268;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a database-native schema for the given Schema object&#xA;&#xA;Parameters:&#xA;    CakeSchema $schema - An instance of a subclass of CakeSchema&#xA;    string $tableName - Optional;;d58,3214;;b1,0;;mCakeSchema $schema;;pstring $tableName;;p">
					<treenode node="schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;3214;37;3214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tableName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;3214;49;3214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2418;2;2434;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Creates a default set of conditions from the model if $conditions is null/empty. If conditions are supplied then they will be returned. If a model doesn't exist and no conditions were provided either null or false will be returned based on what was input.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to get conditions for&#xA;    string|array|bool $conditions - Array of conditions, conditions string, null or false&#xA;    bool $useAlias - Use model aliases rather than table names when generating conditions&#xA;&#xA;Return:&#xA;   Either null, false, $conditions or an array of default conditions to use;;d80,2418;;b1,0;;mModel $Model;;pstring|array|bool $conditions;;pbool $useAlias;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f49;2418;60;2418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f41;2418;47;2418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useAlias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f62;2418;71;2418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2108;2;2122;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generates and executes an SQL DELETE statement. For databases that do not support aliases in UPDATE queries.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to delete from&#xA;    mixed $conditions - The conditions to use&#xA;&#xA;Return:&#xA;   Success;;d58,2108;;b1,0;;mModel $Model;;pmixed $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;2108;49;2108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;2108;36;2108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disconnect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;282;2;289;;;;vpos;;vbool;;r&#xA;Description&#xA;     Disconnects from database.&#xA;&#xA;Return:&#xA;   Always true;;d30,282;;b1,0;;m">
				</treenode>
				<treenode node="dropSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3289;2;3302;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a &quot;drop table&quot; statement for the given Schema object&#xA;&#xA;Parameters:&#xA;    CakeSchema $schema - An instance of a subclass of CakeSchema&#xA;    string $table - Optional;;d63,3289;;b1,0;;mCakeSchema $schema;;pstring $table;;p">
					<treenode node="schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;3289;46;3289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f48;3289;54;3289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;421;2;434;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Queries the database with given SQL statement, and obtains some metadata about the result (rows affected, timing, any errors, number of rows in resultset). The query is also logged. If Configure::read('debug') is set, the log is shown all the time, else it is only shown on errors.&#xA;&#xA;Parameters:&#xA;    string $sql - SQL statement&#xA;    array $options - The options for executing the query&#xA;    array $params - values to be bound to the query&#xA;&#xA;Return:&#xA;   Resource or object representing the result set, or false on failure;;d70,421;;b1,0;;mstring $sql;;parray $options;;parray $params;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f31;421;39;421;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f51;421;58;421;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f25;421;29;421;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expression;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;388;2;393;;;;vpos;;vstdClass;;r&#xA;Description&#xA;     Returns an object to represent a database expression in a query. Expression objects are not sanitized or escaped.&#xA;&#xA;Parameters:&#xA;    string $expression - An arbitrary SQL expression to be inserted into a query&#xA;&#xA;Return:&#xA;   An object representing a database expression to be used in a query;;d41,388;;b1,0;;mstring $expression;;p">
					<treenode node="expression;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f28;388;39;388;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fetchAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;654;2;694;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns an array of all result rows for a given SQL query.&#xA;&#xA;Parameters:&#xA;    string $sql - SQL statement&#xA;    array|bool $params - Either parameters to be bound as values for the SQL statement,&#xA;    array $options - additional options for the query&#xA;&#xA;Return:&#xA;   |array Array of resultset rows, or false if no rows matched;;d71,654;;b1,0;;mstring $sql;;parray|bool $params;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f51;654;59;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f32;654;39;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f26;654;30;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fetchAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1424;2;1426;;;;vpos;;varray;;r&#xA;Description&#xA;     Fetch 'hasMany' associations.&#xA;&#xA;Parameters:&#xA;    Model $Model - Primary model object&#xA;    string $query - Association query template&#xA;    array $ids - Array of IDs of associated records&#xA;&#xA;Return:&#xA;   Association results;;d61,1424;;b1,0;;mModel $Model;;pstring $query;;parray $ids;;p">
					<treenode node="ids;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f55;1424;59;1424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;1424;45;1424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f47;1424;53;1424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fetchResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;701;2;703;;;;vpos;;vbool;;r&#xA;Description&#xA;     Fetches the next row from the current result set;;d31,701;;b1,0;;m">
				</treenode>
				<treenode node="fetchRow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;620;2;634;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a row from current resultset as an array&#xA;&#xA;Parameters:&#xA;    string $sql - Some SQL to be executed&#xA;&#xA;Return:&#xA;   The fetched row as an array;;d39,620;;b1,0;;mstring $sql;;p">
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f26;620;30;620;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fetchVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;711;2;735;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Modifies $result array to place virtual fields in model entry where they belongs to&#xA;&#xA;Parameters:&#xA;    array - &amp;$result Reference to the fetched row;;d45,711;;b1,0;;marray;;p">
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f36;711;43;711;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="field;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;744;2;750;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns a single field of the first of query results for a given SQL query, or false if empty.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the field&#xA;    string $sql - SQL query&#xA;&#xA;Return:&#xA;   Value of field read;;d36,744;;b1,0;;mstring $name;;pstring $sql;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f23;744;28;744;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;744;34;744;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2493;2;2598;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates the fields list of an SQL query.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to get fields for&#xA;    string $alias - Alias table name&#xA;    mixed $fields - The provided list of fields&#xA;    bool $quote - If false, returns fields array unquoted;;d87,2493;;b1,0;;mModel $Model;;pstring $alias;;pmixed $fields;;pbool $quote;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;2493;44;2493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f53;2493;60;2493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;2493;36;2493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f72;2493;78;2493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flushMethodCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;758;2;761;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Empties the method caches. These caches are used by DboSource::name() and DboSource::conditions();;d36,758;;b1,0;;m">
				</treenode>
				<treenode node="fullTableName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;943;2;973;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets full table name including prefix&#xA;&#xA;Parameters:&#xA;    Model|string $model - Either a Model object or a string table name&#xA;    bool $quote - Whether you want the table name quoted&#xA;    bool $schema - Whether you want the schema name included&#xA;&#xA;Return:&#xA;   Full quoted table name;;d70,943;;b1,0;;mModel|string $model;;pbool $quote;;pbool $schema;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f31;943;37;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;943;45;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f54;943;61;943;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateAssociationQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1673;2;1817;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Generates a query or part of a query from a single model or two associated models.&#xA;&#xA;Parameters:&#xA;    Model $Model - Primary Model object&#xA;    Model|null $LinkModel - Linked model object&#xA;    string $type - Association type, one of the model association types ie&#xA;    string $association - Association name&#xA;    array $assocData - Association data&#xA;    array - &amp;$queryData An array of queryData information containing keys similar to Model::find()&#xA;    bool $external - Whether or not the association query is on an external datasource&#xA;&#xA;Return:&#xA;   String representing a query;;d125,1673;;b1,0;;mModel $Model;;pModel|null $LinkModel;;pstring $type;;pstring $association;;parray $assocData;;parray;;pbool $external;;p">
					<treenode node="assocData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f89;1673;99;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f75;1673;87;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="external;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f114;1673;123;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="LinkModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f56;1673;66;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f48;1673;54;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f102;1673;112;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f68;1673;73;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;296;2;298;;;;vpos;;vPDO;;r&#xA;Description&#xA;     Get the underlying connection object.;;d33,296;;b1,0;;m">
				</treenode>
				<treenode node="getConstraint;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1830;2;1872;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a conditions array for the constraint between two models.&#xA;&#xA;Parameters:&#xA;    string $type - Association type&#xA;    Model $Model - Primary Model object&#xA;    Model $LinkModel - Linked model object&#xA;    string $association - Association name&#xA;    array $assocData - Association data&#xA;    string $association2 - HABTM association name&#xA;&#xA;Return:&#xA;   Conditions array defining the constraint between $Model and $LinkModel;;d118,1830;;b1,0;;mstring $type;;pModel $Model;;pModel $LinkModel;;pstring $association;;parray $assocData;;pstring $association2;;p">
					<treenode node="assocData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f84;1830;94;1830;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f70;1830;82;1830;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="association2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f96;1830;109;1830;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="LinkModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f58;1830;68;1830;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f44;1830;50;1830;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f31;1830;36;1830;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;877;2;887;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the query log as an array.&#xA;&#xA;Parameters:&#xA;    bool $sorted - Get the queries sorted by time taken, defaults to false&#xA;    bool $clear - If True the existing log will cleared&#xA;&#xA;Return:&#xA;   Array of queries run as an array;;d56,877;;b1,0;;mbool $sorted;;pbool $clear;;p">
					<treenode node="clear;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f41;877;47;877;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sorted;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f24;877;31;877;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getQueryCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3548;2;3556;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the result for a sql query if it is already cached&#xA;&#xA;Parameters:&#xA;    string $sql - SQL query&#xA;    array $params - query params bound as values&#xA;&#xA;Return:&#xA;   results for query if it is cached, false otherwise;;d56,3548;;b1,0;;mstring $sql;;parray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f37;3548;44;3548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f31;3548;35;3548;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getVersion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;305;2;307;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the version string of the database server&#xA;&#xA;Return:&#xA;   The database version;;d30,305;;b1,0;;m">
				</treenode>
				<treenode node="group;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3008;2;3028;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a GROUP BY SQL clause.&#xA;&#xA;Parameters:&#xA;    string|array $fields - Group By fields&#xA;    Model $Model - The model to get group by fields for&#xA;&#xA;Return:&#xA;   Group By clause or null;;d53,3008;;b1,0;;mstring|array $fields;;pModel $Model;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f23;3008;30;3008;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;3008;44;3008;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasAny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3046;2;3059;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the specified table contains any record matching specified SQL&#xA;&#xA;Parameters:&#xA;    Model $Model - Model to search&#xA;    string $sql - SQL WHERE clause (condition only, not the &quot;WHERE&quot; part)&#xA;&#xA;Return:&#xA;   True if the table has a matching record, else false;;d44,3046;;b1,0;;mModel $Model;;pstring $sql;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;3046;36;3046;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;3046;42;3046;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;866;2;868;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the result is valid&#xA;&#xA;Return:&#xA;   True if the result is valid else false;;d29,866;;b1,0;;m">
				</treenode>
				<treenode node="identifier;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;374;2;379;;;;vpos;;vstdClass;;r&#xA;Description&#xA;     Returns an object to represent a database identifier in a query. Expression objects are not sanitized or escaped.&#xA;&#xA;Parameters:&#xA;    string $identifier - A SQL expression to be used as an identifier&#xA;&#xA;Return:&#xA;   An object representing a database identifier to be used in a query;;d41,374;;b1,0;;mstring $identifier;;p">
					<treenode node="identifier;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f28;374;39;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3202;2;3204;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of the indexes in given datasource name.&#xA;&#xA;Parameters:&#xA;    string $model - Name of model to inspect&#xA;&#xA;Return:&#xA;   Fields in table;;d31,3202;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f23;3202;29;3202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insertMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3144;2;3181;;;;vpos;;vbool;;r&#xA;Description&#xA;     Inserts multiple values into a table&#xA;&#xA;Parameters:&#xA;    string $table - The table being inserted into&#xA;    array $fields - The array of field/column names being inserted&#xA;    array $values - The array of values to insert;;d55,3144;;b1,0;;mstring $table;;parray $fields;;parray $values;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f37;3144;44;3144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f29;3144;35;3144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f46;3144;53;3144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="introspectType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3479;2;3525;;;;vpos;;vstring;;r&#xA;Description&#xA;     Guesses the data type of an array&#xA;&#xA;Parameters:&#xA;    string $value - The value to introspect for type data;;d40,3479;;b1,0;;mstring $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f32;3479;38;3479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isConnected;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;857;2;859;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the source is connected to the database.&#xA;&#xA;Return:&#xA;   True if the database is connected, else false;;d31,857;;b1,0;;m">
				</treenode>
				<treenode node="lastAffected;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;506;2;511;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns number of affected rows in previous database operation. If no previous operation exists, this returns false.&#xA;&#xA;Parameters:&#xA;    mixed $source - The source to check&#xA;&#xA;Return:&#xA;   Number of affected rows;;d46,506;;b1,0;;mmixed $source;;p">
					<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;506;37;506;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;487;2;497;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted error message from previous database operation.&#xA;&#xA;Parameters:&#xA;    PDOStatement $query - the query to extract the error from if any&#xA;&#xA;Return:&#xA;   Error message with error number;;d55,487;;b1,0;;mPDOStatement $query;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f40;487;46;487;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastInsertId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2400;2;2402;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the ID generated from the previous INSERT operation.&#xA;&#xA;Parameters:&#xA;    mixed $source - The source to get an id for;;d46,2400;;b1,0;;mmixed $source;;p">
					<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;2400;37;2400;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastNumRows;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;520;2;522;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns number of rows in previous resultset. If no previous resultset exists, this returns false.&#xA;&#xA;Parameters:&#xA;    mixed $source - Not used&#xA;&#xA;Return:&#xA;   Number of rows in resultset;;d45,520;;b1,0;;mmixed $source;;p">
					<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f29;520;36;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="length;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3067;2;3118;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the length of a database-native column description, or null if no length&#xA;&#xA;Parameters:&#xA;    string $real - Real database-layer column type (i&#xA;&#xA;Return:&#xA;   An integer or string representing the length of the column, or null for unknown length;;d31,3067;;b1,0;;mstring $real;;p">
					<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f24;3067;29;3067;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="limit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2903;2;2915;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a limit statement in the correct format for the particular database.&#xA;&#xA;Parameters:&#xA;    int $limit - Limit of results returned&#xA;    int $offset - Offset from which to start results&#xA;&#xA;Return:&#xA;   SQL limit/offset statement;;d47,2903;;b1,0;;mint $limit;;pint $offset;;p">
					<treenode node="limit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f23;2903;29;2903;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f31;2903;38;2903;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="logQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;920;2;933;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Log given SQL query.&#xA;&#xA;Parameters:&#xA;    string $sql - SQL statement&#xA;    array $params - Values binded to the query (prepared statements);;d51,920;;b1,0;;mstring $sql;;parray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f32;920;39;920;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f26;920;30;920;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;801;2;850;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a quoted name of $data for use in an SQL statement. Strips fields out of SQL functions before quoting.&#xA;&#xA;Parameters:&#xA;    mixed $data - Either a string with a column to quote&#xA;&#xA;Return:&#xA;   SQL field;;d29,801;;b1,0;;mmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f22;801;27;801;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedTransactionSupported;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2269;2;2271;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the server support nested transactions;;d46,2269;;b1,0;;m">
				</treenode>
				<treenode node="order;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2925;2;2999;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns an ORDER BY clause as a string.&#xA;&#xA;Parameters:&#xA;    array|string $keys - Field reference, as a key (i&#xA;    string $direction - Direction (ASC or DESC)&#xA;    Model $Model - Model reference (used to look for virtual field)&#xA;&#xA;Return:&#xA;   ORDER BY clause;;d71,2925;;b1,0;;marray|string $keys;;pstring $direction;;pModel $Model;;p">
					<treenode node="direction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;2925;40;2925;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f23;2925;28;2925;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f56;2925;62;2925;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prepareFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1609;2;1626;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepares fields required by an SQL statement.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to prepare&#xA;    array $queryData - An array of queryData information containing keys similar to Model::find()&#xA;&#xA;Return:&#xA;   Array containing SQL fields;;d57,1609;;b1,0;;mModel $Model;;parray $queryData;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f37;1609;43;1609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f45;1609;55;1609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="query;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;529;2;612;;;;vpos;;vresource;;r&#xA;Description&#xA;     DataSource Query abstraction&#xA;&#xA;Return:&#xA;   Result resource identifier;;d25,529;;b1,0;;m">
				</treenode>
				<treenode node="queryAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1250;2;1411;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Queries associations.&#xA;&#xA;Parameters:&#xA;    Model $Model - Primary Model object&#xA;    Model $LinkModel - Linked model object&#xA;    string $type - Association type, one of the model association types ie&#xA;    string $association - Association name&#xA;    array $assocData - Association data&#xA;    array - &amp;$queryData An array of queryData information containing keys similar to Model::find()&#xA;    bool $external - Whether or not the association query is on an external datasource&#xA;    array - &amp;$resultSet Existing results&#xA;    int $recursive - Number of levels of association&#xA;    array $stack - A list with joined models;;d156,1250;;b1,0;;mModel $Model;;pModel $LinkModel;;pstring $type;;pstring $association;;parray $assocData;;parray;;pbool $external;;parray;;pint $recursive;;parray $stack;;p">
					<treenode node="assocData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f87;1250;97;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f73;1250;85;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="external;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f112;1250;121;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="LinkModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f54;1250;64;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f40;1250;46;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f100;1250;110;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f136;1250;146;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="resultSet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f124;1250;134;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="stack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f148;1250;154;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f66;1250;71;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rawQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;402;2;405;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Executes given SQL statement.&#xA;&#xA;Parameters:&#xA;    string $sql - SQL statement&#xA;    array $params - Additional options for the query&#xA;&#xA;Return:&#xA;   Resource or object representing the result set, or false on failure;;d51,402;;b1,0;;mstring $sql;;parray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f32;402;39;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f26;402;30;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1034;2;1156;;;;vpos;;vmixed;;r&#xA;Description&#xA;     The &quot;R&quot; in CRUD&#xA;&#xA;Parameters:&#xA;    Model $Model - A Model object that the query is for&#xA;    array $queryData - An array of queryData information containing keys similar to Model::find()&#xA;    int $recursive - Number of levels of association&#xA;&#xA;Return:&#xA;   boolean false on error/failure;;d77,1034;;b1,0;;mModel $Model;;parray $queryData;;pint $recursive;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f28;1034;34;1034;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f36;1034;46;1034;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f58;1034;68;1034;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="readTableParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3440;2;3451;;;;vpos;;varray;;r&#xA;Description&#xA;     Read additional table parameters&#xA;&#xA;Parameters:&#xA;    string $name - The table name to read;;d44,3440;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f37;3440;42;3440;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reconnect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;269;2;275;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reconnects to database server with optional new settings&#xA;&#xA;Parameters:&#xA;    array $config - An array defining the new configuration settings&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d46,269;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f27;269;34;269;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renderJoinStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1940;2;1945;;;;vpos;;vstring;;r&#xA;Description&#xA;     Renders a final SQL JOIN statement&#xA;&#xA;Parameters:&#xA;    array $data - The data to generate a join statement for;;d44,1940;;b1,0;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f37;1940;42;1940;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renderStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;1954;2;1988;;;;vpos;;vstring;;r&#xA;Description&#xA;     Renders a final SQL statement by putting together the component parts in the correct order&#xA;&#xA;Parameters:&#xA;    string $type - type of query being run&#xA;    array $data - Array of data to insert into the query&#xA;&#xA;Return:&#xA;   Rendered SQL expression to be run;;d47,1954;;b1,0;;mstring $type;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f40;1954;45;1954;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f33;1954;38;1954;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resetSequence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;3193;2;3194;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reset a sequence based on the MAX() value of $column. Useful for resetting sequences after using insertMulti().&#xA;&#xA;Parameters:&#xA;    string $table - The name of the table to update&#xA;    string $column - The column to use when resetting the sequence value&#xA;&#xA;Return:&#xA;   |void success;;d48,3193;;b1,0;;mstring $table;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f39;3193;46;3193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f31;3193;37;3193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolveKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2444;2;2449;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a key formatted like a string Model.fieldname(i.e. Post.title, or Country.name)&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to get a key for&#xA;    string $key - The key field&#xA;    string $assoc - The association name;;d63,2444;;b1,0;;mModel $Model;;pstring $key;;pstring $assoc;;p">
					<treenode node="assoc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f48;2444;54;2444;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f42;2444;46;2444;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f34;2444;40;2444;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="rollback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2359;2;2378;;;;vpos;;vbool;;r&#xA;Description&#xA;     Rollback a transaction&#xA;&#xA;Return:&#xA;   True on success, false on fail;;d28,2359;;b1,0;;m">
				</treenode>
				<treenode node="showLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;896;2;911;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Outputs the contents of the queries log. If in a non-CLI environment the sql_log element will be rendered and output. If in a CLI environment, a plain text log is generated.&#xA;&#xA;Parameters:&#xA;    bool $sorted - Get the queries sorted by time taken, defaults to false;;d42,896;;b1,0;;mbool $sorted;;p">
					<treenode node="sorted;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f25;896;32;896;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="truncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2260;2;2262;;;;vpos;;vbool;;r&#xA;Description&#xA;     Deletes all the records in a table and resets the count of the auto-incrementing primary key, where applicable.&#xA;&#xA;Parameters:&#xA;    Model|string $table - A string or model class representing the table to be truncated&#xA;&#xA;Return:&#xA;   SQL TRUNCATE TABLE statement, false if not applicable;;d34,2260;;b1,0;;mModel|string $table;;p">
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f26;2260;32;2260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;2029;2;2052;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generates and executes an SQL UPDATE statement for given model, fields, and values. For databases that do not support aliases in UPDATE queries.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model to update&#xA;    array $fields - The fields to update&#xA;    array $values - The values fo the fields&#xA;    mixed $conditions - The conditions for the update&#xA;&#xA;Return:&#xA;   Success;;d93,2029;;b1,0;;mModel $Model;;parray $fields;;parray $values;;pmixed $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f73;2029;84;2029;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f38;2029;45;2029;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;2029;36;2029;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f57;2029;64;2029;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="value;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;316;2;365;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a quoted and escaped string of $data for use in an SQL statement.&#xA;&#xA;Parameters:&#xA;    string $data - String to be prepared for use in an SQL statement&#xA;    string $column - The column datatype into which this data will be inserted&#xA;&#xA;Return:&#xA;   Quoted and escaped data;;d46,316;;b1,0;;mstring $data;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f30;316;37;316;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f23;316;28;316;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;155;23;155;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_methodCacheChange;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;236;30;236;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_queriesCnt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;118;23;118;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_queriesLog;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;132;23;132;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_queriesLogMax;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;141;26;141;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_queriesTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;125;24;125;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_queryCache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;148;23;148;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_queryDefaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;197;26;197;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;111;19;111;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_sqlOps;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;183;19;183;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_transactionNesting;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f11;190;31;190;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="affected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;90;17;90;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;50;14;50;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;67;21;67;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="configKeyName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;162;22;162;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;36;20;36;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="endQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;176;17;176;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fieldParameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;228;24;228;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fullDebug;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;83;18;83;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;43;14;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="methodCache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f15;59;27;59;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="numRows;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;97;16;97;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="startQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;169;19;169;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tableParameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;221;24;221;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="took;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;104;13;104;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useNestedTransactions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;76;30;76;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="virtualFieldSeparator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php;f8;214;30;214;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DboSourceTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f0;116;1;1716;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DboSourceTest class;;d41,116;;b0,0;;m">
				<treenode node="_runTransactions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f11;1150;2;1157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Nested transaction calls&#xA;&#xA;Parameters:&#xA;    DboTestSource $db;;d42,1150;;b2,0;;mDboTestSource $db;;p">
					<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f37;1150;40;1150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="joinStatements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f15;1191;2;1217;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider for testBuildJoinStatement;;d41,1191;;b1,5;;m">
				</treenode>
				<treenode node="joinStatementsWithPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f15;1240;2;1255;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider for testBuildJoinStatementWithTablePrefix;;d58,1240;;b1,5;;mschema;;p">
					<treenode node="schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f49;1240;56;1240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;140;2;149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,140;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;156;2;159;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,156;;b1,0;;m">
				</treenode>
				<treenode node="testBooleanEmptyConditionsParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;191;2;197;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that booleans work on empty set.;;d53,191;;b1,0;;m">
				</treenode>
				<treenode node="testBooleanNullConditionsParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;166;2;184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that booleans and null make logical condition strings.;;d52,166;;b1,0;;m">
				</treenode>
				<treenode node="testBuildJoinStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1226;2;1233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test buildJoinStatement() ensure that schemaName is not added when table value is a subquery;;d58,1226;;b1,0;;mjoin;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f47;1226;56;1226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="join;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f40;1226;45;1226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testBuildJoinStatementWithTablePrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1264;2;1269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test buildJoinStatement() ensure that prefix is not added when table value is a subquery;;d73,1264;;b1,0;;mjoin;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f62;1264;71;1264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="join;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f55;1264;60;1264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testBuildStatementDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1164;2;1184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test build statement with some fields missing;;d46,1164;;b1,0;;m">
				</treenode>
				<treenode node="testCacheMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;650;2;670;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that cacheMethod works as expected;;d35,650;;b1,0;;m">
				</treenode>
				<treenode node="testConditionKeysToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1276;2;1302;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test conditionKeysToString();;d45,1276;;b1,0;;m">
				</treenode>
				<treenode node="testConditionKeysToStringVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1309;2;1338;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test conditionKeysToString() with virtual field;;d57,1309;;b1,0;;m">
				</treenode>
				<treenode node="testCountAfterFindCalls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1469;2;1538;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that count how many times afterFind is called;;d43,1469;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1428;2;1462;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test defaultConditions();;d41,1428;;b1,0;;m">
				</treenode>
				<treenode node="testDirectCallThrowsException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;550;2;552;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException PDOException;;d49,550;;b1,0;;m">
				</treenode>
				<treenode node="testFetchAllBooleanReturns;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;775;2;784;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that query() returns boolean values from operations like CREATE TABLE;;d46,775;;b1,0;;m">
				</treenode>
				<treenode node="testFieldsCacheKeyWithDatasourceChange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;973;2;996;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fields() method cache detects datasource changes;;d58,973;;b1,0;;m">
				</treenode>
				<treenode node="testFieldsCacheKeyWithSchemanameChange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1003;2;1021;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fields() method cache detects schema name changes;;d58,1003;;b1,0;;m">
				</treenode>
				<treenode node="testFieldsUsingMethodCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;959;2;966;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fields() is using methodCache();;d46,959;;b1,0;;m">
				</treenode>
				<treenode node="testFlushMethodCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;691;2;700;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that flushMethodCache works as expected;;d40,691;;b1,0;;m">
				</treenode>
				<treenode node="testFullTablePermutations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;813;2;846;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the permutations of fullTableName();;d45,813;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;926;2;952;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that generation association queries without LinkModel still works. Mainly BC.;;d48,926;;b1,0;;m">
				</treenode>
				<treenode node="testGetLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;741;2;752;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the query log as an array.;;d30,741;;b1,0;;m">
				</treenode>
				<treenode node="testGetLogParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;759;2;768;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the query log as an array, setting bind params.;;d36,759;;b1,0;;m">
				</treenode>
				<treenode node="testGroupNoModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1028;2;1031;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that group works without a model;;d36,1028;;b1,0;;m">
				</treenode>
				<treenode node="testHasOneAfterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1667;2;1715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that afterFind is called correctly for 'hasOne' association.;;d39,1667;;b1,0;;m">
				</treenode>
				<treenode node="testInsertMultiId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1370;2;1421;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test insertMulti with id position.;;d37,1370;;b1,0;;m">
				</treenode>
				<treenode node="testJoinsAfterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1608;2;1660;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that afterFind is called correctly for 'joins';;d38,1608;;b1,0;;m">
				</treenode>
				<treenode node="testLastError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1038;2;1047;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting the last error.;;d33,1038;;b1,0;;m">
				</treenode>
				<treenode node="testLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1345;2;1363;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the limit function.;;d29,1345;;b1,0;;m">
				</treenode>
				<treenode node="testLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;708;2;734;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLog method;;d27,708;;b1,0;;m">
				</treenode>
				<treenode node="testMagicMethodQuerying;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;489;2;544;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMagicMethodQuerying method;;d43,489;;b1,0;;m">
				</treenode>
				<treenode node="testMergeAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;216;2;482;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMergeAssociations method;;d41,216;;b1,0;;m">
				</treenode>
				<treenode node="testName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;587;2;643;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testName method;;d28,587;;b1,0;;m">
				</treenode>
				<treenode node="testNameMethodCacheCollisions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;677;2;684;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that rare collisions do not happen with method caching;;d49,677;;b1,0;;m">
				</treenode>
				<treenode node="testOrderWithExpression;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;204;2;209;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that order() will accept objects made from DboSource::expression;;d43,204;;b1,0;;m">
				</treenode>
				<treenode node="testQueryAssociationUnneededQueries;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;870;2;918;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that queryAssociation() reuse already joined data for 'belongsTo' and 'hasOne' associations instead of running unneeded queries for each record;;d55,870;;b1,0;;m">
				</treenode>
				<treenode node="testReadOnlyCallingQueryAssociationWhenDefined;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;853;2;862;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that read() only calls queryAssociation on db objects when the method is defined.;;d66,853;;b1,0;;m">
				</treenode>
				<treenode node="testReconnect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;576;2;580;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests if the connection can be re-established and that the new (optional) config is set.;;d33,576;;b1,0;;m">
				</treenode>
				<treenode node="testTransactionLogging;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1054;2;1082;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that transaction commands are logged;;d42,1054;;b1,0;;m">
				</treenode>
				<treenode node="testTransactionNested;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1089;2;1104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test nested transaction calls;;d41,1089;;b1,0;;m">
				</treenode>
				<treenode node="testTransactionNestedDisabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1130;2;1142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test nested transaction disabled;;d49,1130;;b1,0;;m">
				</treenode>
				<treenode node="testTransactionNestedWithoutSupport;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1111;2;1123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test nested transaction calls without support;;d55,1111;;b1,0;;m">
				</treenode>
				<treenode node="testUseConsistentAfterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;1545;2;1601;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test format of $results in afterFind;;d46,1545;;b1,0;;m">
				</treenode>
				<treenode node="testValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;559;2;569;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValue method;;d29,559;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsInOrder;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;791;2;806;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test order to generate query order clause for virtual fields;;d44,791;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;123;21;123;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;130;17;130;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DboSqliteTestDb;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f0;29;1;58;;;;vpos;;vSqlite;;c;;r&#xA;Description&#xA;     DboSqliteTestDb class;;d37,29;;b0,0;;m">
				<treenode node="_execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f11;44;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     execute method&#xA;&#xA;Parameters:&#xA;    mixed $sql;;d81,44;;b2,0;;msql;;pparams;;pprepareOptions;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f35;44;42;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepareOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f54;44;69;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f29;44;33;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLastQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;54;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     getLastQuery method;;d32,54;;b1,0;;m">
				</treenode>
				<treenode node="simulated;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;36;18;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DboTestSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f0;56;1;80;;;;vpos;;vDboSource;;c;;r&#xA;Description&#xA;     Class DboTestSource;;d38,56;;b0,0;;m">
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;60;2;62;;;;vpos;;v;;r;;d44,60;;b1,0;;mconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f25;60;32;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;64;2;66;;;;vpos;;v;;r;;d91,64;;b1,0;;mdata;;pmerge;;passociation;;ptype;;pselfJoin;;p">
					<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f51;64;63;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f35;64;40;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f43;64;49;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="selfJoin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f72;64;81;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f65;64;70;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedTransactionSupported;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;76;2;78;;;;vpos;;v;;r;;d46,76;;b1,0;;m">
				</treenode>
				<treenode node="setConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;68;2;70;;;;vpos;;v;;r;;d46,68;;b1,0;;mconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f27;68;34;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;72;2;74;;;;vpos;;v;;r;;d38,72;;b1,0;;mconn;;p">
					<treenode node="conn;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f31;72;36;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedSupport;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;58;22;58;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DbPermissionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;92;1;114;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Permission Test Wrapper;;d45,92;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;113;18;113;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;106;21;106;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;99;17;99;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DebugCompTransport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f0;47;1;84;;;;vpos;;vAbstractTransport;;c;;r&#xA;Description&#xA;     DebugCompTransport class;;d51,47;;b0,0;;m">
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;62;2;82;;;;vpos;;vbool;;r&#xA;Description&#xA;     Send mail;;d40,62;;b1,0;;memail;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f32;62;38;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastEmail;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f15;54;25;54;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="Debugger;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f0;31;1;853;;;;vpos;;v;;r&#xA;Description&#xA;     Provide custom logging and error handling.;;d15,31;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f8;95;2;145;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.;;d31,95;;b1,0;;m">
				</treenode>
				<treenode node="_array;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f18;525;2;562;;;;vpos;;vstring;;r&#xA;Description&#xA;     Export an array type object. Filters out keys used in datasource configuration.&#xA;&#xA;Parameters:&#xA;    array $var - The array to export&#xA;    int $depth - The current depth, used for recursion tracking&#xA;    int $indent - The current indentation level&#xA;&#xA;Return:&#xA;   Exported array;;d63,525;;b2,5;;marray $var;;pint $depth;;pint $indent;;p">
					<treenode node="depth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f46;525;52;525;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="indent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f54;525;61;525;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f40;525;44;525;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_export;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f18;481;2;505;;;;vpos;;vstring;;r&#xA;Description&#xA;     Protected export function used to keep track of indentation and recursion.&#xA;&#xA;Parameters:&#xA;    mixed $var - The variable to dump&#xA;    int $depth - The remaining depth&#xA;    int $indent - The current indentation level&#xA;&#xA;Return:&#xA;   The dumped variable;;d58,481;;b2,5;;mmixed $var;;pint $depth;;pint $indent;;p">
					<treenode node="depth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f41;481;47;481;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="indent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f49;481;56;481;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f35;481;39;481;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_highlight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f18;427;2;445;;;;vpos;;vstring;;r&#xA;Description&#xA;     Wraps the highlight_string function in case the server API does not implement the function as it is the case of the HipHop interpreter&#xA;&#xA;Parameters:&#xA;    string $str - the string to convert;;d44,427;;b2,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f38;427;42;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_object;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f18;573;2;613;;;;vpos;;vstring;;r&#xA;Description&#xA;     Handles object to string conversion.&#xA;&#xA;Parameters:&#xA;    string $var - Object to convert&#xA;    int $depth - The current depth, used for tracking recursion&#xA;    int $indent - The current indentation level;;d58,573;;b2,5;;mstring $var;;pint $depth;;pint $indent;;p">
					<treenode node="depth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f41;573;47;573;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="indent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f49;573;56;573;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f35;573;39;573;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;673;2;688;;;;vpos;;vThe;;r&#xA;Description&#xA;     Add an output format or update a format in Debugger.&#xA;&#xA;Parameters:&#xA;    string $format - Format to use, including 'js' for JavaScript-enhanced HTML, 'html' for&#xA;    array $strings - Template strings, or a callback to be used for the output format&#xA;&#xA;Return:&#xA;   resulting format string set;;d59,673;;b1,5;;mstring $format;;parray $strings;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f34;673;41;673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f49;673;57;673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="checkSecurityKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;843;2;851;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verifies that the application's salt and cipher seed value has been changed from the default value.;;d44,843;;b1,5;;m">
				</treenode>
				<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;175;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Recursively formats and outputs the contents of the supplied variable.&#xA;&#xA;Parameters:&#xA;    mixed $var - the variable to dump&#xA;    int $depth - The depth to output to;;d47,175;;b1,5;;mmixed $var;;pint $depth;;p">
					<treenode node="depth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f35;175;41;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f29;175;33;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="excerpt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;391;2;418;;;;vpos;;varray;;r&#xA;Description&#xA;     Grabs an excerpt from a file and highlights a given line of code.&#xA;&#xA;Parameters:&#xA;    string $file - Absolute path to a PHP file&#xA;    int $line - Line number to highlight&#xA;    int $context - Number of lines of context to extract above and below $line&#xA;&#xA;Return:&#xA;   Set of lines highlighted;;d60,391;;b1,5;;mstring $file;;pint $line;;pint $context;;p">
					<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f46;391;54;391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f32;391;37;391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f39;391;44;391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="exportVar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;469;2;471;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a variable to a string for debug output.&#xA;&#xA;Parameters:&#xA;    string $var - Variable to convert&#xA;    int $depth - The depth to output to&#xA;&#xA;Return:&#xA;   Variable as a formatted string;;d52,469;;b1,5;;mstring $var;;pint $depth;;p">
					<treenode node="depth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f40;469;46;469;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f34;469;38;469;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getInstance;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;153;2;164;;;;vpos;;vobject;;r&#xA;Description&#xA;     Returns a reference to the Debugger singleton object instance.&#xA;&#xA;Parameters:&#xA;    string $class - Debugger class name;;d51,153;;b1,5;;mstring $class;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f36;153;42;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;810;2;836;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the type of the given variable. Will return the class name for objects.&#xA;&#xA;Parameters:&#xA;    mixed $var - The variable to get the type of&#xA;&#xA;Return:&#xA;   The type of variable;;d38,810;;b1,5;;mmixed $var;;p">
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f32;810;36;810;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="log;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;189;2;192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Creates an entry in the log file. The log entry will contain a stack trace from where it was called. as well as export the variable using exportVar. By default the log is written to the debug log.&#xA;&#xA;Parameters:&#xA;    mixed $var - Variable or content to log&#xA;    int $level - type of log to use&#xA;    int $depth - The depth to output to;;d66,189;;b1,5;;mmixed $var;;pint $level;;pint $depth;;p">
					<treenode node="depth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f54;189;60;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="level;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f34;189;40;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f28;189;32;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="output;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;701;2;720;;;;vpos;;vstring;;r&#xA;Description&#xA;     Switches output format, updates format strings. Can be used to switch the active output format:&#xA;&#xA;Parameters:&#xA;    string $format - Format to use, including 'js' for JavaScript-enhanced HTML, 'html' for&#xA;    array $strings - Template strings to be used for the output format;;d67,701;;b1,5;;mstring $format;;parray $strings;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f31;701;38;701;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f47;701;55;701;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="outputAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;623;2;632;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get/Set the output format for Debugger error rendering.&#xA;&#xA;Parameters:&#xA;    string $format - The format you want errors to be output as&#xA;&#xA;Return:&#xA;   Returns null when setting;;d49,623;;b1,5;;mstring $format;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f33;623;40;623;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="outputError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f8;728;2;801;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Takes a processed array of data from an error and displays it in the chosen format.&#xA;&#xA;Parameters:&#xA;    string $data - Data to output;;d36,728;;b1,0;;mstring $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f29;728;34;728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="showError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;205;2;261;;;;vpos;;vbool;;r&#xA;Description&#xA;     Overrides PHP's default error handling.&#xA;&#xA;Parameters:&#xA;    int $code - Code of error&#xA;    string $description - Error description&#xA;    string $file - File on which error occurred&#xA;    int $line - Line that triggered the error&#xA;    array $context - Context&#xA;&#xA;Return:&#xA;   true if error was handled;;d100,205;;b1,5;;mint $code;;pstring $description;;pstring $file;;pint $line;;parray $context;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f34;205;39;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f83;205;91;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f41;205;53;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f55;205;60;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f69;205;74;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;279;2;347;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Outputs a stack trace based on the supplied options.&#xA;&#xA;Parameters:&#xA;    array $options - Format for outputting stack trace&#xA;&#xA;Return:&#xA;   Formatted stack trace;;d50,279;;b1,5;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f30;279;38;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trimPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f15;356;2;370;;;;vpos;;vstring;;r&#xA;Description&#xA;     Shortens file paths by replacing the application base path with 'APP', and the CakePHP core path with 'CORE'.&#xA;&#xA;Parameters:&#xA;    string $path - Path to shorten&#xA;&#xA;Return:&#xA;   Normalized path;;d40,356;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f33;356;38;356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f11;89;17;89;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_outputFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f11;45;25;45;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_templates;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f11;53;22;53;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="errors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php;f8;38;15;38;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DebuggerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f0;33;1;632;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DebuggerTest class;;d40,33;;b0,0;;m">
				<treenode node="customFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;279;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test method for testing addFormat with callbacks.;;d48,279;;b1,0;;merror;;pstrings;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f30;279;36;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f38;279;46;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;42;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,42;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;53;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,53;;b1,0;;m">
				</treenode>
				<treenode node="testAddFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;221;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that changes in output formats using Debugger::output() change the templates used.;;d33,221;;b1,0;;m">
				</treenode>
				<treenode node="testAddFormatCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;260;2;272;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test adding a format that is handled by a callback.;;d41,260;;b1,0;;m">
				</treenode>
				<treenode node="testChangeOutputFormats;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;162;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that changes in output formats using Debugger::output() change the templates used.;;d43,162;;b1,0;;m">
				</treenode>
				<treenode node="testDocRef;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;66;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDocRef method;;d30,66;;b1,0;;m">
				</treenode>
				<treenode node="testDump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;501;2;552;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDump method;;d28,501;;b1,0;;m">
				</treenode>
				<treenode node="testExcerpt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;78;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Excerpt writing;;d31,78;;b1,0;;m">
				</treenode>
				<treenode node="testExportVar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;301;2;419;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExportVar method;;d33,301;;b1,0;;m">
				</treenode>
				<treenode node="testExportVarRecursion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;613;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that exportVar() doesn't loop through recursive structures.;;d42,613;;b1,0;;m">
				</treenode>
				<treenode node="testExportVarZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;426;2;445;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test exporting various kinds of false.;;d37,426;;b1,0;;m">
				</treenode>
				<treenode node="testGetInstance;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;559;2;571;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getInstance.;;d35,559;;b1,0;;m">
				</treenode>
				<treenode node="testLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;452;2;472;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLog method;;d27,452;;b1,0;;m">
				</treenode>
				<treenode node="testLogDepth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;479;2;494;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test log() depth;;d32,479;;b1,0;;m">
				</treenode>
				<treenode node="testNoDbCredentials;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;581;2;606;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoDbCredentials;;d39,581;;b1,0;;m">
				</treenode>
				<treenode node="testOutput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;106;2;155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOutput method;;d30,106;;b1,0;;m">
				</treenode>
				<treenode node="testOutputAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;201;2;204;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that outputAs works.;;d32,201;;b1,0;;m">
				</treenode>
				<treenode node="testOutputAsException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;212;2;214;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that choosing a non-existent format causes an exception;;d41,212;;b1,0;;m">
				</treenode>
				<treenode node="testTraceExclude;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;623;2;631;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test trace exclude;;d36,623;;b1,0;;m">
				</treenode>
				<treenode node="testTrimPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f8;288;2;294;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTrimPath method;;d32,288;;b1,0;;m">
				</treenode>
				<treenode node="_restoreError;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f11;35;25;35;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="DebuggerTestCaseDebugger;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php;f0;22;1;23;;;;vpos;;vDebugger;;c;;r&#xA;Description&#xA;     DebuggerTestCaseDebugger class;;d48,22;;b0,0;;m">
			</treenode>
			<treenode node="DebugTransport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\DebugTransport.php;f0;24;1;39;;;;vpos;;vAbstractTransport;;c;;r&#xA;Description&#xA;     Debug Transport class, useful for emulate the email sending process and inspect the resulted email message before actually send it during development;;d47,24;;b0,0;;m">
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\DebugTransport.php;f8;32;2;37;;;;vpos;;varray;;r&#xA;Description&#xA;     Send mail&#xA;&#xA;Parameters:&#xA;    CakeEmail $email - CakeEmail;;d40,32;;b1,0;;mCakeEmail $email;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\DebugTransport.php;f32;32;38;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DebugTransportTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\DebugTransportTest.php;f0;26;1;76;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case;;d46,26;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\DebugTransportTest.php;f8;33;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="testSend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\DebugTransportTest.php;f8;43;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSend method;;d28,43;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Dependency;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1355;1;1363;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Dependency class;;d39,1355;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1362;13;1362;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DependencyFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DependencyFixture.php;f0;24;1;45;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for file.;;d48,24;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DependencyFixture.php;f8;31;15;31;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DependencyFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Device;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1796;1;1804;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Device class;;d35,1796;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1803;13;1803;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DeviceFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DeviceType;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1682;1;1715;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     DeviceType class;;d39,1682;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1703;18;1703;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1714;16;1714;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1689;13;1689;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1696;14;1696;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DeviceTypeCategory;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1722;1;1730;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     DeviceTypeCategory class;;d47,1722;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1729;13;1729;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DeviceTypeCategoryFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeCategoryFixture.php;f0;23;1;43;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d56,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeCategoryFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeCategoryFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DeviceTypeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeFixture.php;f0;23;1;50;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeFixture.php;f8;47;16;47;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DigestAuthenticate;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f0;55;1;225;;;;vpos;;vBasicAuthenticate;;c;;r&#xA;Description&#xA;     Digest Authentication adapter for AuthComponent.;;d51,55;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f8;98;2;106;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor, completes configuration for digest authentication.&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - The Component collection used on this request&#xA;    array $settings - An array of settings;;d73,98;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f49;98;60;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f62;98;71;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getDigest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f11;140;2;152;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the digest headers from the request/environment.&#xA;&#xA;Return:&#xA;   Array of digest information;;d33,140;;b2,0;;m">
				</treenode>
				<treenode node="generateResponseHash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f8;186;2;192;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the response hash for a given digest array.&#xA;&#xA;Parameters:&#xA;    array $digest - Digest information containing data from DigestAuthenticate::parseAuthData()&#xA;    string $password - The digest hash password generated with DigestAuthenticate::password()&#xA;&#xA;Return:&#xA;   Response hash;;d58,186;;b1,0;;marray $digest;;pstring $password;;p">
					<treenode node="digest;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f38;186;45;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f47;186;56;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f8;114;2;133;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get a user based on information in the request. Used by cookie-less auth for stateless clients.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object&#xA;&#xA;Return:&#xA;   Either false or an array of user information;;d47,114;;b1,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f37;114;45;114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loginHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f8;211;2;223;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the login headers&#xA;&#xA;Return:&#xA;   Headers for logging in;;d32,211;;b1,0;;m">
				</treenode>
				<treenode node="parseAuthData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f8;160;2;177;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the digest authentication headers and split them up.&#xA;&#xA;Parameters:&#xA;    string $digest - The raw digest authentication headers&#xA;&#xA;Return:&#xA;   |null An array of digest authentication headers;;d40,160;;b1,0;;mstring $digest;;p">
					<treenode node="digest;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f31;160;38;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="password;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f15;202;2;204;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates an auth digest password hash to store&#xA;&#xA;Parameters:&#xA;    string $username - The username to use in the digest hash&#xA;    string $password - The unhashed password to make a digest hash for&#xA;    string $realm - The realm the password is for&#xA;&#xA;Return:&#xA;   the hashed password that can later be used with Digest authentication;;d63,202;;b1,5;;mstring $username;;pstring $password;;pstring $realm;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f44;202;53;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="realm;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f55;202;61;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="username;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f33;202;42;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php;f8;75;17;75;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DigestAuthenticateTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f0;30;1;309;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for DigestAuthentication;;d50,30;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;44;2;62;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,44;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;69;2;72;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,69;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateChallenge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;136;2;149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that challenge headers are sent when no credentials are found.;;d45,136;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateFailReChallenge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;189;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test scope failure.;;d51,189;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;96;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d42,96;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;156;2;180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test authenticate success;;d43,156;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateWrongUsername;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;112;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d49,112;;b1,0;;m">
				</treenode>
				<treenode node="testConstructor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;79;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test applying settings in the constructor;;d35,79;;b1,0;;m">
				</treenode>
				<treenode node="testParseAuthData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;214;2;242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseDigestAuthData method;;d37,214;;b1,0;;m">
				</treenode>
				<treenode node="testParseAuthDataFullUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;249;2;265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parsing a full URI. While not part of the spec some mobile clients will do it wrong.;;d44,249;;b1,0;;m">
				</treenode>
				<treenode node="testParseAuthEmailAddress;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;272;2;297;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test parsing digest information with email addresses;;d45,272;;b1,0;;m">
				</treenode>
				<treenode node="testPassword;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;304;2;308;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test password hashing;;d32,304;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php;f8;37;17;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DigestAuthentication;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f0;23;1;103;;;;vpos;;v;;r&#xA;Description&#xA;     Digest authentication;;d27,23;;b0,0;;m">
				<treenode node="_generateHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f18;76;2;101;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the header Authorization&#xA;&#xA;Parameters:&#xA;    HttpSocket $http - Http socket instance&#xA;    array - &amp;$authInfo Authentication info;;d73,76;;b2,5;;mHttpSocket $http;;parray;;p">
					<treenode node="authInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f62;76;71;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="http;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f54;76;59;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getServerInformation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f18;49;2;67;;;;vpos;;vbool;;r&#xA;Description&#xA;     Retrieve information about the authentication&#xA;&#xA;Parameters:&#xA;    HttpSocket $http - Http socket instance&#xA;    array - &amp;$authInfo Authentication info;;d79,49;;b2,5;;mHttpSocket $http;;parray;;p">
					<treenode node="authInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f68;49;77;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="http;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f60;49;65;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="authentication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f15;33;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Authentication&#xA;&#xA;Parameters:&#xA;    HttpSocket $http - Http socket instance&#xA;    array - &amp;$authInfo Authentication info;;d69,33;;b1,5;;mHttpSocket $http;;parray;;p">
					<treenode node="authInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f58;33;67;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="http;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php;f50;33;55;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DigestAuthenticationTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f0;58;1;200;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DigestAuthenticationTest class;;d52,58;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;72;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     This function sets up a HttpSocket instance we are going to use for testing;;d25,72;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;84;2;87;;;;vpos;;vvoid;;r&#xA;Description&#xA;     We use this function to clean up after the test case was executed;;d28,84;;b1,0;;m">
				</treenode>
				<treenode node="testBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;94;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBasic method;;d29,94;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;150;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleRequest method;;d39,150;;b1,0;;m">
				</treenode>
				<treenode node="testNoDigestResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;192;2;198;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoDigestResponse method;;d40,192;;b1,0;;m">
				</treenode>
				<treenode node="testOpaque;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;133;2;143;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOpaque method;;d30,133;;b1,0;;m">
				</treenode>
				<treenode node="testPathChanged;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;177;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPathChanged method;;d35,177;;b1,0;;m">
				</treenode>
				<treenode node="testQop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;110;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testQop method;;d27,110;;b1,0;;m">
				</treenode>
				<treenode node="HttpSocket;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;65;19;65;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DigestHttpSocket;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f0;26;1;51;;;;vpos;;vHttpSocket;;c;;r&#xA;Description&#xA;     Class DigestHttpSocket;;d42,26;;b0,0;;m">
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;41;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     request method&#xA;&#xA;Parameters:&#xA;    mixed $request;;d45,41;;b1,0;;mmixed $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f25;41;33;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nextHeader;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php;f8;33;19;33;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Dispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f0;39;1;272;;;;vpos;;vCakeEventListener;;c;;r&#xA;Description&#xA;     Dispatcher converts Requests into controller actions. It uses the dispatched Request to locate and load the correct controller. If found, the requested action is called on the controller.;;d46,39;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f8;53;2;57;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    string $base - The base directory for the application;;d44,53;;b1,0;;mstring $base;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f29;53;34;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_attachFilters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f11;91;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Attaches all event listeners for this dispatcher instance. Loads the dispatcher filters from the configured locations.&#xA;&#xA;Parameters:&#xA;    CakeEventManager $manager - Event manager instance;;d45,91;;b2,0;;mCakeEventManager $manager;;p">
					<treenode node="manager;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f35;91;43;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f11;233;2;243;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get controller to use, either plugin controller or application controller&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object&#xA;    CakeResponse $response - Response for the controller&#xA;&#xA;Return:&#xA;   name of controller if not loaded, or object if loaded;;d56,233;;b2,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f35;233;43;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f45;233;54;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_invoke;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f11;186;2;206;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     Initializes the components and models a controller will be using. Triggers the controller action, and invokes the rendering if Controller::$autoRender is true and echo's the output. Otherwise the return value of the controller action are returned.&#xA;&#xA;Parameters:&#xA;    Controller $controller - Controller to invoke&#xA;    CakeRequest $request - The request object to invoke the controller for&#xA;&#xA;Return:&#xA;   the resulting response object;;d74,186;;b2,0;;mController $controller;;pCakeRequest $request;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f39;186;50;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f64;186;72;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f11;251;2;270;;;;vpos;;vstring;;r&#xA;Description&#xA;     Load controller and return controller class name&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request instance&#xA;&#xA;Return:&#xA;   |bool Name of controller class name;;d46,251;;b2,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f36;251;44;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f8;144;2;174;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dispatches and invokes given Request, handing over control to the involved controller. If the controller is set to autoRender, via Controller::$autoRender, then Dispatcher will render the view.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object to dispatch&#xA;    CakeResponse $response - Response object to put the results of the dispatch into&#xA;    array $additionalParams - Settings array (&quot;bare&quot;, &quot;return&quot;) which is melded with the GET and POST params&#xA;&#xA;Return:&#xA;   |void if `$request['return']` is set then it returns response body, null otherwise;;d101,144;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;parray $additionalParams;;p">
					<treenode node="additionalParams;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f72;144;89;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f38;144;46;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f61;144;70;144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getEventManager;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f8;65;2;72;;;;vpos;;vCakeEventManager;;r&#xA;Description&#xA;     Returns the CakeEventManager instance or creates one if none was created. Attaches the default listeners and filters;;d35,65;;b1,0;;m">
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f8;79;2;81;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the list of events this object listens to.;;d37,79;;b1,0;;m">
				</treenode>
				<treenode node="parseParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f8;215;2;224;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Applies Routing and additionalParameters to the request to be dispatched. If Routes have not been loaded they will be loaded, and app/Config/routes.php will be run.&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - containing the request, response and additional params;;d37,215;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f29;215;35;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_eventManager;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php;f11;46;25;46;;;;vposCakeEventManager;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="DispatcherFilter;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f9;25;1;99;;;;vpos;;vCakeEventListener;;c;;r&#xA;Description&#xA;     This abstract class represents a filter to be applied to a dispatcher cycle. It acts as as event listener with the ability to alter the request or response as needed before it is handled by a controller or after the response body has already been built.;;d61,25;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f8;46;2;48;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    array $settings - Configuration settings for the filter;;d50,46;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f29;46;38;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f8;97;2;98;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Method called after the controller served a request and generated a response. It is possible to alter the response object at this point as it is not sent to the client yet.&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - container object having the `request` and  `response`&#xA;&#xA;Return:&#xA;   boolean to stop the event dispatching or null to continue;;d49,97;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f41;97;47;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f8;82;2;83;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     Method called before the controller is instantiated and called to serve a request. If used with default priority, it will be called after the Router has parsed the URL and set the routing params into the request object.&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - container object having the `request`, `response` and `additionalParams`&#xA;&#xA;Return:&#xA;   |bool;;d50,82;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f42;82;48;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f8;59;2;64;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the list of events this filter listens to. Dispatcher notifies 2 different events `Dispatcher.before` and `Dispatcher.after`. By default this class will attach `preDispatch` and `postDispatch` method respectively.;;d37,59;;b1,0;;m">
				</treenode>
				<treenode node="priority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f8;32;17;32;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php;f8;39;17;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DispatcherMockCakeResponse;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;32;1;38;;;;vpos;;vCakeResponse;;c;;r&#xA;Description&#xA;     A testing stub that doesn't send headers.;;d54,32;;b0,0;;m">
				<treenode node="_sendHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f11;34;2;36;;;;vpos;;v;;r;;d54,34;;b2,0;;mname;;pvalue;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f32;34;37;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f39;34;45;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="DispatcherTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;538;1;1751;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DispatcherTest class;;d42,538;;b0,0;;m">
				<treenode node="_cachePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f11;1737;2;1750;;;;vpos;;vstring;;r&#xA;Description&#xA;     cachePath method&#xA;&#xA;Parameters:&#xA;    string $here;;d38,1737;;b2,0;;mstring $here;;p">
					<treenode node="here;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f31;1737;36;1737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="assetProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f15;1456;2;1527;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for asset filter;;d40,1456;;b1,5;;m">
				</treenode>
				<treenode node="cacheActionProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f15;1592;2;1604;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for cached actions.;;d46,1592;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;545;2;566;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,545;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;573;2;585;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,573;;b1,0;;m">
				</treenode>
				<treenode node="testAdminDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;911;2;932;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAdminDispatch method;;d37,911;;b1,0;;m">
				</treenode>
				<treenode node="testAsset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1536;2;1560;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test assets;;d40,1536;;b1,0;;murl;;pfile;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f33;1536;38;1536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f27;1536;31;1536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testAssets;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1417;2;1444;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStaticAssets method;;d30,1417;;b1,0;;m">
				</treenode>
				<treenode node="testAutomaticPluginControllerDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1010;2;1099;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutomaticPluginControllerDispatch method;;d57,1010;;b1,0;;m">
				</treenode>
				<treenode node="testAutomaticPluginControllerIndexMissingAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1194;2;1202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutomaticPluginControllerMissingActionDispatch method;;d67,1194;;b1,0;;m">
				</treenode>
				<treenode node="testAutomaticPluginControllerMissingActionDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1176;2;1184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutomaticPluginControllerMissingActionDispatch method;;d70,1176;;b1,0;;m">
				</treenode>
				<treenode node="testAutomaticPluginDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;976;2;1003;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutomaticPluginDispatch method;;d47,976;;b1,0;;m">
				</treenode>
				<treenode node="testAutomaticPluginDispatchWithShortAccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1107;2;1122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Plugin dispatching without controller name and using plugin short form instead.;;d62,1107;;b1,0;;m">
				</treenode>
				<treenode node="testChangingParamsFromBeforeFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1387;2;1410;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testChangingParamsFromBeforeFilter method;;d54,1387;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchActionReturnsResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;859;2;870;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Dispatcher handles actions that return response objects.;;d53,859;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchActionSendsFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;877;2;904;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDispatchActionSendsFile;;d47,877;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;796;2;852;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDispatch method;;d37,796;;b1,0;;m">
				</treenode>
				<treenode node="testDispatcherFilterCallable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1314;2;1380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to attach single callables as filters;;d48,1314;;b1,0;;m">
				</treenode>
				<treenode node="testDispatcherFilterSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1276;2;1286;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to attach filter with config classes to the dispatch cycle;;d48,1276;;b1,0;;m">
				</treenode>
				<treenode node="testDispatcherFilterSubscriber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1237;2;1269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to attach filter classes to the dispatch cycle;;d50,1237;;b1,0;;m">
				</treenode>
				<treenode node="testDispatcherFilterSuscriberMissing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1294;2;1307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that attaching an inexistent class as filter will throw an exception;;d56,1294;;b1,0;;m">
				</treenode>
				<treenode node="testFullPageCachingDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1612;2;1645;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFullPageCachingDispatch method;;d51,1612;;b1,0;;murl;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f45;1612;49;1612;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testHttpMethodOverrides;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1657;2;1729;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHttpMethodOverrides method;;d43,1657;;b1,0;;m">
				</treenode>
				<treenode node="testMissingAssetProcessor404;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1567;2;1579;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that missing asset processors trigger a 404 with no response body.;;d48,1567;;b1,0;;m">
				</treenode>
				<treenode node="testMissingController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;744;2;753;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingController method;;d41,744;;b1,0;;m">
				</treenode>
				<treenode node="testMissingControllerAbstract;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;780;2;789;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingControllerInterface method;;d49,780;;b1,0;;m">
				</treenode>
				<treenode node="testMissingControllerInterface;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;762;2;771;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingControllerInterface method;;d50,762;;b1,0;;m">
				</treenode>
				<treenode node="testParseParamsReturnsPostedData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;612;2;620;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseParamsReturnsPostedData method;;d52,612;;b1,0;;m">
				</treenode>
				<treenode node="testParseParamsWithManySingleZeros;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;647;2;659;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseParamsWithManySingleZeros method;;d54,647;;b1,0;;m">
				</treenode>
				<treenode node="testParseParamsWithManyZerosInEachSectionOfUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;667;2;679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseParamsWithManyZerosInEachSectionOfUrl method;;d66,667;;b1,0;;m">
				</treenode>
				<treenode node="testParseParamsWithMixedOneToManyZerosInEachSectionOfUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;687;2;699;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseParamsWithMixedOneToManyZerosInEachSectionOfUrl method;;d76,687;;b1,0;;m">
				</treenode>
				<treenode node="testParseParamsWithoutZerosAndEmptyPost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;593;2;604;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseParamsWithoutZerosAndEmptyPost method;;d59,593;;b1,0;;m">
				</treenode>
				<treenode node="testParseParamsWithSingleZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;628;2;639;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseParamsWithSingleZero method;;d49,628;;b1,0;;m">
				</treenode>
				<treenode node="testPluginDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;940;2;969;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginDispatch method;;d38,940;;b1,0;;m">
				</treenode>
				<treenode node="testPluginShortCutUrlsWithControllerThatNeedsToBeLoaded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1130;2;1167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test plugin shortcut URLs with controllers that need to be loaded, the above test uses a controller that has already been included.;;d75,1130;;b1,0;;m">
				</treenode>
				<treenode node="testQueryStringOnRoot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;708;2;735;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testQueryStringOnRoot method;;d41,708;;b1,0;;m">
				</treenode>
				<treenode node="testTestPluginDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;1209;2;1230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test dispatching into the TestPlugin in the test_app;;d42,1209;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DispatcherTestAbstractController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f9;100;1;104;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     Abstract Class DispatcherTestAbstractController;;d67,100;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f17;102;33;102;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Document;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1774;1;1789;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Document class;;d37,1774;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1788;18;1788;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1781;13;1781;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DocumentDirectory;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1811;1;1819;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     DocumentDirectory class;;d46,1811;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1818;13;1818;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DocumentDirectoryFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentDirectoryFixture.php;f0;23;1;43;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d55,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentDirectoryFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentDirectoryFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DocumentFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Domain;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3562;1;3571;;;;vpos;;vCakeTestModel;;c;;r;;d35,3562;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3568;28;3568;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3564;13;3564;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3566;17;3566;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DomainFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainFixture.php;f0;23;1;51;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="DomainsSiteFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainsSiteFixture.php;f0;23;1;52;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d49,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainsSiteFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainsSiteFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="EmailComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f0;33;1;463;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     EmailComponent;;d39,33;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;260;2;263;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - A ComponentCollection this component can use to lazy load its components&#xA;    array $settings - Array of configuration settings;;d83,260;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f49;260;60;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f62;260;71;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_findFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f11;409;2;420;;;;vpos;;vstring;;r&#xA;Description&#xA;     Find the specified attachment in the list of file paths&#xA;&#xA;Parameters:&#xA;    string $attachment - Attachment file name to find&#xA;&#xA;Return:&#xA;   |null Path to located file;;d44,409;;b2,0;;mstring $attachment;;p">
					<treenode node="attachment;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f31;409;42;409;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_formatAddresses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f11;428;2;439;;;;vpos;;varray;;r&#xA;Description&#xA;     Format addresses to be an array with email as key and alias as value&#xA;&#xA;Parameters:&#xA;    array $addresses - Address to format;;d49,428;;b2,0;;marray $addresses;;p">
					<treenode node="addresses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f37;428;47;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_formatAttachFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f11;389;2;401;;;;vpos;;varray;;r&#xA;Description&#xA;     Format the attach array;;d41,389;;b2,0;;m">
				</treenode>
				<treenode node="_strip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f11;449;2;461;;;;vpos;;vstring;;r&#xA;Description&#xA;     Remove certain elements (such as bcc:, to:, %0a) from given value. Helps prevent header injection / manipulation on user content.&#xA;&#xA;Parameters:&#xA;    string $value - Value to strip&#xA;    bool $message - Set to true to indicate main message content&#xA;&#xA;Return:&#xA;   Stripped value;;d53,449;;b2,0;;mstring $value;;pbool $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f35;449;43;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f27;449;33;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;271;2;275;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initialize component&#xA;&#xA;Parameters:&#xA;    Controller $controller - Instantiating controller;;d52,271;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f39;271;50;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;366;2;382;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Reset all EmailComponent internal variables to be able to send out a new email.;;d25,366;;b1,0;;m">
				</treenode>
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;286;2;359;;;;vpos;;vbool;;r&#xA;Description&#xA;     Send an email using the specified content, template and layout&#xA;&#xA;Parameters:&#xA;    string|array $content - Either an array of text lines, or a string with contents&#xA;    string $template - Template to use when sending email&#xA;    string $layout - Layout to use to enclose email body&#xA;&#xA;Return:&#xA;   Success;;d73,286;;b1,0;;mstring|array $content;;pstring $template;;pstring $layout;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f22;286;30;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f57;286;64;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f39;286;48;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f11;252;23;252;;;;vposController;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="additionalParams;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;124;25;124;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="attachments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;189;20;189;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="bcc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;91;12;91;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;81;11;81;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;180;16;180;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="date;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;100;13;100;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="delivery;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;173;17;173;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="filePaths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;203;18;203;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="from;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;47;13;47;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;115;16;115;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="htmlMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;232;20;232;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;131;15;131;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lineFeed;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;149;17;149;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="messageId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;245;18;245;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="readReceipt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;61;20;61;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="replyTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;54;16;54;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="return;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;71;15;71;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="sendAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;161;15;161;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="smtpOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;218;20;218;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;107;16;107;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;138;17;138;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="textMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;225;20;225;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="to;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;40;11;40;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="xMailer;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php;f8;196;16;196;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="EmailComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f0;114;1;880;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     EmailTest class;;d46,114;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;142;2;156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,142;;b1,0;;m">
				</treenode>
				<treenode node="testContentStripping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;579;2;597;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testContentStripping method;;d40,579;;b1,0;;m">
				</treenode>
				<treenode node="testDateProperty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;561;2;572;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting a custom date.;;d36,561;;b1,0;;m">
				</treenode>
				<treenode node="testEncodeSettingInternalCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;604;2;630;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the _encode() will set mb_internal_encoding.;;d52,604;;b1,0;;m">
				</treenode>
				<treenode node="testEncodingFrom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;865;2;878;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Make sure from/to are not double encoded when UTF-8 is present;;d36,865;;b1,0;;m">
				</treenode>
				<treenode node="testMessageId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;831;2;858;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessageId method;;d33,831;;b1,0;;m">
				</treenode>
				<treenode node="testMessageRetrievalWithHelper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;504;2;525;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessageRetrievalWithHelper method;;d50,504;;b1,0;;m">
				</treenode>
				<treenode node="testMessageRetrievalWithoutTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;407;2;437;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessageRetrievalWithoutTemplate method;;d55,407;;b1,0;;m">
				</treenode>
				<treenode node="testMessageRetrievalWithTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;444;2;497;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMessageRetrievalWithTemplate method;;d52,444;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyte;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;637;2;662;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyte method;;d33,637;;b1,0;;m">
				</treenode>
				<treenode node="testNoDoubleNewlinesInHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;730;2;745;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoDoubleNewlinesInHeaders function;;d49,730;;b1,0;;m">
				</treenode>
				<treenode node="testPluginCustomViewClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;797;2;815;;;;vpos;;v;;r;;d45,797;;b1,0;;m">
				</treenode>
				<treenode node="testReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;752;2;795;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReset method;;d29,752;;b1,0;;m">
				</treenode>
				<treenode node="testSendAsIsNotIgnoredIfAttachmentsPresent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;694;2;723;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendAsIsNotIgnoredIfAttachmentsPresent method;;d62,694;;b1,0;;m">
				</treenode>
				<treenode node="testSendContentArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;532;2;554;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testContentArray method;;d40,532;;b1,0;;m">
				</treenode>
				<treenode node="testSendDebug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;346;2;370;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendDebug method;;d33,346;;b1,0;;m">
				</treenode>
				<treenode node="testSendDebugWithNoSessions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;377;2;400;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test send with delivery = debug and not using sessions.;;d47,377;;b1,0;;m">
				</treenode>
				<treenode node="testSendFormats;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;163;2;201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendFormats method;;d35,163;;b1,0;;m">
				</treenode>
				<treenode node="testSendWithAttachments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;669;2;687;;;;vpos;;vvoid;;r&#xA;Description&#xA;     undocumented function;;d43,669;;b1,0;;m">
				</treenode>
				<treenode node="testStartup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;822;2;824;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStartup method;;d31,822;;b1,0;;m">
				</treenode>
				<treenode node="testTemplateNestedElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;322;2;339;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that elements used in email templates get helpers.;;d46,322;;b1,0;;m">
				</treenode>
				<treenode node="testTemplates;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;208;2;315;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTemplates method;;d33,208;;b1,0;;m">
				</treenode>
				<treenode node="Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;121;19;121;;;;vposEmailTestController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;128;13;128;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="sentDate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f15;135;24;135;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="EmailTestComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f0;29;1;40;;;;vpos;;vEmailComponent;;c;;r&#xA;Description&#xA;     EmailTestComponent class;;d48,29;;b0,0;;m">
				<treenode node="strip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;36;2;38;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience method for testing.;;d51,36;;b1,0;;mcontent;;pmessage;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f23;36;31;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f33;36;41;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="EmailTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f0;91;1;107;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     EmailTestController class;;d45,91;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;105;19;105;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php;f8;98;13;98;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ErrorHandler;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f0;95;1;320;;;;vpos;;v;;r&#xA;Description&#xA;     Error Handler provides basic error and exception handling for your application. It captures and handles all unhandled exceptions and errors. Displays helpful framework errors when debug &gt; 1.;;d19,95;;b0,0;;m">
				<treenode node="_getMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f18;147;2;166;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a formatted error message&#xA;&#xA;Parameters:&#xA;    Exception $exception - Exception instance&#xA;&#xA;Return:&#xA;   Formatted message;;d51,147;;b2,5;;mException $exception;;p">
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f39;147;49;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_log;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f18;175;2;188;;;;vpos;;vbool;;r&#xA;Description&#xA;     Handles exception logging&#xA;&#xA;Parameters:&#xA;    Exception $exception - The exception to render&#xA;    array $config - An array of configuration for logging;;d63,175;;b2,5;;mException $exception;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f54;175;61;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f42;175;52;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="handleError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f15;205;2;236;;;;vpos;;vbool;;r&#xA;Description&#xA;     Set as the default error handler by CakePHP. Use Configure::write('Error.handler', $callback), to use your own error handling methods. This function will use Debugger to display errors when debug &gt; 0. And will log errors to CakeLog, when debug == 0.&#xA;&#xA;Parameters:&#xA;    int $code - Code of error&#xA;    string $description - Error description&#xA;    string $file - File on which error occurred&#xA;    int $line - Line that triggered the error&#xA;    array $context - Context&#xA;&#xA;Return:&#xA;   true if error was handled;;d102,205;;b1,5;;mint $code;;pstring $description;;pstring $file;;pint $line;;parray $context;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f36;205;41;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f85;205;93;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f43;205;55;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f57;205;62;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f71;205;76;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="handleException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f15;115;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set as the default exception handler by the CakePHP bootstrap process.&#xA;&#xA;Parameters:&#xA;    Exception $exception - The exception to render;;d62,115;;b1,5;;mException $exception;;p">
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f50;115;60;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="handleFatalError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f15;249;2;276;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generate an error page when some fatal error happens.&#xA;&#xA;Parameters:&#xA;    int $code - Code of error&#xA;    string $description - Error description&#xA;    string $file - File on which error occurred&#xA;    int $line - Line that triggered the error;;d76,249;;b1,5;;mint $code;;pstring $description;;pstring $file;;pint $line;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f41;249;46;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f48;249;60;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f62;249;67;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f69;249;74;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapErrorCode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f15;284;2;318;;;;vpos;;varray;;r&#xA;Description&#xA;     Map an error code into an Error word, and log location.&#xA;&#xA;Parameters:&#xA;    int $code - Error code to map&#xA;&#xA;Return:&#xA;   Array of error word, and log location;;d44,284;;b1,5;;mint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f37;284;42;284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_bailExceptionRendering;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php;f18;103;42;103;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="ErrorHandlerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f0;44;1;383;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ErrorHandlerTest class;;d44,44;;b0,0;;m">
				<treenode node="errorProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f15;108;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     provides errors for mapping tests.;;d40,108;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;53;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup create a request object to get out of router later.;;d25,53;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;76;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,76;;b1,0;;m">
				</treenode>
				<treenode node="testErrorMapping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;121;2;130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test error mappings;;d53,121;;b1,0;;merror;;pexpected;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f34;121;40;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f42;121;51;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testErrorSuppressed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;137;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test error prepended by @;;d39,137;;b1,0;;m">
				</treenode>
				<treenode node="testExceptionRendererNestingDebug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;344;2;359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExceptionRendererNestingDebug method;;d53,344;;b1,0;;m">
				</treenode>
				<treenode node="testExceptionRendererNestingProduction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;366;2;381;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExceptionRendererNestingProduction method;;d58,366;;b1,0;;m">
				</treenode>
				<treenode node="testHandleErrorDebugOff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;154;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that errors go into CakeLog when debug = 0.;;d43,154;;b1,0;;m">
				</treenode>
				<treenode node="testHandleErrorDebugOn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;90;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test error handling when debug is on, an error should be printed from Debugger.;;d42,90;;b1,0;;m">
				</treenode>
				<treenode node="testHandleErrorLoggingTrace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;182;2;204;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that errors going into CakeLog include traces.;;d47,182;;b1,0;;m">
				</treenode>
				<treenode node="testHandleException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;211;2;217;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test handleException generating a page.;;d39,211;;b1,0;;m">
				</treenode>
				<treenode node="testHandleExceptionLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;224;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test handleException generating log.;;d42,224;;b1,0;;m">
				</treenode>
				<treenode node="testHandleExceptionLogSkipping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;246;2;268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test handleException generating log.;;d50,246;;b1,0;;m">
				</treenode>
				<treenode node="testHandleFatalErrorLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;325;2;337;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test handleException generating log.;;d43,325;;b1,0;;m">
				</treenode>
				<treenode node="testHandleFatalErrorPage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;298;2;318;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test handleFatalError generating a page.;;d44,298;;b1,0;;m">
				</treenode>
				<treenode node="testLoadPluginHandler;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;275;2;289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tests it is possible to load a plugin exception renderer;;d41,275;;b1,0;;m">
				</treenode>
				<treenode node="_restoreError;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f11;46;25;46;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Example;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;5056;1;5080;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Example class;;d31,5056;;b0,0;;m">
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;5070;19;5070;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;5063;17;5063;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ExampleExample;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Vendor\Example\ExampleExample.php;f0;1;1;3;;;;vpos;;v;;r;;d21,1;;b0,0;;m">
			</treenode>
			<treenode node="ExampleShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\Console\Command\ExampleShell.php;f0;23;1;33;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Console\Command\ExampleShell.php;f0;22;1;32;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Class ExampleShell;;d33,23;;b0,0;;m">
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\Console\Command\ExampleShell.php;f8;30;2;32;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Console\Command\ExampleShell.php;f8;29;2;31;;;;vpos;;vvoid;;r&#xA;Description&#xA;     main method;;d24,30;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ExceptionRenderer;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f0;53;1;329;;;;vpos;;v;;r&#xA;Description&#xA;     Exception Renderer.;;d24,53;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;90;2;128;;;;vpos;;v;;r&#xA;Description&#xA;     Creates the controller to perform rendering on the error response. If the error is a CakeException it will be converted to either a 400 or a 500 code error depending on the code used to construct the error.&#xA;&#xA;Parameters:&#xA;    Exception $exception - Exception;;d51,90;;b1,0;;mException $exception;;p">
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f39;90;49;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_cakeError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f11;196;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generic handler for the internal framework errors CakePHP can generate.&#xA;&#xA;Parameters:&#xA;    CakeException $error - The exception to render;;d53,196;;b2,0;;mCakeException $error;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f45;196;51;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f11;139;2;177;;;;vpos;;vController;;r&#xA;Description&#xA;     Get the controller instance to handle the exception. Override this method in subclasses to customize the controller used. This method returns the built in `CakeErrorController` normally, or if an error is repeated a bare controller will be used.&#xA;&#xA;Parameters:&#xA;    Exception $exception - The exception to get a controller for;;d47,139;;b2,0;;mException $exception;;p">
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f35;139;45;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_outputMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f11;286;2;307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generate the response using the controller object.&#xA;&#xA;Parameters:&#xA;    string $template - The template to render;;d46,286;;b2,0;;mstring $template;;p">
					<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f35;286;44;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_outputMessageSafe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f11;316;2;327;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A safer way to render error messages, replaces all helpers, with basics and doesn't call component methods.&#xA;&#xA;Parameters:&#xA;    string $template - The template to render;;d50,316;;b2,0;;mstring $template;;p">
					<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f39;316;48;316;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="error400;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;218;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Convenience method to display a 400 series page.&#xA;&#xA;Parameters:&#xA;    Exception $error - The exception to render;;d34,218;;b1,0;;mException $error;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f26;218;32;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="error500;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;241;2;257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Convenience method to display a 500 page.&#xA;&#xA;Parameters:&#xA;    Exception $error - The exception to render;;d34,241;;b1,0;;mException $error;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f26;241;32;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pdoError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;265;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Convenience method to display a PDOException.&#xA;&#xA;Parameters:&#xA;    PDOException $error - The exception to render;;d47,265;;b1,0;;mPDOException $error;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f39;265;45;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;184;2;188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Renders the response for the exception.;;d26,184;;b1,0;;m">
				</treenode>
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;60;19;60;;;;vposController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;81;14;81;;;;vposException;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;74;15;74;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php;f8;67;17;67;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ExceptionRendererTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f0;136;1;879;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ExceptionRendererTest class;;d49,136;;b0,0;;m">
				<treenode node="_mockResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f11;178;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Mocks out the response on the ExceptionRenderer object so headers aren't modified.;;d42,178;;b2,0;;merror;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f34;178;40;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;145;2;159;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup create a request object to get out of router later.;;d25,145;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;166;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,166;;b1,0;;m">
				</treenode>
				<treenode node="testCakeErrorHelpersNotLost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;275;2;300;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that helpers in custom CakeErrorController are not lost;;d47,275;;b1,0;;m">
				</treenode>
				<treenode node="testCakeExceptionHandling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;661;2;675;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the various CakeException sub classes;;d73,661;;b1,0;;mexception;;ppatterns;;pcode;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f66;661;71;661;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f43;661;53;661;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="patterns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f55;661;64;661;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testConstruction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;246;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test things in the constructor.;;d36,246;;b1,0;;m">
				</treenode>
				<treenode node="testError400;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;391;2;408;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testerror400 method;;d32,391;;b1,0;;m">
				</treenode>
				<treenode node="testError400NoInjection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;440;2;455;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that error400 doesn't expose XSS;;d43,440;;b1,0;;m">
				</treenode>
				<treenode node="testerror400OnlyChangingCakeException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;415;2;433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that error400 only modifies the messages on CakeExceptions.;;d57,415;;b1,0;;m">
				</treenode>
				<treenode node="testError500Message;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;462;2;473;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testError500 method;;d39,462;;b1,0;;m">
				</treenode>
				<treenode node="testErrorMethodCoercion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;260;2;268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that method gets coerced when debug = 0;;d43,260;;b1,0;;m">
				</treenode>
				<treenode node="testExceptionResponseHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;480;2;494;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExceptionResponseHeader method;;d47,480;;b1,0;;m">
				</treenode>
				<treenode node="testMissingController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;501;2;511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingController method;;d41,501;;b1,0;;m">
				</treenode>
				<treenode node="testMissingPluginRenderSafe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;771;2;795;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that missing plugin disables Controller::$plugin if the two are the same plugin.;;d47,771;;b1,0;;m">
				</treenode>
				<treenode node="testMissingPluginRenderSafeWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;802;2;831;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that missing plugin doesn't disable Controller::$plugin if the two aren't the same plugin.;;d57,802;;b1,0;;m">
				</treenode>
				<treenode node="testMissingRenderSafe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;682;2;703;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test exceptions being raised when helpers are missing.;;d41,682;;b1,0;;m">
				</treenode>
				<treenode node="testMissingSubdirRenderSafe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;734;2;764;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that missing subDir/layoutPath don't cause other fatal errors.;;d47,734;;b1,0;;m">
				</treenode>
				<treenode node="testPDOException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;862;2;878;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the output of rendering a PDOException;;d36,862;;b1,0;;m">
				</treenode>
				<treenode node="testProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f15;518;2;653;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Returns an array of tests to run for the various CakeException classes.;;d39,518;;b1,5;;m">
				</treenode>
				<treenode node="testRenderExceptionInBeforeRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;710;2;727;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that exceptions in beforeRender() are handled by outputMessageSafe;;d53,710;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithNoRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;839;2;855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that exceptions can be rendered when an request hasn't been registered with Router;;d43,839;;b1,0;;m">
				</treenode>
				<treenode node="testSubclassConvertingFrameworkErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;226;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that ExceptionRenderer subclasses properly convert framework errors.;;d57,226;;b1,0;;m">
				</treenode>
				<treenode node="testSubclassMethodsNotBeingConvertedDebug0;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;207;2;219;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that subclass methods are not converted when debug = 0;;d62,207;;b1,0;;m">
				</treenode>
				<treenode node="testSubclassMethodsNotBeingConvertedToError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;189;2;200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that methods declared in an ExceptionRenderer subclass are not converted into error400 when debug &gt; 0;;d63,189;;b1,0;;m">
				</treenode>
				<treenode node="testUnknownExceptionInProduction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;348;2;365;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that unknown exceptions have messages ignored.;;d52,348;;b1,0;;m">
				</treenode>
				<treenode node="testUnknownExceptionTypeWithCodeHigherThan500;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;372;2;384;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that unknown exception types with valid status codes are treated correctly.;;d65,372;;b1,0;;m">
				</treenode>
				<treenode node="testUnknownExceptionTypeWithExceptionThatHasA400Code;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;307;2;320;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that unknown exception types with valid status codes are treated correctly.;;d72,307;;b1,0;;m">
				</treenode>
				<treenode node="testUnknownExceptionTypeWithNoCodeIsA500;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;327;2;341;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that unknown exception types with valid status codes are treated correctly.;;d60,327;;b1,0;;m">
				</treenode>
				<treenode node="_restoreError;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f11;138;25;138;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ExtendTransport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f0;129;1;131;;;;vpos;;v;;r&#xA;Description&#xA;     ExtendTransport class test class to ensure the class has send() method;;d22,129;;b0,0;;m">
			</treenode>
			<treenode node="ExteriorTypeCategory;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1752;1;1767;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ExteriorTypeCategory class;;d49,1752;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1766;18;1766;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1759;13;1759;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ExteriorTypeCategoryFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ExteriorTypeCategoryFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d58,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ExteriorTypeCategoryFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ExteriorTypeCategoryFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Extract;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Extract.php;f0;25;1;44;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Class Extract;;d31,25;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Extract.php;f8;27;17;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Extract.php;f8;29;17;29;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ExtractTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f0;27;1;835;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Language string extractor;;d35,27;;b0,0;;m">
				<treenode node="_addTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;250;2;272;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a translation to the internal translations property&#xA;&#xA;Parameters:&#xA;    string $category - The category&#xA;    string $domain - The domain&#xA;    string $msgid - The message string&#xA;    array $details - The file and line references;;d84,250;;b2,0;;mstring $category;;pstring $domain;;pstring $msgid;;parray $details;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f36;250;45;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="details;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f64;250;72;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f47;250;54;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="msgid;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f56;250;62;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_buildFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;566;2;605;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Build the translate template file contents out of obtained strings;;d34,566;;b2,0;;m">
				</treenode>
				<treenode node="_extract;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;279;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Extract text;;d31,279;;b2,0;;m">
				</treenode>
				<treenode node="_extractPluginValidationMessages;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;484;2;516;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Extract validation messages from application or plugin models&#xA;&#xA;Parameters:&#xA;    string $plugin - Plugin name or `null` to process application models;;d69,484;;b2,0;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f53;484;60;484;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_extractTokens;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;358;2;390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Extract tokens out of all files to be processed;;d37,358;;b2,0;;m">
				</treenode>
				<treenode node="_extractValidationMessages;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;464;2;476;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Looks for models in the application and extracts the validation messages to be added to the translation map;;d49,464;;b2,0;;m">
				</treenode>
				<treenode node="_formatString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;739;2;749;;;;vpos;;vstring;;r&#xA;Description&#xA;     Format a string to be added as a translatable string&#xA;&#xA;Parameters:&#xA;    string $string - String to format&#xA;&#xA;Return:&#xA;   Formatted string;;d43,739;;b2,0;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f34;739;41;739;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;118;2;144;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Method to interact with the User and get path selections.;;d32,118;;b2,0;;m">
				</treenode>
				<treenode node="_getStrings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;709;2;731;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the strings from the position forward&#xA;&#xA;Parameters:&#xA;    int - &amp;$position Actual position on tokens array&#xA;    int $target - Number of strings to extract&#xA;&#xA;Return:&#xA;   Strings extracted;;d53,709;;b2,0;;mint;;pint $target;;p">
					<treenode node="position;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f33;709;42;709;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="target;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f44;709;51;709;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_isExtractingApp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;822;2;824;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether this execution is meant to extract string only from directories in folder represented by the APP constant, i.e. this task is extracting strings from same application.;;d39,822;;b2,0;;m">
				</treenode>
				<treenode node="_isPathUsable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;832;2;834;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether or not a given path is usable for writing.&#xA;&#xA;Parameters:&#xA;    string $path - Path to folder&#xA;&#xA;Return:&#xA;   true if it exists and is writable, false otherwise;;d41,832;;b2,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f34;832;39;832;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_markerError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;760;2;782;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Indicate an invalid marker on a processed file&#xA;&#xA;Parameters:&#xA;    string $file - File where invalid marker resides&#xA;    int $line - Line number&#xA;    string $marker - Marker found&#xA;    int $count - Count;;d64,760;;b2,0;;mstring $file;;pint $line;;pstring $marker;;pint $count;;p">
					<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f56;760;62;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f33;760;38;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f40;760;45;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="marker;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f47;760;54;760;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;399;2;456;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parse tokens&#xA;&#xA;Parameters:&#xA;    string $functionName - Function name that indicates translatable string (e&#xA;    array $map - Array containing what variables it will find (e;;d48,399;;b2,0;;mstring $functionName;;parray $map;;p">
					<treenode node="functionName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f27;399;40;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f42;399;46;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_processValidationRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;529;2;559;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Process a validation rule for a field and looks for a message to be added to the translation map&#xA;&#xA;Parameters:&#xA;    string $field - the name of the field that is being processed&#xA;    array $rules - the set of validation rules for the field&#xA;    string $file - the file name where this validation rule was found&#xA;    string $domain - default domain to bind the validations to&#xA;    string $category - the translation category;;d103,529;;b2,0;;mstring $field;;parray $rules;;pstring $file;;pstring $domain;;pstring $category;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f76;529;85;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f67;529;74;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f44;529;50;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f60;529;65;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rules;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f52;529;58;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_searchFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;789;2;814;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Search files that may contain translatable strings;;d35,789;;b2,0;;m">
				</treenode>
				<treenode node="_store;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;616;2;628;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prepare a file to be stored&#xA;&#xA;Parameters:&#xA;    string $category - The category&#xA;    string $domain - The domain&#xA;    string $header - The header content&#xA;    string $sentence - The sentence to store;;d67,616;;b2,0;;mstring $category;;pstring $domain;;pstring $header;;pstring $sentence;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f27;616;36;616;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f38;616;45;616;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f47;616;54;616;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sentence;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f56;616;65;616;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_writeFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;635;2;677;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Write the files that need to be stored;;d34,635;;b2,0;;m">
				</treenode>
				<treenode node="_writeHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;684;2;700;;;;vpos;;vstring;;r&#xA;Description&#xA;     Build the translation template header&#xA;&#xA;Return:&#xA;   Translation template header;;d35,684;;b2,0;;m">
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f8;151;2;237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Execution method always used for tasks;;d27,151;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f8;306;2;351;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,306;;b1,0;;m">
				</treenode>
				<treenode node="_exclude;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;90;20;90;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_extractCore;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;111;24;111;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_extractValidation;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;97;30;97;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;55;17;55;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_files;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;41;18;41;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;48;18;48;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_output;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;83;19;83;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;34;18;34;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_storage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;62;20;62;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_tokens;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;69;19;69;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_translations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;76;25;76;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_validationDomain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php;f11;104;29;104;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ExtractTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f0;32;1;512;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ExtractTaskTest class;;d43,32;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;39;2;51;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,39;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;58;2;65;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,58;;b1,0;;m">
				</treenode>
				<treenode node="testExecute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;72;2;191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExecute method;;d31,72;;b1,0;;m">
				</treenode>
				<treenode node="testExtractCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;198;2;221;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExtractCategory method;;d39,198;;b1,0;;m">
				</treenode>
				<treenode node="testExtractCore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;489;2;511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the extract shell scans the core libs;;d35,489;;b1,0;;m">
				</treenode>
				<treenode node="testExtractExcludePlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;279;2;298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to exclude plugin paths by enabling the param option for the ExtractTask;;d45,279;;b1,0;;m">
				</treenode>
				<treenode node="testExtractModelValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;333;2;375;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the task will inspect application models and extract the validation messages from them;;d46,333;;b1,0;;m">
				</treenode>
				<treenode node="testExtractModelValidationInPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;425;2;460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the extract shell can obtain validation messages from models inside a specific plugin;;d54,425;;b1,0;;m">
				</treenode>
				<treenode node="testExtractModelValidationWithDomainInModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;383;2;418;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the task will inspect application models and extract the validation messages from them while using a custom validation domain for the messages set on the model itself;;d63,383;;b1,0;;m">
				</treenode>
				<treenode node="testExtractMultiplePaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;255;2;272;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test extract can read more than one path.;;d44,255;;b1,0;;m">
				</treenode>
				<treenode node="testExtractOverwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;467;2;482;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the extract shell overwrites existing files with the overwrite parameter;;d40,467;;b1,0;;m">
				</treenode>
				<treenode node="testExtractPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;305;2;326;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that is possible to extract messages form a single plugin;;d37,305;;b1,0;;m">
				</treenode>
				<treenode node="testExtractWithExclude;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php;f8;228;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test exclusions;;d42,228;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FatalErrorException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;590;1;610;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Represents a fatal error;;d48,590;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;600;2;608;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - The error message&#xA;    int $code - The error code&#xA;    string $file - The file the error occurred in&#xA;    int $line - The line the error occurred on;;d80,600;;b1,0;;mstring $message;;pint $code;;pstring $file;;pint $line;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f39;600;44;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f52;600;57;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f66;600;71;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;600;37;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="FaultyExceptionRenderer;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f0;25;1;37;;;;vpos;;vExceptionRenderer;;c;;r&#xA;Description&#xA;     A faulty ExceptionRenderer to test nesting.;;d56,25;;b0,0;;m">
				<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php;f8;33;2;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Dummy rendering implementation.;;d26,33;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Featured;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;435;1;450;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Featured class;;d37,435;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;449;18;449;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;442;13;442;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Featured2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4517;1;4568;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Featured2 class;;d38,4517;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4556;2;4566;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4556;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4556;30;4556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4545;18;4545;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4524;13;4524;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4531;14;4531;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4538;17;4538;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FeaturedFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeaturedFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeaturedFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeaturedFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FeatureSet;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1737;1;1745;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     FeatureSet class;;d39,1737;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1744;13;1744;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FeatureSetFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeatureSetFixture.php;f0;23;1;43;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeatureSetFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeatureSetFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="File;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f0;25;1;617;;;;vpos;;v;;r&#xA;Description&#xA;     Convenience class for reading, writing and appending to files.;;d11,25;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;85;2;92;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $path - Path to file&#xA;    bool $create - Create file if it does not exist (if true)&#xA;    int $mode - Mode to apply to the folder holding the file;;d67,85;;b1,0;;mstring $path;;pbool $create;;pint $mode;;p">
					<treenode node="create;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f36;85;43;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f53;85;58;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f29;85;34;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;97;2;99;;;;vpos;;v;;r&#xA;Description&#xA;     Closes the current file if it is opened;;d30,97;;b1,0;;m">
				</treenode>
				<treenode node="append;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;252;2;254;;;;vpos;;vbool;;r&#xA;Description&#xA;     Append given data string to this file.&#xA;&#xA;Parameters:&#xA;    string $data - Data to write&#xA;    string $force - Force the file to open&#xA;&#xA;Return:&#xA;   Success;;d47,252;;b1,0;;mstring $data;;pstring $force;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f24;252;29;252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="force;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f31;252;37;252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearStatCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;581;2;587;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Clear PHP's internal stat cache&#xA;&#xA;Parameters:&#xA;    bool $all - Clear all cache or not;;d46,581;;b1,0;;mbool $all;;p">
					<treenode node="all;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f32;581;36;581;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;262;2;267;;;;vpos;;vbool;;r&#xA;Description&#xA;     Closes the current file if it is opened.&#xA;&#xA;Return:&#xA;   True if closing was successful or file was already closed, otherwise false;;d25,262;;b1,0;;m">
				</treenode>
				<treenode node="copy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;540;2;545;;;;vpos;;vbool;;r&#xA;Description&#xA;     Copy the File to $dest&#xA;&#xA;Parameters:&#xA;    string $dest - Destination for the copy&#xA;    bool $overwrite - Overwrite $dest if exists&#xA;&#xA;Return:&#xA;   Success;;d48,540;;b1,0;;mstring $dest;;pbool $overwrite;;p">
					<treenode node="dest;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f22;540;27;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="overwrite;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f29;540;39;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;107;2;115;;;;vpos;;vbool;;r&#xA;Description&#xA;     Creates the file.&#xA;&#xA;Return:&#xA;   Success;;d26,107;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;275;2;284;;;;vpos;;vbool;;r&#xA;Description&#xA;     Deletes the file.&#xA;&#xA;Return:&#xA;   Success;;d26,275;;b1,0;;m">
				</treenode>
				<treenode node="executable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;456;2;458;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the File is executable.&#xA;&#xA;Return:&#xA;   True if it's executable, false otherwise;;d30,456;;b1,0;;m">
				</treenode>
				<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;409;2;412;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the file exists.&#xA;&#xA;Return:&#xA;   True if it exists, false otherwise;;d26,409;;b1,0;;m">
				</treenode>
				<treenode node="ext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;321;2;329;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the file extension.&#xA;&#xA;Return:&#xA;   The file extension;;d23,321;;b1,0;;m">
				</treenode>
				<treenode node="folder;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;528;2;530;;;;vpos;;vFolder;;r&#xA;Description&#xA;     Returns the current folder.&#xA;&#xA;Return:&#xA;   Current folder;;d26,528;;b1,0;;m">
				</treenode>
				<treenode node="group;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;489;2;494;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the file's group.&#xA;&#xA;Return:&#xA;   |false The file group, or false in case of an error;;d25,489;;b1,0;;m">
				</treenode>
				<treenode node="info;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;299;2;313;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the file info as an array with the following keys:&#xA;&#xA;Return:&#xA;   File information;;d24,299;;b1,0;;m">
				</treenode>
				<treenode node="lastAccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;502;2;507;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns last access time.&#xA;&#xA;Return:&#xA;   |false Timestamp of last access time, or false in case of an error;;d30,502;;b1,0;;m">
				</treenode>
				<treenode node="lastChange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;515;2;520;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns last modified time.&#xA;&#xA;Return:&#xA;   |false Timestamp of last modification, or false in case of an error;;d30,515;;b1,0;;m">
				</treenode>
				<treenode node="md5;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;374;2;385;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get md5 Checksum of file with previous check of Filesize&#xA;&#xA;Parameters:&#xA;    int|bool $maxsize - in MB or true to force&#xA;&#xA;Return:&#xA;   |false md5 Checksum {;;d35,374;;b1,0;;mint|bool $maxsize;;p">
					<treenode node="maxsize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f21;374;29;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;553;2;570;;;;vpos;;vfalse;;r&#xA;Description&#xA;     Get the mime type of the file. Uses the finfo extension if its available, otherwise falls back to mime_content_type&#xA;&#xA;Return:&#xA;   |string The mimetype of the file, or false if reading fails;;d24,553;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;337;2;347;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the file name without extension.&#xA;&#xA;Return:&#xA;   The file name without extension;;d24,337;;b1,0;;m">
				</treenode>
				<treenode node="offset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;187;2;196;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Sets or gets the offset for the currently opened file.&#xA;&#xA;Parameters:&#xA;    int|bool $offset - The $offset in bytes to seek&#xA;    int $seek - PHP Constant SEEK_SET | SEEK_CUR | SEEK_END determining what the $offset is relative to&#xA;&#xA;Return:&#xA;   True on success, false on failure (set mode), false on failure or integer offset on success (get mode);;d59,187;;b1,0;;mint|bool $offset;;pint $seek;;p">
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f24;187;31;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="seek;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f41;187;46;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="open;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;125;2;140;;;;vpos;;vbool;;r&#xA;Description&#xA;     Opens the current file with a given $mode&#xA;&#xA;Parameters:&#xA;    string $mode - A valid 'fopen' mode string (r|w|a &#xA;    bool $force - If true then the file will be re-opened even if its already opened, otherwise it won't&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d51,125;;b1,0;;mstring $mode;;pbool $force;;p">
					<treenode node="force;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f35;125;41;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f22;125;27;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="owner;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;476;2;481;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the file's owner.&#xA;&#xA;Return:&#xA;   |false The file owner, or false in case of an error;;d25,476;;b1,0;;m">
				</treenode>
				<treenode node="perms;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;420;2;425;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the &quot;chmod&quot; (permissions) of the file.&#xA;&#xA;Return:&#xA;   |false Permissions for the file, or false in case of an error;;d25,420;;b1,0;;m">
				</treenode>
				<treenode node="prepare;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f15;208;2;214;;;;vpos;;vstring;;r&#xA;Description&#xA;     Prepares an ASCII string for writing. Converts line endings to the correct terminator for the current platform. If Windows, &quot;\r\n&quot; will be used, all other platforms will use &quot;\n&quot;&#xA;&#xA;Parameters:&#xA;    string $data - Data to prepare for writing&#xA;    bool $forceWindows - If true forces usage Windows newline string&#xA;&#xA;Return:&#xA;   The with converted line endings;;d62,208;;b1,5;;mstring $data;;pbool $forceWindows;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f32;208;37;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="forceWindows;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f39;208;52;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pwd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;393;2;401;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the full path of the file.&#xA;&#xA;Return:&#xA;   Full path to the file;;d23,393;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;151;2;177;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Return the contents of this file as a string.&#xA;&#xA;Parameters:&#xA;    string $bytes - where to start&#xA;    string $mode - A `fread` compatible mode&#xA;    bool $force - If true then the file will be re-opened even if its already opened, otherwise it won't&#xA;&#xA;Return:&#xA;   string on success, false on failure;;d68,151;;b1,0;;mstring $bytes;;pstring $mode;;pbool $force;;p">
					<treenode node="bytes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f22;151;28;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="force;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f52;151;58;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f38;151;43;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="readable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;466;2;468;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the file is readable.&#xA;&#xA;Return:&#xA;   True if file is readable, false otherwise;;d28,466;;b1,0;;m">
				</treenode>
				<treenode node="replaceText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;596;2;615;;;;vpos;;vbool;;r&#xA;Description&#xA;     Searches for a given text and replaces the text if found.&#xA;&#xA;Parameters:&#xA;    string|array $search - Text(s) to search for&#xA;    string|array $replace - Text(s) to replace with&#xA;&#xA;Return:&#xA;   Success;;d48,596;;b1,0;;mstring|array $search;;pstring|array $replace;;p">
					<treenode node="replace;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f38;596;46;596;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="search;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f29;596;36;596;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="safe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;357;2;365;;;;vpos;;vstring;;r&#xA;Description&#xA;     Makes file name safe for saving&#xA;&#xA;Parameters:&#xA;    string $name - The name of the file to make safe if different from $this-&gt;name&#xA;    string $ext - The name of the extension to make safe if different from $this-&gt;ext&#xA;&#xA;Return:&#xA;   ext The extension of the file;;d49,357;;b1,0;;mstring $name;;pstring $ext;;p">
					<treenode node="ext;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f36;357;40;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f22;357;27;357;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="size;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;433;2;438;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the file size&#xA;&#xA;Return:&#xA;   |false Size of the file in bytes, or false in case of an error;;d24,433;;b1,0;;m">
				</treenode>
				<treenode node="writable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;446;2;448;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the file is writable.&#xA;&#xA;Return:&#xA;   True if it's writable, false otherwise;;d28,446;;b1,0;;m">
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;225;2;242;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write given data to this file.&#xA;&#xA;Parameters:&#xA;    string $data - Data to write to this File&#xA;    string $mode - Mode of writing&#xA;    string $force - Force the file to open&#xA;&#xA;Return:&#xA;   Success;;d59,225;;b1,0;;mstring $data;;pstring $mode;;pstring $force;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f23;225;28;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="force;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f43;225;49;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f30;225;35;225;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="Folder;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;33;15;33;;;;vposFolder;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="handle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;57;15;57;;;;vposresource;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="info;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;49;13;49;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lock;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;65;13;65;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;41;13;41;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php;f8;75;13;75;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FileEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f0;30;1;431;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     File Storage engine for cache. Filestorage is the slowest cache storage to read and write. However, it is good for servers that don't have other storage engine available, or have content which is not performance sensitive.;;d37,30;;b0,0;;m">
				<treenode node="_active;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f11;374;2;388;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determine is cache directory is writable;;d30,374;;b2,0;;m">
				</treenode>
				<treenode node="_clearDirectory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f11;261;2;301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Used to clear a directory of matching files.&#xA;&#xA;Parameters:&#xA;    string $path - The path to search&#xA;    int $now - The current timestamp&#xA;    int $threshold - Any file not modified after this value will be deleted;;d61,261;;b2,0;;mstring $path;;pint $now;;pint $threshold;;p">
					<treenode node="now;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f43;261;47;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f36;261;41;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="threshold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f49;261;59;261;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f11;335;2;367;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the current cache key this class is managing, and creates a writable SplFileObject for the cache file the key is referring to.&#xA;&#xA;Parameters:&#xA;    string $key - The key&#xA;    bool $createKey - Whether the key should be created if it doesn't exists, or not&#xA;&#xA;Return:&#xA;   true if the cache key could be set, false otherwise;;d54,335;;b2,0;;mstring $key;;pbool $createKey;;p">
					<treenode node="createKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f34;335;44;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f28;335;32;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;222;2;251;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all values from the cache&#xA;&#xA;Parameters:&#xA;    bool $check - Optional - only delete expired cache items&#xA;&#xA;Return:&#xA;   True if the cache was successfully cleared, false otherwise;;d31,222;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f23;222;29;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;411;2;430;;;;vpos;;vbool;;r&#xA;Description&#xA;     Recursively deletes all files under any directory named as $group&#xA;&#xA;Parameters:&#xA;    string $group - The group to clear&#xA;&#xA;Return:&#xA;   success;;d36,411;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f28;411;34;411;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;311;2;313;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Not implemented&#xA;&#xA;Parameters:&#xA;    string $key - The key to decrement&#xA;    int $offset - The number to offset;;d46,311;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f27;311;31;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f33;311;40;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;204;2;214;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d30,204;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f24;204;28;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;98;2;100;;;;vpos;;vbool;;r&#xA;Description&#xA;     Garbage collection. Permanently remove all expired and deleted data&#xA;&#xA;Parameters:&#xA;    int $expires - [optional] An expires timestamp, invalidating all data before&#xA;&#xA;Return:&#xA;   True if garbage collection was successful, false on failure;;d37,98;;b1,0;;mint $expires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f20;98;28;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;323;2;325;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Not implemented&#xA;&#xA;Parameters:&#xA;    string $key - The key to decrement&#xA;    int $offset - The number to offset;;d46,323;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f27;323;31;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f33;323;40;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;68;2;90;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the Cache Engine&#xA;&#xA;Parameters:&#xA;    array $settings - array of setting for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,68;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f22;68;31;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="key;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;396;2;403;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Generates a safe key for use with cache engine storage engines.&#xA;&#xA;Parameters:&#xA;    string $key - the key passed over&#xA;&#xA;Return:&#xA;   string $key or false;;d27,396;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f21;396;25;396;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;156;2;196;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d28,156;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f22;156;26;156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;110;2;148;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $data - Data to be cached&#xA;    int $duration - How long to cache the data, in seconds&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d47,110;;b1,0;;mstring $key;;pmixed $data;;pint $duration;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f29;110;34;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f36;110;45;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f23;110;27;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_File;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f11;37;17;37;;;;vposFile;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_init;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f11;57;17;57;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php;f8;50;17;50;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FileEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f0;25;1;552;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     FileEngineTest class;;d42,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;39;2;43;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,39;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;50;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,50;;b1,0;;m">
				</treenode>
				<treenode node="testCacheDirChange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;64;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCacheDirChange method;;d38,64;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;194;2;224;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClear method;;d29,194;;b1,0;;m">
				</treenode>
				<treenode node="testClearingWithRepeatWrites;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;458;2;479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that clearing with repeat writes works properly;;d48,458;;b1,0;;m">
				</treenode>
				<treenode node="testClearWithGroups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;260;2;271;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that clear() also removes files with group tags.;;d39,260;;b1,0;;m">
				</treenode>
				<treenode node="testClearWithNoKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;278;2;288;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that clear() also removes files with group tags.;;d39,278;;b1,0;;m">
				</treenode>
				<treenode node="testClearWithPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;231;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that clear() doesn't wipe files not in the current engine's prefix.;;d41,231;;b1,0;;m">
				</treenode>
				<treenode node="testConsecutiveReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;106;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test read/write on the same cache key. Ensures file handles are re-wound.;;d44,106;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;153;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCache method;;d35,153;;b1,0;;m">
				</treenode>
				<treenode node="testExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;123;2;146;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExpiry method;;d30,123;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;504;2;531;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test clearing a cache group;;d34,504;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClearNoPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;538;2;550;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that clearGroup works with no prefix.;;d42,538;;b1,0;;m">
				</treenode>
				<treenode node="testGroupDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;486;2;497;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deleting from a groups-enabled config is possible;;d35,486;;b1,0;;m">
				</treenode>
				<treenode node="testGroupsReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;444;2;451;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that configuring groups for stored keys return the correct values when read/written;;d39,444;;b1,0;;m">
				</treenode>
				<treenode node="testKeyPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;295;2;313;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testKeyPath method;;d31,295;;b1,0;;m">
				</treenode>
				<treenode node="testMaskSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;401;2;437;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Testing the mask setting in FileEngine;;d35,401;;b1,0;;m">
				</treenode>
				<treenode node="testPathDoesNotExist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;385;2;394;;;;vpos;;vvoid;;r&#xA;Description&#xA;     check that FileEngine does not generate an error when a configured Path does not exist in debug mode.;;d40,385;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;78;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteCache method;;d41,78;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveWindowsSlashesFromCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;320;2;358;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveWindowsSlashesFromCache method;;d53,320;;b1,0;;m">
				</treenode>
				<treenode node="testSerialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;171;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSerialize method;;d33,171;;b1,0;;m">
				</treenode>
				<treenode node="testWriteQuotedString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;365;2;378;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWriteQuotedString method;;d41,365;;b1,0;;m">
				</treenode>
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php;f8;32;15;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FileLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f0;28;1;219;;;;vpos;;vBaseLog;;c;;r&#xA;Description&#xA;     File Storage stream for Logging. Writes logs to different files based on the type of log it is.;;d30,28;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f8;87;2;90;;;;vpos;;v;;r&#xA;Description&#xA;     Constructs a new File Logger.&#xA;&#xA;Parameters:&#xA;    array $config - Options for the FileLog, see above;;d48,87;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f29;87;36;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getFilename;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f11;163;2;177;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get filename&#xA;&#xA;Parameters:&#xA;    string $type - The type of log&#xA;&#xA;Return:&#xA;   File name;;d40,163;;b2,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f33;163;38;163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_rotateFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f11;187;2;217;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Rotate log file if size specified in config is reached. Also if `rotate` count is reached oldest file is removed.&#xA;&#xA;Parameters:&#xA;    string $filename - Log file name&#xA;&#xA;Return:&#xA;   True if rotated successfully or false in case of error;;d43,187;;b2,0;;mstring $filename;;p">
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f32;187;41;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f8;98;2;123;;;;vpos;;varray;;r&#xA;Description&#xA;     Sets protected properties based on config provided&#xA;&#xA;Parameters:&#xA;    array $config - Engine configuration;;d43,98;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f24;98;31;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f8;132;2;155;;;;vpos;;vbool;;r&#xA;Description&#xA;     Implements writing to log files.&#xA;&#xA;Parameters:&#xA;    string $type - The type of log you are making&#xA;    string $message - The message you want to log&#xA;&#xA;Return:&#xA;   success of write;;d40,132;;b1,0;;mstring $type;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f30;132;38;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f23;132;28;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f11;36;21;36;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f11;58;17;58;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f11;51;17;51;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_size;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php;f11;65;17;65;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="FileLogTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php;f0;25;1;193;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     CakeLogTest class;;d39,25;;b0,0;;m">
				<treenode node="_deleteLogs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php;f11;187;2;192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     helper function to clears all log files in specified directory;;d38,187;;b2,0;;mdir;;p">
					<treenode node="dir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php;f32;187;36;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testLogFileWriting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php;f8;32;2;53;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLogFileWriting method;;d38,32;;b1,0;;m">
				</treenode>
				<treenode node="testMaskSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php;f8;152;2;180;;;;vpos;;v;;r;;d35,152;;b1,0;;m">
				</treenode>
				<treenode node="testPathSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php;f8;60;2;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using the path setting to write logs in other places.;;d35,60;;b1,0;;m">
				</treenode>
				<treenode node="testRotation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php;f8;74;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test log rotation;;d32,74;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FileTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f0;26;1;611;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     FileTest class;;d36,26;;b0,0;;m">
				<treenode node="_getTmpFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f11;547;2;562;;;;vpos;;vvoid;;r&#xA;Description&#xA;     getTmpFile method&#xA;&#xA;Parameters:&#xA;    bool $paintSkip;;d51,547;;b2,0;;mbool $paintSkip;;p">
					<treenode node="paintSkip;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f32;547;42;547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;40;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup the test case;;d25,40;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;51;2;58;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,51;;b1,0;;m">
				</treenode>
				<treenode node="testAppend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;424;2;453;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAppend method;;d30,424;;b1,0;;m">
				</treenode>
				<treenode node="testBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;65;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBasic method;;d29,65;;b1,0;;m">
				</treenode>
				<treenode node="testClose;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;262;2;272;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClose method;;d29,262;;b1,0;;m">
				</treenode>
				<treenode node="testCopy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;502;2;523;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCopy method;;d28,502;;b1,0;;m">
				</treenode>
				<treenode node="testCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;279;2;283;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreate method;;d30,279;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;460;2;477;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDelete method;;d30,460;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteAfterRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;485;2;495;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Windows has issues unlinking files if there are active filehandles open.;;d39,485;;b1,0;;m">
				</treenode>
				<treenode node="testExecutable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;349;2;355;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExecutable method;;d34,349;;b1,0;;m">
				</treenode>
				<treenode node="testLastAccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;362;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLastAccess method;;d34,362;;b1,0;;m">
				</treenode>
				<treenode node="testLastChange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;376;2;387;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLastChange method;;d34,376;;b1,0;;m">
				</treenode>
				<treenode node="testMime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;530;2;539;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test mime();;d28,530;;b1,0;;m">
				</treenode>
				<treenode node="testNoPartialPathBeingSetForNonExistentPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;606;2;610;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that no path is being set for passed file paths that do not exist.;;d63,606;;b1,0;;m">
				</treenode>
				<treenode node="testOffset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;206;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOffset method;;d30,206;;b1,0;;m">
				</treenode>
				<treenode node="testOpen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;238;2;255;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOpen method;;d28,238;;b1,0;;m">
				</treenode>
				<treenode node="testOpeningNonExistentFileCreatesIt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;290;2;296;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOpeningNonExistentFileCreatesIt method;;d55,290;;b1,0;;m">
				</treenode>
				<treenode node="testPermission;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;129;2;168;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPermission method;;d34,129;;b1,0;;m">
				</treenode>
				<treenode node="testPrepare;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;303;2;316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPrepare method;;d31,303;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;175;2;199;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRead method;;d28,175;;b1,0;;m">
				</treenode>
				<treenode node="testReadable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;323;2;329;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadable method;;d32,323;;b1,0;;m">
				</treenode>
				<treenode node="testReplaceText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;569;2;598;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReplaceText method;;d35,569;;b1,0;;m">
				</treenode>
				<treenode node="testWritable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;336;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWritable method;;d32,336;;b1,0;;m">
				</treenode>
				<treenode node="testWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;394;2;417;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWrite method;;d29,394;;b1,0;;m">
				</treenode>
				<treenode node="File;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php;f8;33;13;33;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FilmFile;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2892;1;2896;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     FilmFile class;;d37,2892;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2894;13;2894;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FilmFileFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FilmFileFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class FilmFileFixture;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FilmFileFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FilmFileFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FirstBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;427;1;434;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     FirstBehavior;;d42,427;;b0,0;;m">
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;429;2;432;;;;vpos;;v;;r;;d60,429;;b1,0;;mmodel;;pquery;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f34;429;40;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f42;429;48;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="FirstGenericObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f0;42;1;52;;;;vpos;;vGenericObject;;c;;r&#xA;Description&#xA;     First Extension of Generic Object;;d47,42;;b0,0;;m">
				<treenode node="callback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;49;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A generic callback;;d28,49;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FixtureImportTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;197;1;205;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     FixtureImportTestModel class;;d43,197;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;199;13;199;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;203;20;203;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;201;17;201;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FixturePrefixTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;207;1;216;;;;vpos;;vModel;;c;;r;;d38,207;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;209;13;209;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tablePrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;213;20;213;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;215;20;215;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;211;17;211;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FixtureTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f0;26;1;450;;;;vpos;;vBakeTask;;c;;r&#xA;Description&#xA;     Task class for creating and updating fixtures files.;;d35,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;56;2;59;;;;vpos;;v;;r&#xA;Description&#xA;     Override initialize&#xA;&#xA;Parameters:&#xA;    ConsoleOutput $stdout - A ConsoleOutput object for stdout&#xA;    ConsoleOutput $stderr - A ConsoleOutput object for stderr&#xA;    ConsoleInput $stdin - A ConsoleInput object for stdin;;d76,56;;b1,0;;mConsoleOutput $stdout;;pConsoleOutput $stderr;;pConsoleInput $stdin;;p">
					<treenode node="stderr;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f45;56;52;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="stdin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f61;56;67;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="stdout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f29;56;36;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_generateRecords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f11;321;2;380;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate String representation of Records&#xA;&#xA;Parameters:&#xA;    array $tableInfo - Table schema array&#xA;    int $recordCount - The number of records to generate&#xA;&#xA;Return:&#xA;   Array of records to use in the fixture;;d67,321;;b2,0;;marray $tableInfo;;pint $recordCount;;p">
					<treenode node="recordCount;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f49;321;61;321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tableInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f37;321;47;321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_generateSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f11;309;2;312;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a string representation of a schema.&#xA;&#xA;Parameters:&#xA;    array $tableInfo - Table schema array&#xA;&#xA;Return:&#xA;   fields definitions;;d48,309;;b2,0;;marray $tableInfo;;p">
					<treenode node="tableInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f36;309;46;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getRecordsFromTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f11;415;2;448;;;;vpos;;varray;;r&#xA;Description&#xA;     Interact with the user to get a custom SQL condition and use that to extract data to build a fixture.&#xA;&#xA;Parameters:&#xA;    string $modelName - name of the model to take records from&#xA;    string $useTable - Name of table to use&#xA;&#xA;Return:&#xA;   Array of records;;d71,415;;b2,0;;mstring $modelName;;pstring $useTable;;p">
					<treenode node="modelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f41;415;51;415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f53;415;62;415;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_interactive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f11;156;2;169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Interactive baking function;;d35,156;;b2,0;;m">
				</treenode>
				<treenode node="_makeRecordString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f11;388;2;405;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convert a $records array into a string.&#xA;&#xA;Parameters:&#xA;    array $records - Array of records to be converted to string&#xA;&#xA;Return:&#xA;   A string value of the $records array;;d48,388;;b2,0;;marray $records;;p">
					<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f38;388;46;388;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;136;2;149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Bake All the Fixtures at once. Will only bake fixtures for models that exist.;;d23,136;;b1,0;;m">
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;214;2;265;;;;vpos;;vstring;;r&#xA;Description&#xA;     Assembles and writes a Fixture file&#xA;&#xA;Parameters:&#xA;    string $model - Name of model to bake&#xA;    string $useTable - Name of table to use&#xA;    array $importOptions - Options for public $import&#xA;&#xA;Return:&#xA;   Baked fixture content;;d75,214;;b1,0;;mstring $model;;pstring $useTable;;parray $importOptions;;p">
					<treenode node="importOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f49;214;63;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f22;214;28;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f30;214;39;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;112;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Execution method always used for tasks Handles dispatching to interactive, named, or all processes.;;d27,112;;b1,0;;m">
				</treenode>
				<treenode node="generateFixtureFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;274;2;288;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the fixture file, and write to disk&#xA;&#xA;Parameters:&#xA;    string $model - name of the model being generated&#xA;    string $otherVars - Contents of the fixture file&#xA;&#xA;Return:&#xA;   Content saved into fixture file;;d57,274;;b1,0;;mstring $model;;pstring $otherVars;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f37;274;43;274;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="otherVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f45;274;55;274;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;66;2;104;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,66;;b1,0;;m">
				</treenode>
				<treenode node="getPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;295;2;301;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the path to the fixtures.&#xA;&#xA;Return:&#xA;   Path for the fixtures;;d27,295;;b1,0;;m">
				</treenode>
				<treenode node="importOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;177;2;204;;;;vpos;;varray;;r&#xA;Description&#xA;     Interacts with the User to setup an array of import options. For a fixture.&#xA;&#xA;Parameters:&#xA;    string $modelName - Name of model you are dealing with&#xA;&#xA;Return:&#xA;   Array of import options;;d43,177;;b1,0;;mstring $modelName;;p">
					<treenode node="modelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f31;177;41;177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f11;47;19;47;;;;vposCakeSchema;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;40;13;40;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php;f8;33;14;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FixtureTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f0;32;1;452;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     FixtureTaskTest class;;d43,32;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;53;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,53;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;76;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,76;;b1,0;;m">
				</treenode>
				<treenode node="testAllWithCountAndRecordsFlags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;292;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using all() with -count and -records;;d51,292;;b1,0;;m">
				</treenode>
				<treenode node="testAllWithSchemaImport;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;318;2;337;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using all() with -schema;;d43,318;;b1,0;;m">
				</treenode>
				<treenode node="testBake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;366;2;393;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that bake works;;d28,366;;b1,0;;m">
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;86;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that initialize sets the path;;d33,86;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;344;2;359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test interactive mode of execute;;d42,344;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;266;2;285;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute runs all() when args[0] = all;;d38,266;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithNamedModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;249;2;259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute passes runs bake depending with named model.;;d45,249;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateFixtureFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;417;2;430;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that file generation includes headers and correct path for plugins.;;d43,417;;b1,0;;m">
				</treenode>
				<treenode node="testGeneratePluginFixtureFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;437;2;450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generating files into plugins.;;d49,437;;b1,0;;m">
				</treenode>
				<treenode node="testImportOptionsAlternateConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;209;2;213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that connection gets set to the import options when a different connection is used.;;d56,209;;b1,0;;m">
				</treenode>
				<treenode node="testImportOptionsNothing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;113;2;121;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test importOptions choosing nothing.;;d44,113;;b1,0;;m">
				</treenode>
				<treenode node="testImportOptionsSchemaRecords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;99;2;106;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test import option array generation;;d50,99;;b1,0;;m">
				</treenode>
				<treenode node="testImportOptionsTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;170;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test importOptions choosing from Table.;;d42,170;;b1,0;;m">
				</treenode>
				<treenode node="testImportOptionsWithCommandLineOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;128;2;134;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test importOptions with overwriting command line options.;;d59,128;;b1,0;;m">
				</treenode>
				<treenode node="testImportOptionsWithRecords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;156;2;163;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test importOptions with records.;;d48,156;;b1,0;;m">
				</treenode>
				<treenode node="testImportOptionsWithSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;141;2;149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test importOptions with schema.;;d47,141;;b1,0;;m">
				</treenode>
				<treenode node="testImportRecordsFromDatabaseWithConditionsPoo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;184;2;202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generating a fixture with database conditions.;;d66,184;;b1,0;;m">
				</treenode>
				<treenode node="testImportRecordsNoEscaping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;220;2;242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that fixture data doesn't get overly escaped.;;d47,220;;b1,0;;m">
				</treenode>
				<treenode node="testRecordGenerationForBinaryAndFloat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;400;2;410;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test record generation with float and binary types;;d57,400;;b1,0;;m">
				</treenode>
				<treenode node="backupGlobals;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;46;22;46;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php;f8;39;17;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FixturizedTestCase;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php;f0;6;1;59;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     This class helps in testing the life-cycle of fixtures inside a CakeTestCase;;d46,6;;b0,0;;m">
				<treenode node="testFixtureLoadOnDemand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php;f8;28;2;30;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that it is possible to load fixtures on demand;;d43,28;;b1,0;;m">
				</treenode>
				<treenode node="testFixturePresent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php;f8;19;2;21;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the shared fixture is correctly set;;d38,19;;b1,0;;m">
				</treenode>
				<treenode node="testSkipIfFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php;f8;46;2;48;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a test is not marked as skipped using skipIf and its first parameter evaluates to false;;d35,46;;b1,0;;m">
				</treenode>
				<treenode node="testSkipIfTrue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php;f8;37;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a test is marked as skipped using skipIf and its first parameter evaluates to true;;d34,37;;b1,0;;m">
				</treenode>
				<treenode node="testThrowException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php;f8;56;2;58;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a fixtures are unoaded even if the test throws exceptions;;d38,56;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php;f8;12;17;12;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FlagTree;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2659;1;2667;;;;vpos;;vNumberTree;;c;;r&#xA;Description&#xA;     FlagTree class;;d34,2659;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2666;13;2666;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FlagTreeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FlagTreeFixture.php;f0;27;1;42;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Flag Tree Test Fixture;;d46,27;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FlagTreeFixture.php;f8;34;15;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Folder;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f0;22;1;867;;;;vpos;;v;;r&#xA;Description&#xA;     Folder structure browser, lists folders and files. Provides an Object interface for Common directory related tasks.;;d13,22;;b0,0;;m">
				<treenode node="MERGE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f6;30;12;30;;;;vposstring;;v;;r'merge';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="OVERWRITE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f6;38;16;38;;;;vposstring;;v;;r'overwrite';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="SKIP;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f6;46;11;46;;;;vposstring;;v;;r'skip';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;109;2;126;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.&#xA;&#xA;Parameters:&#xA;    string $path - Path to folder&#xA;    bool $create - Create folder if not found&#xA;    string|bool $mode - Mode (CHMOD) to apply to created folder, false to ignore;;d76,109;;b1,0;;mstring $path;;pbool $create;;pstring|bool $mode;;p">
					<treenode node="create;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f44;109;51;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f61;109;66;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f29;109;34;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_findRecursive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f11;243;2;259;;;;vpos;;varray;;r&#xA;Description&#xA;     Private helper function for findRecursive.&#xA;&#xA;Parameters:&#xA;    string $pattern - Pattern to match against&#xA;    bool $sort - Whether results should be sorted&#xA;&#xA;Return:&#xA;   Files matching pattern;;d60,243;;b2,0;;mstring $pattern;;pbool $sort;;p">
					<treenode node="pattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f35;243;43;243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sort;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f45;243;50;243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addPathElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;349;2;353;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns $path with $element added, with correct slash in-between.&#xA;&#xA;Parameters:&#xA;    string $path - Path&#xA;    string|array $element - Element to add at end of path&#xA;&#xA;Return:&#xA;   Combined path;;d56,349;;b1,5;;mstring $path;;pstring|array $element;;p">
					<treenode node="element;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f46;349;54;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f39;349;44;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;145;2;151;;;;vpos;;vstring;;r&#xA;Description&#xA;     Change directory to $path.&#xA;&#xA;Parameters:&#xA;    string $path - Path to the directory to change to&#xA;&#xA;Return:&#xA;   The new path;;d27,145;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f20;145;25;145;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="chmod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;399;2;443;;;;vpos;;vbool;;r&#xA;Description&#xA;     Change the mode on a directory structure recursively. This includes changing the mode on files as well.&#xA;&#xA;Parameters:&#xA;    string $path - The path to chmod&#xA;    int $mode - Octal value, e&#xA;    bool $recursive - Chmod recursively, set to false to only change the current directory&#xA;    array $exceptions - Array of files, directories to skip&#xA;&#xA;Return:&#xA;   Success;;d87,399;;b1,0;;mstring $path;;pint $mode;;pbool $recursive;;parray $exceptions;;p">
					<treenode node="exceptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f64;399;75;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f30;399;35;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f23;399;28;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f45;399;55;399;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="copy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;667;2;752;;;;vpos;;vbool;;r&#xA;Description&#xA;     Recursive directory copy.&#xA;&#xA;Parameters:&#xA;    array|string $options - Either an array of options (see above) or a string of the destination directory&#xA;&#xA;Return:&#xA;   Success;;d32,667;;b1,0;;marray|string $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f22;667;30;667;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="correctSlashFor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;323;2;325;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a correct set of slashes for given $path. (\\ for Windows paths and / for other paths.)&#xA;&#xA;Parameters:&#xA;    string $path - Path to check&#xA;&#xA;Return:&#xA;   Set of slashes (&quot;\\&quot; or &quot;/&quot;);;d47,323;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f40;323;45;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;522;2;556;;;;vpos;;vbool;;r&#xA;Description&#xA;     Create a directory structure recursively.&#xA;&#xA;Parameters:&#xA;    string $pathname - The directory structure to create&#xA;    int $mode - octal value 0755&#xA;&#xA;Return:&#xA;   Returns TRUE on success, FALSE on failure;;d50,522;;b1,0;;mstring $pathname;;pint $mode;;p">
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f35;522;40;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pathname;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f24;522;33;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;601;2;650;;;;vpos;;vbool;;r&#xA;Description&#xA;     Recursively Remove directories if the system allows.&#xA;&#xA;Parameters:&#xA;    string $path - Path of directory to delete&#xA;&#xA;Return:&#xA;   Success;;d38,601;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f24;601;29;601;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dirsize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;564;2;592;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the size in bytes of this Folder and its contents.&#xA;&#xA;Return:&#xA;   size in bytes of current folder;;d27,564;;b1,0;;m">
				</treenode>
				<treenode node="errors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;807;2;813;;;;vpos;;varray;;r&#xA;Description&#xA;     get error from latest method&#xA;&#xA;Parameters:&#xA;    bool $reset - Reset error stack after reading;;d39,807;;b1,0;;mbool $reset;;p">
					<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f24;807;30;807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;213;2;216;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of all matching files in current directory.&#xA;&#xA;Parameters:&#xA;    string $regexpPattern - Preg_match pattern (Defaults to: &#xA;    bool $sort - Whether results should be sorted&#xA;&#xA;Return:&#xA;   Files that match given pattern;;d60,213;;b1,0;;mstring $regexpPattern;;pbool $sort;;p">
					<treenode node="regexpPattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f22;213;36;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sort;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f45;213;50;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findRecursive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;226;2;234;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of all matching files in and below current directory.&#xA;&#xA;Parameters:&#xA;    string $pattern - Preg_match pattern (Defaults to: &#xA;    bool $sort - Whether results should be sorted&#xA;&#xA;Return:&#xA;   Files matching $pattern;;d63,226;;b1,0;;mstring $pattern;;pbool $sort;;p">
					<treenode node="pattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f31;226;39;226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sort;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f48;226;53;226;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inCakePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;362;2;367;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the File is in a given CakePath.&#xA;&#xA;Parameters:&#xA;    string $path - The path to check;;d40,362;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f28;362;33;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;377;2;387;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the File is in given path.&#xA;&#xA;Parameters:&#xA;    string $path - The path to check that the current pwd() resides with in&#xA;    bool $reverse - Reverse the search, check that pwd() resides within $path;;d54,377;;b1,0;;mstring $path;;pbool $reverse;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f24;377;29;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="reverse;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f36;377;44;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAbsolute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;279;2;288;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given $path is an absolute path.&#xA;&#xA;Parameters:&#xA;    string $path - Path to check&#xA;&#xA;Return:&#xA;   true if path is absolute;;d42,279;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f35;279;40;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isRegisteredStreamWrapper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;296;2;303;;;;vpos;;vboo;;r&#xA;Description&#xA;     Returns true if given $path is a registered stream wrapper.&#xA;&#xA;Parameters:&#xA;    string $path - Path to check&#xA;&#xA;Return:&#xA;   true If path is registered stream wrapper;;d57,296;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f50;296;55;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isSlashTerm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;862;2;865;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given $path ends in a slash (i.e. is slash-terminated).&#xA;&#xA;Parameters:&#xA;    string $path - Path to check&#xA;&#xA;Return:&#xA;   true if path ends with slash, false otherwise;;d43,862;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f36;862;41;862;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isWindowsPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;268;2;270;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given $path is a Windows path.&#xA;&#xA;Parameters:&#xA;    string $path - Path to check&#xA;&#xA;Return:&#xA;   true if windows path, false otherwise;;d45,268;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f38;268;43;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="messages;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;792;2;798;;;;vpos;;varray;;r&#xA;Description&#xA;     get messages from latest method&#xA;&#xA;Parameters:&#xA;    bool $reset - Reset message stack after reading;;d41,792;;b1,0;;mbool $reset;;p">
					<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f26;792;32;792;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="move;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;769;2;783;;;;vpos;;vbool;;r&#xA;Description&#xA;     Recursive directory move.&#xA;&#xA;Parameters:&#xA;    array $options - (to, from, chmod, skip, scheme)&#xA;&#xA;Return:&#xA;   Success;;d32,769;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f22;769;30;769;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normalizePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;312;2;314;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a correct set of slashes for given $path. (\\ for Windows paths and / for other paths.)&#xA;&#xA;Parameters:&#xA;    string $path - Path to check&#xA;&#xA;Return:&#xA;   Set of slashes (&quot;\\&quot; or &quot;/&quot;);;d45,312;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f38;312;43;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pwd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;134;2;136;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return current path.&#xA;&#xA;Return:&#xA;   Current path;;d23,134;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;164;2;203;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns an array of the contents of the current directory. The returned array holds two arrays: One of directories and one of files.&#xA;&#xA;Parameters:&#xA;    bool $sort - Whether you want the results sorted, set this and the sort property&#xA;    array|bool $exceptions - Either an array or boolean true will not grab dot files&#xA;    bool $fullPath - True returns the full path&#xA;&#xA;Return:&#xA;   Contents of current directory as an array, an empty array on failure;;d76,164;;b1,0;;mbool $sort;;parray|bool $exceptions;;pbool $fullPath;;p">
					<treenode node="exceptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f36;164;47;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fullPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f57;164;66;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sort;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f22;164;27;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="realpath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;822;2;853;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the real path (taking &quot;..&quot; and such into account)&#xA;&#xA;Parameters:&#xA;    string $path - Path to resolve&#xA;&#xA;Return:&#xA;   The resolved path;;d33,822;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f26;822;31;822;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slashTerm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f15;334;2;339;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns $path with added terminating slash (corrected for Windows or other OS).&#xA;&#xA;Parameters:&#xA;    string $path - Path to check&#xA;&#xA;Return:&#xA;   Path with ending slash;;d41,334;;b1,5;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f34;334;39;334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;455;2;508;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns an array of nested directories and files in each directory&#xA;&#xA;Parameters:&#xA;    string $path - the directory path to build the tree from&#xA;    array|bool $exceptions - Either an array of files/folder to exclude&#xA;    string $type - either 'file' or 'dir'&#xA;&#xA;Return:&#xA;   array of nested directories and files in each directory;;d71,455;;b1,0;;mstring $path;;parray|bool $exceptions;;pstring $type;;p">
					<treenode node="exceptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f36;455;47;455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f22;455;27;455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f57;455;62;455;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_directories;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f11;92;24;92;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_errors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f11;85;19;85;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_files;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f11;99;18;99;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_messages;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f11;78;21;78;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;71;13;71;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;54;13;54;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="sort;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php;f8;63;13;63;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FolderTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f0;26;1;1229;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     FolderTest class;;d38,26;;b0,0;;m">
				<treenode node="_setupFilesystem;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f11;1064;2;1093;;;;vpos;;varray;;r&#xA;Description&#xA;     Setup filesystem for copy tests $path: folder_test/ - folder1/file1.php - folder1/folderA/fileA.php - folder2/file2.php - folder2/folderB/fileB.php - folder3/&#xA;&#xA;Return:&#xA;   Filenames to extract in the test methods;;d39,1064;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;53;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp clearstatcache() to flush file descriptors.;;d25,53;;b1,0;;m">
				</treenode>
				<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f15;35;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Save the directory names in TMP and make sure default directories exist;;d43,35;;b1,5;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;63;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Restore the TMP directory to its original state.;;d28,63;;b1,0;;m">
				</treenode>
				<treenode node="testAddPathElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;361;2;380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Adding path elements to a path;;d38,361;;b1,0;;m">
				</treenode>
				<treenode node="testBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;86;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBasic method;;d29,86;;b1,0;;m">
				</treenode>
				<treenode node="testChmod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;288;2;322;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testChmod method;;d29,288;;b1,0;;m">
				</treenode>
				<treenode node="testConstructWithNonExistentPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;775;2;780;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConstructWithNonExistentPath method;;d52,775;;b1,0;;m">
				</treenode>
				<treenode node="testCopy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;897;2;916;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCopy method;;d28,897;;b1,0;;m">
				</treenode>
				<treenode node="testCopyWithMerge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;926;2;945;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCopyWithMerge method;;d37,926;;b1,0;;m">
				</treenode>
				<treenode node="testCopyWithOverwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;1024;2;1051;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCopyWithOverwrite;;d41,1024;;b1,0;;m">
				</treenode>
				<treenode node="testCopyWithSkip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;957;2;992;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCopyWithSkip method;;d36,957;;b1,0;;m">
				</treenode>
				<treenode node="testCopyWithSkipFileSkipped;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;999;2;1014;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that SKIP mode skips files too.;;d47,999;;b1,0;;m">
				</treenode>
				<treenode node="testCorrectSlashFor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;624;2;636;;;;vpos;;vvoid;;r&#xA;Description&#xA;     correctSlashFor method;;d39,624;;b1,0;;m">
				</treenode>
				<treenode node="testCreateRelative;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;177;2;186;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that relative paths to create() are added to cwd.;;d38,177;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithTrailingDs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;160;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that creation of folders with trailing ds works;;d44,160;;b1,0;;m">
				</treenode>
				<treenode node="testCreation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;140;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test creation of single and multiple paths.;;d32,140;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;855;2;887;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDelete method;;d30,855;;b1,0;;m">
				</treenode>
				<treenode node="testDirSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;787;2;799;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDirSize method;;d31,787;;b1,0;;m">
				</treenode>
				<treenode node="testFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;666;2;711;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFind method;;d28,666;;b1,0;;m">
				</treenode>
				<treenode node="testFindRecursive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;718;2;768;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindRecursive method;;d37,718;;b1,0;;m">
				</treenode>
				<treenode node="testFolderRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;387;2;398;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFolderRead method;;d34,387;;b1,0;;m">
				</treenode>
				<treenode node="testFolderReadWithHiddenFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;405;2;433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFolderReadWithHiddenFiles method;;d49,405;;b1,0;;m">
				</treenode>
				<treenode node="testFolderTree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;440;2;481;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFolderTree method;;d34,440;;b1,0;;m">
				</treenode>
				<treenode node="testFolderTreeWithHiddenFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;488;2;540;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFolderTreeWithHiddenFiles method;;d49,488;;b1,0;;m">
				</treenode>
				<treenode node="testInCakePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;643;2;659;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInCakePath method;;d34,643;;b1,0;;m">
				</treenode>
				<treenode node="testInPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;110;2;133;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInPath method;;d30,110;;b1,0;;m">
				</treenode>
				<treenode node="testIsAbsolute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;559;2;576;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsAbsolute method;;d34,559;;b1,0;;m">
				</treenode>
				<treenode node="testIsSlashTerm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;583;2;588;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsSlashTerm method;;d35,583;;b1,0;;m">
				</treenode>
				<treenode node="testMove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;1105;2;1161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMove method;;d28,1105;;b1,0;;m">
				</treenode>
				<treenode node="testMoveWithSkip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;1173;2;1227;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveWithSkip method;;d36,1173;;b1,0;;m">
				</treenode>
				<treenode node="testNormalizePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;605;2;617;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNormalizePath method;;d37,605;;b1,0;;m">
				</treenode>
				<treenode node="testOperations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;217;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOperations method;;d34,217;;b1,0;;m">
				</treenode>
				<treenode node="testRealPathForWebroot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;329;2;332;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRealPathForWebroot method;;d42,329;;b1,0;;m">
				</treenode>
				<treenode node="testRecursiveCreateFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;193;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test recursive directory create failure.;;d46,193;;b1,0;;m">
				</treenode>
				<treenode node="testReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;806;2;848;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that errors and messages can be resetted;;d29,806;;b1,0;;m">
				</treenode>
				<treenode node="testSlashTerm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;595;2;598;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStatic method;;d33,595;;b1,0;;m">
				</treenode>
				<treenode node="testWindowsPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;547;2;552;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWindowsPath method;;d35,547;;b1,0;;m">
				</treenode>
				<treenode node="testZeroAsDirectory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f8;339;2;354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testZeroAsDirectory method;;d39,339;;b1,0;;m">
				</treenode>
				<treenode node="_tmp;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php;f18;28;23;28;;;;vpos;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="ForbiddenException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;116;1;131;;;;vpos;;vHttpException;;c;;r&#xA;Description&#xA;     Represents an HTTP 403 error.;;d47,116;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;124;2;129;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - If no message is given 'Forbidden' will be the message&#xA;    int $code - Status code, defaults to 403;;d59,124;;b1,0;;mstring $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f46;124;51;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;124;37;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="FormAuthenticate;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f0;35;1;81;;;;vpos;;vBaseAuthenticate;;c;;r&#xA;Description&#xA;     An authentication adapter for AuthComponent. Provides the ability to authenticate using POST data. Can be used by configuring AuthComponent to use it via the AuthComponent::$authenticate setting.;;d48,35;;b0,0;;m">
				<treenode node="_checkFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f11;45;2;56;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks the fields to ensure they are supplied.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - The request that contains login information&#xA;    string $model - The model used for login verification&#xA;    array $fields - The fields to be checked&#xA;&#xA;Return:&#xA;   False if the fields have not been supplied;;d72,45;;b2,0;;mCakeRequest $request;;pstring $model;;parray $fields;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f63;45;70;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f55;45;61;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f45;45;53;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="authenticate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f8;67;2;79;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Authenticates the identity contained in a request. Will use the `settings.userModel`, and `settings.fields` to find POST data that is used to find a matching record in the `settings.userModel`. Will return false if there is no post data, either username or password is missing, or if the scope conditions have not been met.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - The request that contains login information&#xA;    CakeResponse $response - Unused response object&#xA;&#xA;Return:&#xA;   False on login failure;;d76,67;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f42;67;50;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php;f65;67;74;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="FormAuthenticateTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f0;29;1;344;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for FormAuthentication;;d48,29;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;43;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,43;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateFieldsAreNotString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;157;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test authenticate field is not string;;d54,157;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateInjection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;186;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d45,186;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;75;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d42,75;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoPassword;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;97;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d46,97;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateNoUsername;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;86;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the authenticate method;;d46,86;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticatePasswordIsEmptyString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;124;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test for password as empty string with _checkFields() call skipped Refs https://github.com/cakephp/cakephp/pull/2441;;d57,124;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticatePasswordIsFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;108;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test authenticate password is false method;;d51,108;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateScopeFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;222;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test scope failure.;;d45,222;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;201;2;215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test authenticate success;;d43,201;;b1,0;;m">
				</treenode>
				<treenode node="testAuthenticateUsernameZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;238;2;255;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that username of 0 works.;;d48,238;;b1,0;;m">
				</treenode>
				<treenode node="testConstructor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;61;2;68;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test applying settings in the constructor;;d35,61;;b1,0;;m">
				</treenode>
				<treenode node="testPasswordHasherSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;301;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test password hasher settings;;d46,301;;b1,0;;m">
				</treenode>
				<treenode node="testPluginModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;262;2;294;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a model in a plugin.;;d35,262;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php;f8;36;17;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FormHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f0;30;1;3039;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Form helper library.;;d35,30;;b0,0;;m">
				<treenode node="SECURE_SKIP;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f6;62;18;62;;;;vposstring;;v;;r'skip';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1624;2;1637;;;;vpos;;vstring;;r&#xA;Description&#xA;     Missing method handler - implements various simple input types. Is used to create inputs of various types. e.g. `$this-&gt;Form-&gt;text();s` will create `&lt;input type=&quot;text&quot; /&gt;` while `$this-&gt;Form-&gt;range();s` will create `&lt;input type=&quot;range&quot; /&gt;`&#xA;&#xA;Parameters:&#xA;    string $method - Method name / input type to make&#xA;    array $params - Parameters for the method call&#xA;&#xA;Return:&#xA;   Formatted input method;;d42,1624;;b1,0;;mstring $method;;parray $params;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;1624;31;1624;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f33;1624;40;1624;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;133;2;136;;;;vpos;;v;;r&#xA;Description&#xA;     Copies the validationErrors variable from the View object into this instance&#xA;&#xA;Parameters:&#xA;    View $View - The View this helper is being attached to&#xA;    array $settings - Configuration settings for the helper;;d62,133;;b1,0;;mView $View;;parray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f41;133;50;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f34;133;39;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_csrfField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;479;2;492;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return a CSRF input if the _Token is present. Used to secure forms in conjunction with SecurityComponent;;d33,479;;b2,0;;m">
				</treenode>
				<treenode node="_dateTimeSelected;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;2391;2;2406;;;;vpos;;varray;;r&#xA;Description&#xA;     Selects values for dateTime selects.&#xA;&#xA;Parameters:&#xA;    string $select - Name of element field&#xA;    string $fieldName - Name of fieldName being generated ex&#xA;    array $attributes - Array of attributes, must contain 'empty' key&#xA;&#xA;Return:&#xA;   Attributes array with currently selected value;;d72,2391;;b2,0;;mstring $select;;pstring $fieldName;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f59;2391;70;2391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f47;2391;57;2391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="select;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f38;2391;45;2391;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_divOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1306;2;1331;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate div options for input&#xA;&#xA;Parameters:&#xA;    array $options - Options list;;d42,1306;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f32;1306;40;1306;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_extractOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1341;2;1346;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Extracts a single option from an options array.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the option to pull out&#xA;    array $options - The array of options you want to extract&#xA;    mixed $default - The default option value&#xA;&#xA;Return:&#xA;   the contents of the option or default;;d69,1341;;b2,0;;mstring $name;;parray $options;;pmixed $default;;p">
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f52;1341;60;1341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f35;1341;40;1341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f42;1341;50;1341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_generateOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;2835;2;2922;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates option lists for common &lt;select /&gt; menus&#xA;&#xA;Parameters:&#xA;    string $name - List type name&#xA;    array $options - Options list;;d64,2835;;b2,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f37;2835;42;2835;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f44;2835;52;2835;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getDateTimeValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;2630;2;2668;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the value for a datetime selected value&#xA;&#xA;Parameters:&#xA;    string|array $value - The selected value&#xA;    int $timeFormat - The time format&#xA;&#xA;Return:&#xA;   Array of selected value;;d59,2630;;b2,0;;mstring|array $value;;pint $timeFormat;;p">
					<treenode node="timeFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f46;2630;57;2630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f38;2630;44;2630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1240;2;1251;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate format options&#xA;&#xA;Parameters:&#xA;    array $options - Options list;;d41,1240;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f31;1240;39;1240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1071;2;1103;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates an input element&#xA;&#xA;Parameters:&#xA;    array $args - The options for the input element&#xA;&#xA;Return:&#xA;   The generated input element;;d37,1071;;b2,0;;marray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f30;1071;35;1071;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getLabel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1260;2;1274;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generate label for input&#xA;&#xA;Parameters:&#xA;    string $fieldName - Field name&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   |string false or Generated label element;;d52,1260;;b2,0;;mstring $fieldName;;parray $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f30;1260;40;1260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f42;1260;50;1260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;145;2;180;;;;vpos;;vModel;;r&#xA;Description&#xA;     Guess the location for a model based on its name and tries to create a new instance or get an already created instance of the model&#xA;&#xA;Parameters:&#xA;    string $model - Model name&#xA;&#xA;Return:&#xA;   |null Model instance;;d38,145;;b2,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f30;145;36;145;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_initInputField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;2941;2;2987;;;;vpos;;varray;;r&#xA;Description&#xA;     Sets field defaults and adds field to form security input hash. Will also add a 'form-error' class if the field contains validation errors.&#xA;&#xA;Parameters:&#xA;    string $field - Name of the field to initialize options for&#xA;    array $options - Array of options to append options into&#xA;&#xA;Return:&#xA;   Array of options for the input;;d64,2941;;b2,0;;mstring $field;;parray $options;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f36;2941;42;2941;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f44;2941;52;2941;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_inputLabel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1360;2;1413;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a label for an input() call.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Field name&#xA;    string|array $label - Label text or array with text and options&#xA;    array $options - Options for the label element&#xA;&#xA;Return:&#xA;   Generated label element;;d62,1360;;b2,0;;mstring $fieldName;;pstring|array $label;;parray $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f32;1360;42;1360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="label;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f44;1360;50;1360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f52;1360;60;1360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_introspectModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;202;2;251;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Inspects the model properties to extract information from them. Currently it can extract information from the the fields, the primary key and required fields&#xA;&#xA;Parameters:&#xA;    string $model - name of the model to extract information from&#xA;    string $key - name of the special information key to obtain (key, fields, validates, errors)&#xA;    string $field - name of the model field to get information from&#xA;&#xA;Return:&#xA;   information extracted for the special key and field in a model;;d66,202;;b2,0;;mstring $model;;pstring $key;;pstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f51;202;57;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f45;202;49;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f37;202;43;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_isRequiredField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;259;2;274;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns if a field is required to be filled based on validation properties from the validating object.&#xA;&#xA;Parameters:&#xA;    CakeValidationSet $validationRules - Validation rules set&#xA;&#xA;Return:&#xA;   true if field is required to be filled, false otherwise;;d55,259;;b2,0;;mCakeValidationSet $validationRules;;p">
					<treenode node="validationRules;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f37;259;53;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_lastAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;3014;2;3019;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the last created form action.&#xA;&#xA;Parameters:&#xA;    string|array $url - URL;;d38,3014;;b2,0;;mstring|array $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f32;3014;36;3014;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_magicOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1168;2;1232;;;;vpos;;varray;;r&#xA;Description&#xA;     Magically set option type and corresponding options&#xA;&#xA;Parameters:&#xA;    array $options - Options list;;d44,1168;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f34;1168;42;1168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_maxLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1282;2;1298;;;;vpos;;varray;;r&#xA;Description&#xA;     Calculates maxlength option&#xA;&#xA;Parameters:&#xA;    array $options - Options list;;d41,1282;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f31;1282;39;1282;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;2678;2;2710;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the input field name for the current tag&#xA;&#xA;Parameters:&#xA;    array $options - Options list&#xA;    string $field - Field name&#xA;    string $key - Key name;;d76,2678;;b2,0;;marray $options;;pstring $field;;pstring $key;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f46;2678;52;2678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f61;2678;65;2678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f26;2678;34;2678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_optionsOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1144;2;1160;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates list of options for multiple select&#xA;&#xA;Parameters:&#xA;    array $options - Options list;;d46,1144;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f36;1144;44;1144;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;1111;2;1136;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates input options array&#xA;&#xA;Parameters:&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   Options;;d44,1111;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f34;1111;42;1111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_secure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;642;2;669;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Determine which fields of a form should be used for hash. Populates $this-&gt;fields&#xA;&#xA;Parameters:&#xA;    bool $lock - Whether this field should be part of the validation&#xA;    string|array $field - Reference to field to be secured&#xA;    mixed $value - Field value, if value should not be tampered with;;d65,642;;b2,0;;mbool $lock;;pstring|array $field;;pmixed $value;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f35;642;41;642;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="lock;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f28;642;33;642;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f50;642;56;642;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_secureFieldName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;2998;2;3006;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the field name for use with _secure().&#xA;&#xA;Parameters:&#xA;    array $options - An array of options possibly containing a name key&#xA;&#xA;Return:&#xA;   |null;;d47,2998;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f37;2998;45;2998;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_selectOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;2721;2;2826;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of formatted OPTION/OPTGROUP elements&#xA;&#xA;Parameters:&#xA;    array $elements - Elements to format&#xA;    array $parents - Parents for OPTGROUP&#xA;    bool $showParents - Whether to show parents&#xA;    array $attributes - HTML attributes;;d120,2721;;b2,0;;marray $elements;;parray $parents;;pbool $showParents;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f97;2721;108;2721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="elements;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f35;2721;44;2721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parents;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f56;2721;64;2721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="showParents;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f76;2721;88;2721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="button;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1727;2;1737;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a `&lt;button&gt;` tag. The type attribute defaults to `type=&quot;submit&quot;` You can change it to a different value by using `$options['type']`.&#xA;&#xA;Parameters:&#xA;    string $title - The button's caption&#xA;    array $options - Array of options and HTML attributes&#xA;&#xA;Return:&#xA;   A HTML button tag;;d52,1727;;b1,0;;mstring $title;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f32;1727;40;1727;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;1727;30;1727;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="checkbox;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1434;2;1467;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a checkbox input widget.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Name of a field, like this &quot;Modelname&#xA;    array $options - Array of HTML attributes&#xA;&#xA;Return:&#xA;   An HTML text input element;;d58,1434;;b1,0;;mstring $fieldName;;parray $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f26;1434;36;1434;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f38;1434;46;1434;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;334;2;471;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns an HTML FORM element.&#xA;&#xA;Parameters:&#xA;    mixed $model - The model name for which the form is being defined&#xA;    array $options - An array of html attributes and options&#xA;&#xA;Return:&#xA;   A formatted opening FORM tag;;d59,334;;b1,0;;mmixed $model;;parray $options;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;334;30;334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f39;334;47;334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dateTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2477;2;2621;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a set of SELECT elements for a full datetime setup: day, month and year, and then time.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Prefix name for the SELECT element&#xA;    string $dateFormat - DMY, MDY, YMD, or null to not generate date inputs&#xA;    string $timeFormat - 12, 24, or null to not generate time inputs&#xA;    array $attributes - Array of Attributes&#xA;&#xA;Return:&#xA;   Generated set of select boxes for the date and time formats chosen;;d102,2477;;b1,0;;mstring $fieldName;;pstring $dateFormat;;pstring $timeFormat;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f79;2477;90;2477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dateFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f38;2477;49;2477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f26;2477;36;2477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timeFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f59;2477;70;2477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="day;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2180;2;2194;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a SELECT element for days.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Prefix name for the SELECT element&#xA;    array $attributes - HTML attributes for the select element&#xA;&#xA;Return:&#xA;   A generated day select box;;d63,2180;;b1,0;;mstring $fieldName;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f40;2180;51;2180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f21;2180;31;2180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="domIdSuffix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2150;2;2164;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a valid DOM ID suffix from a string. Also avoids collisions when multiple values are coverted to the same suffix by appending a numeric value.&#xA;&#xA;Parameters:&#xA;    string $value - The value that should be transferred into a DOM ID suffix&#xA;    string $type - Doctype to use&#xA;&#xA;Return:&#xA;   DOM ID;;d54,2150;;b1,0;;mstring $value;;pstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f37;2150;42;2150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f29;2150;35;2150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="end;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;519;2;549;;;;vpos;;vstring;;r&#xA;Description&#xA;     Closes an HTML form, cleans up values set by FormHelper::create(), and writes hidden input fields where appropriate.&#xA;&#xA;Parameters:&#xA;    string|array $options - as a string will use $options as the value of button,&#xA;    array $secureAttributes - will be passed as html attributes into the hidden input elements generated for the&#xA;&#xA;Return:&#xA;   a closing FORM tag optional submit button;;d67,519;;b1,0;;mstring|array $options;;parray $secureAttributes;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f21;519;29;519;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secureAttributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f38;519;55;519;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="error;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;700;2;772;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted error message for given FORM field, NULL if no errors.&#xA;&#xA;Parameters:&#xA;    string $field - A field name, like &quot;Modelname&#xA;    string|array $text - Error message as string or array of messages&#xA;    array $options - Rendering options for &lt;div /&gt; wrapper tag&#xA;&#xA;Return:&#xA;   |null If there are errors this method returns an error message, otherwise null;;d65,700;;b1,0;;mstring $field;;pstring|array $text;;parray $options;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f23;700;29;700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f45;700;53;700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f31;700;36;700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="file;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1698;2;1712;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates file input widget.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Name of a field, in the form &quot;Modelname&#xA;    array $options - Array of HTML attributes&#xA;&#xA;Return:&#xA;   A generated file input;;d54,1698;;b1,0;;mstring $fieldName;;parray $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f22;1698;32;1698;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f34;1698;42;1698;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hidden;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1673;2;1688;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a hidden input field.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Name of a field, in the form of &quot;Modelname&#xA;    array $options - Array of HTML attributes&#xA;&#xA;Return:&#xA;   A generated hidden input;;d56,1673;;b1,0;;mstring $fieldName;;parray $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;1673;34;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f36;1673;44;1673;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hour;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2311;2;2342;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a SELECT element for hours.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Prefix name for the SELECT element&#xA;    bool $format24Hours - True for 24 hours format&#xA;    array $attributes - List of HTML attributes&#xA;&#xA;Return:&#xA;   Completed hour select input;;d81,2311;;b1,0;;mstring $fieldName;;pbool $format24Hours;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f58;2311;69;2311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f22;2311;32;2311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format24Hours;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f34;2311;48;2311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="input;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;997;2;1063;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a form input element complete with label and wrapper div&#xA;&#xA;Parameters:&#xA;    string $fieldName - This should be &quot;Modelname&#xA;    array $options - Each type of input takes different options&#xA;&#xA;Return:&#xA;   Completed form widget;;d55,997;;b1,0;;mstring $fieldName;;parray $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f23;997;33;997;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f35;997;43;997;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inputDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;3028;2;3037;;;;vpos;;varray;;r&#xA;Description&#xA;     Set/Get inputDefaults for form elements&#xA;&#xA;Parameters:&#xA;    array $defaults - New default values&#xA;    bool $merge - Merge with current defaults&#xA;&#xA;Return:&#xA;   inputDefaults;;d65,3028;;b1,0;;marray $defaults;;pbool $merge;;p">
					<treenode node="defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f31;3028;40;3028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f49;3028;55;3028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inputs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;883;2;962;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a set of inputs for `$fields`. If $fields is null the fields of current model will be used.&#xA;&#xA;Parameters:&#xA;    array $fields - An array of fields to generate inputs for, or null&#xA;    array $blacklist - A simple array of fields to not create inputs for&#xA;    array $options - Options array&#xA;&#xA;Return:&#xA;   Completed form inputs;;d79,883;;b1,0;;marray $fields;;parray $blacklist;;parray $options;;p">
					<treenode node="blacklist;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f40;883;50;883;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;883;31;883;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f59;883;67;883;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isFieldError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;678;2;681;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if there is an error for the given field, otherwise false&#xA;&#xA;Parameters:&#xA;    string $field - This should be &quot;Modelname&#xA;&#xA;Return:&#xA;   If there are errors this method returns true, else false;;d38,678;;b1,0;;mstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f30;678;36;678;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="label;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;824;2;854;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted LABEL element for HTML FORMs. Will automatically generate a `for` attribute if one is not provided.&#xA;&#xA;Parameters:&#xA;    string $fieldName - This should be &quot;Modelname&#xA;    string $text - Text that will appear in the label field&#xA;    array|string $options - An array of HTML attributes, or a string, to be used as a class name&#xA;&#xA;Return:&#xA;   The formatted LABEL element;;d76,824;;b1,0;;mstring $fieldName;;pstring $text;;parray|string $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f23;824;33;824;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f56;824;64;824;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f42;824;47;824;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="meridian;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2422;2;2451;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a SELECT element for AM or PM.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Prefix name for the SELECT element&#xA;    array $attributes - Array of Attributes&#xA;&#xA;Return:&#xA;   Completed meridian select input;;d61,2422;;b1,0;;mstring $fieldName;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f38;2422;49;2422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f26;2422;36;2422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="minute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2358;2;2381;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a SELECT element for minutes.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Prefix name for the SELECT element&#xA;    array $attributes - Array of Attributes&#xA;&#xA;Return:&#xA;   Completed minute select input;;d59,2358;;b1,0;;mstring $fieldName;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f36;2358;47;2358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;2358;34;2358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="month;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2271;2;2294;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a SELECT element for months.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Prefix name for the SELECT element&#xA;    array $attributes - Attributes for the select element&#xA;&#xA;Return:&#xA;   A generated month select dropdown;;d58,2271;;b1,0;;mstring $fieldName;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f35;2271;46;2271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f23;2271;33;2271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="postButton;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1756;2;1767;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a `&lt;button&gt;` tag with a surrounding `&lt;form&gt;` that submits via POST.&#xA;&#xA;Parameters:&#xA;    string $title - The button's caption&#xA;    string|array $url - URL as string or array&#xA;    array $options - Array of options and HTML attributes&#xA;&#xA;Return:&#xA;   A HTML button tag;;d62,1756;;b1,0;;mstring $title;;pstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f42;1756;50;1756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f28;1756;34;1756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f36;1756;40;1756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="postLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1797;2;1863;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates an HTML link, but access the URL using the method you specify (defaults to POST). Requires javascript to be enabled in browser.&#xA;&#xA;Parameters:&#xA;    string $title - The content to be wrapped by &lt;a&gt; tags&#xA;    string|array $url - Cake-relative URL or array of URL parameters, or external URL (starts with http://)&#xA;    array $options - Array of HTML attributes&#xA;    bool|string $confirmMessage - JavaScript confirmation message&#xA;&#xA;Return:&#xA;   An `&lt;a /&gt;` element;;d92,1797;;b1,0;;mstring $title;;pstring|array $url;;parray $options;;pbool|string $confirmMessage;;p">
					<treenode node="confirmMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f67;1797;82;1797;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f47;1797;55;1797;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f26;1797;32;1797;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f34;1797;38;1797;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="radio;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1493;2;1601;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a set of radio widgets. Will create a legend and fieldset by default. Use $options to control this&#xA;&#xA;Parameters:&#xA;    string $fieldName - Name of a field, like this &quot;Modelname&#xA;    array $options - Radio button options array&#xA;    array $attributes - Array of HTML attributes, and special attributes above&#xA;&#xA;Return:&#xA;   Completed radio widget set;;d78,1493;;b1,0;;mstring $fieldName;;parray $options;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f55;1493;66;1493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f23;1493;33;1493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f35;1493;43;1493;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="secure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;566;2;606;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a hidden field with a security hash based on the fields used in the form.&#xA;&#xA;Parameters:&#xA;    array|null $fields - If set specifies the list of fields to use when&#xA;    array $secureAttributes - will be passed as html attributes into the hidden&#xA;&#xA;Return:&#xA;   A hidden input field with a security hash;;d72,566;;b1,0;;marray|null $fields;;parray $secureAttributes;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;566;31;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="secureAttributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f43;566;60;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="select;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2028;2;2136;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted SELECT element.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Name attribute of the SELECT&#xA;    array $options - Array of the OPTION elements (as 'value'=&gt;'Text' pairs) to be used in the&#xA;    array $attributes - The HTML attributes of the select element&#xA;&#xA;Return:&#xA;   Formatted SELECT element;;d79,2028;;b1,0;;mstring $fieldName;;parray $options;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f56;2028;67;2028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;2028;34;2028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f36;2028;44;2028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="submit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1893;2;1966;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a submit button element. This method will generate `&lt;input /&gt;` elements that can be used to submit, and reset forms by using $options. image submits can be created by supplying an image path for $caption.&#xA;&#xA;Parameters:&#xA;    string $caption - The label appearing on the button OR if string contains :// or the&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   A HTML submit button;;d61,1893;;b1,0;;mstring $caption;;parray $options;;p">
					<treenode node="caption;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f24;1893;32;1893;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f41;1893;49;1893;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tagIsInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;284;2;306;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns false if given form field described by the current entity has no errors. Otherwise it returns the validation message&#xA;&#xA;Return:&#xA;   Either false when there are no errors, or an array of error;;d32,284;;b1,0;;m">
				</treenode>
				<treenode node="textarea;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;1651;2;1663;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a textarea widget.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Name of a field, in the form &quot;Modelname&#xA;    array $options - Array of HTML attributes, and special options above&#xA;&#xA;Return:&#xA;   A generated HTML text input element;;d58,1651;;b1,0;;mstring $fieldName;;parray $options;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f26;1651;36;1651;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f38;1651;46;1651;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unlockField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;618;2;630;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Add to or get the list of fields that are currently unlocked. Unlocked fields are not included in the field hash used by SecurityComponent unlocking a field once its been added to the list of secured fields will remove it from the list of fields.&#xA;&#xA;Parameters:&#xA;    string $name - The dot separated name for the field&#xA;&#xA;Return:&#xA;   Either null, or the list of fields;;d43,618;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f29;618;34;618;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="year;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;2214;2;2253;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a SELECT element for years&#xA;&#xA;Parameters:&#xA;    string $fieldName - Prefix name for the SELECT element&#xA;    int $minYear - First year in sequence&#xA;    int $maxYear - Last year in sequence&#xA;    array $attributes - Attribute array for the select elements&#xA;&#xA;Return:&#xA;   Completed year select input;;d91,2214;;b1,0;;mstring $fieldName;;pint $minYear;;pint $maxYear;;parray $attributes;;p">
					<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f68;2214;79;2214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f22;2214;32;2214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="maxYear;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f51;2214;59;2214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="minYear;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f34;2214;42;2214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_domIdSuffixes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;117;26;117;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_inputDefaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;83;26;83;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_lastAction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;125;23;125;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_models;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;101;19;101;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;44;20;44;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_unlockedFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f11;93;27;93;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="defaultModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;76;21;76;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;54;15;54;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;37;16;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Html;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f28;27;34;27;;;;vposHtmlHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="requestType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;69;20;69;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validationErrors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php;f8;110;25;110;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FormHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;503;1;10156;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     FormHelperTest class;;d42,503;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;524;2;561;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,524;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;568;2;572;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,568;;b1,0;;m">
				</treenode>
				<treenode node="testBrokenness;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9560;2;9639;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBrokenness method;;d34,9560;;b1,0;;m">
				</treenode>
				<treenode node="testButton;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7621;2;7639;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testButton method;;d30,7621;;b1,0;;m">
				</treenode>
				<treenode node="testButtonUnlockedByDefault;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7646;2;7653;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that button() makes unlocked fields by default.;;d47,7646;;b1,0;;m">
				</treenode>
				<treenode node="testCheckbox;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5845;2;5926;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckbox method;;d32,5845;;b1,0;;m">
				</treenode>
				<treenode node="testCheckboxCheckedOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5947;2;5983;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the checked option for checkboxes.;;d45,5947;;b1,0;;m">
				</treenode>
				<treenode node="testCheckboxCustomNameAttribute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5933;2;5940;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test checkbox() with a custom name attribute;;d51,5933;;b1,0;;m">
				</treenode>
				<treenode node="testCheckboxDefaultValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3562;2;3578;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheckboxDefaultValue method;;d44,3562;;b1,0;;m">
				</treenode>
				<treenode node="testCheckboxDisabling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5990;2;6004;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that disabled attribute works on both the checkbox and hidden input.;;d41,5990;;b1,0;;m">
				</treenode>
				<treenode node="testCheckboxHiddenField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6012;2;6051;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the hidden input for checkboxes can be omitted or set to a specific value.;;d43,6012;;b1,0;;m">
				</treenode>
				<treenode node="testCheckboxZeroValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6058;2;6080;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a checkbox can have 0 for the value and 1 for the hidden input.;;d41,6058;;b1,0;;m">
				</treenode>
				<treenode node="testCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8208;2;8376;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the create() method;;d30,8208;;b1,0;;m">
				</treenode>
				<treenode node="testCreateAutoUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8427;2;8457;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test create() with automatic url generation;;d37,8427;;b1,0;;m">
				</treenode>
				<treenode node="testCreateClearingFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;623;2;627;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that create() clears the fields property so it starts fresh;;d44,623;;b1,0;;m">
				</treenode>
				<treenode node="testCreateCustomRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8464;2;8479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test create() with a custom route;;d41,8464;;b1,0;;m">
				</treenode>
				<treenode node="testCreateEndGetNoSecurity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;608;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormCreateGetNoSecurity method;;d46,608;;b1,0;;m">
				</treenode>
				<treenode node="testCreateNoErrorsWithMockModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8666;2;8679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that create() works without raising errors with a Mock Model;;d51,8666;;b1,0;;m">
				</treenode>
				<treenode node="testCreateOnSubmit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8383;2;8420;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the onsubmit option for create();;d38,8383;;b1,0;;m">
				</treenode>
				<treenode node="testCreatePassedArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8636;2;8659;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that create() doesn't add in extra passed params.;;d40,8636;;b1,0;;m">
				</treenode>
				<treenode node="testCreateQuerystringrequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8560;2;8604;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test base form URL when url param is passed with multiple parameters (&amp;);;d48,8560;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithAcceptCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8538;2;8553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test automatic accept-charset overriding;;d47,8538;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithInputDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8486;2;8531;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that inputDefaults are stored and used.;;d47,8486;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithMultipleIdInData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8612;2;8629;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that create() doesn't cause errors by multiple id's being in the primary key as could happen with multiple select or checkboxes.;;d50,8612;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithSecurity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;581;2;599;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormCreateWithSecurity method;;d42,581;;b1,0;;m">
				</treenode>
				<treenode node="testCustomValidationErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9933;2;9937;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that it is possible to set the validation errors directly in the helper for a field;;d46,9933;;b1,0;;m">
				</treenode>
				<treenode node="testDateTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6089;2;6441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateTime method;;d32,6089;;b1,0;;m">
				</treenode>
				<treenode node="testDateTimeAllZeros;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6524;2;6536;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateTime all zeros;;d40,6524;;b1,0;;m">
				</treenode>
				<treenode node="testDateTimeEmptyAsArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6543;2;6575;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateTimeEmptyAsArray;;d44,6543;;b1,0;;m">
				</treenode>
				<treenode node="testDateTimeLabelIdMatchesFirstInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6672;2;6681;;;;vpos;;vvoid;;r&#xA;Description&#xA;     When changing the date format, the label should always focus the first select box when clicked.;;d56,6672;;b1,0;;m">
				</treenode>
				<treenode node="testDateTimeNoErrorsOnEmptyData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6475;2;6488;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that empty values don't trigger errors.;;d51,6475;;b1,0;;m">
				</treenode>
				<treenode node="testDateTimeRounding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6448;2;6468;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test dateTime with rounding;;d40,6448;;b1,0;;m">
				</treenode>
				<treenode node="testDateTimeWithBogusData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6514;2;6517;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that bogus non-date time data doesn't cause errors.;;d45,6514;;b1,0;;m">
				</treenode>
				<treenode node="testDatetimeWithDefault;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6495;2;6507;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that datetime() and default values work.;;d43,6495;;b1,0;;m">
				</treenode>
				<treenode node="testDateTimeWithGetForms;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8739;2;8750;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that datetime() works with GET style forms.;;d44,8739;;b1,0;;m">
				</treenode>
				<treenode node="testDay;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6791;2;6911;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDay method;;d27,6791;;b1,0;;m">
				</treenode>
				<treenode node="testDbLessModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9521;2;9553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDbLessModel method;;d35,9521;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3545;2;3553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDefaultValue method;;d36,3545;;b1,0;;m">
				</treenode>
				<treenode node="testDisableSecurityUsingForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1512;2;1532;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDisableSecurityUsingForm method;;d48,1512;;b1,0;;m">
				</treenode>
				<treenode node="testDomIdSuffix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4461;2;4473;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDomIdSuffix method;;d35,4461;;b1,0;;m">
				</treenode>
				<treenode node="testDomIdSuffixCollisionResolvement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4480;2;4498;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDomIdSuffixCollisionResolvement();;d55,4480;;b1,0;;m">
				</treenode>
				<treenode node="testDuplicateFieldNameResolution;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;645;2;666;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that models with identical field names get resolved properly;;d52,645;;b1,0;;m">
				</treenode>
				<treenode node="testEditFormWithData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8759;2;8786;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEditFormWithData method;;d40,8759;;b1,0;;m">
				</treenode>
				<treenode node="testEmptyErrorValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1662;2;1695;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validation errors, when validation message is an empty string.;;d44,1662;;b1,0;;m">
				</treenode>
				<treenode node="testEmptyInputErrorValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1702;2;1735;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validation errors, when calling input() overriding validation message by an empty string.;;d49,1702;;b1,0;;m">
				</treenode>
				<treenode node="testError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3587;2;3683;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testError method;;d29,3587;;b1,0;;m">
				</treenode>
				<treenode node="testFileUploadField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7581;2;7600;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileUploadField method;;d39,7581;;b1,0;;m">
				</treenode>
				<treenode node="testFileUploadFieldTypeGenerationForBinaries;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;825;2;848;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests correct generation of file upload fields for binary fields;;d64,825;;b1,0;;m">
				</treenode>
				<treenode node="testFileUploadOnOtherModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7607;2;7614;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test File upload input on a model not used in create();s;;d46,7607;;b1,0;;m">
				</treenode>
				<treenode node="testForMagicInputNonExistingNorValidated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9220;2;9274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testForMagicInputNonExistingNorValidated method;;d60,9220;;b1,0;;m">
				</treenode>
				<treenode node="testFormDateTimeMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6584;2;6664;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormDateTimeMulti method;;d41,6584;;b1,0;;m">
				</treenode>
				<treenode node="testFormEnd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9403;2;9488;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormEnd method;;d31,9403;;b1,0;;m">
				</treenode>
				<treenode node="testFormInputRequiredDetection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8793;2;9016;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that required fields are created for various types of validation.;;d50,8793;;b1,0;;m">
				</treenode>
				<treenode node="testFormInputRequiredDetectionModelValidator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9023;2;9042;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that required fields are created when only using ModelValidator::add().;;d64,9023;;b1,0;;m">
				</treenode>
				<treenode node="testFormInputs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3163;2;3396;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormInputs method;;d34,3163;;b1,0;;m">
				</treenode>
				<treenode node="testFormMagicInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9049;2;9213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormMagicInput method;;d38,9049;;b1,0;;m">
				</treenode>
				<treenode node="testFormMagicInputLabel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9281;2;9396;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormMagicInputLabel method;;d43,9281;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecuredInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1189;2;1290;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecuredInput method;;d40,1189;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecureWithCustomNameAttribute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1172;2;1180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test securing inputs with custom name attributes.;;d57,1172;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecurityArrayFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1058;2;1068;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test form security with Model.field.0 style inputs;;d47,1058;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecurityFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;688;2;715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecurityFields method;;d42,688;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecurityInputUnlockedFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1125;2;1165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecurityInputDisabledFields method;;d55,1125;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecurityMultipleFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;857;2;884;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecurityMultipleFields method;;d50,857;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecurityMultipleInputDisabledFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1077;2;1116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecurityMultipleInputDisabledFields method;;d63,1077;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecurityMultipleInputFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1010;2;1051;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecurityMultipleInputFields method;;d55,1010;;b1,0;;m">
				</treenode>
				<treenode node="testFormSecurityMultipleSubmitButtons;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;893;2;931;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecurityMultipleSubmitButtons;;d57,893;;b1,0;;m">
				</treenode>
				<treenode node="testFormValidationAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1744;2;1776;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormValidationAssociated method;;d48,1744;;b1,0;;m">
				</treenode>
				<treenode node="testFormValidationAssociatedFirstLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1785;2;1826;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormValidationAssociatedFirstLevel method;;d58,1785;;b1,0;;m">
				</treenode>
				<treenode node="testFormValidationAssociatedSecondLevel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1835;2;1884;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormValidationAssociatedSecondLevel method;;d59,1835;;b1,0;;m">
				</treenode>
				<treenode node="testFormValidationMultiRecord;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1893;2;1914;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormValidationMultiRecord method;;d49,1893;;b1,0;;m">
				</treenode>
				<treenode node="testGetFormCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8686;2;8709;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test creating a get form, and get form inputs.;;d37,8686;;b1,0;;m">
				</treenode>
				<treenode node="testGetFormWithFalseModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8716;2;8732;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test get form, and inputs when the model param is false;;d45,8716;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmSelectBox;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5161;2;5244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generation of habtm select boxes.;;d38,5161;;b1,0;;m">
				</treenode>
				<treenode node="testHiddenField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7566;2;7574;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHiddenField method;;d35,7566;;b1,0;;m">
				</treenode>
				<treenode node="testHour;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7029;2;7137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHour method;;d28,7029;;b1,0;;m">
				</treenode>
				<treenode node="testHtml5InputException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9902;2;9904;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException CakeException;;d43,9902;;b1,0;;m">
				</treenode>
				<treenode node="testHtml5Inputs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9866;2;9896;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that some html5 inputs + FormHelper::__call() work;;d35,9866;;b1,0;;m">
				</treenode>
				<treenode node="testInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2000;2;2328;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInput method;;d29,2000;;b1,0;;m">
				</treenode>
				<treenode node="testInputCheckbox;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2352;2;2401;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test input() with checkbox creation;;d37,2352;;b1,0;;m">
				</treenode>
				<treenode node="testInputCheckboxesInLoop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2706;2;2720;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generating checkboxes in a loop.;;d45,2706;;b1,0;;m">
				</treenode>
				<treenode node="testInputCheckboxWithDisabledElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2727;2;2819;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generating checkboxes with disabled elements.;;d57,2727;;b1,0;;m">
				</treenode>
				<treenode node="testInputDate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7377;2;7430;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInputDate method;;d33,7377;;b1,0;;m">
				</treenode>
				<treenode node="testInputDateMaxYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7440;2;7454;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInputDateMaxYear method;;d40,7440;;b1,0;;m">
				</treenode>
				<treenode node="testInputDatetime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2618;2;2699;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test form-&gt;input() with datetime, date and time types;;d37,2618;;b1,0;;m">
				</treenode>
				<treenode node="testInputDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;10100;2;10154;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test inputDefaults setter and getter;;d37,10100;;b1,0;;m">
				</treenode>
				<treenode node="testInputErrorEscape;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3690;2;3699;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test error options when using form-&gt;input();s;;d40,3690;;b1,0;;m">
				</treenode>
				<treenode node="testInputMagicSelectChangeToRadio;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3123;2;3127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that magic input() selects can easily be converted into radio types without error.;;d53,3123;;b1,0;;m">
				</treenode>
				<treenode node="testInputMagicSelectForTypeNumber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3093;2;3116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that magic input() selects are created for type=number;;d53,3093;;b1,0;;m">
				</treenode>
				<treenode node="testInputMagicTypeDoesNotOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3065;2;3086;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that inferred types do not override developer input;;d53,3065;;b1,0;;m">
				</treenode>
				<treenode node="testInputMultipleCheckboxes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5608;2;5706;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInputMultipleCheckboxes method;;d47,5608;;b1,0;;m">
				</treenode>
				<treenode node="testInputOverridingMagicSelectType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3034;2;3058;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that overriding the magic select type widget is possible;;d54,3034;;b1,0;;m">
				</treenode>
				<treenode node="testInputSelectType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2839;2;3004;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test form-&gt;input() with select type inputs.;;d39,2839;;b1,0;;m">
				</treenode>
				<treenode node="testInputsPluginModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3403;2;3421;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests inputs() works with plugin models;;d41,3403;;b1,0;;m">
				</treenode>
				<treenode node="testInputTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9768;2;9859;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tests the ability to change the order of the form input placeholder &quot;input&quot;, &quot;label&quot;, &quot;before&quot;, &quot;between&quot;, &quot;after&quot;, &quot;error&quot;;;d37,9768;;b1,0;;m">
				</treenode>
				<treenode node="testInputTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2408;2;2462;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test form-&gt;input() with time types.;;d33,2408;;b1,0;;m">
				</treenode>
				<treenode node="testInputTimeWithIntervalAnd12HourFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2561;2;2611;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test interval &amp; timeFormat = 12;;d60,2561;;b1,0;;m">
				</treenode>
				<treenode node="testInputWithLeadingInteger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2826;2;2832;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test input name with leading integer, ensure attributes are generated correctly.;;d47,2826;;b1,0;;m">
				</treenode>
				<treenode node="testInputWithMatchingFieldAndModelName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3134;2;3154;;;;vpos;;vvoid;;r&#xA;Description&#xA;     fields with the same name as the model should work.;;d58,3134;;b1,0;;m">
				</treenode>
				<treenode node="testInputWithNonStandardPrimaryKeyMakesHidden;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3011;2;3027;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that input() and a non standard primary key makes a hidden input by default.;;d65,3011;;b1,0;;m">
				</treenode>
				<treenode node="testInputZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2335;2;2345;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that inputs with 0 can be created.;;d33,2335;;b1,0;;m">
				</treenode>
				<treenode node="testIntrospectModelFromRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9911;2;9926;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that a model can be loaded from the model names passed in the request object;;d50,9911;;b1,0;;m">
				</treenode>
				<treenode node="testLabel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3475;2;3501;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLabel method;;d29,3475;;b1,0;;m">
				</treenode>
				<treenode node="testMinute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6918;2;7022;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMinute method;;d30,6918;;b1,0;;m">
				</treenode>
				<treenode node="testMonth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;6688;2;6784;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMonth method;;d29,6688;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleFormWithIdFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9495;2;9514;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleFormWithIdFields method;;d48,9495;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleInputValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1923;2;1991;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleInputValidation method;;d47,1923;;b1,0;;m">
				</treenode>
				<treenode node="testMultiRecordForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9646;2;9723;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the generation of fields for a multi record form.;;d39,9646;;b1,0;;m">
				</treenode>
				<treenode node="testMultiRecordFormValidationErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9730;2;9743;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the correct display of multi-record form validation errors.;;d55,9730;;b1,0;;m">
				</treenode>
				<treenode node="testNestedSelect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4737;2;4790;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNestedSelect method;;d36,4737;;b1,0;;m">
				</treenode>
				<treenode node="testNoCheckboxLocking;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;673;2;679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that hidden fields generated for checkboxes don't get locked;;d41,673;;b1,0;;m">
				</treenode>
				<treenode node="testPassword;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3708;2;3717;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPassword method;;d32,3708;;b1,0;;m">
				</treenode>
				<treenode node="testPasswordValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1621;2;1655;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validation errors.;;d42,1621;;b1,0;;m">
				</treenode>
				<treenode node="testPostButton;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7660;2;7675;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPostButton method;;d34,7660;;b1,0;;m">
				</treenode>
				<treenode node="testPostButtonNestedData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7682;2;7694;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test using postButton with N dimensional data.;;d44,7682;;b1,0;;m">
				</treenode>
				<treenode node="testPostLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7730;2;7815;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPostLink method;;d32,7730;;b1,0;;m">
				</treenode>
				<treenode node="testPostLinkAfterGetForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7875;2;7897;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test creating postLinks after a GET form.;;d44,7875;;b1,0;;m">
				</treenode>
				<treenode node="testPostLinkFormBuffer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7932;2;7993;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that postLink adds form tags to view block;;d42,7932;;b1,0;;m">
				</treenode>
				<treenode node="testPostLinkNestedData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7856;2;7868;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test using postLink with N dimensional data.;;d42,7856;;b1,0;;m">
				</treenode>
				<treenode node="testPostLinkSecurityHash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7822;2;7849;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that security hashes for postLink include the url.;;d44,7822;;b1,0;;m">
				</treenode>
				<treenode node="testRadio;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3726;2;3904;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRadio method;;d29,3726;;b1,0;;m">
				</treenode>
				<treenode node="testRadioAddEmptyOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4355;2;4413;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test adding an empty option for radio buttons;;d43,4355;;b1,0;;m">
				</treenode>
				<treenode node="testRadioBetween;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3945;2;4090;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test radio inputs with between as string or array. Also ensure that an array with less between elements works.;;d36,3945;;b1,0;;m">
				</treenode>
				<treenode node="testRadioDifferentModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3912;2;3937;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRadioDifferentModel Refs #2911;;d43,3912;;b1,0;;m">
				</treenode>
				<treenode node="testRadioDisabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4178;2;4316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test disabled radio options;;d37,4178;;b1,0;;m">
				</treenode>
				<treenode node="testRadioHiddenInputDisabling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4323;2;4348;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test disabling the hidden input for radio buttons;;d49,4323;;b1,0;;m">
				</treenode>
				<treenode node="testRadioLabelArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4420;2;4433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that radio() accepts an array for label;;d39,4420;;b1,0;;m">
				</treenode>
				<treenode node="testRadioOptionWithBooleanishValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4098;2;4171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that radios with a 0 value are selected under the correct conditions. Also ensure that values that are booleanish are handled correctly.;;d55,4098;;b1,0;;m">
				</treenode>
				<treenode node="testRadioWithCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4440;2;4454;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that label id's match the input element id's when radio is called after create().;;d39,4440;;b1,0;;m">
				</treenode>
				<treenode node="testRequiredOnCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9944;2;10025;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the 'on' key validates as expected on create;;d40,9944;;b1,0;;m">
				</treenode>
				<treenode node="testRequiredOnUpdate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;10032;2;10093;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the 'on' key validates as expected on update;;d40,10032;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyRecordFormValidationErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;9750;2;9761;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the correct display of multi-record form validation errors.;;d58,9750;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredAndDisabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1406;2;1428;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that forms with disabled inputs + secured forms leave off the inputs from the form hashing.;;d42,1406;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredAndDisabledNotAssoc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1384;2;1398;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that when disabled is in a list based attribute array it works.;;d50,1384;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredFileInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1321;2;1331;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the correct keys are added to the field hash index;;d40,1321;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredFormUrlHasHtmlAndIdentifier;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1479;2;1505;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that URL, HTML and identifier show up in their hashs.;;d58,1479;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredFormUrlIgnoresHost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1435;2;1456;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that only the path + query elements of a form's URL show up in their hash.;;d49,1435;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredFormUrlWorksWithNamedParameter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1463;2;1472;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure named parameters work correctly with hash generation.;;d61,1463;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredInputCustomName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1297;2;1314;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test secured inputs with custom names.;;d46,1297;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredMultipleSelect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1338;2;1350;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that multiple selects keys are added to field hash;;d45,1338;;b1,0;;m">
				</treenode>
				<treenode node="testSecuredRadio;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1357;2;1377;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormSecuredRadio method;;d36,1357;;b1,0;;m">
				</treenode>
				<treenode node="testSecurePostButton;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7701;2;7723;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that postButton adds _Token fields.;;d40,7701;;b1,0;;m">
				</treenode>
				<treenode node="testSecurePostLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7904;2;7925;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that postLink adds _Token fields.;;d38,7904;;b1,0;;m">
				</treenode>
				<treenode node="testSecurityButtonNestedNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;938;2;946;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that buttons created with foo[bar] name attributes are unlocked correctly.;;d49,938;;b1,0;;m">
				</treenode>
				<treenode node="testSecuritySubmitImageName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;988;2;1001;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the correct fields are unlocked for image submits with names.;;d47,988;;b1,0;;m">
				</treenode>
				<treenode node="testSecuritySubmitImageNoName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;968;2;981;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the correct fields are unlocked for image submits with no names.;;d49,968;;b1,0;;m">
				</treenode>
				<treenode node="testSecuritySubmitNestedNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;953;2;961;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that submit inputs created with foo[bar] name attributes are unlocked correctly.;;d49,953;;b1,0;;m">
				</treenode>
				<treenode node="testSelect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4507;2;4667;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSelect method;;d30,4507;;b1,0;;m">
				</treenode>
				<treenode node="testSelectAsCheckbox;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3430;2;3466;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSelectAsCheckbox method;;d40,3430;;b1,0;;m">
				</treenode>
				<treenode node="testSelectCheckboxMultipleId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5796;2;5836;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that 'id' overrides all the checkbox id's as well.;;d48,5796;;b1,0;;m">
				</treenode>
				<treenode node="testSelectCheckboxMultipleOverrideName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5768;2;5789;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that select() with multiple = checkbox works with overriding name attribute.;;d58,5768;;b1,0;;m">
				</treenode>
				<treenode node="testSelectHiddenFieldOmission;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5715;2;5761;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSelectHiddenFieldOmission method;;d49,5715;;b1,0;;m">
				</treenode>
				<treenode node="testSelectMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4799;2;4971;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSelectMultiple method;;d38,4799;;b1,0;;m">
				</treenode>
				<treenode node="testSelectMultipleCheckboxDiv;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5465;2;5538;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test multiple checkboxes with div styles.;;d49,5465;;b1,0;;m">
				</treenode>
				<treenode node="testSelectMultipleCheckboxes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5251;2;5458;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generation of multi select elements in checkbox format;;d48,5251;;b1,0;;m">
				</treenode>
				<treenode node="testSelectMultipleCheckboxSecurity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5545;2;5558;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Checks the security hash array generated for multiple-input checkbox elements;;d54,5545;;b1,0;;m">
				</treenode>
				<treenode node="testSelectMultipleSecureWithNoOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5566;2;5576;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Multiple select elements should always be secured as they always participate in the POST data.;;d57,5566;;b1,0;;m">
				</treenode>
				<treenode node="testSelectMultipleWithDisabledElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4978;2;5066;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generating multiple select with disabled elements.;;d58,4978;;b1,0;;m">
				</treenode>
				<treenode node="testSelectNoSecureWithNoOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5583;2;5599;;;;vpos;;vvoid;;r&#xA;Description&#xA;     When a select box has no options it should not be added to the fields list as it always fail post validation.;;d51,5583;;b1,0;;m">
				</treenode>
				<treenode node="testSelectOptionGroupEscaping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4674;2;4708;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that select() with optiongroups listens to the escape param.;;d49,4674;;b1,0;;m">
				</treenode>
				<treenode node="testSelectWithDisabledElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;5073;2;5154;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generating select with disabled elements.;;d50,5073;;b1,0;;m">
				</treenode>
				<treenode node="testSelectWithNullAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;4715;2;4728;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that FormHelper::select() allows null to be passed in the $attributes parameter;;d48,4715;;b1,0;;m">
				</treenode>
				<treenode node="testSubmitButton;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8000;2;8090;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSubmitButton method;;d36,8000;;b1,0;;m">
				</treenode>
				<treenode node="testSubmitImage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8097;2;8169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test image submit types.;;d35,8097;;b1,0;;m">
				</treenode>
				<treenode node="testSubmitImageTimestamp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8191;2;8201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test submit image with timestamps.;;d44,8191;;b1,0;;m">
				</treenode>
				<treenode node="testSubmitUnlockedByDefault;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;8177;2;8184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Submit buttons should be unlocked by default as there could be multiples, and only one will be submitted at a time.;;d47,8177;;b1,0;;m">
				</treenode>
				<treenode node="testTagIsInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1579;2;1594;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTagIsInvalid method;;d36,1579;;b1,0;;m">
				</treenode>
				<treenode node="testTagIsInvalidSaveMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1601;2;1614;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test tagIsInvalid with validation errors from a saveMany;;d44,1601;;b1,0;;m">
				</treenode>
				<treenode node="testTextArea;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7461;2;7503;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTextArea method;;d32,7461;;b1,0;;m">
				</treenode>
				<treenode node="testTextAreaMaxLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7510;2;7534;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test textareas maxlength reading from schema.;;d41,7510;;b1,0;;m">
				</treenode>
				<treenode node="testTextAreaWithStupidCharacters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7543;2;7559;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTextAreaWithStupidCharacters method;;d52,7543;;b1,0;;m">
				</treenode>
				<treenode node="testTextbox;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;3510;2;3536;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTextbox method;;d31,3510;;b1,0;;m">
				</treenode>
				<treenode node="testTextFieldGenerationForDecimalAsText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;770;2;788;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests correct generation of decimal fields as text inputs;;d59,770;;b1,0;;m">
				</treenode>
				<treenode node="testTextFieldGenerationForFloats;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;722;2;763;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests correct generation of number fields for double and float fields;;d52,722;;b1,0;;m">
				</treenode>
				<treenode node="testTextFieldTypeNumberGenerationForIntegers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;795;2;818;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests correct generation of number fields for integer fields;;d64,795;;b1,0;;m">
				</treenode>
				<treenode node="testTimeSelectedWithInterval;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2469;2;2517;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test interval + selected near the hour roll over.;;d48,2469;;b1,0;;m">
				</treenode>
				<treenode node="testTimeSelectedWithIntervalTwelve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;2524;2;2554;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test time with selected values around 12:xx:xx;;d54,2524;;b1,0;;m">
				</treenode>
				<treenode node="testUnlockFieldAddsToList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1539;2;1550;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test disableField;;d45,1539;;b1,0;;m">
				</treenode>
				<treenode node="testUnlockFieldRemovingFromFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;1557;2;1572;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test unlockField removing from fields array.;;d53,1557;;b1,0;;m">
				</treenode>
				<treenode node="testValidateHashNoModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;634;2;638;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests form hash generation with model-less data;;d43,634;;b1,0;;m">
				</treenode>
				<treenode node="testYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7144;2;7335;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testYear method;;d28,7144;;b1,0;;m">
				</treenode>
				<treenode node="testYearAutoExpandRange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;7342;2;7366;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testYearAutoExpandRange method;;d43,7342;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;517;21;517;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;510;17;510;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Form;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f23;501;29;501;;;;vposFormHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="Fruit;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3420;1;3434;;;;vpos;;vCakeTestModel;;c;;r;;d34,3420;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3424;28;3424;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3422;13;3422;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FruitFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Fruit Fixtures;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FruitNoWith;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3471;1;3486;;;;vpos;;vCakeTestModel;;c;;r;;d40,3471;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3477;28;3477;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3473;13;3473;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3475;17;3475;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FruitsUuidTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3436;1;3453;;;;vpos;;vCakeTestModel;;c;;r;;d42,3436;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3442;18;3442;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3438;13;3438;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3440;19;3440;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="FruitsUuidTagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitsUuidTagFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class FruitsUuidTagFixture;;d51,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitsUuidTagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitsUuidTagFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="GenericObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f0;24;1;37;;;;vpos;;v;;r&#xA;Description&#xA;     A generic object class;;d20,24;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;32;2;35;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    GenericObjectCollection $collection&#xA;    array $settings;;d87,32;;b1,0;;mGenericObjectCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f53;32;64;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f66;32;75;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="GenericObjectCollection;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f0;83;1;127;;;;vpos;;vObjectCollection;;c;;r&#xA;Description&#xA;     A collection of Generic objects;;d55,83;;b0,0;;m">
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;92;2;104;;;;vpos;;varray;;r&#xA;Description&#xA;     Loads a generic object&#xA;&#xA;Parameters:&#xA;    string $object - Object name&#xA;    array $settings - Settings array&#xA;&#xA;Return:&#xA;   List of loaded objects;;d52,92;;b1,0;;mstring $object;;parray $settings;;p">
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f22;92;29;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f31;92;40;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;115;2;125;;;;vpos;;varray;;r&#xA;Description&#xA;     Helper method for adding/overwriting enabled objects including settings&#xA;&#xA;Parameters:&#xA;    string $name - Name of the object&#xA;    Object $object - The object to use&#xA;    array $settings - Settings to apply for the object&#xA;&#xA;Return:&#xA;   Loaded objects;;d64,115;;b1,0;;mstring $name;;pObject $object;;parray $settings;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f27;115;32;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f34;115;41;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f43;115;52;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Group;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4182;1;4235;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Group class;;d34,4182;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4224;2;4233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4224;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4224;30;4224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4210;18;4210;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4217;16;4217;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4189;13;4189;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4196;14;4196;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4203;17;4203;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="GroupUpdateAll;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3513;1;3519;;;;vpos;;vCakeTestModel;;c;;r;;d43,3513;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3515;13;3515;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3517;17;3517;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="GroupUpdateAllFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GroupUpdateAllFixture.php;f0;23;1;56;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class GroupUpdateAllFixture;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GroupUpdateAllFixture.php;f8;27;15;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GroupUpdateAllFixture.php;f8;34;16;34;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GroupUpdateAllFixture.php;f8;25;14;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Guild;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4941;1;4950;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Guild class;;d34,4941;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4943;28;4943;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="GuildFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildFixture.php;f0;23;1;45;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class GuildFixture;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="GuildsPlayer;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4957;1;4965;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     GuildsPlayer class;;d41,4957;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4961;18;4961;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4959;20;4959;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="GuildsPlayerFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildsPlayerFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class GuildsPlayerFixture;;d50,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildsPlayerFixture.php;f8;32;15;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildsPlayerFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildsPlayerFixture.php;f8;25;20;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Hash;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f0;29;1;1101;;;;vpos;;v;;r&#xA;Description&#xA;     Library of array functions for manipulating and extracting data from arrays or 'sets' of data.;;d11,29;;b0,0;;m">
				<treenode node="_filter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f18;572;2;577;;;;vpos;;vbool;;r&#xA;Description&#xA;     Callback function for filtering.&#xA;&#xA;Parameters:&#xA;    array $var - Array to filter;;d41,572;;b2,5;;marray $var;;p">
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f35;572;39;572;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_matches;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f18;193;2;244;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether or not $data matches the attribute patterns&#xA;&#xA;Parameters:&#xA;    array $data - Array of data to match&#xA;    string $selector - The patterns to match&#xA;&#xA;Return:&#xA;   Fitness of expression;;d60,193;;b2,5;;marray $data;;pstring $selector;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f42;193;47;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="selector;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f49;193;58;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_matchToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f18;173;2;184;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check a key against a token.&#xA;&#xA;Parameters:&#xA;    string $key - The key in the array being searched&#xA;    string $token - The token being matched;;d53,173;;b2,5;;mstring $key;;pstring $token;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f39;173;43;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="token;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f45;173;51;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_simpleOp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f18;295;2;327;;;;vpos;;varray;;r&#xA;Description&#xA;     Perform a simple insert/remove operation.&#xA;&#xA;Parameters:&#xA;    string $op - The operation to do&#xA;    array $data - The data to operate on&#xA;    array $path - The path to work on&#xA;    mixed $values - The values to insert when doing inserts&#xA;&#xA;Return:&#xA;   data;;d72,295;;b2,5;;mstring $op;;parray $data;;parray $path;;pmixed $values;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f42;295;47;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="op;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f37;295;40;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f49;295;54;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f56;295;63;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_splitConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f18;155;2;164;;;;vpos;;varray;;r&#xA;Description&#xA;     Split token conditions&#xA;&#xA;Parameters:&#xA;    string $token - the token being splitted&#xA;&#xA;Return:&#xA;   array(token, conditions) with token splitted;;d52,155;;b2,5;;mstring $token;;p">
					<treenode node="token;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f44;155;50;155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_squash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f18;915;2;929;;;;vpos;;varray;;r&#xA;Description&#xA;     Helper method for sort() Squashes an array to a single hash so it can be sorted.&#xA;&#xA;Parameters:&#xA;    array $data - The data to squash&#xA;    string $key - The key for the data;;d55,915;;b2,5;;marray $data;;pstring $key;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f35;915;40;915;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f42;915;46;915;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="apply;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;820;2;823;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Apply a callback to a set of extracted values using `$function`. The function will get the extracted values as the first argument.&#xA;&#xA;Parameters:&#xA;    array $data - The data to reduce&#xA;    string $path - The path to extract from $data&#xA;    callable $function - The function to call on each extracted value&#xA;&#xA;Return:&#xA;   The results of the applied method;;d61,820;;b1,5;;marray $data;;pstring $path;;pcallable $function;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f36;820;41;820;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="function;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f50;820;59;820;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f43;820;48;820;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;540;2;546;;;;vpos;;vbool;;r&#xA;Description&#xA;     Test whether or not a given path exists in $data. This method uses the same path syntax as Hash::extract()&#xA;&#xA;Parameters:&#xA;    array $data - The data to check&#xA;    string $path - The path to check for&#xA;&#xA;Return:&#xA;   Existence of path;;d50,540;;b1,5;;marray $data;;pstring $path;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f36;540;41;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f43;540;48;540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="combine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;387;2;439;;;;vpos;;varray;;r&#xA;Description&#xA;     Creates an associative array using `$keyPath` as the path to build its keys, and optionally `$valuePath` as path to get the values. If `$valuePath` is not specified, all values will be initialized to null (useful for Hash::merge). You can optionally group the values by what is obtained when following the path specified in `$groupPath`.&#xA;&#xA;Parameters:&#xA;    array $data - Array from where to extract keys and values&#xA;    string $keyPath - A dot-separated string&#xA;    string $valuePath - A dot-separated string&#xA;    string $groupPath - A dot-separated string&#xA;&#xA;Return:&#xA;   Combined array;;d93,387;;b1,5;;marray $data;;pstring $keyPath;;pstring $valuePath;;pstring $groupPath;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f38;387;43;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="groupPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f74;387;84;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keyPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f45;387;53;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="valuePath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f55;387;65;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="contains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;498;2;525;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determines if one array contains the exact keys and values of another.&#xA;&#xA;Parameters:&#xA;    array $data - The data to search through&#xA;    array $needle - The values to file in $data&#xA;&#xA;Return:&#xA;   true if $data contains $needle, false otherwise;;d61,498;;b1,5;;marray $data;;parray $needle;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f39;498;44;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f52;498;59;498;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;942;2;958;;;;vpos;;varray;;r&#xA;Description&#xA;     Computes the difference between two complex arrays. This method differs from the built-in array_diff() in that it will preserve keys and work on multi-dimensional arrays.&#xA;&#xA;Parameters:&#xA;    array $data - First value&#xA;    array $compare - Second value&#xA;&#xA;Return:&#xA;   Returns the key =&gt; value pairs that are not common in $data and $compare;;d52,942;;b1,5;;marray $data;;parray $compare;;p">
					<treenode node="compare;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f42;942;50;942;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f35;942;40;942;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dimensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;736;2;751;;;;vpos;;vint;;r&#xA;Description&#xA;     Counts the dimensions of an array. Only considers the dimension of the first element in the array.&#xA;&#xA;Parameters:&#xA;    array $data - Array to count dimensions on&#xA;&#xA;Return:&#xA;   The number of dimensions in $data;;d48,736;;b1,5;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f41;736;46;736;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;631;2;668;;;;vpos;;varray;;r&#xA;Description&#xA;     Expands a flat array to a nested array.&#xA;&#xA;Parameters:&#xA;    array $data - Flattened array&#xA;    string $separator - The delimiter used;;d56,631;;b1,5;;marray $data;;pstring $separator;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f31;631;36;631;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f38;631;48;631;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extract;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;101;2;148;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the values from an array matching the $path expression. The path expression is a dot separated expression, that can contain a set of patterns and expressions:&#xA;&#xA;Parameters:&#xA;    array $data - The data to extract from&#xA;    string $path - The path to extract&#xA;&#xA;Return:&#xA;   An array of the extracted values;;d52,101;;b1,5;;marray $data;;pstring $path;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f38;101;43;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f45;101;50;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="filter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;557;2;564;;;;vpos;;varray;;r&#xA;Description&#xA;     Recursively filters a data set.&#xA;&#xA;Parameters:&#xA;    array $data - Either an array to filter, or value when in callback&#xA;    callable $callback - A function to filter the data with&#xA;&#xA;Return:&#xA;   Filtered array;;d82,557;;b1,5;;marray $data;;pcallable $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f44;557;53;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f37;557;42;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flatten;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;589;2;617;;;;vpos;;varray;;r&#xA;Description&#xA;     Collapses a multi-dimensional array into a single dimension, using a delimited array path for each array element's key, i.e. array(array('Foo' =&gt; array('Bar' =&gt; 'Far'))) becomes array('0.Foo.Bar' =&gt; 'Far').)&#xA;&#xA;Parameters:&#xA;    array $data - Array to flatten&#xA;    string $separator - String used to separate array key elements in a path, defaults to ';;d63,589;;b1,5;;marray $data;;pstring $separator;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f38;589;43;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f45;589;55;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;462;2;488;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a formatted series of values extracted from `$data`, using `$format` as the format and `$paths` as the values to extract.&#xA;&#xA;Parameters:&#xA;    array $data - Source array from which to extract the data&#xA;    string $paths - An array containing one or more Hash::extract()-style key paths&#xA;    string $format - Format string into which values will be inserted, see sprintf()&#xA;&#xA;Return:&#xA;   An array of strings extracted from `$path` and formatted with `$format`;;d67,462;;b1,5;;marray $data;;pstring $paths;;pstring $format;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f37;462;42;462;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f58;462;65;462;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f50;462;56;462;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;44;2;70;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get a single value specified by $path out of $data. Does not support the full dot notation feature set, but is faster for simple read operations.&#xA;&#xA;Parameters:&#xA;    array $data - Array of data to operate on&#xA;    string|array $path - The path being searched for&#xA;    mixed $default - The return value when the path does not exist&#xA;&#xA;Return:&#xA;   The value fetched from the array, or null;;d65,44;;b1,5;;marray $data;;pstring|array $path;;pmixed $default;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f34;44;39;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f48;44;56;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f41;44;46;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;256;2;284;;;;vpos;;varray;;r&#xA;Description&#xA;     Insert $values into an array with the given $path. You can use `{n}` and `{s}` elements to insert $data multiple times.&#xA;&#xA;Parameters:&#xA;    array $data - The data to insert into&#xA;    string $path - The path to insert at&#xA;    array $values - The values to insert&#xA;&#xA;Return:&#xA;   The data with $values inserted;;d67,256;;b1,5;;marray $data;;pstring $path;;parray $values;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f37;256;42;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f44;256;49;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f51;256;58;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="map;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;781;2;784;;;;vpos;;varray;;r&#xA;Description&#xA;     Map a callback across all elements in a set. Can be provided a path to only modify slices of the set.&#xA;&#xA;Parameters:&#xA;    array $data - The data to map over, and extract data out of&#xA;    string $path - The path to extract for mapping over&#xA;    callable $function - The function to call on each extracted value&#xA;&#xA;Return:&#xA;   An array of the modified values;;d59,781;;b1,5;;marray $data;;pstring $path;;pcallable $function;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f34;781;39;781;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="function;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f48;781;57;781;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f41;781;46;781;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="maxDimensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;761;2;769;;;;vpos;;vint;;r&#xA;Description&#xA;     Counts the dimensions of *all* array elements. Useful for finding the maximum number of dimensions in a mixed array.&#xA;&#xA;Parameters:&#xA;    array $data - Array to count dimensions on&#xA;&#xA;Return:&#xA;   The maximum number of dimensions in $data;;d51,761;;b1,5;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f44;761;49;761;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="merge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;684;2;709;;;;vpos;;varray;;r&#xA;Description&#xA;     This function can be thought of as a hybrid between PHP's `array_merge` and `array_merge_recursive`.&#xA;&#xA;Parameters:&#xA;    array $data - Array to be merged&#xA;    mixed $merge - Array to merge with&#xA;&#xA;Return:&#xA;   Merged array;;d51,684;;b1,5;;marray $data;;pmixed $merge;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f36;684;41;684;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f43;684;49;684;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;968;2;983;;;;vpos;;varray;;r&#xA;Description&#xA;     Merges the difference between $data and $compare onto $data.&#xA;&#xA;Parameters:&#xA;    array $data - The data to append onto&#xA;    array $compare - The data to compare and append onto&#xA;&#xA;Return:&#xA;   The merged array;;d57,968;;b1,5;;marray $data;;parray $compare;;p">
					<treenode node="compare;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f47;968;55;968;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f40;968;45;968;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;1039;2;1099;;;;vpos;;varray;;r&#xA;Description&#xA;     Takes in a flat array and returns a nested array&#xA;&#xA;Parameters:&#xA;    array $data - The data to nest&#xA;    array $options - Options are:&#xA;&#xA;Return:&#xA;   of results, nested;;d62,1039;;b1,5;;marray $data;;parray $options;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f35;1039;40;1039;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f42;1039;50;1039;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normalize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;993;2;1018;;;;vpos;;varray;;r&#xA;Description&#xA;     Normalizes an array, and converts it to a standard format.&#xA;&#xA;Parameters:&#xA;    array $data - List to normalize&#xA;    bool $assoc - If true, $data will be converted to an associative array;;d62,993;;b1,5;;marray $data;;pbool $assoc;;p">
					<treenode node="assoc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f47;993;53;993;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f40;993;45;993;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="numeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;718;2;723;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks to see if all the values in the array are numeric&#xA;&#xA;Parameters:&#xA;    array $data - The array to check&#xA;&#xA;Return:&#xA;   true if values are numeric, false otherwise;;d45,718;;b1,5;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f38;718;43;718;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reduce;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;795;2;798;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Reduce a set of extracted values using `$function`.&#xA;&#xA;Parameters:&#xA;    array $data - The data to reduce&#xA;    string $path - The path to extract from $data&#xA;    callable $function - The function to call on each extracted value&#xA;&#xA;Return:&#xA;   The reduced value;;d62,795;;b1,5;;marray $data;;pstring $path;;pcallable $function;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f37;795;42;795;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="function;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f51;795;60;795;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f44;795;49;795;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="remove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;339;2;371;;;;vpos;;varray;;r&#xA;Description&#xA;     Remove data matching $path from the $data array. You can use `{n}` and `{s}` to remove multiple elements from $data.&#xA;&#xA;Parameters:&#xA;    array $data - The data to operate on&#xA;    string $path - A path expression to use to remove&#xA;&#xA;Return:&#xA;   The modified array;;d51,339;;b1,5;;marray $data;;pstring $path;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f37;339;42;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f44;339;49;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f15;848;2;905;;;;vpos;;varray;;r&#xA;Description&#xA;     Sorts an array by any value, determined by a Set-compatible path&#xA;&#xA;Parameters:&#xA;    array $data - An array of data to sort&#xA;    string $path - A Set-compatible path to the array value&#xA;    string $dir - See directions above&#xA;    string $type - See direction types above&#xA;&#xA;Return:&#xA;   Sorted array of data;;d82,848;;b1,5;;marray $data;;pstring $path;;pstring $dir;;pstring $type;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f35;848;40;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f49;848;53;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f42;848;47;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php;f63;848;68;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="HashTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f0;23;1;2613;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class HashTest;;d36,23;;b0,0;;m">
				<treenode node="articleData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f15;30;2;141;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider;;d38,30;;b1,5;;m">
				</treenode>
				<treenode node="mapCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1866;2;1868;;;;vpos;;vmixed;;r&#xA;Description&#xA;     testing method for map callbacks.&#xA;&#xA;Parameters:&#xA;    mixed $value - Value;;d37,1866;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f29;1866;35;1866;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reduceCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1877;2;1879;;;;vpos;;vmixed;;r&#xA;Description&#xA;     testing method for reduce callbacks.&#xA;&#xA;Parameters:&#xA;    mixed $one - First param&#xA;    mixed $two - Second param;;d44,1877;;b1,0;;mmixed $one;;pmixed $two;;p">
					<treenode node="one;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f32;1877;36;1877;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f38;1877;42;1877;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testApply;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1841;2;1846;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testApply;;d29,1841;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1554;2;1576;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheck method;;d29,1554;;b1,0;;m">
				</treenode>
				<treenode node="testCombine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1583;2;1610;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCombine method;;d31,1583;;b1,0;;m">
				</treenode>
				<treenode node="testCombineErrorMissingKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1632;2;1638;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test combine() giving errors on key/value length mismatches.;;d46,1632;;b1,0;;m">
				</treenode>
				<treenode node="testCombineErrorMissingValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1618;2;1624;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test combine() giving errors on key/value length mismatches.;;d48,1618;;b1,0;;m">
				</treenode>
				<treenode node="testCombineWithFormatting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1702;2;1761;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test combine with formatting rules.;;d45,1702;;b1,0;;m">
				</treenode>
				<treenode node="testCombineWithGroupPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1645;2;1695;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test combine() with a group path.;;d44,1645;;b1,0;;m">
				</treenode>
				<treenode node="testContains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;588;2;625;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testContains method;;d32,588;;b1,0;;m">
				</treenode>
				<treenode node="testDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;392;2;467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test diff();s;;d28,392;;b1,0;;m">
				</treenode>
				<treenode node="testDimensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;246;2;269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test dimensions.;;d34,246;;b1,0;;m">
				</treenode>
				<treenode node="testExpand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;2422;2;2473;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests Hash::expand;;d30,2422;;b1,0;;m">
				</treenode>
				<treenode node="testExtractAttributeBoolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;862;2;897;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test extracting based on attributes with boolean values.;;d47,862;;b1,0;;m">
				</treenode>
				<treenode node="testExtractAttributeComparison;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;924;2;946;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test comparison operators.;;d50,924;;b1,0;;m">
				</treenode>
				<treenode node="testExtractAttributeEquality;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;839;2;855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test = and != operators.;;d48,839;;b1,0;;m">
				</treenode>
				<treenode node="testExtractAttributeEqualityOnScalarValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;904;2;917;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that attribute matchers don't cause errors on scalar data.;;d61,904;;b1,0;;m">
				</treenode>
				<treenode node="testExtractAttributeMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;953;2;963;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test multiple attributes with conditions.;;d48,953;;b1,0;;m">
				</treenode>
				<treenode node="testExtractAttributePattern;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;970;2;980;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test attribute pattern matching.;;d47,970;;b1,0;;m">
				</treenode>
				<treenode node="testExtractAttributePresence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;822;2;832;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the attribute presense selector.;;d48,822;;b1,0;;m">
				</treenode>
				<treenode node="testExtractBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;701;2;715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test simple paths.;;d36,701;;b1,0;;m">
				</treenode>
				<treenode node="testExtractMatchesNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;987;2;1005;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that extract() + matching can hit null things.;;d42,987;;b1,0;;m">
				</treenode>
				<treenode node="testExtractNumericKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;722;2;737;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the {n} selector;;d41,722;;b1,0;;m">
				</treenode>
				<treenode node="testExtractNumericMixedKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;744;2;763;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the {n} selector with inconsistent arrays;;d47,744;;b1,0;;m">
				</treenode>
				<treenode node="testExtractNumericNonZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;770;2;794;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the {n} selector with non-zero based arrays;;d45,770;;b1,0;;m">
				</treenode>
				<treenode node="testExtractStringKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;801;2;815;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the {s} selector.;;d40,801;;b1,0;;m">
				</treenode>
				<treenode node="testExtractUnevenKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1012;2;1044;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that uneven keys are handled correctly.;;d41,1012;;b1,0;;m">
				</treenode>
				<treenode node="testFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;632;2;654;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFilter method;;d30,632;;b1,0;;m">
				</treenode>
				<treenode node="testFlatten;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;323;2;385;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests Hash::flatten;;d31,323;;b1,0;;m">
				</treenode>
				<treenode node="testFlattenInfiniteLoop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;2480;2;2611;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that flattening a large complex set doesn't loop forever.;;d43,2480;;b1,0;;m">
				</treenode>
				<treenode node="testFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1768;2;1794;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormat method;;d30,1768;;b1,0;;m">
				</treenode>
				<treenode node="testFormatNullValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1801;2;1821;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormattingNullValues method;;d40,1801;;b1,0;;m">
				</treenode>
				<treenode node="testGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;188;2;229;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test get();;d27,188;;b1,0;;m">
				</treenode>
				<treenode node="testGetInvalidPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;237;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test get() with an invalid path;;d38,237;;b1,0;;m">
				</treenode>
				<treenode node="testInsertMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1393;2;1420;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test inserting with multiple values.;;d35,1393;;b1,0;;m">
				</treenode>
				<treenode node="testInsertOverwriteStringValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1427;2;1442;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that insert() can insert data over a string value.;;d50,1427;;b1,0;;m">
				</treenode>
				<treenode node="testInsertSimple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1360;2;1386;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test insert();;d36,1360;;b1,0;;m">
				</treenode>
				<treenode node="testMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1828;2;1834;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test map();;d27,1828;;b1,0;;m">
				</treenode>
				<treenode node="testMaxDimensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;276;2;316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test maxDimensions;;d37,276;;b1,0;;m">
				</treenode>
				<treenode node="testMerge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;474;2;554;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test merge();;d29,474;;b1,0;;m">
				</treenode>
				<treenode node="testMergeDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;2321;2;2415;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMergeDiff method;;d33,2321;;b1,0;;m">
				</treenode>
				<treenode node="testMissingParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;2254;2;2295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Hash nest with no specified parent data.;;d37,2254;;b1,0;;m">
				</treenode>
				<treenode node="testNest1Dimensional;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;2144;2;2244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Hash nest with a 1d array - this method should be able to handle any type of array input;;d40,2144;;b1,0;;m">
				</treenode>
				<treenode node="testNestInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;2303;2;2314;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that nest() throws an InvalidArgumentException when providing an invalid input.;;d35,2303;;b1,0;;m">
				</treenode>
				<treenode node="testNestModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1887;2;2027;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Hash nest with a normal model result set. For kicks rely on Hash nest detecting the key names automatically;;d33,1887;;b1,0;;m">
				</treenode>
				<treenode node="testNestModelExplicitRoot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;2034;2;2137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Hash nest with a normal model result set, and a nominated root id;;d45,2034;;b1,0;;m">
				</treenode>
				<treenode node="testNormalize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;561;2;581;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test normalizing arrays;;d33,561;;b1,0;;m">
				</treenode>
				<treenode node="testNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;661;2;694;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNumericArrayCheck method;;d31,661;;b1,0;;m">
				</treenode>
				<treenode node="testReduce;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1853;2;1858;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reduce();;d30,1853;;b1,0;;m">
				</treenode>
				<treenode node="testRemove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1449;2;1512;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test remove() method.;;d30,1449;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1519;2;1547;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test removing multiple values.;;d35,1519;;b1,0;;m">
				</treenode>
				<treenode node="testSort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1051;2;1196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSort method;;d28,1051;;b1,0;;m">
				</treenode>
				<treenode node="testSortNatural;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1237;2;1267;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test natural sorting.;;d35,1237;;b1,0;;m">
				</treenode>
				<treenode node="testSortNaturalFallbackToRegular;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1274;2;1289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that sort() with 'natural' type will fallback to 'regular' as SORT_NATURAL is introduced in PHP 5.4;;d52,1274;;b1,0;;m">
				</treenode>
				<treenode node="testSortNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1203;2;1230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test sort() with numeric option.;;d35,1203;;b1,0;;m">
				</treenode>
				<treenode node="testSortString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1323;2;1353;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sorting with string keys.;;d34,1323;;b1,0;;m">
				</treenode>
				<treenode node="testSortWithOutOfOrderKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f8;1296;2;1316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sorting with out of order keys.;;d46,1296;;b1,0;;m">
				</treenode>
				<treenode node="userData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php;f15;148;2;181;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider;;d35,148;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="Helper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f0;26;20;26;;;;vpos;;v;;r&#xA;Description&#xA;     Abstract base class for all other Helpers in CakePHP. Provides common methods and features.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="HelperCollection;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f0;28;1;202;;;;vpos;;vObjectCollection;;cCakeEventListener;;c;;r&#xA;Description&#xA;     Helpers collection is used as a registry for loaded helpers and handles loading and constructing helper class objects.;;d77,28;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f8;42;2;44;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    View $view - View instance;;d41,42;;b1,0;;mView $view;;p">
					<treenode node="view;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f34;42;39;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f8;83;2;91;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Provide public read access to the loaded objects&#xA;&#xA;Parameters:&#xA;    string $name - Name of property to read;;d30,83;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f23;83;28;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__isset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f8;56;2;75;;;;vpos;;vbool;;r&#xA;Description&#xA;     Tries to lazy load a helper based on its name, if it cannot be found in the application folder, then it tries looking under the current plugin if any&#xA;&#xA;Parameters:&#xA;    string $helper - The helper name to be loaded&#xA;&#xA;Return:&#xA;   whether the helper could be loaded or not;;d34,56;;b1,0;;mstring $helper;;p">
					<treenode node="helper;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f25;56;32;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f8;153;2;162;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a list of all events that will fire in the View during it's lifecycle.;;d37,153;;b1,0;;m">
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f8;114;2;146;;;;vpos;;vHelper;;r&#xA;Description&#xA;     Loads/constructs a helper. Will return the instance in the registry if it already exists. By setting `$enable` to false you can disable callbacks for a helper. Alternatively you can set `$settings['enabled'] = false` to disable callbacks. This alias is provided so that when declaring $helpers arrays you can disable callbacks on helpers.&#xA;&#xA;Parameters:&#xA;    string $helper - Helper name to load&#xA;    array $settings - Settings for the helper&#xA;&#xA;Return:&#xA;   A helper object, Either the existing loaded helper or a new one;;d52,114;;b1,0;;mstring $helper;;parray $settings;;p">
					<treenode node="helper;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f22;114;29;114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f31;114;40;114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trigger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f8;195;2;200;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Trigger a callback method on every object in the collection. Used to trigger methods on objects in the collection. Will fire the methods in the order they were attached.&#xA;&#xA;Parameters:&#xA;    string|CakeEvent $callback - Method to fire on all the objects&#xA;    array $params - Array of parameters for the triggered callback&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   Either the last result or all results if collectReturn is on;;d75,195;;b1,0;;mstring|CakeEvent $callback;;parray $params;;parray $options;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f25;195;34;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f55;195;63;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f36;195;43;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php;f11;35;17;35;;;;vposView;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelperCollectionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f0;33;1;191;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class HelperCollectionTest;;d48,33;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;40;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,40;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;51;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,51;;b1,0;;m">
				</treenode>
				<treenode node="testLazyLoad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;78;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test lazy loading of helpers;;d32,78;;b1,0;;m">
				</treenode>
				<treenode node="testLazyLoadException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;98;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test lazy loading of helpers;;d41,98;;b1,0;;m">
				</treenode>
				<treenode node="testLoad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;62;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test triggering callbacks on loaded helpers;;d28,62;;b1,0;;m">
				</treenode>
				<treenode node="testLoadMissingHelper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;150;2;152;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test missinghelper exception;;d41,150;;b1,0;;m">
				</treenode>
				<treenode node="testLoadPluginHelper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;159;2;169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test loading a plugin helper.;;d40,159;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;107;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading as an alias;;d37,107;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithEnabledFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;136;2;142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the enabled setting disables the helper.;;d44,136;;b1,0;;m">
				</treenode>
				<treenode node="testUnload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f8;176;2;189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test unload();;d30,176;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f0;196;1;1002;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     HelperTest class;;d38,196;;b0,0;;m">
				<treenode node="entityProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f15;240;2;273;;;;vpos;;varray;;r&#xA;Description&#xA;     Provider for setEntity test.;;d41,240;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;203;2;220;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,203;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;227;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,227;;b1,0;;m">
				</treenode>
				<treenode node="testAssetTimestamp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;597;2;628;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assetTimestamp application;;d38,597;;b1,0;;m">
				</treenode>
				<treenode node="testAssetTimestampPluginsAndThemes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;717;2;735;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assetTimestamp with plugins and themes;;d54,717;;b1,0;;m">
				</treenode>
				<treenode node="testAssetUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;635;2;663;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assetUrl application;;d32,635;;b1,0;;m">
				</treenode>
				<treenode node="testAssetUrlNoRewrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;670;2;679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test assetUrl with no rewriting.;;d41,670;;b1,0;;m">
				</treenode>
				<treenode node="testAssetUrlPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;686;2;697;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test assetUrl with plugins.;;d38,686;;b1,0;;m">
				</treenode>
				<treenode node="testAssetUrlTimestampForce;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;704;2;710;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test assetUrl and Asset.timestamp = force;;d46,704;;b1,0;;m">
				</treenode>
				<treenode node="testClean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;830;2;851;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClean method;;d29,830;;b1,0;;m">
				</treenode>
				<treenode node="testDomId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;858;2;861;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDomId method;;d29,858;;b1,0;;m">
				</treenode>
				<treenode node="testFieldSameAsModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;763;2;773;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFieldSameAsModel method;;d40,763;;b1,0;;m">
				</treenode>
				<treenode node="testFieldSuffixForDate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;780;2;790;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFieldSuffixForDate method;;d42,780;;b1,0;;m">
				</treenode>
				<treenode node="testFieldsWithSameName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;742;2;756;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFieldsWithSameName method;;d42,742;;b1,0;;m">
				</treenode>
				<treenode node="testLazyLoadingHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;964;2;973;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test lazy loading helpers is seamless;;d42,964;;b1,0;;m">
				</treenode>
				<treenode node="testLazyLoadingUsesReferences;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;993;2;1000;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the lazy loader doesn't duplicate objects on each access.;;d49,993;;b1,0;;m">
				</treenode>
				<treenode node="testMultiDimensionalField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;868;2;915;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultiDimensionalField method;;d45,868;;b1,0;;m">
				</treenode>
				<treenode node="testMultiDimensionValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;797;2;823;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMulitDimensionValue method;;d43,797;;b1,0;;m">
				</treenode>
				<treenode node="testSetEntity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;299;2;304;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting an entity and retrieving the entity, model and field.;;d73,299;;b1,0;;mentity;;pexpected;;pmodelKey;;pfieldKey;;p">
					<treenode node="entity;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f31;299;38;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f40;299;49;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f62;299;71;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="modelKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f51;299;60;299;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testSetEntityAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;358;2;366;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that setEntity() and model()/field() work with associated models.;;d43,358;;b1,0;;m">
				</treenode>
				<treenode node="testSetEntityAssociatedCamelCaseField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;387;2;398;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that setEntity doesn't make CamelCase fields that are not associations an associated model.;;d57,387;;b1,0;;m">
				</treenode>
				<treenode node="testSetEntityAssociatedCamelCaseFieldHabtmMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;405;2;417;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that multiple fields work when they are camelcase and in fieldset;;d70,405;;b1,0;;m">
				</treenode>
				<treenode node="testSetEntityHabtmPropertyFieldNames;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;424;2;436;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that habtm associations can have property fields created.;;d56,424;;b1,0;;m">
				</treenode>
				<treenode node="testSetEntitySaveMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;373;2;379;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test creating saveMany() compatible entities;;d41,373;;b1,0;;m">
				</treenode>
				<treenode node="testSetEntityScoped;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;311;2;351;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setEntity with setting a scope.;;d39,311;;b1,0;;m">
				</treenode>
				<treenode node="testSetEntityWithView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;443;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that 'view' doesn't break things.;;d41,443;;b1,0;;m">
				</treenode>
				<treenode node="testSettingsMerging;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;280;2;291;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test settings merging;;d39,280;;b1,0;;m">
				</treenode>
				<treenode node="testThatHelperHelpersAreNotAttached;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;980;2;986;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a helpers Helper is not 'attached' to the collection;;d55,980;;b1,0;;m">
				</treenode>
				<treenode node="testUrlConversion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;561;2;590;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure HTML escaping of URL params. So link addresses are valid and not exploited;;d37,561;;b1,0;;m">
				</treenode>
				<treenode node="testValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;454;2;491;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting values from Helper;;d29,454;;b1,0;;m">
				</treenode>
				<treenode node="testValueHabtmKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;518;2;554;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test habtm data fetching and ensure no pollution happens.;;d38,518;;b1,0;;m">
				</treenode>
				<treenode node="testValueWithDefault;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;498;2;511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test default values with value();;d40,498;;b1,0;;m">
				</treenode>
				<treenode node="testWebrootPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;917;2;957;;;;vpos;;v;;r;;d36,917;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelperTestComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f0;68;1;95;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     HelperTestComment class;;d38,68;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;82;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,82;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f24;82;30;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;75;17;75;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelperTestPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f0;28;1;61;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     HelperTestPost class;;d35,28;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;42;2;53;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,42;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f24;42;30;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;60;28;60;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;35;17;35;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelperTestPostsTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f0;133;1;155;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     HelperTestPostsTag class;;d39,133;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;147;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,147;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f24;147;30;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;140;17;140;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelperTestTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f0;102;1;126;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     HelperTestTag class;;d34,102;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;116;2;124;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,116;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f24;116;30;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;109;17;109;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelpFormatter;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f0;30;1;200;;;;vpos;;v;;r&#xA;Description&#xA;     HelpFormatter formats help for console shells. Can format to either text or XML formats. Uses ConsoleOptionParser methods to generate help.;;d20,30;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f8;51;2;53;;;;vpos;;v;;r&#xA;Description&#xA;     Build the help formatter for an OptionParser&#xA;&#xA;Parameters:&#xA;    ConsoleOptionParser $parser - The option parser help is being generated for;;d58,51;;b1,0;;mConsoleOptionParser $parser;;p">
					<treenode node="parser;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f49;51;56;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_generateUsage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f11;133;2;156;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the usage for a shell based on its arguments and options. Usage strings favor short options over the long ones. and optional args will be indicated with [];;d37,133;;b2,0;;m">
				</treenode>
				<treenode node="_getMaxLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f11;164;2;170;;;;vpos;;vint;;r&#xA;Description&#xA;     Iterate over a collection and find the longest named thing.&#xA;&#xA;Parameters:&#xA;    array $collection - The collection to find a max length of;;d47,164;;b2,0;;marray $collection;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f34;164;45;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="text;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f8;61;2;124;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the help as formatted text suitable for output on the command line.&#xA;&#xA;Parameters:&#xA;    int $width - The width of the help output;;d35,61;;b1,0;;mint $width;;p">
					<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f22;61;28;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="xml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f8;178;2;198;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the help as an xml string.&#xA;&#xA;Parameters:&#xA;    bool $string - Return the SimpleXml object or a string&#xA;&#xA;Return:&#xA;   |SimpleXmlElement See $string;;d37,178;;b1,0;;mbool $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f21;178;28;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_maxArgs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f11;37;20;37;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_maxOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php;f11;44;23;44;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="HelpFormatterTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f0;26;1;508;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class HelpFormatterTest;;d45,26;;b0,0;;m">
				<treenode node="testHelpDescriptionAndEpilog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;112;2;140;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test description and epilog in the help;;d48,112;;b1,0;;m">
				</treenode>
				<treenode node="testHelpSubcommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;147;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that help() outputs subcommands.;;d38,147;;b1,0;;m">
				</treenode>
				<treenode node="testHelpWithChoices;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;77;2;105;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test help() with options and arguments that have choices.;;d39,77;;b1,0;;m">
				</treenode>
				<treenode node="testHelpWithLotsOfArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;262;2;279;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a long set of arguments doesn't make useless output.;;d47,262;;b1,0;;m">
				</treenode>
				<treenode node="testHelpWithLotsOfOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;238;2;255;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a long set of options doesn't make useless output.;;d45,238;;b1,0;;m">
				</treenode>
				<treenode node="testHelpWithOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;178;2;200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting help with defined options.;;d39,178;;b1,0;;m">
				</treenode>
				<treenode node="testHelpWithOptionsAndArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;207;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting help with defined options.;;d51,207;;b1,0;;m">
				</treenode>
				<treenode node="testWidthFormatting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;33;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the console max width is respected when generating help.;;d39,33;;b1,0;;m">
				</treenode>
				<treenode node="testXmlHelpAsObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;498;2;507;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test xml help as object;;d39,498;;b1,0;;m">
				</treenode>
				<treenode node="testXmlHelpDescriptionAndEpilog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;336;2;370;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test description and epilog in the help;;d51,336;;b1,0;;m">
				</treenode>
				<treenode node="testXmlHelpSubcommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;377;2;407;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that help() outputs subcommands.;;d41,377;;b1,0;;m">
				</treenode>
				<treenode node="testXmlHelpWithChoices;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;286;2;329;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test help() with options and arguments that have choices.;;d42,286;;b1,0;;m">
				</treenode>
				<treenode node="testXmlHelpWithOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;414;2;448;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting help with defined options.;;d42,414;;b1,0;;m">
				</treenode>
				<treenode node="testXmlHelpWithOptionsAndArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php;f8;455;2;491;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting help with defined options.;;d54,455;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Home;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;899;1;914;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Home class;;d33,899;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;913;18;913;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;906;13;906;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HomeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\HomeFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class HomeFixture;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\HomeFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\HomeFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Html5TestHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f0;88;1;110;;;;vpos;;vTestHtmlHelper;;c;;r&#xA;Description&#xA;     Html5TestHelper class;;d45,88;;b0,0;;m">
				<treenode node="_attributeFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f11;109;28;109;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_minimizedAttributeFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f11;102;37;102;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_minimizedAttributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f11;95;32;95;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="HtmlAliasHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php;f0;25;1;26;;;;vpos;;vHtmlHelper;;c;;r&#xA;Description&#xA;     Extended HtmlHelper;;d41,25;;b0,0;;m">
			</treenode>
			<treenode node="HtmlCoverageReport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f0;25;1;228;;;;vpos;;vBaseCoverageReport;;c;;r&#xA;Description&#xA;     Generates code coverage reports in HTML from data obtained from PHPUnit;;d52,25;;b0,0;;m">
				<treenode node="_guessSubjectName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f11;132;2;140;;;;vpos;;vstring;;r&#xA;Description&#xA;     Guess the class name the test was for based on the test case filename.&#xA;&#xA;Parameters:&#xA;    ReflectionClass $testReflection - The class to reflect&#xA;&#xA;Return:&#xA;   Possible test subject name;;d55,132;;b2,0;;mReflectionClass $testReflection;;p">
					<treenode node="testReflection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f38;132;53;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_paintLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f11;151;2;167;;;;vpos;;vstring;;r&#xA;Description&#xA;     Renders the HTML for a single line in the HTML diff.&#xA;&#xA;Parameters:&#xA;    string $line - The line content&#xA;    int $linenumber - The line number&#xA;    string $class - The classname to use&#xA;    array $coveringTests - The tests covering the line;;d75,151;;b2,0;;mstring $line;;pint $linenumber;;pstring $class;;parray $coveringTests;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f51;151;57;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="coveringTests;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f59;151;73;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f31;151;36;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="linenumber;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f38;151;49;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="coverageFooter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f8;224;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generate an HTML snippet for coverage footers;;d34,224;;b1,0;;m">
				</treenode>
				<treenode node="coverageHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f8;201;2;217;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate an HTML snippet for coverage headers&#xA;&#xA;Parameters:&#xA;    string $filename - The file name being covered&#xA;    string $percent - The percentage covered;;d53,201;;b1,0;;mstring $filename;;pstring $percent;;p">
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f32;201;41;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="percent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f43;201;51;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="coverageScript;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f8;174;2;192;;;;vpos;;vstring;;r&#xA;Description&#xA;     generate some javascript for the coverage report.;;d34,174;;b1,0;;m">
				</treenode>
				<treenode node="generateDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f8;84;2;124;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates an HTML diff for $file based on $coverageData.&#xA;&#xA;Parameters:&#xA;    string $filename - Name of the file having coverage generated&#xA;    array $fileLines - File data as an array&#xA;    array $coverageData - Array of coverage data to use to generate HTML diffs with&#xA;&#xA;Return:&#xA;   HTML diff;;d68,84;;b1,0;;mstring $filename;;parray $fileLines;;parray $coverageData;;p">
					<treenode node="coverageData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f53;84;66;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fileLines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f41;84;51;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f30;84;39;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="report;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f8;46;2;69;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates report HTML to display.&#xA;&#xA;Return:&#xA;   Compiled HTML report;;d26,46;;b1,0;;m">
				</treenode>
				<treenode node="_covered;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f11;39;20;39;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_total;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php;f11;32;18;32;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="HtmlCoverageReportTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f0;28;1;236;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class HtmlCoverageReportTest;;d50,28;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f8;35;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,35;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f8;231;2;235;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,231;;b1,0;;m">
				</treenode>
				<treenode node="testCoveredLinesTitleAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f8;189;2;224;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that covering methods show up as title attributes for lines.;;d51,189;;b1,0;;m">
				</treenode>
				<treenode node="testFilterCoverageDataByPathRemovingElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f8;72;2;87;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test filtering coverage data.;;d64,72;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f8;94;2;134;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generating HTML reports from file arrays.;;d36,94;;b1,0;;m">
				</treenode>
				<treenode node="testGetPathFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f8;52;2;65;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the path filters.;;d37,52;;b1,0;;m">
				</treenode>
				<treenode node="testPhpunit36Compatibility;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php;f8;141;2;182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that coverage works with phpunit 3.6 as the data formats from coverage are totally different.;;d46,141;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HtmlHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f0;31;1;1263;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Html Helper class for easy use of HTML widgets.;;d35,31;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;158;2;168;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    View $View - The View this helper is being attached to&#xA;    array $settings - Configuration settings for the helper;;d62,158;;b1,0;;mView $View;;parray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f41;158;50;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f34;158;39;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_nestedListItem;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f11;1159;2;1176;;;;vpos;;vstring;;r&#xA;Description&#xA;     Internal function to build a nested list (UL/OL) out of an associative array.&#xA;&#xA;Parameters:&#xA;    array $items - Set of elements to list&#xA;    array $options - Additional HTML attributes of the list (ol/ul) tag&#xA;    array $itemOptions - Additional HTML attributes of the list item (LI) tag&#xA;    string $tag - Type of list tag to use (ol/ul)&#xA;&#xA;Return:&#xA;   The nested list element;;d74,1159;;b2,0;;marray $items;;parray $options;;parray $itemOptions;;pstring $tag;;p">
					<treenode node="itemOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f54;1159;66;1159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="items;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f36;1159;42;1159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f44;1159;52;1159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tag;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f68;1159;72;1159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_prepareCrumbs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f11;772;2;787;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepends startText to crumbs array if set&#xA;&#xA;Parameters:&#xA;    string $startText - Text to prepend&#xA;    bool $escape - If the output should be escaped or not&#xA;&#xA;Return:&#xA;   Crumb list including startText (if provided);;d63,772;;b2,0;;mstring $startText;;pbool $escape;;p">
					<treenode node="escape;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f47;772;54;772;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="startText;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f35;772;45;772;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addCrumb;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;180;2;183;;;;vpos;;v;;r&#xA;Description&#xA;     Adds a link to the breadcrumbs array.&#xA;&#xA;Parameters:&#xA;    string $name - Text for link&#xA;    string $link - URL for link (if empty it won't be a link)&#xA;    string|array $options - Link attributes e;;d64,180;;b1,0;;mstring $name;;pstring $link;;pstring|array $options;;p">
					<treenode node="link;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f33;180;38;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f26;180;31;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f47;180;55;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="charset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;303;2;308;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a charset META-tag.&#xA;&#xA;Parameters:&#xA;    string $charset - The character set to be used in the meta tag&#xA;&#xA;Return:&#xA;   A meta tag containing the specified character set;;d42,303;;b1,0;;mstring $charset;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f25;303;33;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="css;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;416;2;490;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a link element for CSS stylesheets.&#xA;&#xA;Parameters:&#xA;    string|array $path - The name of a CSS style sheet or an array containing names of&#xA;    array $options - Array of options and HTML arguments&#xA;&#xA;Return:&#xA;   CSS &lt;link /&gt; or &lt;style /&gt; tag, depending on the type of link;;d48,416;;b1,0;;mstring|array $path;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f28;416;36;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f21;416;26;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="div;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;979;2;984;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted DIV tag for HTML FORMs.&#xA;&#xA;Parameters:&#xA;    string $class - CSS class name of the div element&#xA;    string $text - String content that will appear inside the div element&#xA;    array $options - Additional HTML attributes of the DIV tag&#xA;&#xA;Return:&#xA;   The formatted DIV element;;d70,979;;b1,0;;mstring $class;;pstring $text;;parray $options;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f21;979;27;979;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f50;979;58;979;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f36;979;41;979;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="docType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;203;2;208;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a doctype string.&#xA;&#xA;Parameters:&#xA;    string $type - Doctype to use&#xA;&#xA;Return:&#xA;   |null Doctype string;;d42,203;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f25;203;30;203;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCrumbList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;728;2;763;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns breadcrumbs as a (x)html list&#xA;&#xA;Parameters:&#xA;    array $options - Array of html attributes to apply to the generated list elements&#xA;    string|array|bool $startText - This will be the first crumb, if false it defaults to first crumb in array&#xA;&#xA;Return:&#xA;   |null breadcrumbs html list;;d70,728;;b1,0;;marray $options;;pstring|array|bool $startText;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;728;38;728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="startText;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f50;728;60;728;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getCrumbs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;694;2;708;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the breadcrumb trail as a sequence of &amp;raquo;s-separated links.&#xA;&#xA;Parameters:&#xA;    string $separator - Text to separate crumbs&#xA;    string|array|bool $startText - This will be the first crumb, if false it defaults to first crumb in array&#xA;&#xA;Return:&#xA;   |null Composed bread crumbs;;d71,694;;b1,0;;mstring $separator;;pstring|array|bool $startText;;p">
					<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f27;694;37;694;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="startText;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f51;694;61;694;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="image;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;816;2;836;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a formatted IMG element.&#xA;&#xA;Parameters:&#xA;    string $path - Path to the image file, relative to the app/webroot/img/ directory&#xA;    array $options - Array of HTML attributes&#xA;&#xA;Return:&#xA;   completed img tag;;d50,816;;b1,0;;mstring $path;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;816;38;816;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f23;816;28;816;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="link;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;333;2;373;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates an HTML link.&#xA;&#xA;Parameters:&#xA;    string $title - The content to be wrapped by &lt;a&gt; tags&#xA;    string|array $url - Cake-relative URL or array of URL parameters, or external URL (starts with http://)&#xA;    array $options - Array of options and HTML attributes&#xA;    string $confirmMessage - JavaScript confirmation message&#xA;&#xA;Return:&#xA;   An `&lt;a /&gt;` element;;d88,333;;b1,0;;mstring $title;;pstring|array $url;;parray $options;;pstring $confirmMessage;;p">
					<treenode node="confirmMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f63;333;78;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f43;333;51;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f22;333;28;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;333;34;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;1219;2;1261;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Load Html tag configuration.&#xA;&#xA;Parameters:&#xA;    string|array $configFile - String with the config file (load using PhpReader) or an array with file and reader name&#xA;    string $path - Path with config file&#xA;&#xA;Return:&#xA;   False to error or loaded configs;;d55,1219;;b1,0;;mstring|array $configFile;;pstring $path;;p">
					<treenode node="configFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f28;1219;39;1219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f41;1219;46;1219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="media;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;1065;2;1128;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns an audio/video element&#xA;&#xA;Parameters:&#xA;    string|array $path - Path to the video file, relative to the webroot/{$options['pathPrefix']} directory&#xA;    array $options - Array of HTML attributes, and special options above&#xA;&#xA;Return:&#xA;   Generated media element;;d50,1065;;b1,0;;mstring|array $path;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;1065;38;1065;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f23;1065;28;1065;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="meta;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;239;2;293;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a link to an external resource and handles basic meta tags&#xA;&#xA;Parameters:&#xA;    string $type - The title of the external resource&#xA;    string|array $url - The address of the external resource or string for content attribute&#xA;    array $options - Other attributes for the generated tag&#xA;&#xA;Return:&#xA;   A completed `&lt;link /&gt;` element;;d62,239;;b1,0;;mstring $type;;pstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f42;239;50;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f22;239;27;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f29;239;33;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;1140;2;1147;;;;vpos;;vstring;;r&#xA;Description&#xA;     Build a nested list (UL/OL) out of an associative array.&#xA;&#xA;Parameters:&#xA;    array $list - Set of elements to list&#xA;    array $options - Additional HTML attributes of the list (ol/ul) tag or if ul/ol use that as tag&#xA;    array $itemOptions - Additional HTML attributes of the list item (LI) tag&#xA;    string $tag - Type of list tag to use (ol/ul)&#xA;&#xA;Return:&#xA;   The nested list;;d92,1140;;b1,0;;marray $list;;parray $options;;parray $itemOptions;;pstring $tag;;p">
					<treenode node="itemOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f55;1140;67;1140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f28;1140;33;1140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f35;1140;43;1140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tag;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f79;1140;83;1140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="para;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;999;2;1011;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted P tag.&#xA;&#xA;Parameters:&#xA;    string $class - CSS class name of the p element&#xA;    string $text - String content that will appear inside the p element&#xA;    array $options - Additional HTML attributes of the P tag&#xA;&#xA;Return:&#xA;   The formatted P element;;d57,999;;b1,0;;mstring $class;;pstring $text;;parray $options;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f22;999;28;999;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f37;999;45;999;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;999;35;999;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="script;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;533;2;574;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns one or many `&lt;script&gt;` tags depending on the number of scripts given.&#xA;&#xA;Parameters:&#xA;    string|array $url - String or array of javascript files to include&#xA;    array|bool $options - Array of options, and html attributes see above&#xA;&#xA;Return:&#xA;   String of `&lt;script /&gt;` tags or null if $inline is false or if $once is true and the file has been;;d50,533;;b1,0;;mstring|array $url;;parray|bool $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;533;38;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f24;533;28;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="scriptBlock;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;593;2;610;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Wrap $script in a script tag.&#xA;&#xA;Parameters:&#xA;    string $script - The script to wrap&#xA;    array $options - The options to use&#xA;&#xA;Return:&#xA;   string or null depending on the value of `$options['block']`;;d58,593;;b1,0;;mstring $script;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f38;593;46;593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="script;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f29;593;36;593;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="scriptEnd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;640;2;645;;;;vpos;;vmixed;;r&#xA;Description&#xA;     End a Buffered section of JavaScript capturing. Generates a script tag inline or in `$scripts_for_layout` depending on the settings used when the scriptBlock was started&#xA;&#xA;Return:&#xA;   depending on the settings of scriptStart() either a script tag or null;;d29,640;;b1,0;;m">
				</treenode>
				<treenode node="scriptStart;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;626;2;630;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Begin a script block that captures output until HtmlHelper::scriptEnd() is called. This capturing block will capture all output between the methods and create a scriptBlock from it.&#xA;&#xA;Parameters:&#xA;    array $options - Options for the code block;;d49,626;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f29;626;37;626;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="style;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;664;2;676;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds CSS style data from an array of CSS properties&#xA;&#xA;Parameters:&#xA;    array $data - Style data array, keys will be used as property names, values as property values&#xA;    bool $oneline - Whether or not the style block should be displayed on one line&#xA;&#xA;Return:&#xA;   CSS styling data;;d47,664;;b1,0;;marray $data;;pbool $oneline;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f23;664;28;664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="oneline;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;664;38;664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tableCells;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;872;2;912;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted string of table rows (TR's with TD's in them).&#xA;&#xA;Parameters:&#xA;    array $data - Array of table data&#xA;    array $oddTrOptions - HTML options for odd TR elements if true useCount is used&#xA;    array $evenTrOptions - HTML options for even TR elements&#xA;    bool $useCount - adds class &quot;column-$i&quot;&#xA;    bool $continueOddEven - If false, will use a non-static $count variable,&#xA;&#xA;Return:&#xA;   Formatted HTML;;d124,872;;b1,0;;marray $data;;parray $oddTrOptions;;parray $evenTrOptions;;pbool $useCount;;pbool $continueOddEven;;p">
					<treenode node="continueOddEven;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f99;872;115;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f28;872;33;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="evenTrOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f57;872;71;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="oddTrOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f35;872;48;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useCount;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f80;872;89;872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tableHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;848;2;858;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a row of formatted and named TABLE headers.&#xA;&#xA;Parameters:&#xA;    array $names - Array of tablenames&#xA;    array $trOptions - HTML options for TR elements&#xA;    array $thOptions - HTML options for TH elements&#xA;&#xA;Return:&#xA;   Completed table headers;;d76,848;;b1,0;;marray $names;;parray $trOptions;;parray $thOptions;;p">
					<treenode node="names;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f30;848;36;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="thOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f57;848;67;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="trOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f38;848;48;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;928;2;942;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted block tag, i.e DIV, SPAN, P.&#xA;&#xA;Parameters:&#xA;    string $name - Tag name&#xA;    string $text - String content that will appear inside the div element&#xA;    array $options - Additional HTML attributes of the DIV tag, see above&#xA;&#xA;Return:&#xA;   The formatted tag element;;d62,928;;b1,0;;mstring $name;;pstring $text;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f21;928;26;928;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f42;928;50;928;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f28;928;33;928;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useTag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;951;2;963;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted existent block of $tags&#xA;&#xA;Parameters:&#xA;    string $tag - Tag name&#xA;&#xA;Return:&#xA;   Formatted block;;d30,951;;b1,0;;mstring $tag;;p">
					<treenode node="tag;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f24;951;28;951;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_crumbs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f11;111;19;111;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_docTypes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f11;132;21;132;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_includedAssets;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f11;118;27;118;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_scriptBlockOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f11;125;31;125;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_tags;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f11;45;17;45;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php;f8;38;17;38;;;;vposCakeResponse;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HtmlHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f0;117;1;2300;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     HtmlHelperTest class;;d42,117;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;145;2;157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,145;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;164;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,164;;b1,0;;m">
				</treenode>
				<treenode node="testBreadcrumb;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1388;2;1468;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetCrumb and addCrumb method;;d34,1388;;b1,0;;m">
				</treenode>
				<treenode node="testBufferedCssAndScriptWithIdenticalResourceName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;906;2;915;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Resource names must be treated differently for css() and script();;d69,906;;b1,0;;m">
				</treenode>
				<treenode node="testCharsetTag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1370;2;1381;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCharsetTag method;;d34,1370;;b1,0;;m">
				</treenode>
				<treenode node="testCrumbList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2078;2;2103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCrumbList method;;d33,2078;;b1,0;;m">
				</treenode>
				<treenode node="testCrumbListBootstrapStyle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2156;2;2182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getCrumbList() in Twitter Bootstrap style.;;d47,2156;;b1,0;;m">
				</treenode>
				<treenode node="testCrumbListFirstLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2110;2;2149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getCrumbList startText;;d42,2110;;b1,0;;m">
				</treenode>
				<treenode node="testCrumbListZurbStyle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2189;2;2216;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test GetCrumbList using style of Zurb Foundation.;;d42,2189;;b1,0;;m">
				</treenode>
				<treenode node="testCssLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;608;2;696;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCssLink method;;d31,608;;b1,0;;m">
				</treenode>
				<treenode node="testCssLinkBC;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;728;2;756;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test css link BC usage;;d33,728;;b1,0;;m">
				</treenode>
				<treenode node="testCssLinkOnce;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;703;2;721;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test css() with once option.;;d35,703;;b1,0;;m">
				</treenode>
				<treenode node="testCssTimestamping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;822;2;855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test use of css() and timestamping;;d39,822;;b1,0;;m">
				</treenode>
				<treenode node="testCssWithFullBase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;763;2;772;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCssWithFullBase method;;d39,763;;b1,0;;m">
				</treenode>
				<treenode node="testDiv;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1979;2;1988;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDiv method;;d27,1979;;b1,0;;m">
				</treenode>
				<treenode node="testDocType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;174;2;184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDocType method;;d31,174;;b1,0;;m">
				</treenode>
				<treenode node="testGetCrumbFirstLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1475;2;1506;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the array form of $startText;;d41,1475;;b1,0;;m">
				</treenode>
				<treenode node="testImagePathPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;442;2;457;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that image works with pathPrefix.;;d39,442;;b1,0;;m">
				</treenode>
				<treenode node="testImageQueryString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;424;2;435;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test image() with query strings.;;d40,424;;b1,0;;m">
				</treenode>
				<treenode node="testImageTag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;400;2;417;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testImageTag method;;d32,400;;b1,0;;m">
				</treenode>
				<treenode node="testImageTagWithTheme;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;514;2;553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests creation of an image tag using a theme and asset timestamping;;d41,514;;b1,0;;m">
				</treenode>
				<treenode node="testImageWithFullBase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;464;2;481;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that image() works with fullBase and a webroot not equal to /;;d41,464;;b1,0;;m">
				</treenode>
				<treenode node="testImageWithTimestampping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;488;2;507;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test image() with Asset.timestamp;;d46,488;;b1,0;;m">
				</treenode>
				<treenode node="testLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;191;2;393;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLink method;;d28,191;;b1,0;;m">
				</treenode>
				<treenode node="testLoadConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2224;2;2247;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadConfig method;;d34,2224;;b1,0;;m">
				</treenode>
				<treenode node="testLoadConfigWrongFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2255;2;2257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadConfigWrongFile method;;d43,2255;;b1,0;;m">
				</treenode>
				<treenode node="testLoadConfigWrongReader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2265;2;2268;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadConfigWrongReader method;;d45,2265;;b1,0;;m">
				</treenode>
				<treenode node="testMedia;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2011;2;2071;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMedia method;;d29,2011;;b1,0;;m">
				</treenode>
				<treenode node="testMeta;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1726;2;1764;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMeta method;;d28,1726;;b1,0;;m">
				</treenode>
				<treenode node="testMetaIcon;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1771;2;1811;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generating favicon's with meta();;d32,1771;;b1,0;;m">
				</treenode>
				<treenode node="testMetaWithBlocks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1818;2;1832;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the inline and block options for meta();;d38,1818;;b1,0;;m">
				</treenode>
				<treenode node="testNestedList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1513;2;1719;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNestedList method;;d34,1513;;b1,0;;m">
				</treenode>
				<treenode node="testPara;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1995;2;2004;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPara method;;d28,1995;;b1,0;;m">
				</treenode>
				<treenode node="testParseAttributeCompact;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;2275;2;2298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test parsing attributes.;;d45,2275;;b1,0;;m">
				</treenode>
				<treenode node="testPluginCssLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;779;2;815;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginCssLink method;;d37,779;;b1,0;;m">
				</treenode>
				<treenode node="testPluginCssTimestamping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;862;2;899;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test use of css() and timestamping with plugin syntax;;d45,862;;b1,0;;m">
				</treenode>
				<treenode node="testPluginScript;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1074;2;1132;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that plugin scripts added with uses() are only ever included once. test script tag generation with plugin syntax;;d36,1074;;b1,0;;m">
				</treenode>
				<treenode node="testPluginScriptTimestamping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;947;2;971;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test timestamp enforcement for script tags with plugin syntax.;;d48,947;;b1,0;;m">
				</treenode>
				<treenode node="testScript;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;979;2;1066;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that scripts added with uses() are only ever included once. test script tag generation;;d30,979;;b1,0;;m">
				</treenode>
				<treenode node="testScriptAssetFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1167;2;1181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Asset.filter.js works.;;d41,1167;;b1,0;;m">
				</treenode>
				<treenode node="testScriptBlock;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1247;2;1307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Script block generation;;d35,1247;;b1,0;;m">
				</treenode>
				<treenode node="testScriptInTheme;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1212;2;1240;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a script file in the webroot/theme dir.;;d37,1212;;b1,0;;m">
				</treenode>
				<treenode node="testScriptStartAndScriptEnd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1314;2;1363;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test script tag output buffering when using scriptStart() and scriptEnd();s;;d47,1314;;b1,0;;m">
				</treenode>
				<treenode node="testScriptTimestamping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;922;2;940;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test timestamp enforcement for script tags.;;d42,922;;b1,0;;m">
				</treenode>
				<treenode node="testScriptWithBlocks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1139;2;1160;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that script() works with blocks.;;d40,1139;;b1,0;;m">
				</treenode>
				<treenode node="testScriptWithFullBase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1188;2;1205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testScriptWithFullBase method;;d42,1188;;b1,0;;m">
				</treenode>
				<treenode node="testStyle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;589;2;601;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStyle method;;d29,589;;b1,0;;m">
				</treenode>
				<treenode node="testTableCells;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1862;2;1928;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTableCells method;;d34,1862;;b1,0;;m">
				</treenode>
				<treenode node="testTableHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1839;2;1855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTableHeaders method;;d36,1839;;b1,0;;m">
				</treenode>
				<treenode node="testTag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1935;2;1953;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTag method;;d27,1935;;b1,0;;m">
				</treenode>
				<treenode node="testThemeAssetsInMainWebrootPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;560;2;582;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test theme assets in main webroot path;;d52,560;;b1,0;;m">
				</treenode>
				<treenode node="testUseTag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;1960;2;1972;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUseTag method;;d30,1960;;b1,0;;m">
				</treenode>
				<treenode node="cDataEnd;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;131;17;131;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cDataStart;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;124;19;124;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Html;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;138;13;138;;;;vposobject;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HttpException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f1;63;2;64;;;;vpos;;vCakeBaseException;;c;;r&#xA;Description&#xA;     Parent class for all of the HTTP related exceptions in CakePHP. All HTTP status/error related exceptions should extend this class so catch blocks can be specifically typed.;;d47,63;;b0,0;;m">
			</treenode>
			<treenode node="HttpResponse;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpResponse.php;f0;32;1;34;;;;vpos;;vHttpSocketResponse;;c;;r&#xA;Description&#xA;     HTTP Response from HttpSocket.;;d46,32;;b0,0;;m">
			</treenode>
			<treenode node="HttpResponseTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f0;84;1;581;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     HttpResponseTest class;;d44,84;;b0,0;;m">
				<treenode node="invalidParseResponseDataProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f15;342;2;349;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider function for testInvalidParseResponseData;;d59,342;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;91;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     This function sets up a HttpResponse;;d25,91;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;532;2;579;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testArrayAccess;;d35,532;;b1,0;;m">
				</treenode>
				<treenode node="testBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;101;2;107;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBody;;d28,101;;b1,0;;m">
				</treenode>
				<treenode node="testDecodeBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;367;2;391;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecodeBody method;;d34,367;;b1,0;;m">
				</treenode>
				<treenode node="testDecodeChunkedBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;420;2;449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecodeChunkedBody method;;d41,420;;b1,0;;m">
				</treenode>
				<treenode node="testDecodeChunkedBodyError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;456;2;461;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecodeChunkedBodyError method;;d46,456;;b1,0;;m">
				</treenode>
				<treenode node="testDecodeFooCoded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;398;2;413;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecodeFooCoded;;d38,398;;b1,0;;m">
				</treenode>
				<treenode node="testGetHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;129;2;146;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetHeader;;d33,129;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidParseResponseData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;358;2;360;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInvalidParseResponseData;;d54,358;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f46;358;52;358;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testIsOk;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;153;2;188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsOk;;d28,153;;b1,0;;m">
				</treenode>
				<treenode node="testIsRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;195;2;224;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIsRedirect;;d34,195;;b1,0;;m">
				</treenode>
				<treenode node="testParseCookies;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;468;2;502;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseCookies method;;d36,468;;b1,0;;m">
				</treenode>
				<treenode node="testParseHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;231;2;283;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that HttpSocket::parseHeader can take apart a given (and valid) $header string and turn it into an array.;;d35,231;;b1,0;;m">
				</treenode>
				<treenode node="testParseResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;290;2;335;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseResponse method;;d37,290;;b1,0;;m">
				</treenode>
				<treenode node="testToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;114;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToString;;d32,114;;b1,0;;m">
				</treenode>
				<treenode node="testUnescapeToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;509;2;525;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that escaped token strings are properly unescaped by HttpSocket::unescapeToken;;d37,509;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HttpSocket;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f0;30;1;1064;;;;vpos;;vCakeSocket;;c;;r&#xA;Description&#xA;     CakePHP network socket connection class.;;d36,30;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;152;2;163;;;;vpos;;v;;r&#xA;Description&#xA;     Build an HTTP Socket using the specified configuration.&#xA;&#xA;Parameters:&#xA;    string|array $config - Configuration information, either a string URL or an array of options;;d48,152;;b1,0;;mstring|array $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f29;152;36;152;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_buildHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;948;2;979;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds the header.&#xA;&#xA;Parameters:&#xA;    array $header - Header to build&#xA;    string $mode - Mode&#xA;&#xA;Return:&#xA;   Header built from array;;d62,948;;b2,0;;marray $header;;pstring $mode;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f33;948;40;948;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f42;948;47;948;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_buildRequestLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;911;2;939;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds a request line according to HTTP/1.1 specs. Activate quirks mode to work outside specs.&#xA;&#xA;Parameters:&#xA;    array $request - Needs to contain a 'uri' key&#xA;&#xA;Return:&#xA;   Request line;;d58,911;;b2,0;;marray $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f38;911;46;911;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_buildUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;735;2;773;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Takes a $uri array and turns it into a fully qualified URL string&#xA;&#xA;Parameters:&#xA;    string|array $uri - Either A $uri array, or a request string&#xA;    string $uriTemplate - The Uri template/format to use&#xA;&#xA;Return:&#xA;   A fully qualified URL formatted according to $uriTemplate, or false on failure;;d121,735;;b2,0;;mstring|array $uri;;pstring $uriTemplate;;p">
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f30;735;34;735;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uriTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f46;735;58;735;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_configContext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;708;2;726;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Configure the socket's context. Adds in configuration that can not be declared in the class definition.&#xA;&#xA;Parameters:&#xA;    string $host - The host you're connecting to;;d42,708;;b2,0;;mstring $host;;p">
					<treenode node="host;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f35;708;40;708;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_configUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;677;2;699;;;;vpos;;vbool;;r&#xA;Description&#xA;     Parses and sets the specified URI into current request configuration.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI, See HttpSocket::_parseUri()&#xA;&#xA;Return:&#xA;   If uri has merged in config;;d44,677;;b2,0;;mstring|array $uri;;p">
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f31;677;35;677;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_escapeToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;1010;2;1014;;;;vpos;;vstring;;r&#xA;Description&#xA;     Escapes a given $token according to RFC 2616 (HTTP 1.1 specs)&#xA;&#xA;Parameters:&#xA;    string $token - Token to escape&#xA;    array $chars - Characters to escape&#xA;&#xA;Return:&#xA;   Escaped token;;d56,1010;;b2,0;;mstring $token;;parray $chars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f41;1010;47;1010;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="token;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f33;1010;39;1010;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;848;2;902;;;;vpos;;varray;;r&#xA;Description&#xA;     This function can be thought of as a reverse to PHP5's http_build_query(). It takes a given query string and turns it into an array and supports nesting by using the php bracket syntax. So this means you can parse queries like:&#xA;&#xA;Parameters:&#xA;    string|array $query - A query string to parse into an array or an array to return directly &quot;as is&quot;&#xA;&#xA;Return:&#xA;   The $query parsed into a possibly multi-level array;;d40,848;;b2,0;;mstring|array $query;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f32;848;38;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;783;2;832;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses the given URI and breaks it down into pieces as an indexed array with elements such as 'scheme', 'port', 'query'.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to parse&#xA;    bool|array $base - If true use default URI config, otherwise indexed array to set 'scheme', 'host', 'port', etc&#xA;&#xA;Return:&#xA;   Parsed URI;;d60,783;;b2,0;;mstring|array $uri;;pbool|array $base;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f43;783;48;783;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f30;783;34;783;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;624;2;640;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set authentication in request;;d31,624;;b2,0;;m">
				</treenode>
				<treenode node="_setProxy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;648;2;669;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the proxy configuration and authentication;;d32,648;;b2,0;;m">
				</treenode>
				<treenode node="_tokenEscapeChars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;1023;2;1041;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets escape chars according to RFC 2616 (HTTP 1.1 specs).&#xA;&#xA;Parameters:&#xA;    bool $hex - true to get them as HEX values, false otherwise&#xA;    array $chars - Characters to escape&#xA;&#xA;Return:&#xA;   Escape chars;;d66,1023;;b2,0;;mbool $hex;;parray $chars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f51;1023;57;1023;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f38;1023;42;1023;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildCookies;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;990;2;1001;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds cookie headers for a request.&#xA;&#xA;Parameters:&#xA;    array $cookies - Array of cookies to send with the request&#xA;&#xA;Return:&#xA;   Cookie header string to be sent with the request;;d40,990;;b1,0;;marray $cookies;;p">
					<treenode node="cookies;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f30;990;38;990;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;196;2;206;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set authentication settings.&#xA;&#xA;Parameters:&#xA;    string $method - Authentication method (ie&#xA;    string|array $user - Username for authentication&#xA;    string $pass - Password for authentication;;d65,196;;b1,0;;mstring $method;;pstring|array $user;;pstring $pass;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f28;196;35;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f51;196;56;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f37;196;42;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configProxy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;218;2;228;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set proxy settings&#xA;&#xA;Parameters:&#xA;    string|array $host - Proxy host&#xA;    int $port - Port&#xA;    string $method - Proxy method (ie, Basic, Digest)&#xA;    string $user - Username if your proxy need authentication&#xA;    string $pass - Password to proxy authentication;;d94,218;;b1,0;;mstring|array $host;;pint $port;;pstring $method;;pstring $user;;pstring $pass;;p">
					<treenode node="host;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f29;218;34;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f50;218;57;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="pass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f80;218;85;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="port;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f36;218;41;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f66;218;71;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;550;2;553;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Issues a DELETE request to the specified URI, query, and request.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to request (see {&#xA;    array $data - Array of request body data keys and values&#xA;    array $request - An indexed array with indexes such as 'method' or uri&#xA;&#xA;Return:&#xA;   Result of request;;d74,550;;b1,0;;mstring|array $uri;;parray $data;;parray $request;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f37;550;42;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f54;550;62;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f24;550;28;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;453;2;466;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Issues a GET request to the specified URI, query, and request.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to request&#xA;    array $query - Querystring parameters to append to URI&#xA;    array $request - An indexed array with indexes such as 'method' or uri&#xA;&#xA;Return:&#xA;   Result of request, either false on failure or the response to the request;;d72,453;;b1,0;;mstring|array $uri;;parray $query;;parray $request;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f34;453;40;453;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f52;453;60;453;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f21;453;25;453;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="head;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;479;2;492;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Issues a HEAD request to the specified URI, query, and request.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to request&#xA;    array $query - Querystring parameters to append to URI&#xA;    array $request - An indexed array with indexes such as 'method' or uri&#xA;&#xA;Return:&#xA;   Result of request, either false on failure or the response to the request;;d73,479;;b1,0;;mstring|array $uri;;parray $query;;parray $request;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f35;479;41;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f53;479;61;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f22;479;26;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="patch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;537;2;540;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Issues a PATCH request to the specified URI, query, and request.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to request, See HttpSocket::_parseUri()&#xA;    array $data - Array of request body data keys and values&#xA;    array $request - An indexed array with indexes such as 'method' or uri&#xA;&#xA;Return:&#xA;   Result of request;;d73,537;;b1,0;;mstring|array $uri;;parray $data;;parray $request;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f36;537;41;537;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f53;537;61;537;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f23;537;27;537;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="post;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;511;2;514;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Issues a POST request to the specified URI, query, and request.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to request&#xA;    array $data - Array of request body data keys and values&#xA;    array $request - An indexed array with indexes such as 'method' or uri&#xA;&#xA;Return:&#xA;   Result of request, either false on failure or the response to the request;;d72,511;;b1,0;;mstring|array $uri;;parray $data;;parray $request;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f35;511;40;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f52;511;60;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f22;511;26;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="put;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;524;2;527;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Issues a PUT request to the specified URI, query, and request.&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to request, See HttpSocket::_parseUri()&#xA;    array $data - Array of request body data keys and values&#xA;    array $request - An indexed array with indexes such as 'method' or uri&#xA;&#xA;Return:&#xA;   Result of request;;d71,524;;b1,0;;mstring|array $uri;;parray $data;;parray $request;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f34;524;39;524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f51;524;59;524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f21;524;25;524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;256;2;428;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Issue the specified request. HttpSocket::get() and HttpSocket::post() wrap this method and provide a more granular interface.&#xA;&#xA;Parameters:&#xA;    string|array $request - Either an URI string, or an array defining host/uri&#xA;&#xA;Return:&#xA;   false on error, HttpSocketResponse on success;;d45,256;;b1,0;;mstring|array $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f25;256;33;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;1050;2;1062;;;;vpos;;vbool;;r&#xA;Description&#xA;     Resets the state of this HttpSocket instance to it's initial state (before Object::__construct got executed) or does the same thing partially for the request and the response property only.&#xA;&#xA;Parameters:&#xA;    bool $full - If set to false only HttpSocket::response and HttpSocket::request are reset&#xA;&#xA;Return:&#xA;   True on success;;d37,1050;;b1,0;;mbool $full;;p">
					<treenode node="full;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f23;1050;28;1050;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setContentResource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;237;2;246;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the resource to receive the request content. This resource must support fwrite.&#xA;&#xA;Parameters:&#xA;    resource|bool $resource - Resource or false to disable the resource use;;d47,237;;b1,0;;mresource|bool $resource;;p">
					<treenode node="resource;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f36;237;45;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="url;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;582;2;616;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Normalizes URLs into a $uriTemplate. If no template is provided a default one will be used. Will generate the URL using the current config information.&#xA;&#xA;Parameters:&#xA;    string|array $url - Either a string or array of URL options to create a URL with&#xA;    string $uriTemplate - A template string to use for URL formatting&#xA;&#xA;Return:&#xA;   Either false on failure or a string containing the composed URL;;d55,582;;b1,0;;mstring|array $url;;pstring $uriTemplate;;p">
					<treenode node="uriTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f34;582;46;582;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f21;582;25;582;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_auth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;115;17;115;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_contentResource;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;129;28;129;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_proxy;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f11;122;18;122;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;89;15;89;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="quirksMode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;39;19;39;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;46;16;46;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;75;17;75;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="responseClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php;f8;82;22;82;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HttpSocketResponse;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f0;22;1;446;;;;vpos;;vArrayAccess;;c;;r&#xA;Description&#xA;     HTTP Response from HttpSocket.;;d48,22;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;86;2;90;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - Message to parse;;d46,86;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f29;86;37;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__toString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;442;2;444;;;;vpos;;vstring;;r&#xA;Description&#xA;     Instance as string;;d30,442;;b1,0;;m">
				</treenode>
				<treenode node="_decodeBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f11;191;2;204;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Generic function to decode a $body with a given $encoding. Returns either an array with the keys 'body' and 'header' or false on failure.&#xA;&#xA;Parameters:&#xA;    string $body - A string containing the body to decode&#xA;    string|bool $encoding - Can be false in case no encoding is being used, or a string representing the encoding&#xA;&#xA;Return:&#xA;   Array of response headers and body or false;;d62,191;;b2,0;;mstring $body;;pstring|bool $encoding;;p">
					<treenode node="body;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f32;191;37;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f39;191;48;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_decodeChunkedBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f11;214;2;255;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Decodes a chunked message $body and returns either an array with the keys 'body' and 'header' or false as a result.&#xA;&#xA;Parameters:&#xA;    string $body - A string containing the chunked body to decode&#xA;&#xA;Return:&#xA;   Array of response headers and body or false;;d46,214;;b2,0;;mstring $body;;p">
					<treenode node="body;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f39;214;44;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f11;263;2;288;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses an array based header.&#xA;&#xA;Parameters:&#xA;    array $header - Header as an indexed array (field =&gt; value)&#xA;&#xA;Return:&#xA;   Parsed header;;d42,263;;b2,0;;marray $header;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f33;263;40;263;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_tokenEscapeChars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f11;351;2;369;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets escape chars according to RFC 2616 (HTTP 1.1 specs).&#xA;&#xA;Parameters:&#xA;    bool $hex - True to get them as HEX values, false otherwise&#xA;    array $chars - Characters to uescape&#xA;&#xA;Return:&#xA;   Escape chars;;d66,351;;b2,0;;mbool $hex;;parray $chars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f51;351;57;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f38;351;42;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_unescapeToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f11;338;2;342;;;;vpos;;vstring;;r&#xA;Description&#xA;     Unescapes a given $token according to RFC 2616 (HTTP 1.1 specs)&#xA;&#xA;Parameters:&#xA;    string $token - Token to unescape&#xA;    array $chars - Characters to unescape&#xA;&#xA;Return:&#xA;   Unescaped token;;d58,338;;b2,0;;mstring $token;;parray $chars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f43;338;49;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="token;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f35;338;41;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="body;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;97;2;99;;;;vpos;;vstring;;r&#xA;Description&#xA;     Body content;;d24,97;;b1,0;;m">
				</treenode>
				<treenode node="getHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;108;2;121;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get header in case insensitive&#xA;&#xA;Parameters:&#xA;    string $name - Header name&#xA;    array $headers - Headers to format&#xA;&#xA;Return:&#xA;   String if header exists or null;;d51,108;;b1,0;;mstring $name;;parray $headers;;p">
					<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f34;108;42;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f27;108;32;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isOk;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;128;2;130;;;;vpos;;vbool;;r&#xA;Description&#xA;     If return is 200 (OK);;d24,128;;b1,0;;m">
				</treenode>
				<treenode node="isRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;137;2;139;;;;vpos;;vbool;;r&#xA;Description&#xA;     If return is a valid 3xx (Redirection);;d30,137;;b1,0;;m">
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;377;2;379;;;;vpos;;vbool;;r&#xA;Description&#xA;     ArrayAccess - Offset Exists&#xA;&#xA;Parameters:&#xA;    string $offset - Offset to check;;d39,377;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f30;377;37;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;387;2;416;;;;vpos;;vmixed;;r&#xA;Description&#xA;     ArrayAccess - Offset Get&#xA;&#xA;Parameters:&#xA;    string $offset - Offset to get;;d36,387;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f27;387;34;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;425;2;426;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ArrayAccess - Offset Set&#xA;&#xA;Parameters:&#xA;    string $offset - Offset to set&#xA;    mixed $value - Value;;d44,425;;b1,0;;mstring $offset;;pmixed $value;;p">
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f27;425;34;425;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f36;425;42;425;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;434;2;435;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ArrayAccess - Offset Unset&#xA;&#xA;Parameters:&#xA;    string $offset - Offset to unset;;d38,434;;b1,0;;mstring $offset;;p">
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f29;434;36;434;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseCookies;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;296;2;329;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Parses cookies in response headers.&#xA;&#xA;Parameters:&#xA;    array $header - Header array containing one ore more 'Set-Cookie' headers&#xA;&#xA;Return:&#xA;   Either false on no cookies, or an array of cookies received;;d39,296;;b1,0;;marray $header;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f30;296;37;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;148;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parses the given message and breaks it down in parts.&#xA;&#xA;Parameters:&#xA;    string $message - Message to parse;;d41,148;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f31;148;39;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="body;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;29;13;29;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;57;13;57;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;79;16;79;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cookies;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;36;16;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="httpVersion;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;50;20;50;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="raw;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;71;12;71;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="reasonPhrase;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php;f8;64;21;64;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="HttpSocketTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f0;171;1;1877;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     HttpSocketTest class;;d42,171;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;192;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     This function sets up a TestHttpSocket instance we are going to use for testing;;d25,192;;b1,0;;m">
				</treenode>
				<treenode node="statusProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1844;2;1853;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for status codes.;;d34,1844;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;203;2;206;;;;vpos;;vvoid;;r&#xA;Description&#xA;     We use this function to clean up after the test case was executed;;d28,203;;b1,0;;m">
				</treenode>
				<treenode node="testAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1107;2;1141;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test authentication;;d28,1107;;b1,0;;m">
				</treenode>
				<treenode node="testBadBuildRequestLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1332;2;1334;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBadBuildRequestLine method;;d43,1332;;b1,0;;m">
				</treenode>
				<treenode node="testBadBuildRequestLine2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1342;2;1344;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBadBuildRequestLine2 method;;d44,1342;;b1,0;;m">
				</treenode>
				<treenode node="testBuildCookies;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1685;2;1699;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildCookies method;;d36,1685;;b1,0;;m">
				</treenode>
				<treenode node="testBuildHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1649;2;1678;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that HttpSocket::buildHeader can turn a given $header array into a proper header string according to HTTP 1.1 specs.;;d35,1649;;b1,0;;m">
				</treenode>
				<treenode node="testBuildRequestLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1271;2;1324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildRequestLine method;;d40,1271;;b1,0;;m">
				</treenode>
				<treenode node="testBuildUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1478;2;1537;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that HttpSocket::buildUri can turn all kinds of uri arrays (and strings) into fully or partially qualified URI's;;d32,1478;;b1,0;;m">
				</treenode>
				<treenode node="testConfigContext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1807;2;1818;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test configuring the context from the flat keys.;;d37,1807;;b1,0;;m">
				</treenode>
				<treenode node="testConfigUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;239;2;301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that HttpSocket::configUri works properly with different types of arguments;;d33,239;;b1,0;;m">
				</treenode>
				<treenode node="testConsecutiveGetResetsAuthCredentials;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1148;2;1168;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that two consecutive get() calls reset the authentication credentials.;;d59,1148;;b1,0;;m">
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;213;2;232;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that HttpSocket::__construct does what one would expect it to do;;d33,213;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1247;2;1264;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDelete;;d30,1247;;b1,0;;m">
				</treenode>
				<treenode node="testEscapeToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1731;2;1749;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that HttpSocket::escapeToken is escaping all characters as described in RFC 2616 (HTTP 1.1 specs);;d35,1731;;b1,0;;m">
				</treenode>
				<treenode node="testGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1010;2;1052;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGet method;;d27,1010;;b1,0;;m">
				</treenode>
				<treenode node="testGetWithSchemeAndPort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;583;2;596;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the scheme + port keys;;d44,583;;b1,0;;m">
				</treenode>
				<treenode node="testHead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1059;2;1100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the head method;;d28,1059;;b1,0;;m">
				</treenode>
				<treenode node="testParseQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1544;2;1641;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Asserts that HttpSocket::parseQuery is working properly;;d34,1544;;b1,0;;m">
				</treenode>
				<treenode node="testParseUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1351;2;1471;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Asserts that HttpSocket::parseUri is working properly;;d32,1351;;b1,0;;m">
				</treenode>
				<treenode node="testPartialReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1780;2;1800;;;;vpos;;vvoid;;r&#xA;Description&#xA;     This tests asserts HttpSocket::reset(false) resets certain HttpSocket properties to their initial state (before Object::__construct got executed).;;d36,1780;;b1,0;;m">
				</treenode>
				<treenode node="testPatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1223;2;1240;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPatch;;d29,1223;;b1,0;;m">
				</treenode>
				<treenode node="testPost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1175;2;1192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPostPutDelete method;;d28,1175;;b1,0;;m">
				</treenode>
				<treenode node="testProxy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;881;2;949;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testProxy method;;d29,881;;b1,0;;m">
				</treenode>
				<treenode node="testPut;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1199;2;1216;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPut;;d27,1199;;b1,0;;m">
				</treenode>
				<treenode node="testRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;308;2;576;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that HttpSocket::request (the heart of the HttpSocket) is working properly.;;d31,308;;b1,0;;m">
				</treenode>
				<treenode node="testRequest2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;635;2;647;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequest2 method;;d32,635;;b1,0;;m">
				</treenode>
				<treenode node="testRequest3;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;654;2;669;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequest3 method;;d32,654;;b1,0;;m">
				</treenode>
				<treenode node="testRequestCustomResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;773;2;783;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestCustomResponse;;d45,773;;b1,0;;m">
				</treenode>
				<treenode node="testRequestNotAllowedUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;624;2;628;;;;vpos;;vvoid;;r&#xA;Description&#xA;     The &quot;*&quot; asterisk character is only allowed for the following methods: OPTIONS.;;d44,624;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithConstructor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;676;2;697;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestWithConstructor method;;d46,676;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithCrossCookie;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;734;2;766;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestWithCrossCookie;;d46,734;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithRedirectAsInt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;841;2;853;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that redirects with a count limit are decremented.;;d48,841;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithRedirectAsIntReachingZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;860;2;874;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that redirects after the redirect count reaches 9 are not followed.;;d60,860;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithRedirectAsTrue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;822;2;834;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestWithRedirect method;;d49,822;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithRedirectUrlEncoded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;790;2;815;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that redirect URLs are urldecoded;;d53,790;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithResource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;704;2;727;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestWithResource;;d43,704;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithStringQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;603;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test URLs like http://cakephp.org/index.php?somestring without key/value pair for query;;d46,603;;b1,0;;m">
				</treenode>
				<treenode node="testReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1757;2;1772;;;;vpos;;vvoid;;r&#xA;Description&#xA;     This tests asserts HttpSocket::reset() resets a HttpSocket instance to it's initial state (before Object::__construct got executed);;d29,1757;;b1,0;;m">
				</treenode>
				<treenode node="testResponseStatusParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1861;2;1875;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test response status parsing;;d70,1861;;b1,0;;mstatus;;pcode;;pmsg;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f52;1861;57;1861;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f59;1861;63;1861;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f43;1861;50;1861;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTokenEscapeChars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1706;2;1724;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that HttpSocket::_tokenEscapeChars() returns the right characters.;;d40,1706;;b1,0;;m">
				</treenode>
				<treenode node="testUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;956;2;1003;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUrl method;;d27,956;;b1,0;;m">
				</treenode>
				<treenode node="testVerifyPeer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;1825;2;1837;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that requests fail when peer verification fails.;;d34,1825;;b1,0;;m">
				</treenode>
				<treenode node="RequestSocket;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;185;22;185;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Socket;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;178;15;178;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="I18n;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f0;28;1;740;;;;vpos;;v;;r&#xA;Description&#xA;     I18n handles translation of Text and time format strings.;;d11,28;;b0,0;;m">
				<treenode node="LC_ALL;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f6;107;13;107;;;;vposint;;v;;r&#xA;Description&#xA;     Constants for the translation categories.;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LC_COLLATE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f6;114;17;114;;;;vposint;;v;;r1;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LC_CTYPE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f6;121;15;121;;;;vposint;;v;;r2;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LC_MESSAGES;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f6;149;18;149;;;;vposint;;v;;r6;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LC_MONETARY;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f6;128;18;128;;;;vposint;;v;;r3;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LC_NUMERIC;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f6;135;17;135;;;;vposint;;v;;r4;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="LC_TIME;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f6;142;14;142;;;;vposint;;v;;r5;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f8;161;2;163;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor, use I18n::getInstance() to get the i18n translation object.;;d31,161;;b1,0;;m">
				</treenode>
				<treenode node="_bindTextDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;377;2;473;;;;vpos;;vstring;;r&#xA;Description&#xA;     Binds the given domain to a file in the specified directory.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain to bind&#xA;&#xA;Return:&#xA;   Domain binded;;d45,377;;b2,0;;mstring $domain;;p">
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f36;377;43;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseLiteralValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;700;2;722;;;;vpos;;vstring;;r&#xA;Description&#xA;     Auxiliary function to parse a symbol from a locale definition file&#xA;&#xA;Parameters:&#xA;    string $string - Symbol to be parsed&#xA;&#xA;Return:&#xA;   parsed symbol;;d48,700;;b2,0;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f39;700;46;700;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_pluralGuess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;321;2;369;;;;vpos;;vint;;r&#xA;Description&#xA;     Attempts to find the plural form of a string.&#xA;&#xA;Parameters:&#xA;    string $header - Type&#xA;    int $n - Number&#xA;&#xA;Return:&#xA;   plural match;;d46,321;;b2,0;;mstring $header;;pint $n;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f33;321;40;321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="n;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f42;321;44;321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_translateTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;731;2;738;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns a Time format definition from corresponding domain&#xA;&#xA;Parameters:&#xA;    string $format - Format to be translated&#xA;    string $domain - Domain where format is stored&#xA;&#xA;Return:&#xA;   translated format string if only value or array of translated strings for corresponding format;;d53,731;;b2,0;;mstring $format;;pstring $domain;;p">
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f44;731;51;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f35;731;42;731;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;297;2;300;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Clears the domains internal data array. Useful for testing i18n.;;d32,297;;b1,5;;m">
				</treenode>
				<treenode node="domains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;307;2;310;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the loaded domains cache.;;d34,307;;b1,5;;m">
				</treenode>
				<treenode node="getInstance;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;170;2;176;;;;vpos;;vI18n;;r&#xA;Description&#xA;     Return a static instance of the I18n class;;d38,170;;b1,5;;m">
				</treenode>
				<treenode node="insertArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;680;2;692;;;;vpos;;vstring;;r&#xA;Description&#xA;     Puts the parameters in raw translated strings&#xA;&#xA;Parameters:&#xA;    string $translated - The raw translated string&#xA;    array $args - The arguments to put in the translation&#xA;&#xA;Return:&#xA;   Translated string with arguments;;d61,680;;b1,5;;mstring $translated;;parray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f54;680;59;680;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="translated;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f35;680;46;680;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadLocaleDefinition;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;611;2;671;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Parses a locale definition file following the POSIX standard&#xA;&#xA;Parameters:&#xA;    string $filename - Locale definition filename&#xA;&#xA;Return:&#xA;   Array of definitions on success or false on failure;;d56,611;;b1,5;;mstring $filename;;p">
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f45;611;54;611;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadMo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;481;2;523;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Loads the binary .mo file and returns array of translations&#xA;&#xA;Parameters:&#xA;    string $filename - Binary &#xA;&#xA;Return:&#xA;   Array of translations on success or false on failure;;d42,481;;b1,5;;mstring $filename;;p">
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f31;481;40;481;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadPo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;531;2;603;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Loads the text .po file and returns array of translations&#xA;&#xA;Parameters:&#xA;    string $filename - Text &#xA;&#xA;Return:&#xA;   Array of translations on success or false on failure;;d42,531;;b1,5;;mstring $filename;;p">
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f31;531;40;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="translate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;194;2;290;;;;vpos;;vstring;;r&#xA;Description&#xA;     Used by the translation functions in basics.php Returns a translated string based on current language and translation files stored in locale folder&#xA;&#xA;Parameters:&#xA;    string $singular - String to translate&#xA;    string $plural - Plural string (if any)&#xA;    string $domain - Domain The domain of the translation&#xA;    string $category - Category The integer value of the category to use&#xA;    int $count - Count Count is used with $plural to choose the correct plural form&#xA;    string $language - Language to translate string to&#xA;    string $context - Context The context of the translation, e&#xA;&#xA;Return:&#xA;   translated string;;d3,196;;b1,5;;mstring $singular;;pstring $plural;;pstring $domain;;pstring $category;;pint $count;;pstring $language;;pstring $context;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f77;194;86;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f35;195;43;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f2;195;8;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f61;194;68;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="language;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f17;195;26;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f45;194;52;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f34;194;43;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_categories;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;85;23;85;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_domains;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;70;20;70;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_escape;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;156;19;156;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_lang;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;63;17;63;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_noLocale;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f11;78;21;78;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f8;56;17;56;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="defaultDomain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f15;42;29;42;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f8;49;15;49;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="l10n;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php;f8;35;13;35;;;;vposL10n;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="I18nModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\I18nModel.php;f0;23;1;46;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     A model used by TranslateBehavior to access the translation tables.;;d33,23;;b0,0;;m">
				<treenode node="displayField;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\I18nModel.php;f8;44;21;44;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\I18nModel.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\I18nModel.php;f8;37;17;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="I18nSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php;f0;18;1;61;;C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php;f0;27;1;60;;;;vpos;;vCakeSchema;;c;;r&#xA;Description&#xA;     Using the Schema command line utility;;d36,18;;b0,0;;m">
				<treenode node="after;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php;f8;43;2;44;;C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php;f8;47;2;48;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After event.&#xA;&#xA;Parameters:&#xA;    array $event - The event data;;d41,43;;b1,0;;marray $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php;f23;43;29;43;;C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php;f23;47;29;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="before;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php;f8;33;2;35;;C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php;f8;37;2;39;;;;vpos;;vbool;;r&#xA;Description&#xA;     Before event.&#xA;&#xA;Parameters:&#xA;    array $event - The event data&#xA;&#xA;Return:&#xA;   success;;d42,33;;b1,0;;marray $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php;f24;33;30;33;;C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php;f24;37;30;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="i18n;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php;f8;51;13;51;;C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php;f8;50;13;50;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php;f8;25;13;25;;C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php;f8;29;13;29;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="I18nShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php;f0;24;1;121;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Shell for I18N management.;;d33,24;;b0,0;;m">
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php;f8;106;2;119;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,106;;b1,0;;m">
				</treenode>
				<treenode node="initdb;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php;f8;97;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initialize I18N database.;;d26,97;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php;f8;64;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override main() for help message hook;;d24,64;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php;f8;45;2;57;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Override startup of the Shell;;d27,45;;b1,0;;m">
				</treenode>
				<treenode node="dataSource;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php;f8;31;19;31;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php;f8;38;14;38;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="I18nTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f0;26;1;2145;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     I18nTest class;;d36,26;;b0,0;;m">
				<treenode node="_category;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2093;2;2096;;;;vpos;;vvoid;;r&#xA;Description&#xA;     category method;;d61,2093;;b2,0;;mcategory;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f30;2093;39;2093;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_domainCategoryPlural;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2057;2;2063;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Plural method;;d82,2057;;b2,0;;mdomain;;pcategory;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f67;2057;76;2057;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f42;2057;49;2057;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_domainCategorySingular;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2047;2;2050;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Singular method;;d84,2047;;b2,0;;mdomain;;pcategory;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f69;2047;78;2047;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f44;2047;51;2047;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_domainPlural;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2080;2;2086;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Plural method;;d59,2080;;b2,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f34;2080;41;2080;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_domainSingular;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2070;2;2073;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Singular method;;d61,2070;;b2,0;;mdomain;;p">
					<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f36;2070;43;2070;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_plural;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2114;2;2120;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Plural method&#xA;&#xA;Parameters:&#xA;    int $upTo - For numbers upto (default to 25);;d40,2114;;b2,0;;mint $upTo;;p">
					<treenode node="upTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f28;2114;33;2114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_pluralFromCore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2138;2;2144;;;;vpos;;vvoid;;r&#xA;Description&#xA;     pluralFromCore method&#xA;&#xA;Parameters:&#xA;    int $upTo - For numbers upto (default to 25);;d48,2138;;b2,0;;mint $upTo;;p">
					<treenode node="upTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f36;2138;41;2138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_singular;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2103;2;2106;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Singular method;;d32,2103;;b2,0;;m">
				</treenode>
				<treenode node="_singularFromCore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f11;2127;2;2130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     singularFromCore method;;d40,2127;;b2,0;;m">
				</treenode>
				<treenode node="assertRulesEight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;911;2;973;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run assertions for the eighth plural rule.;;d36,911;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesEleven;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1183;2;1245;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for plural rules eleven;;d37,1183;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesFifteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1539;2;1633;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for plural rules fifteen;;d38,1539;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesFive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;642;2;706;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run the assertions for rule 5 plurals;;d35,642;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesFour;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;553;2;615;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run the assertions for Rule 4 plurals.;;d35,553;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesFourteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1450;2;1512;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for plural rules fourteen;;d39,1450;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesNine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1000;2;1065;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assert plural rules nine;;d35,1000;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;286;2;348;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for plural rule one;;d34,286;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesSeven;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;822;2;884;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run assertions for seventh plural rules;;d36,822;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesSix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;733;2;795;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for the sixth plural rules.;;d34,733;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesTen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1092;2;1156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for plural rules 10;;d34,1092;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesThirteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1361;2;1423;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for plural rules thirteen;;d39,1361;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesThree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;464;2;526;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assert rules for plural three.;;d36,464;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesTwelve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1272;2;1334;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for plural rules twelve;;d37,1272;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesTwo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;375;2;437;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for rules Two;;d34,375;;b1,0;;m">
				</treenode>
				<treenode node="assertRulesZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;197;2;259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Assertions for rules zero.;;d35,197;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;33;2;42;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;49;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,49;;b1,0;;m">
				</treenode>
				<treenode node="testCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1905;2;1913;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCategory method;;d32,1905;;b1,0;;m">
				</treenode>
				<treenode node="testCategoryThenSingular;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1936;2;1943;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCategoryThenSingular method;;d44,1936;;b1,0;;m">
				</treenode>
				<treenode node="testContext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;2031;2;2040;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test basic context support;;d31,2031;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultStrings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;108;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDefaultStrings method;;d38,108;;b1,0;;m">
				</treenode>
				<treenode node="testFloatValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1884;2;1898;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFloatValue method;;d34,1884;;b1,0;;m">
				</treenode>
				<treenode node="testLoadLocaleDefinition;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;2019;2;2024;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadLocaleDefinition method;;d44,2019;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesEight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;901;2;904;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesEight method;;d36,901;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesEleven;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1173;2;1176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesEleven method;;d37,1173;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesFifteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1519;2;1522;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesFifteen method;;d38,1519;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesFive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;632;2;635;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesFive method;;d35,632;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesFour;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;543;2;546;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesFour method;;d35,543;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesFourteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1430;2;1433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesFourteen method;;d39,1430;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesNine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;990;2;993;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesNine method;;d35,990;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;276;2;279;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesOne method;;d34,276;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesSeven;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;812;2;815;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesSeven method;;d36,812;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesSix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;723;2;726;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesSix method;;d34,723;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesTen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1082;2;1085;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesTen method;;d34,1082;;b1,0;;m">
				</treenode>
				<treenode node="testmoRulesThirteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1341;2;1344;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesThirteen method;;d39,1341;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesThree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;454;2;457;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesThree method;;d36,454;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesTwelve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1262;2;1265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesTwelve method;;d37,1262;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesTwo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;355;2;358;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesTwo method;;d34,355;;b1,0;;m">
				</treenode>
				<treenode node="testMoRulesZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;187;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoRulesZero method;;d35,187;;b1,0;;m">
				</treenode>
				<treenode node="testNoCoreTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1680;2;1715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoCoreTranslation method;;d41,1680;;b1,0;;m">
				</treenode>
				<treenode node="testPluginCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1920;2;1929;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginCategory method;;d38,1920;;b1,0;;m">
				</treenode>
				<treenode node="testPluginTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1722;2;1758;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginTranslation method;;d41,1722;;b1,0;;m">
				</treenode>
				<treenode node="testPluginTranslationPreferApp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1765;2;1782;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Configure::read('I18n.preferApp') will prefer app.;;d50,1765;;b1,0;;m">
				</treenode>
				<treenode node="testPoMultipleLineTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1789;2;1855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoMultipleLineTranslation method;;d49,1789;;b1,0;;m">
				</treenode>
				<treenode node="testPoNoTranslationNeeded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1862;2;1866;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoNoTranslationNeeded method;;d45,1862;;b1,0;;m">
				</treenode>
				<treenode node="testPoQuotedString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1873;2;1877;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoQuotedString method;;d38,1873;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesEight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;891;2;894;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesEight method;;d36,891;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesEleven;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1163;2;1166;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesEleven method;;d37,1163;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesFifteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1529;2;1532;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesFifteen method;;d38,1529;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesFive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;622;2;625;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesFive method;;d35,622;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesFour;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;533;2;536;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesFour method;;d35,533;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesFourteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1440;2;1443;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesFourteen method;;d39,1440;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesNine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;980;2;983;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesNine method;;d35,980;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;266;2;269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesOne method;;d34,266;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesSeven;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;802;2;805;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesSeven method;;d36,802;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesSix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;713;2;716;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesSix method;;d34,713;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesTen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1072;2;1075;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesTen method;;d34,1072;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesThirteen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1351;2;1354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesThirteen method;;d39,1351;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesThree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;444;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesThree method;;d36,444;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesTwelve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1252;2;1255;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesTwelve method;;d37,1252;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesTwo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;365;2;368;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesTwo method;;d34,365;;b1,0;;m">
				</treenode>
				<treenode node="testPoRulesZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;177;2;180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPoRulesZero method;;d35,177;;b1,0;;m">
				</treenode>
				<treenode node="testSetLanguageWithSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1640;2;1673;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetLanguageWithSession method;;d46,1640;;b1,0;;m">
				</treenode>
				<treenode node="testTimeDefinition;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1950;2;1963;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTimeDefinition method;;d38,1950;;b1,0;;m">
				</treenode>
				<treenode node="testTimeDefinitionJapanese;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1970;2;1985;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTimeDefinitionJapanese method;;d46,1970;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateEmptyDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;2010;2;2012;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the '' domain causes exceptions.;;d44,2010;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateLanguageParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;1992;2;2002;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslateLanguageParam method;;d46,1992;;b1,0;;m">
				</treenode>
				<treenode node="testTranslationCaching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php;f8;62;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslationCaching method;;d42,62;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Image;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1667;1;1675;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Image class;;d34,1667;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1674;13;1674;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ImageFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ImageFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ImageFixture;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ImageFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ImageFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Inflector;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f0;25;1;571;;;;vpos;;v;;r&#xA;Description&#xA;     Pluralize and singularize English words.;;d16,25;;b0,0;;m">
				<treenode node="_cache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f18;271;2;282;;;;vpos;;vstring;;r&#xA;Description&#xA;     Cache inflected values, and return if already available&#xA;&#xA;Parameters:&#xA;    string $type - Inflection type&#xA;    string $key - Original value&#xA;    string $value - Inflected value&#xA;&#xA;Return:&#xA;   Inflected value, from cache;;d63,271;;b2,5;;mstring $type;;pstring $key;;pstring $value;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f41;271;45;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f34;271;39;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f47;271;53;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="camelize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;463;2;469;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the given lower_case_and_underscored_word as a CamelCased word.&#xA;&#xA;Parameters:&#xA;    string $lowerCaseAndUnderscoredWord - Word to camelize&#xA;&#xA;Return:&#xA;   Camelized word;;d63,463;;b1,5;;mstring $lowerCaseAndUnderscoredWord;;p">
					<treenode node="lowerCaseAndUnderscoredWord;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f33;463;61;463;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="classify;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;524;2;530;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns Cake model class name (&quot;Person&quot; for the database table &quot;people&quot;.) for given database table.&#xA;&#xA;Parameters:&#xA;    string $tableName - Name of database table to get class name for&#xA;&#xA;Return:&#xA;   Class name;;d45,524;;b1,5;;mstring $tableName;;p">
					<treenode node="tableName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f33;524;43;524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="humanize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;494;2;500;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the given underscored_word_group as a Human Readable Word Group. (Underscores are replaced by spaces and capitalized following words.)&#xA;&#xA;Parameters:&#xA;    string $lowerCaseAndUnderscoredWord - String to be made more readable&#xA;&#xA;Return:&#xA;   Human-readable string;;d63,494;;b1,5;;mstring $lowerCaseAndUnderscoredWord;;p">
					<treenode node="lowerCaseAndUnderscoredWord;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f33;494;61;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pluralize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;369;2;403;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return $word in plural form.&#xA;&#xA;Parameters:&#xA;    string $word - Word in singular&#xA;&#xA;Return:&#xA;   Word in plural;;d41,369;;b1,5;;mstring $word;;p">
					<treenode node="word;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f34;369;39;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;290;2;300;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Clears Inflectors inflected value caches. And resets the inflection rules to the initial values.;;d32,290;;b1,5;;m">
				</treenode>
				<treenode node="rules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;323;2;360;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Adds custom inflection $rules, of either 'plural', 'singular' or 'transliteration' $type.&#xA;&#xA;Parameters:&#xA;    string $type - The type of inflection, either 'plural', 'singular' or 'transliteration'&#xA;    array $rules - Array of rules to be added&#xA;    bool $reset - If true, will unset default inflections for all;;d61,323;;b1,5;;mstring $type;;parray $rules;;pbool $reset;;p">
					<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f45;323;51;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rules;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f37;323;43;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f30;323;35;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="singularize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;412;2;454;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return $word in singular form.&#xA;&#xA;Parameters:&#xA;    string $word - Word in plural&#xA;&#xA;Return:&#xA;   Word in singular;;d43,412;;b1,5;;mstring $word;;p">
					<treenode node="word;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f36;412;41;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;558;2;569;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a string with all spaces converted to underscores (by default), accented characters converted to non-accented characters, and non word characters removed.&#xA;&#xA;Parameters:&#xA;    string $string - the string you want to slug&#xA;    string $replacement - will replace keys in map;;d58,558;;b1,5;;mstring $string;;pstring $replacement;;p">
					<treenode node="replacement;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f38;558;50;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f29;558;36;558;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tableize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;509;2;515;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns corresponding table name for given model $className. (&quot;people&quot; for the model class &quot;Person&quot;).&#xA;&#xA;Parameters:&#xA;    string $className - Name of class to get database table name for&#xA;&#xA;Return:&#xA;   Name of the database table for given class;;d45,509;;b1,5;;mstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f33;509;43;509;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="underscore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;478;2;484;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the given camelCasedWord as an underscored_word.&#xA;&#xA;Parameters:&#xA;    string $camelCasedWord - Camel-cased word to be &quot;underscorized&quot;&#xA;&#xA;Return:&#xA;   Underscore-syntaxed version of the $camelCasedWord;;d52,478;;b1,5;;mstring $camelCasedWord;;p">
					<treenode node="camelCasedWord;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f35;478;50;478;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="variable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f15;539;2;547;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns camelBacked version of an underscored string.&#xA;&#xA;Parameters:&#xA;    string $string - String to convert&#xA;&#xA;Return:&#xA;   in variable form;;d42,539;;b1,5;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f33;539;40;539;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_cache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f18;254;25;254;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_initialState;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f18;261;32;261;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f18;32;26;32;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f18;118;28;118;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_transliteration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f18;189;35;189;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_uninflected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php;f18;169;31;169;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="InflectorTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f0;30;1;544;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Short description for class.;;d41,30;;b0,0;;m">
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;88;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,88;;b1,0;;m">
				</treenode>
				<treenode node="testClassNaming;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;401;2;406;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClassNaming method;;d35,401;;b1,0;;m">
				</treenode>
				<treenode node="testCustomPluralRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;436;2;453;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustomPluralRule method;;d40,436;;b1,0;;m">
				</treenode>
				<treenode node="testCustomRuleWithReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;521;2;542;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test resetting inflection rules.;;d43,521;;b1,0;;m">
				</treenode>
				<treenode node="testCustomSingularRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;460;2;476;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustomSingularRule method;;d42,460;;b1,0;;m">
				</treenode>
				<treenode node="testCustomTransliterationRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;483;2;491;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustomTransliterationRule method;;d49,483;;b1,0;;m">
				</treenode>
				<treenode node="testHumanization;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;425;2;429;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHumanization method;;d36,425;;b1,0;;m">
				</treenode>
				<treenode node="testInflectingPlurals;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;187;2;251;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInflectingPlurals method;;d41,187;;b1,0;;m">
				</treenode>
				<treenode node="testInflectingSingulars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;98;2;180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInflectingSingulars method;;d43,98;;b1,0;;m">
				</treenode>
				<treenode node="testInflectorSlug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;258;2;317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInflectorSlug method;;d37,258;;b1,0;;m">
				</treenode>
				<treenode node="testInflectorSlugCharList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;324;2;331;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test slug() with a complete list of special chars.;;d45,324;;b1,0;;m">
				</treenode>
				<treenode node="testInflectorSlugWithMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;338;2;347;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInflectorSlugWithMap method;;d44,338;;b1,0;;m">
				</treenode>
				<treenode node="testInflectorSlugWithMapOverridingDefault;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;354;2;359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInflectorSlugWithMapOverridingDefault method;;d61,354;;b1,0;;m">
				</treenode>
				<treenode node="testInflectorUnderscore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;366;2;382;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInflectorUnderscore method;;d43,366;;b1,0;;m">
				</treenode>
				<treenode node="testRulesClearsCaches;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;498;2;514;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that setting new rules clears the inflector caches.;;d41,498;;b1,0;;m">
				</treenode>
				<treenode node="testTableNaming;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;413;2;418;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTableNaming method;;d35,413;;b1,0;;m">
				</treenode>
				<treenode node="testVariableNaming;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f8;389;2;394;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testVariableNaming method;;d38,389;;b1,0;;m">
				</treenode>
				<treenode node="maps;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php;f15;37;20;37;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="IniAcl;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f0;24;20;24;;;;vpos;;v;;r&#xA;Description&#xA;     IniAcl implements an access control system using an INI file. An example of the ini file used can be found in /config/acl.ini.php.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="IniAclTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\IniAclTest.php;f0;25;1;67;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for the IniAcl implementation;;d38,25;;b0,0;;m">
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\IniAclTest.php;f8;32;2;48;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIniCheck method;;d29,32;;b1,0;;m">
				</treenode>
				<treenode node="testCheckArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\IniAclTest.php;f8;55;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     check should accept a user array.;;d34,55;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="IniReader;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f0;55;1;229;;;;vpos;;vConfigReaderInterface;;c;;r&#xA;Description&#xA;     Ini file configuration engine.;;d49,55;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f8;79;2;85;;;;vpos;;v;;r&#xA;Description&#xA;     Build and construct a new ini file parser. The parser can be used to read ini files that are on the filesystem.&#xA;&#xA;Parameters:&#xA;    string $path - Path to load ini config files from&#xA;    string $section - Only get one section, leave null to parse and fetch;;d60,79;;b1,0;;mstring $path;;pstring $section;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f29;79;34;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="section;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f43;79;51;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getFilePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f11;207;2;227;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get file path&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to write to&#xA;&#xA;Return:&#xA;   Full file path;;d39,207;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f33;207;37;207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseNestedValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f11;131;2;147;;;;vpos;;varray;;r&#xA;Description&#xA;     parses nested values out of keys.&#xA;&#xA;Parameters:&#xA;    array $values - Values to be exploded&#xA;&#xA;Return:&#xA;   Array of values exploded;;d48,131;;b2,0;;marray $values;;p">
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f39;131;46;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_value;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f11;187;2;198;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a value into the ini equivalent&#xA;&#xA;Parameters:&#xA;    mixed $val - Value to export&#xA;&#xA;Return:&#xA;   String value for ini file;;d33,187;;b2,0;;mmixed $val;;p">
					<treenode node="val;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f27;187;31;187;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f8;157;2;179;;;;vpos;;vint;;r&#xA;Description&#xA;     Dumps the state of Configure data into an ini formatted string.&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to write to&#xA;    array $data - The data to convert to ini file&#xA;&#xA;Return:&#xA;   Bytes saved;;d35,157;;b1,0;;mstring $key;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f28;157;33;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f22;157;26;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f8;98;2;123;;;;vpos;;varray;;r&#xA;Description&#xA;     Read an ini file and return the results as an array.&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to read from&#xA;&#xA;Return:&#xA;   Parsed configuration values;;d28,98;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f22;98;26;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f11;62;17;62;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_section;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php;f11;69;20;69;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="IniReaderTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f0;25;1;303;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class IniReaderTest;;d41,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;52;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,52;;b1,0;;m">
				</treenode>
				<treenode node="testBooleanReading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;149;2;163;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test boolean reading.;;d38,149;;b1,0;;m">
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;62;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test construct;;d33,62;;b1,0;;m">
				</treenode>
				<treenode node="testDump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;256;2;284;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test dump method.;;d28,256;;b1,0;;m">
				</treenode>
				<treenode node="testDumpRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;291;2;301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that dump() makes files read() can read.;;d32,291;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;76;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading files.;;d28,76;;b1,0;;m">
				</treenode>
				<treenode node="testReadEmptyFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;192;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading an empty file.;;d37,192;;b1,0;;m">
				</treenode>
				<treenode node="testReadOnlyOneSection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;90;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     No other sections should exist.;;d42,90;;b1,0;;m">
				</treenode>
				<treenode node="testReadPluginSpecialAclIniPhpValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;237;2;249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading acl.ini.php from plugins.;;d55,237;;b1,0;;m">
				</treenode>
				<treenode node="testReadPluginValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;214;2;230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading from plugins.;;d39,214;;b1,0;;m">
				</treenode>
				<treenode node="testReadSpecialAclIniPhp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;103;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading acl.ini.php.;;d44,103;;b1,0;;m">
				</treenode>
				<treenode node="testReadValuesWithDots;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;133;2;142;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that names with .'s get exploded into arrays.;;d42,133;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithDots;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;204;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading keys with ../ doesn't work.;;d36,204;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithExistentFileWithoutExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;171;2;174;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test an exception is thrown by reading files that exist without .ini extension.;;d60,171;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithNonExistentFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;182;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test an exception is thrown by reading files that don't exist.;;d47,182;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithoutSection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;117;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test without section.;;d42,117;;b1,0;;m">
				</treenode>
				<treenode node="testData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php;f8;32;17;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="InnoFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\InnoFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class InnoFixture;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\InnoFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\InnoFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="InterceptContentHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f0;92;1;105;;;;vpos;;vHelper;;c;;r&#xA;Description&#xA;     InterceptContentHelper class;;d44,92;;b0,0;;m">
				<treenode node="afterRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f8;100;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Intercepts and stores the contents of the view before the layout is rendered&#xA;&#xA;Parameters:&#xA;    string $viewFile - The view file;;d40,100;;b1,0;;mstring $viewFile;;p">
					<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php;f29;100;38;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="InternalErrorException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;182;1;197;;;;vpos;;vHttpException;;c;;r&#xA;Description&#xA;     Represents an HTTP 500 error.;;d51,182;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;190;2;195;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - If no message is given 'Internal Server Error' will be the message&#xA;    int $code - Status code, defaults to 500;;d59,190;;b1,0;;mstring $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f46;190;51;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;190;37;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="InvalidTestFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;116;1;153;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     InvalidTestFixture class;;d49,116;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;137;15;137;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;123;13;123;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;148;16;148;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;130;14;130;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Item;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1601;1;1623;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Item class;;d33,1601;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1615;18;1615;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1622;28;1622;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1608;13;1608;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ItemFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemFixture.php;f0;23;1;50;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ItemFixture;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ItemsPortfolio;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1630;1;1638;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ItemsPortfolio class;;d43,1630;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1637;13;1637;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ItemsPortfolioFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemsPortfolioFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ItemsPortfolioFixture;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemsPortfolioFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemsPortfolioFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinA;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1856;1;1871;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     JoinA class;;d34,1856;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1870;28;1870;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1863;13;1863;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinABFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinABFixture.php;f0;23;1;56;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class JoinABFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinABFixture.php;f8;37;15;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinABFixture.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinABFixture.php;f8;51;16;51;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinACFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinACFixture.php;f0;23;1;56;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class JoinACFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinACFixture.php;f8;37;15;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinACFixture.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinACFixture.php;f8;51;16;51;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinAFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinAFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class JoinAFixture;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinAFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinAFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinB;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1878;1;1893;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     JoinB class;;d34,1878;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1892;28;1892;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1885;13;1885;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinBFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinBFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class JoinBFixture;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinBFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinBFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinC;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1900;1;1915;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     JoinC class;;d34,1900;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1914;28;1914;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1907;13;1907;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinCFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinCFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class JoinCFixture;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinCFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinCFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinThing;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1540;1;1572;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     JoinThing class;;d38,1540;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1563;2;1570;;;;vpos;;varray;;r&#xA;Description&#xA;     afterFind callBack&#xA;&#xA;Parameters:&#xA;    array $results&#xA;    bool $primary;;d55,1563;;b1,0;;marray $results;;pbool $primary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;1563;45;1563;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;1563;35;1563;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1554;18;1554;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1547;13;1547;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JoinThingFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinThingFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class JoinThingFixture;;d47,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinThingFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinThingFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JqueryEngineHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f0;38;1;359;;;;vpos;;vJsBaseEngineHelper;;c;;r&#xA;Description&#xA;     jQuery Engine Helper for JsHelper;;d52,38;;b0,0;;m">
				<treenode node="_methodTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f11;132;2;141;;;;vpos;;vstring;;r&#xA;Description&#xA;     Helper function to wrap repetitive simple method templating.&#xA;&#xA;Parameters:&#xA;    string $method - The method name being generated&#xA;    string $template - The method template&#xA;    array $options - Array of options for method&#xA;    array $extraSafeKeys - Extra safe keys&#xA;&#xA;Return:&#xA;   Composed method string;;d92,132;;b2,0;;mstring $method;;pstring $template;;parray $options;;parray $extraSafeKeys;;p">
					<treenode node="extraSafeKeys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f66;132;80;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f36;132;43;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f56;132;64;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f45;132;54;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="domReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;196;2;198;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a domReady event. For jQuery. This method does not bind a 'traditional event' as `$(document).bind('ready', fn)` Works in an entirely different fashion than  `$(document).ready()` The first will not run the function when eval()'d as part of a response The second will. Because of the way that ajax pagination is done `$().ready()` is used.&#xA;&#xA;Parameters:&#xA;    string $functionBody - The code to run on domReady&#xA;&#xA;Return:&#xA;   completed domReady method;;d41,196;;b1,0;;mstring $functionBody;;p">
					<treenode node="functionBody;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f26;196;39;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;304;2;307;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a Draggable element&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the draggable element&#xA;&#xA;Return:&#xA;   Completed Draggable script;;d42,304;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f22;304;30;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;318;2;321;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a Droppable element&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the droppable element&#xA;&#xA;Return:&#xA;   Completed Droppable script;;d42,318;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f22;318;30;318;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="each;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;206;2;208;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create an iteration over the current selection result.&#xA;&#xA;Parameters:&#xA;    string $callback - The function body you wish to apply during the iteration&#xA;&#xA;Return:&#xA;   completed iteration;;d33,206;;b1,0;;mstring $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f22;206;31;206;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="effect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;218;2;238;;;;vpos;;vstring;;r&#xA;Description&#xA;     Trigger an Effect.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the effect to trigger&#xA;    array $options - Array of options for the effect&#xA;&#xA;Return:&#xA;   completed string with effect;;d51,218;;b1,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f24;218;29;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f31;218;39;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="event;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;171;2;183;;;;vpos;;vstring;;r&#xA;Description&#xA;     Add an event to the script cache. Operates on the currently selected elements.&#xA;&#xA;Parameters:&#xA;    string $type - Type of event to bind to the current dom id&#xA;    string $callback - The JavaScript function you wish to trigger or the function literal&#xA;    array $options - Options for the event&#xA;&#xA;Return:&#xA;   completed event handler;;d61,171;;b1,0;;mstring $type;;pstring $callback;;parray $options;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f30;171;39;171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f41;171;49;171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f23;171;28;171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;149;2;156;;;;vpos;;v;;r&#xA;Description&#xA;     Create javascript selector for a CSS rule&#xA;&#xA;Parameters:&#xA;    string $selector - The selector that is targeted;;d32,149;;b1,0;;mstring $selector;;p">
					<treenode node="selector;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f21;149;30;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;250;2;279;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create an $.ajax() call.&#xA;&#xA;Parameters:&#xA;    string|array $url - URL&#xA;    array $options - See JsHelper::request() for options&#xA;&#xA;Return:&#xA;   The completed ajax call;;d51,250;;b1,0;;mstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f31;250;39;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f25;250;29;250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;346;2;357;;;;vpos;;vstring;;r&#xA;Description&#xA;     Serialize a form attached to $selector. If the current selection is not an input or form, errors will be created in the JavaScript.&#xA;&#xA;Parameters:&#xA;    array $options - Options for the serialization&#xA;&#xA;Return:&#xA;   completed form serialization script;;d51,346;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f31;346;39;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;332;2;336;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a Slider element&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the droppable element&#xA;&#xA;Return:&#xA;   Completed Slider script;;d44,332;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f24;332;32;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;290;2;293;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a sortable element.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the sortable&#xA;&#xA;Return:&#xA;   Completed sortable script;;d46,290;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f26;290;34;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_callbackArguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f11;73;30;73;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_optionMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f11;45;22;45;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="jQueryObject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php;f8;121;21;121;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JqueryEngineHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f0;27;1;399;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class JqueryEngineHelperTest;;d50,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;34;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;46;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,46;;b1,0;;m">
				</treenode>
				<treenode node="testDomReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;99;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test dom ready event creation;;d32,99;;b1,0;;m">
				</treenode>
				<treenode node="testDrag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;298;2;320;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test drag() method;;d28,298;;b1,0;;m">
				</treenode>
				<treenode node="testDrop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;327;2;347;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test drop() method;;d28,327;;b1,0;;m">
				</treenode>
				<treenode node="testEach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;110;2;115;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Each method;;d28,110;;b1,0;;m">
				</treenode>
				<treenode node="testEffect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;122;2;159;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Effect generation;;d30,122;;b1,0;;m">
				</treenode>
				<treenode node="testEvent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;79;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test event binding;;d29,79;;b1,0;;m">
				</treenode>
				<treenode node="testRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;166;2;230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Request Generation;;d31,166;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithAlternateJqueryObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;249;2;262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that alternate jQuery object values work for request();;d56,249;;b1,0;;m">
				</treenode>
				<treenode node="testRequestWithQueryStringArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;237;2;242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that querystring arguments are not double escaped.;;d55,237;;b1,0;;m">
				</treenode>
				<treenode node="testSelector;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;56;2;72;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test selector method;;d32,56;;b1,0;;m">
				</treenode>
				<treenode node="testSerializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;385;2;398;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the serializeForm method;;d37,385;;b1,0;;m">
				</treenode>
				<treenode node="testSlider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;354;2;378;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test slider generation;;d30,354;;b1,0;;m">
				</treenode>
				<treenode node="testSortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php;f8;269;2;291;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sortable list generation;;d32,269;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsBaseEngineHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f9;25;1;591;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     JsEngineBaseClass;;d52,25;;b0,0;;m">
				<treenode node="_mapOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;507;2;518;;;;vpos;;varray;;r&#xA;Description&#xA;     Maps Abstract options to engine specific option names. If attributes are missing from the map, they are not changed.&#xA;&#xA;Parameters:&#xA;    string $method - Name of method whose options are being worked with&#xA;    array $options - Array of options to map&#xA;&#xA;Return:&#xA;   Array of mapped options;;d51,507;;b2,0;;mstring $method;;parray $options;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f32;507;39;507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f41;507;49;507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;486;2;497;;;;vpos;;vstring;;r&#xA;Description&#xA;     Parse an options assoc array into a JavaScript object literal. Similar to object() but treats any non-integer value as a string, does not include `{ }`&#xA;&#xA;Parameters:&#xA;    array $options - Options to be converted&#xA;    array $safeKeys - Keys that should not be escaped&#xA;&#xA;Return:&#xA;   Parsed JSON options without enclosing { };;d65,486;;b2,0;;marray $options;;parray $safeKeys;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f34;486;42;486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="safeKeys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f44;486;53;486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_prepareCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;529;2;555;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepare callbacks and wrap them with function ([args]) { } as defined in _callbackArgs array.&#xA;&#xA;Parameters:&#xA;    string $method - Name of the method you are preparing callbacks for&#xA;    array $options - Array of options being parsed&#xA;    array $callbacks - Additional Keys that contain callbacks&#xA;&#xA;Return:&#xA;   Array of options with callbacks added;;d79,529;;b2,0;;mstring $method;;parray $options;;parray $callbacks;;p">
					<treenode node="callbacks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f57;529;67;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f38;529;45;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f47;529;55;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_processOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;565;2;570;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience wrapper method for all common option processing steps. Runs _mapOptions, _prepareCallbacks, and _parseOptions in order.&#xA;&#xA;Parameters:&#xA;    string $method - Name of method processing options for&#xA;    array $options - Array of options to process&#xA;&#xA;Return:&#xA;   Parsed options string;;d55,565;;b2,0;;mstring $method;;parray $options;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f36;565;43;565;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f45;565;53;565;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_toQuerystring;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;578;2;589;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convert an array of data into a query string&#xA;&#xA;Parameters:&#xA;    array $parameters - Array of parameters to convert to a query string&#xA;&#xA;Return:&#xA;   Querystring fragment;;d48,578;;b2,0;;marray $parameters;;p">
					<treenode node="parameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f35;578;46;578;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_utf8ToHex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;194;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Encode a string into JSON. Converts and escapes necessary characters.&#xA;&#xA;Parameters:&#xA;    string $string - The string that needs to be utf8-&gt;hex encoded;;d40,194;;b2,0;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f31;194;38;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="alert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;64;2;66;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create an `alert()` message in JavaScript&#xA;&#xA;Parameters:&#xA;    string $message - Message you want to alter&#xA;&#xA;Return:&#xA;   completed alert();;d33,64;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f23;64;31;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="confirm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;85;2;87;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a `confirm()` message&#xA;&#xA;Parameters:&#xA;    string $message - Message you want confirmed&#xA;&#xA;Return:&#xA;   completed confirm();;d35,85;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f25;85;33;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="confirmReturn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;96;2;100;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a confirm snippet that returns false from the current function scope.&#xA;&#xA;Parameters:&#xA;    string $message - Message to use in the confirm dialog&#xA;&#xA;Return:&#xA;   completed confirm with return script;;d41,96;;b1,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f31;96;39;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="domReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;312;49;312;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a domReady event. This is a special event in many libraries&#xA;&#xA;Parameters:&#xA;    string $functionBody - The code to run on domReady&#xA;&#xA;Return:&#xA;   completed domReady method;;d-1,-1;;b1,0;;mstring $functionBody;;p">
					<treenode node="functionBody;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f35;312;48;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;393;50;393;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a draggable element. Works on the currently selected element. Additional options may be supported by the library implementation.&#xA;&#xA;Parameters:&#xA;    array $options - Options array see above&#xA;&#xA;Return:&#xA;   Completed drag script;;d-1,-1;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f31;393;39;393;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;413;50;413;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a droppable element. Allows for draggable elements to be dropped on it. Additional options may be supported by the library implementation.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the drop&#xA;&#xA;Return:&#xA;   Completed drop script;;d-1,-1;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f31;413;39;413;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="each;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;320;41;320;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create an iteration over the current selection result.&#xA;&#xA;Parameters:&#xA;    string $callback - The function body you wish to apply during the iteration&#xA;&#xA;Return:&#xA;   completed iteration;;d-1,-1;;b1,0;;mstring $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f31;320;40;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="effect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;345;59;345;;;;vpos;;vstring;;r&#xA;Description&#xA;     Trigger an Effect.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the effect to trigger&#xA;    array $options - Array of options for the effect&#xA;&#xA;Return:&#xA;   completed string with effect;;d-1,-1;;b1,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f33;345;38;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f40;345;48;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="escape;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;184;2;186;;;;vpos;;vstring;;r&#xA;Description&#xA;     Escape a string to be JSON friendly.&#xA;&#xA;Parameters:&#xA;    string $string - String that needs to get escaped&#xA;&#xA;Return:&#xA;   Escaped string;;d33,184;;b1,0;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f24;184;31;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="event;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;304;69;304;;;;vpos;;vstring;;r&#xA;Description&#xA;     Add an event to the script cache. Operates on the currently selected elements.&#xA;&#xA;Parameters:&#xA;    string $type - Type of event to bind to the current dom id&#xA;    string $callback - The JavaScript function you wish to trigger or the function literal&#xA;    array $options - Options for the event&#xA;&#xA;Return:&#xA;   completed event handler;;d-1,-1;;b1,0;;mstring $type;;pstring $callback;;parray $options;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f39;304;48;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f50;304;58;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f32;304;37;304;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;289;40;289;;;;vpos;;vJsBaseEngineHelper;;r&#xA;Description&#xA;     Create javascript selector for a CSS rule&#xA;&#xA;Parameters:&#xA;    string $selector - The selector that is targeted&#xA;&#xA;Return:&#xA;   instance of $this;;d-1,-1;;b1,0;;mstring $selector;;p">
					<treenode node="selector;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f30;289;39;289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prompt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;109;2;111;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a `prompt()` JavaScript function&#xA;&#xA;Parameters:&#xA;    string $message - Message you want to prompt&#xA;    string $default - Default message&#xA;&#xA;Return:&#xA;   completed prompt();;d49,109;;b1,0;;mstring $message;;pstring $default;;p">
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f34;109;42;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f24;109;32;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;75;2;77;;;;vpos;;vstring;;r&#xA;Description&#xA;     Redirects to a URL. Creates a window.location modification snippet that can be used to trigger 'redirects' from JavaScript.&#xA;&#xA;Parameters:&#xA;    string|array $url - URL&#xA;&#xA;Return:&#xA;   completed redirect in javascript;;d39,75;;b1,0;;mstring|array $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f26;75;30;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;372;59;372;;;;vpos;;vstring;;r&#xA;Description&#xA;     Make an XHR request&#xA;&#xA;Parameters:&#xA;    string|array $url - Array or String URL to target with the request&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   XHR request;;d-1,-1;;b1,0;;mstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f40;372;48;372;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f34;372;38;372;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;475;59;475;;;;vpos;;vstring;;r&#xA;Description&#xA;     Serialize the form attached to $selector. Pass `true` for $isForm if the current selection is a form element. Converts the form or the form element attached to the current selection into a string/json object (depending on the library implementation) for use with XHR operations.&#xA;&#xA;Parameters:&#xA;    array $options - options for serialization generation&#xA;&#xA;Return:&#xA;   completed form serialization script;;d-1,-1;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f40;475;48;475;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;459;52;459;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a slider UI widget. Comprised of a track and knob. Additional options may be supported by the library implementation.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the slider&#xA;&#xA;Return:&#xA;   Completed slider script;;d-1,-1;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f33;459;41;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f17;436;54;436;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a sortable element. Additional options may be supported by the library implementation.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the sortable&#xA;&#xA;Return:&#xA;   Completed sortable script;;d-1,-1;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f35;436;43;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="value;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;143;2;170;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a PHP-native variable of any type to a JSON-equivalent representation&#xA;&#xA;Parameters:&#xA;    mixed $val - A PHP variable to be converted to JSON&#xA;    bool $quoteString - If false, leaves string values unquoted&#xA;    string $key - Key name&#xA;&#xA;Return:&#xA;   a JavaScript-safe/JSON representation of $val;;d76,143;;b1,0;;mmixed $val;;pbool $quoteString;;pstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f60;143;64;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quoteString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f39;143;51;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="val;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f23;143;27;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_callbackArguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;56;30;56;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_optionMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f11;41;22;41;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="bufferedMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;49;24;49;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f24;126;29;126;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a JavaScript object in JavaScript Object Notation (JSON) from an array. Will use native JSON encode method if available, and $useNative == true&#xA;&#xA;Parameters:&#xA;    array $data - Data to be converted&#xA;    array $options - Set of options, see above&#xA;&#xA;Return:&#xA;   A JSON code block;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="defaultOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f2;127;17;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f41;126;49;126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="selection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php;f8;32;18;32;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsBaseEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f0;744;1;947;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     JsBaseEngine Class Test case;;d44,744;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;751;2;756;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,751;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;763;2;766;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,763;;b1,0;;m">
				</treenode>
				<treenode node="testAlert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;819;2;827;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test alert generation;;d29,819;;b1,0;;m">
				</treenode>
				<treenode node="testConfirm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;834;2;842;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test confirm generation;;d31,834;;b1,0;;m">
				</treenode>
				<treenode node="testEscaping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;773;2;797;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test escape string skills;;d32,773;;b1,0;;m">
				</treenode>
				<treenode node="testObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;860;2;908;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testObject encoding with non-native methods.;;d30,860;;b1,0;;m">
				</treenode>
				<treenode node="testOptionMapping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;915;2;928;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Mapping of options.;;d37,915;;b1,0;;m">
				</treenode>
				<treenode node="testOptionParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;935;2;945;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that option parsing escapes strings and saves what is supposed to be saved.;;d37,935;;b1,0;;m">
				</treenode>
				<treenode node="testPrompt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;804;2;812;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test prompt() creation;;d30,804;;b1,0;;m">
				</treenode>
				<treenode node="testRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;849;2;853;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Redirect;;d32,849;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsEncodingObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f0;32;1;40;;;;vpos;;v;;r&#xA;Description&#xA;     Class JsEncodingObject;;d23,32;;b0,0;;m">
				<treenode node="__noshow;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f9;37;18;37;;;;vpos;;v;;r;;d-1,-1;;b3,0;;m">
				</treenode>
				<treenode node="_title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f11;34;18;34;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f0;32;1;435;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Javascript Generator helper class for easy use of JavaScript.;;d33,32;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;119;2;152;;;;vpos;;vmixed;;r&#xA;Description&#xA;     call__ Allows for dispatching of methods to the Engine Helper. methods in the Engines bufferedMethods list will be automatically buffered. You can control buffering with the buffer param as well. By setting the last parameter to any engine method to a boolean you can force or disable buffering.&#xA;&#xA;Parameters:&#xA;    string $method - Method to be called&#xA;    array $params - Parameters for the method being called&#xA;&#xA;Return:&#xA;   Depends on the return of the dispatched method, or it could be an instance of the EngineHelper;;d42,119;;b1,0;;mstring $method;;parray $params;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f24;119;31;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f33;119;40;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;84;2;98;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor - determines engine helper&#xA;&#xA;Parameters:&#xA;    View $View - the view object the helper is attached to&#xA;    string|array $settings - Settings array contains name of engine helper;;d62,84;;b1,0;;mView $View;;pstring|array $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f41;84;50;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f34;84;39;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_createVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f11;266;2;271;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generates the object string for variables passed to javascript and adds to buffer;;d34,266;;b2,0;;m">
				</treenode>
				<treenode node="_getHtmlOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f11;416;2;433;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse a set of Options and extract the Html options. Extracted Html Options are removed from the $options param.&#xA;&#xA;Parameters:&#xA;    array $options - Options to filter&#xA;    array $additional - Array of additional keys to extract and include in the return options array&#xA;&#xA;Return:&#xA;   Array of js options and Htmloptions;;d69,416;;b2,0;;marray $options;;parray $additional;;p">
					<treenode node="additional;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f46;416;57;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f36;416;44;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buffer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;236;2;242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Write a script to the buffered scripts.&#xA;&#xA;Parameters:&#xA;    string $script - Script string to add to the buffer&#xA;    bool $top - If true the script will be added to the top of the;;d47,236;;b1,0;;mstring $script;;pbool $top;;p">
					<treenode node="script;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f24;236;31;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="top;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f33;236;37;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBuffer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;251;2;259;;;;vpos;;varray;;r&#xA;Description&#xA;     Get all the buffered scripts&#xA;&#xA;Parameters:&#xA;    bool $clear - Whether or not to clear the script caches (default true)&#xA;&#xA;Return:&#xA;   Array of scripts added to the request;;d42,251;;b1,0;;mbool $clear;;p">
					<treenode node="clear;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f27;251;33;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="link;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;292;2;318;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate an 'Ajax' link. Uses the selected JS engine to create a link element that is enhanced with Javascript. Options can include both those for HtmlHelper::link() and JsBaseEngine::request(), JsBaseEngine::event();s&#xA;&#xA;Parameters:&#xA;    string $title - Title for the link&#xA;    string|array $url - Mixed either a string URL or a CakePHP URL array&#xA;    array $options - Options for both the HTML element and Js::request()&#xA;&#xA;Return:&#xA;   Completed link;;d63,292;;b1,0;;mstring $title;;pstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f43;292;51;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f22;292;28;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f30;292;34;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;330;2;345;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Pass variables into Javascript. Allows you to set variables that will be output when the buffer is fetched with `JsHelper::getBuffer()` or `JsHelper::writeBuffer()` The Javascript variable used to output set variables can be controlled with `JsHelper::$setVariable`&#xA;&#xA;Parameters:&#xA;    string|array $one - Either an array of variables to set, or the name of the variable to set&#xA;    string|array $two - If $one is a string, $two is the value for that key;;d40,330;;b1,0;;mstring|array $one;;pstring|array $two;;p">
					<treenode node="one;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f21;330;25;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f27;330;31;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="submit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;368;2;406;;;;vpos;;vstring;;r&#xA;Description&#xA;     Uses the selected JS engine to create a submit input element that is enhanced with Javascript. Options can include both those for FormHelper::submit() and JsBaseEngine::request(), JsBaseEngine::event();s&#xA;&#xA;Parameters:&#xA;    string $caption - The display text of the submit button&#xA;    array $options - Array of options to use&#xA;&#xA;Return:&#xA;   Completed submit button;;d61,368;;b1,0;;mstring $caption;;parray $options;;p">
					<treenode node="caption;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f24;368;32;368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f41;368;49;368;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="value;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;164;2;169;;;;vpos;;vstring;;r&#xA;Description&#xA;     Overwrite inherited Helper::value() See JsBaseEngineHelper::value() for more information on this method.&#xA;&#xA;Parameters:&#xA;    mixed $val - A PHP variable to be converted to JSON&#xA;    bool $quoteString - If false, leaves string values unquoted&#xA;    string $key - Key name&#xA;&#xA;Return:&#xA;   a JavaScript-safe/JSON representation of $val;;d76,164;;b1,0;;mmixed $val;;pbool $quoteString;;pstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f60;164;64;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quoteString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f39;164;51;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="val;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f23;164;27;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="writeBuffer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;191;2;225;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Writes all Javascript generated so far to a code block or caches them to a file and returns a linked script. If no scripts have been buffered this method will return null. If the request is an XHR(ajax) request onDomReady will be set to false. As the dom is already 'ready'.&#xA;&#xA;Parameters:&#xA;    array $options - options for the code block&#xA;&#xA;Return:&#xA;   Completed javascript tag if there are scripts, if there are no buffered;;d49,191;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f29;191;37;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_bufferedScripts;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f11;62;28;62;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_engineName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f11;69;23;69;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_jsVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f11;54;19;54;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="bufferScripts;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;39;22;39;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Form;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f28;30;34;30;;;;vposFormHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;46;16;46;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Html;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f28;29;34;29;;;;vposHtmlHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="setVariable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php;f8;76;20;76;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f0;118;1;737;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     JsHelper TestCase.;;d40,118;;b0,0;;m">
				<treenode node="_useMock;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f11;173;2;184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Switches $this-&gt;Js to a mocked engine.;;d31,173;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;139;2;156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,139;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;163;2;166;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,163;;b1,0;;m">
				</treenode>
				<treenode node="testConstruction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;191;2;203;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test object construction;;d36,191;;b1,0;;m">
				</treenode>
				<treenode node="testEffectDispatchWithBuffering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;259;2;287;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that method dispatching for effects respects buffer parameters and bufferedMethods Lists.;;d51,259;;b1,0;;m">
				</treenode>
				<treenode node="testEventDispatchWithBuffering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;230;2;252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that method dispatching for events respects buffer parameters and bufferedMethods Lists.;;d50,230;;b1,0;;m">
				</treenode>
				<treenode node="testLinkWithAribtraryAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;463;2;475;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test link passing on htmlAttributes;;d51,463;;b1,0;;m">
				</treenode>
				<treenode node="testLinkWithMock;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;395;2;419;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test link();;d36,395;;b1,0;;m">
				</treenode>
				<treenode node="testLinkWithMockAndConfirm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;426;2;456;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test link with a mock and confirmation;;d46,426;;b1,0;;m">
				</treenode>
				<treenode node="testLinkWithNoBuffering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;482;2;507;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that link() and no buffering returns an &lt;a&gt; and &lt;script&gt; tags.;;d43,482;;b1,0;;m">
				</treenode>
				<treenode node="testLinkWithNoBufferingAndSafe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;514;2;538;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test link with buffering off and safe on.;;d50,514;;b1,0;;m">
				</treenode>
				<treenode node="testMethodDispatching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;211;2;223;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that methods dispatch internally and to the engine class;;d41,211;;b1,0;;m">
				</treenode>
				<treenode node="testObjectPassThrough;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;675;2;679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Object::Object() is not breaking json output in JsHelper;;d41,675;;b1,0;;m">
				</treenode>
				<treenode node="testSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;698;2;718;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test set()'ing variables to the JavaScript buffer and controlling the output var name.;;d27,698;;b1,0;;m">
				</treenode>
				<treenode node="testSetVarsAtTopOfBufferedScripts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;725;2;735;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that vars set with Js-&gt;set() go to the top of the buffered scripts list.;;d53,725;;b1,0;;m">
				</treenode>
				<treenode node="testSubmitWithMock;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;545;2;577;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test submit() with a Mock to check Engine method calls;;d38,545;;b1,0;;m">
				</treenode>
				<treenode node="testSubmitWithMockRequestParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;584;2;623;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test submit() with a mock;;d51,584;;b1,0;;m">
				</treenode>
				<treenode node="testSubmitWithNoBuffer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;630;2;668;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that no buffer works with submit() and that parameters are leaking into the script tag.;;d42,630;;b1,0;;m">
				</treenode>
				<treenode node="testValuePassThrough;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;687;2;691;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that inherited Helper::value() is overwritten in JsHelper::value() and calls JsBaseEngineHelper::value().;;d40,687;;b1,0;;m">
				</treenode>
				<treenode node="testWriteBufferAndXhr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;338;2;354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that writeBuffer() sets domReady = false when the request is done by XHR. Including a domReady() when in XHR can cause issues as events aren't triggered by some libraries;;d41,338;;b1,0;;m">
				</treenode>
				<treenode node="testWriteBufferNotInline;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;322;2;330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that writing the buffer with inline = false includes a script tag.;;d44,322;;b1,0;;m">
				</treenode>
				<treenode node="testWriteScriptsInFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;361;2;388;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that writeScripts makes files, and puts the events into them.;;d42,361;;b1,0;;m">
				</treenode>
				<treenode node="testWriteScriptsNoFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;294;2;315;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that writeScripts generates scripts inline.;;d42,294;;b1,0;;m">
				</treenode>
				<treenode node="cDataEnd;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;132;17;132;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cDataStart;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;125;19;125;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsonView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f0;52;1;153;;;;vpos;;vView;;c;;r&#xA;Description&#xA;     A view class that is used for JSON responses.;;d28,52;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f8;67;2;72;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    Controller $controller - Controller instance;;d60,67;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f40;67;51;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_serialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f11;130;2;151;;;;vpos;;vstring;;r&#xA;Description&#xA;     Serialize view vars&#xA;&#xA;Parameters:&#xA;    array $serialize - The viewVars that need to be serialized&#xA;&#xA;Return:&#xA;   The serialized data;;d43,130;;b2,0;;marray $serialize;;p">
					<treenode node="serialize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f31;130;41;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f8;79;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Skip loading helpers if this is a _serialize based view.;;d31,79;;b1,0;;m">
				</treenode>
				<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f8;102;2;122;;;;vpos;;vstring;;r&#xA;Description&#xA;     Render a JSON view.&#xA;&#xA;Parameters:&#xA;    string $view - The view being rendered&#xA;    string $layout - The layout being rendered&#xA;&#xA;Return:&#xA;   The rendered view;;d54,102;;b1,0;;mstring $view;;pstring $layout;;p">
					<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f38;102;45;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f24;102;29;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subDir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php;f8;60;15;60;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="JsonViewTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f0;28;1;308;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     JsonViewTest;;d40,28;;b0,0;;m">
				<treenode node="renderWithoutViewProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f15;42;2;156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generates testRenderWithoutView data.;;d52,42;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f8;30;2;33;;;;vpos;;v;;r;;d25,30;;b1,0;;m">
				</treenode>
				<treenode node="testJsonpResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f8;203;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testJsonpResponse method;;d37,203;;b1,0;;m">
				</treenode>
				<treenode node="testRenderSerializeNoHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f8;182;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that rendering with _serialize does not load helpers.;;d48,182;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithoutView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f8;164;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render with a valid string in _serialize.;;d69,164;;b1,0;;mdata;;pserialize;;pexpected;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f39;164;44;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f58;164;67;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="serialize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f46;164;56;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testRenderWithView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f8;238;2;263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render with a View file specified.;;d38,238;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithViewAndNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php;f8;270;2;307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render with a View file specified and named parameters.;;d46,270;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="L10n;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f0;25;1;490;;;;vpos;;v;;r&#xA;Description&#xA;     Localization;;d11,25;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;330;2;338;;;;vpos;;v;;r&#xA;Description&#xA;     Class constructor;;d31,330;;b1,0;;m">
				</treenode>
				<treenode node="_autoLanguage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f11;414;2;430;;;;vpos;;vbool;;r&#xA;Description&#xA;     Attempts to find the locale settings based on the HTTP_ACCEPT_LANGUAGE variable&#xA;&#xA;Return:&#xA;   Success;;d36,414;;b2,0;;m">
				</treenode>
				<treenode node="_setLanguage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f11;366;2;407;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Sets the class vars to correct values for $language. If $language is null it will use the L10n::$default if defined&#xA;&#xA;Parameters:&#xA;    string $language - Language (if null will use L10n::$default if defined);;d51,366;;b2,0;;mstring $language;;p">
					<treenode node="language;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f33;366;42;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="catalog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;468;2;488;;;;vpos;;varray;;r&#xA;Description&#xA;     Attempts to find catalog record for requested language&#xA;&#xA;Parameters:&#xA;    string|array $language - string requested language, array of requested languages, or null for whole catalog&#xA;&#xA;Return:&#xA;   |bool array catalog record for requested language, array of catalog records, whole catalog,;;d43,468;;b1,0;;mstring|array $language;;p">
					<treenode node="language;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f25;468;34;468;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;348;2;357;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the settings for $language. If $language is null it attempt to get settings from L10n::_autoLanguage();s if this fails the method will get the settings from L10n::_setLanguage();s&#xA;&#xA;Parameters:&#xA;    string $language - Language (if null will use DEFAULT_LANGUAGE if defined);;d39,348;;b1,0;;mstring $language;;p">
					<treenode node="language;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f21;348;30;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="map;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;439;2;459;;;;vpos;;vstring;;r&#xA;Description&#xA;     Attempts to find locale for language, or language for locale&#xA;&#xA;Parameters:&#xA;    string|array $mixed - 2/3 char string (language/locale), array of those strings, or null&#xA;&#xA;Return:&#xA;   |array|bool string language/locale, array of those values, whole map as an array,;;d36,439;;b1,0;;mstring|array $mixed;;p">
					<treenode node="mixed;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f21;439;27;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_l10nCatalog;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f11;183;24;183;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_l10nMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f11;88;20;88;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;71;16;71;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;64;16;64;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="direction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;78;18;78;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lang;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;46;13;46;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="language;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;32;17;32;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="languagePath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;39;21;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="locale;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php;f8;53;15;53;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="L10nTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php;f0;25;1;991;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     L10nTest class;;d36,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php;f8;32;2;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="testCatalog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php;f8;491;2;990;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCatalog method;;d31,491;;b1,0;;m">
				</treenode>
				<treenode node="testGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php;f8;42;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGet method;;d27,42;;b1,0;;m">
				</treenode>
				<treenode node="testGetAutoLanguage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php;f8;86;2;119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetAutoLanguage method;;d39,86;;b1,0;;m">
				</treenode>
				<treenode node="testGetWithDeprecatedConstant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php;f8;126;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGet method with deprecated constant DEFAULT_LANGUAGE;;d49,126;;b1,0;;m">
				</treenode>
				<treenode node="testMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php;f8;154;2;484;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMap method;;d27,154;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Level;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4123;1;4175;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Level class;;d34,4123;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4165;2;4173;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4165;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4165;30;4165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4151;16;4151;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4130;13;4130;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4137;14;4137;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4144;17;4144;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Library;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Library.php;f0;23;1;24;;;;vpos;;v;;r&#xA;Description&#xA;     Class Library;;d14,23;;b0,0;;m">
			</treenode>
			<treenode node="LogEngineCollection;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\LogEngineCollection.php;f0;25;1;73;;;;vpos;;vObjectCollection;;c;;r&#xA;Description&#xA;     Registry of loaded log engines;;d51,25;;b0,0;;m">
				<treenode node="_getLogger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\LogEngineCollection.php;f18;61;2;71;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Attempts to import a logger class from the various paths it could be on. Checks that the logger class implements a write method as well.&#xA;&#xA;Parameters:&#xA;    string $loggerName - the plugin&#xA;&#xA;Return:&#xA;   boolean false on any failures, string of classname to use if search was successful;;d51,61;;b2,5;;mstring $loggerName;;p">
					<treenode node="loggerName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\LogEngineCollection.php;f38;61;49;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\LogEngineCollection.php;f8;35;2;51;;;;vpos;;vBaseLog;;r&#xA;Description&#xA;     Loads/constructs a Log engine.&#xA;&#xA;Parameters:&#xA;    string $name - instance identifier&#xA;    array $options - Setting for the Log Engine&#xA;&#xA;Return:&#xA;   BaseLog engine instance;;d49,35;;b1,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\LogEngineCollection.php;f22;35;27;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\LogEngineCollection.php;f29;35;37;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="LogEngineCollectionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f0;32;1;88;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     LogEngineCollectionTest class;;d51,32;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f8;41;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start test callback;;d25,41;;b1,0;;m">
				</treenode>
				<treenode node="testLoad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f8;52;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test load;;d28,52;;b1,0;;m">
				</treenode>
				<treenode node="testLoadInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f8;83;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test load with invalid Log;;d35,83;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithSuffix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f8;62;2;65;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test load with deprecated Log suffix;;d38,62;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithSuffixAtBeginning;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f8;72;2;75;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that engines starting with Log also work properly;;d49,72;;b1,0;;m">
				</treenode>
				<treenode node="Collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f8;34;19;34;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="LoggerEngineLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php;f0;24;1;25;;;;vpos;;vFileLog;;c;;r&#xA;Description&#xA;     LoggerEngineLog class;;d38,24;;b0,0;;m">
			</treenode>
			<treenode node="MailTransport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f0;23;1;81;;;;vpos;;vAbstractTransport;;c;;r&#xA;Description&#xA;     Send mail using mail() function;;d46,23;;b0,0;;m">
				<treenode node="_mail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f11;65;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Wraps internal function mail() and throws exception instead of errors if anything goes wrong&#xA;&#xA;Parameters:&#xA;    string $to - email's recipient&#xA;    string $subject - email's subject&#xA;    string $message - email's body&#xA;    string $headers - email's custom headers&#xA;    string $params - additional params for sending email, will be ignored when in safe_mode;;d77,65;;b2,0;;mstring $to;;pstring $subject;;pstring $message;;pstring $headers;;pstring $params;;p">
					<treenode node="headers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f51;65;59;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f41;65;49;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f61;65;68;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f31;65;39;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="to;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f26;65;29;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f8;32;2;52;;;;vpos;;varray;;r&#xA;Description&#xA;     Send mail&#xA;&#xA;Parameters:&#xA;    CakeEmail $email - CakeEmail;;d40,32;;b1,0;;mCakeEmail $email;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php;f32;32;38;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MailTransportTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\MailTransportTest.php;f0;26;1;90;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case;;d45,26;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\MailTransportTest.php;f8;33;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="testSendData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\MailTransportTest.php;f8;44;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSend method;;d32,44;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MediaView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\MediaView.php;f0;57;1;97;;;;vpos;;vView;;c;;r&#xA;Description&#xA;     Media View provides a custom view implementation for sending files to visitors. Its great for making the response of a controller action be a file that is saved somewhere on the filesystem.;;d29,57;;b0,0;;m">
				<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\MediaView.php;f8;66;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Display or download the given file&#xA;&#xA;Parameters:&#xA;    string $view - Not used&#xA;    string $layout - Not used;;d54,66;;b1,0;;mstring $view;;pstring $layout;;p">
					<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\MediaView.php;f38;66;45;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\MediaView.php;f24;66;29;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MediaViewTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\MediaViewTest.php;f0;27;1;136;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     MediaViewTest class;;d41,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\MediaViewTest.php;f8;34;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\MediaViewTest.php;f8;52;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,52;;b1,0;;m">
				</treenode>
				<treenode node="testRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\MediaViewTest.php;f8;62;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRender method;;d30,62;;b1,0;;m">
				</treenode>
				<treenode node="testRenderCachingAndName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\MediaViewTest.php;f8;87;2;115;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render() when caching is on.;;d44,87;;b1,0;;m">
				</treenode>
				<treenode node="testRenderUpperExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\MediaViewTest.php;f8;122;2;134;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test downloading files with UPPERCASE extensions.;;d44,122;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MemcachedEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f0;27;1;337;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     Memcached storage engine for cache. Memcached has some limitations in the amount of control you have over expire times far in the future. See MemcachedEngine::write() for more information.;;d42,27;;b0,0;;m">
				<treenode node="_parseServerString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f11;186;2;205;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses the server address into the host/port. Handles both IPv6 and IPv4 addresses and Unix sockets&#xA;&#xA;Parameters:&#xA;    string $server - The server address string&#xA;&#xA;Return:&#xA;   Array containing host, port;;d48,186;;b2,0;;mstring $server;;p">
					<treenode node="server;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f39;186;46;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f11;153;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Settings the memcached instance;;d34,153;;b2,0;;m">
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;277;2;291;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache&#xA;&#xA;Parameters:&#xA;    bool $check - If true no deletes will occur and instead CakePHP will rely&#xA;&#xA;Return:&#xA;   True if the cache was successfully cleared, false otherwise;;d31,277;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f23;277;29;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;334;2;336;;;;vpos;;vbool;;r&#xA;Description&#xA;     Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.&#xA;&#xA;Parameters:&#xA;    string $group - The group to clear&#xA;&#xA;Return:&#xA;   success;;d36,334;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f28;334;34;334;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;256;2;258;;;;vpos;;vNew;;r&#xA;Description&#xA;     Decrements the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;&#xA;Return:&#xA;   decremented value, false otherwise;;d46,256;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f27;256;31;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f33;256;40;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;266;2;268;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d30,266;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f24;266;28;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;300;2;325;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the `group value` for each of the configured groups If the group initial value was not found, then it initializes the group accordingly.;;d26,300;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;244;2;246;;;;vpos;;vNew;;r&#xA;Description&#xA;     Increments the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to increment&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d46,244;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f27;244;31;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f33;244;40;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;77;2;145;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the Cache Engine&#xA;&#xA;Parameters:&#xA;    array $settings - array of setting for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,77;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f22;77;31;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;232;2;234;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d28,232;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f22;232;26;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;218;2;224;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into cache. When using memcached as your cache engine remember that the Memcached pecl extension does not support cache expiry times greater than 30 days in the future. Any duration greater than 30 days will be treated as never expiring.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached&#xA;    int $duration - How long to cache the data, in seconds&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d48,218;;b1,0;;mstring $key;;pmixed $value;;pint $duration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f37;218;46;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f23;218;27;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f29;218;35;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Memcached;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f11;34;22;34;;;;vposMemcache;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_serializers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f11;61;24;61;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php;f8;52;17;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MemcachedEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f0;55;1;788;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     MemcachedEngineTest class;;d47,55;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;62;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,62;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;78;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,78;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;661;2;680;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test clearing memcached.;;d29,661;;b1,0;;m">
				</treenode>
				<treenode node="testCompressionSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;116;2;134;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCompressionSetting method;;d42,116;;b1,0;;m">
				</treenode>
				<treenode node="testConfigurationConflict;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;626;2;654;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that configurations don't conflict, when a file engine is declared after a memcached one.;;d45,626;;b1,0;;m">
				</treenode>
				<treenode node="testConnectIpv6;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;389;2;400;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test connecting to an ipv6 server.;;d35,389;;b1,0;;m">
				</treenode>
				<treenode node="testDecrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;516;2;533;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecrement method;;d33,516;;b1,0;;m">
				</treenode>
				<treenode node="testDecrementCompressedKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;540;2;564;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test decrementing compressed keys;;d47,540;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;502;2;509;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCache method;;d35,502;;b1,0;;m">
				</treenode>
				<treenode node="testExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;455;2;495;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExpiry method;;d30,455;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;773;2;787;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test clearing a cache group;;d34,773;;b1,0;;m">
				</treenode>
				<treenode node="testGroupDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;755;2;766;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deleteing from a groups-enabled config is possible;;d35,755;;b1,0;;m">
				</treenode>
				<treenode node="testGroupReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;724;2;748;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that configuring groups for stored keys return the correct values when read/written Shows that altering the group value is equivalent to deleting all keys under the same group;;d38,724;;b1,0;;m">
				</treenode>
				<treenode node="testIgbinarySerializerSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;219;2;235;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIgbinarySerializerSetting method;;d49,219;;b1,0;;m">
				</treenode>
				<treenode node="testIgbinarySerializerThrowException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;315;2;333;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIgbinarySerializerThrowException method;;d56,315;;b1,0;;m">
				</treenode>
				<treenode node="testIncrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;571;2;588;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIncrement method;;d33,571;;b1,0;;m">
				</treenode>
				<treenode node="testIncrementCompressedKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;595;2;619;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test incrementing compressed keys;;d47,595;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidSerializerSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;158;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test accepts only valid serializer engine;;d48,158;;b1,0;;m">
				</treenode>
				<treenode node="testJsonSerializerSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;196;2;212;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testJsonSerializerSetting method;;d45,196;;b1,0;;m">
				</treenode>
				<treenode node="testJsonSerializerThrowException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;265;2;283;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testJsonSerializerThrowException method;;d52,265;;b1,0;;m">
				</treenode>
				<treenode node="testLongDurationEqualToZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;701;2;715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that durations greater than 30 days never expire;;d47,701;;b1,0;;m">
				</treenode>
				<treenode node="testMsgpackSerializerSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;242;2;258;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMsgpackSerializerSetting method;;d48,242;;b1,0;;m">
				</treenode>
				<treenode node="testMsgpackSerializerThrowException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;290;2;308;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMsgpackSerializerThrowException method;;d55,290;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleServers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;360;2;382;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSettings method;;d39,360;;b1,0;;m">
				</treenode>
				<treenode node="testOptionsSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;141;2;151;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting options;;d38,141;;b1,0;;m">
				</treenode>
				<treenode node="testParseServerStringNonLatin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;407;2;414;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test non latin domains.;;d49,407;;b1,0;;m">
				</treenode>
				<treenode node="testParseServerStringUnix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;421;2;425;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test unix sockets.;;d45,421;;b1,0;;m">
				</treenode>
				<treenode node="testPhpSerializerSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;178;2;189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPhpSerializerSetting method;;d44,178;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;432;2;448;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteCache method;;d41,432;;b1,0;;m">
				</treenode>
				<treenode node="testSaslAuthException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;341;2;353;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using authentication without memcached installed with SASL support throw an exception;;d41,341;;b1,0;;m">
				</treenode>
				<treenode node="testSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;91;2;109;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSettings method;;d32,91;;b1,0;;m">
				</treenode>
				<treenode node="testZeroDuration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;687;2;694;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a 0 duration can successfully write.;;d36,687;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MemcacheEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f0;26;1;291;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     Memcache storage engine for cache. Memcache has some limitations in the amount of control you have over expire times far in the future. See MemcacheEngine::write() for more information.;;d41,26;;b0,0;;m">
				<treenode node="_parseServerString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f11;105;2;124;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses the server address into the host/port. Handles both IPv6 and IPv4 addresses and Unix sockets&#xA;&#xA;Parameters:&#xA;    string $server - The server address string&#xA;&#xA;Return:&#xA;   Array containing host, port;;d48,105;;b2,0;;mstring $server;;p">
					<treenode node="server;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f39;105;46;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;205;2;228;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache&#xA;&#xA;Parameters:&#xA;    bool $check - If true no deletes will occur and instead CakePHP will rely&#xA;&#xA;Return:&#xA;   True if the cache was successfully cleared, false otherwise;;d31,205;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f23;205;29;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;288;2;290;;;;vpos;;vbool;;r&#xA;Description&#xA;     Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.&#xA;&#xA;Parameters:&#xA;    string $group - The group to clear&#xA;&#xA;Return:&#xA;   success;;d36,288;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f28;288;34;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;237;2;245;;;;vpos;;vbool;;r&#xA;Description&#xA;     Connects to a server in connection pool&#xA;&#xA;Parameters:&#xA;    string $host - host ip address or name&#xA;    int $port - Server port&#xA;&#xA;Return:&#xA;   True if memcache server was connected;;d47,237;;b1,0;;mstring $host;;pint $port;;p">
					<treenode node="host;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f25;237;30;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="port;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f32;237;37;237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;179;2;186;;;;vpos;;vNew;;r&#xA;Description&#xA;     Decrements the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;&#xA;Return:&#xA;   decremented value, false otherwise;;d46,179;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f27;179;31;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f33;179;40;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;194;2;196;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d30,194;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f24;194;28;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;254;2;279;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the `group value` for each of the configured groups If the group initial value was not found, then it initializes the group accordingly.;;d26,254;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;162;2;169;;;;vpos;;vNew;;r&#xA;Description&#xA;     Increments the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to increment&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d46,162;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f27;162;31;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f33;162;40;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;63;2;96;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the Cache Engine&#xA;&#xA;Parameters:&#xA;    array $settings - array of setting for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,63;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f22;63;31;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;150;2;152;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d28,150;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f22;150;26;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;137;2;142;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into cache. When using memcache as your cache engine remember that the Memcache pecl extension does not support cache expiry times greater than 30 days in the future. Any duration greater than 30 days will be treated as never expiring.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached&#xA;    int $duration - How long to cache the data, in seconds&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d48,137;;b1,0;;mstring $key;;pmixed $value;;pint $duration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f37;137;46;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f23;137;27;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f29;137;35;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_compiledGroupNames;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f11;34;31;34;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_Memcache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f11;41;21;41;;;;vposMemcache;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php;f8;52;17;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MemcacheEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f0;49;1;481;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     MemcacheEngineTest class;;d46,49;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;56;2;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,56;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;74;2;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,74;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;356;2;375;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test clearing memcache.;;d29,356;;b1,0;;m">
				</treenode>
				<treenode node="testConfigurationConflict;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;321;2;349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that configurations don't conflict, when a file engine is declared after a memcache one.;;d45,321;;b1,0;;m">
				</treenode>
				<treenode node="testConnect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;138;2;143;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnect method;;d31,138;;b1,0;;m">
				</treenode>
				<treenode node="testConnectIpv6;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;150;2;161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test connecting to an ipv6 server.;;d35,150;;b1,0;;m">
				</treenode>
				<treenode node="testDecrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;277;2;292;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecrement method;;d33,277;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;263;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCache method;;d35,263;;b1,0;;m">
				</treenode>
				<treenode node="testExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;216;2;256;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExpiry method;;d30,216;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;466;2;480;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test clearing a cache group;;d34,466;;b1,0;;m">
				</treenode>
				<treenode node="testGroupDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;448;2;459;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deleteing from a groups-enabled config is possible;;d35,448;;b1,0;;m">
				</treenode>
				<treenode node="testGroupReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;417;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that configuring groups for stored keys return the correct values when read/written Shows that altering the group value is equivalent to deleting all keys under the same group;;d38,417;;b1,0;;m">
				</treenode>
				<treenode node="testIncrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;299;2;314;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIncrement method;;d33,299;;b1,0;;m">
				</treenode>
				<treenode node="testLongDurationEqualToZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;396;2;408;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that durations greater than 30 days never expire;;d47,396;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleServers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;109;2;131;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSettings method;;d39,109;;b1,0;;m">
				</treenode>
				<treenode node="testParseServerStringNonLatin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;168;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test non latin domains.;;d49,168;;b1,0;;m">
				</treenode>
				<treenode node="testParseServerStringUnix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;182;2;186;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test unix sockets.;;d45,182;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;193;2;209;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteCache method;;d41,193;;b1,0;;m">
				</treenode>
				<treenode node="testSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;88;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSettings method;;d32,88;;b1,0;;m">
				</treenode>
				<treenode node="testZeroDuration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;382;2;389;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a 0 duration can successfully write.;;d36,382;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MergePostsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f0;109;1;117;;;;vpos;;vMergeVarPluginAppController;;c;;r&#xA;Description&#xA;     MergePostsController;;d63,109;;b0,0;;m">
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;116;13;116;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MergeVarComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f0;49;31;49;;;;vpos;;v;;r&#xA;Description&#xA;     MergeVar Component;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="MergeVariablesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f0;58;1;73;;;;vpos;;vMergeVarsAppController;;c;;r&#xA;Description&#xA;     Additional controller for testing;;d62,58;;b0,0;;m">
				<treenode node="_mergeParent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f11;72;24;72;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;65;13;65;;;;vposarrays;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MergeVarPluginAppController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f0;80;1;102;;;;vpos;;vMergeVarsAppController;;c;;r&#xA;Description&#xA;     MergeVarPlugin App Controller;;d65,80;;b0,0;;m">
				<treenode node="_mergeParent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f11;101;24;101;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;87;19;87;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;94;16;94;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MergeVarPluginAppModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;625;1;635;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     MergeVarPluginAppModel class;;d46,625;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;632;15;632;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MergeVarPluginComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;666;1;683;;;;vpos;;vMergeVarPluginAppModel;;c;;r&#xA;Description&#xA;     MergeVarPluginComment class;;d59,666;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;673;15;673;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;682;17;682;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MergeVarPluginPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;642;1;659;;;;vpos;;vMergeVarPluginAppModel;;c;;r&#xA;Description&#xA;     MergeVarPluginPost class;;d56,642;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;649;15;649;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;658;17;658;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MergeVarsAppController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f0;27;1;42;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     Test case AppController;;d48,27;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;34;19;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Message;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1079;1;1094;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Message class;;d36,1079;;b0,0;;m">
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1093;15;1093;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1086;13;1086;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MessageFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MessageFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class MessageFixture;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MessageFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MessageFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MethodNotAllowedException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;160;1;175;;;;vpos;;vHttpException;;c;;r&#xA;Description&#xA;     Represents an HTTP 405 error.;;d54,160;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;168;2;173;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - If no message is given 'Method Not Allowed' will be the message&#xA;    int $code - Status code, defaults to 405;;d59,168;;b1,0;;mstring $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f46;168;51;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;168;37;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="MissingActionException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;275;1;285;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Missing Action exception - used when a controller action cannot be found.;;d51,275;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;280;2;282;;;;vpos;;v;;r;;d52,280;;b1,0;;mmessage;;pcode;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f39;280;44;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;280;37;280;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;277;28;277;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingBehaviorException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;321;1;325;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a behavior cannot be found.;;d53,321;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;323;28;323;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingComponentException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;310;1;314;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a component cannot be found.;;d54,310;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;312;28;312;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingConnectionException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;376;1;393;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when no connections can be found.;;d55,376;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;386;2;391;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string|array $message - The error message&#xA;    int $code - The error code;;d52,386;;b1,0;;mstring|array $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f39;386;44;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;386;37;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;378;28;378;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingControllerException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;257;1;267;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Missing Controller exception - used when a controller cannot be found.;;d55,257;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;262;2;264;;;;vpos;;v;;r;;d52,262;;b1,0;;mmessage;;pcode;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f39;262;44;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;262;37;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;259;28;259;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingDatabaseException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;365;1;369;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Runtime Exceptions for ConnectionManager;;d53,365;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;367;28;367;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingDatasourceConfigException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;433;1;437;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class to be thrown when a datasource configuration is not found;;d61,433;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;435;28;435;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingDatasourceException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;444;1;448;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a datasource cannot be found.;;d55,444;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;446;28;446;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingDispatcherFilterException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;499;1;503;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception raised when a Dispatcher filter could not be found;;d61,499;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;501;28;501;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingHelperException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;354;1;358;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a helper cannot be found.;;d51,354;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;356;28;356;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingLayoutException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;343;1;347;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a layout file cannot be found.;;d51,343;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;345;28;345;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingModelException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;466;1;470;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception raised when a Model could not be found.;;d50,466;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;468;28;468;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingPluginException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;488;1;492;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception raised when a plugin could not be found;;d51,488;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;490;28;490;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingShellException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;422;1;426;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a shell cannot be found.;;d50,422;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;424;28;424;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingShellMethodException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;411;1;415;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a shell method cannot be found.;;d56,411;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;413;28;413;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingTableException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;455;1;459;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class to be thrown when a database table is not found in the datasource;;d50,455;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;457;28;457;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingTaskException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;400;1;404;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a Task cannot be found.;;d49,400;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;402;28;402;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingTestLoaderException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;477;1;481;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception raised when a test loader could not be found;;d55,477;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;479;28;479;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingViewException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;332;1;336;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Used when a view file cannot be found.;;d49,332;;b0,0;;m">
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;334;28;334;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MissingWidgetThingException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f0;128;1;129;;;;vpos;;vNotFoundException;;c;;r&#xA;Description&#xA;     Exception class for testing app error handlers and custom errors.;;d60,128;;b0,0;;m">
			</treenode>
			<treenode node="MockDataSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f0;48;1;49;;;;vpos;;vDataSource;;c;;r&#xA;Description&#xA;     Class MockDataSource;;d40,48;;b0,0;;m">
			</treenode>
			<treenode node="MockPDO;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f0;33;1;41;;;;vpos;;vPDO;;c;;r&#xA;Description&#xA;     Class MockPDO;;d26,33;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php;f8;38;2;39;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor.;;d31,38;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Model;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f0;44;19;44;;;;vpos;;v;;r&#xA;Description&#xA;     Object-relational mapper.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ModelA;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1370;1;1392;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ModelA class;;d35,1370;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1391;16;1391;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1377;13;1377;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1384;17;1384;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelB;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1399;1;1421;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ModelB class;;d35,1399;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1420;16;1420;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1406;13;1406;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1413;17;1413;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f0;63;27;63;;;;vpos;;v;;r&#xA;Description&#xA;     Model behavior base class.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ModelC;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1428;1;1450;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ModelC class;;d35,1428;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1449;16;1449;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1435;13;1435;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1442;17;1442;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelCrossSchemaHabtmTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f0;27;1;235;;;;vpos;;vBaseModelTest;;c;;r&#xA;Description&#xA;     Class ModelCrossSchemaHabtmTest;;d54,27;;b0,0;;m">
				<treenode node="_checkConfigs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f11;68;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check if primary and secondary test databases are configured.;;d36,68;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;58;2;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,58;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;102;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmFind method;;d33,102;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;136;2;172;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmSave method;;d33,136;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmWithThreeDatabases;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;179;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmWithThreeDatabases method;;d47,179;;b1,0;;m">
				</treenode>
				<treenode node="testModelDatasources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;84;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testModelDatasources method;;d40,84;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;51;21;51;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="dropTables;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;44;19;44;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php;f8;34;17;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelD;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1457;1;1472;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ModelD class;;d35,1457;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1464;13;1464;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1471;17;1471;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelDeleteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f0;25;1;947;;;;vpos;;vBaseModelTest;;c;;r&#xA;Description&#xA;     ModelDeleteTest;;d44,25;;b0,0;;m">
				<treenode node="testBeforeDeleteDeleteAbortion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;836;2;846;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that beforeDelete returning false can abort deletion.;;d50,836;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeDeleteWipingTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;910;2;931;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that deleting records inside the beforeDelete doesn't truncate the table.;;d47,910;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeDeleteWipingTableWithDuplicateDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;938;2;946;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that deleting the same record from the beforeDelete and the delete doesn't truncate the table.;;d66,938;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;189;2;260;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDel method;;d30,189;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;284;2;421;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteAll method;;d33,284;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteAllFailedFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;443;2;452;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteAllFailedFind method;;d43,443;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteAllMultipleRowsPerId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;462;2;489;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteAllMultipleRowsPerId method;;d50,462;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteAllUnknownColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;429;2;434;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteAllUnknownColumn method;;d46,429;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteAllWithOrderProperty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;498;2;516;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteAllWithOrderProperty;;d50,498;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteArticleBLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;122;2;143;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteArticleBLinks method;;d43,122;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteDependent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;641;2;729;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteDependent method;;d39,641;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteDependentWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;150;2;182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteDependentWithConditions method;;d53,150;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteHabtmPostgresFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;854;2;903;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test for a habtm deletion error that occurs in postgres but should not. And should not occur in any dbo.;;d50,854;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteHabtmReferenceWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;32;2;115;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteHabtmReferenceWithConditions method;;d58,32;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;576;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteLinks method;;d35,576;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteLinksWithMultipleHabtmAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;736;2;764;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test deleteLinks with Multiple habtm associations;;d64,736;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteLinksWithPLuginJoinModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;623;2;634;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a plugin model as the 'with' model doesn't have issues;;d54,623;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteUpdatingCounterCacheCorrectly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;267;2;277;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that delete() updates the correct records counterCache() records.;;d59,267;;b1,0;;m">
				</treenode>
				<treenode node="testDependentExclusiveDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;558;2;569;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDependentExclusiveDelete method;;d48,558;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmDeleteLinksWhenNoPrimaryKeyInJoinTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;771;2;829;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmDeleteLinksWhenNoPrimaryKeyInJoinTable method;;d67,771;;b1,0;;m">
				</treenode>
				<treenode node="testRecursiveDel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php;f8;523;2;551;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecursiveDel method;;d36,523;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelIntegrationTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f0;54;1;2512;;;;vpos;;vBaseModelTest;;c;;r&#xA;Description&#xA;     ModelIntegrationTest;;d49,54;;b0,0;;m">
				<treenode node="testAssociationLazyLoading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;62;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAssociationLazyLoading;;d46,62;;b1,0;;m">
				</treenode>
				<treenode node="testAssociationLazyLoadWithBindModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;126;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAssociationLazyLoadWithBindModel;;d56,126;;b1,0;;m">
				</treenode>
				<treenode node="testAssociationLazyLoadWithHABTM;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;98;2;118;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAssociationLazyLoadWithHABTM;;d52,98;;b1,0;;m">
				</treenode>
				<treenode node="testAutoConstructAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1510;2;1608;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutoConstructAssociations method;;d49,1510;;b1,0;;m">
				</treenode>
				<treenode node="testAutoConstructPluginAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1615;2;1622;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test creating associations with plugins. Ensure a double alias isn't created;;d55,1615;;b1,0;;m">
				</treenode>
				<treenode node="testCacheSourcesRestored;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;166;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that $cacheSources is restored despite the settings on the model.;;d44,166;;b1,0;;m">
				</treenode>
				<treenode node="testColumnTypeFetching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1668;2;1679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testColumnTypeFetching method;;d42,1668;;b1,0;;m">
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1631;2;1643;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Model::__construct;;d33,1631;;b1,0;;m">
				</treenode>
				<treenode node="testConstructWithAlternateDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1652;2;1661;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Model::__construct;;d56,1652;;b1,0;;m">
				</treenode>
				<treenode node="testCreation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2221;2;2332;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreation method;;d32,2221;;b1,0;;m">
				</treenode>
				<treenode node="testCrossDatabaseJoins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;312;2;653;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests cross database joins. Requires $test and $test2 to both be set in DATABASE_CONFIG NOTE: When testing on MySQL, you must set 'persistent' =&gt; false on *both* database connections, or one connection will step on the other.;;d42,312;;b1,0;;m">
				</treenode>
				<treenode node="testDeconstructFieldsDateTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1039;2;1210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeconstructFields with datetime, timestamp, and date fields;;d49,1039;;b1,0;;m">
				</treenode>
				<treenode node="testDeconstructFieldsTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1016;2;1032;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test deconstruct with time fields.;;d60,1016;;b1,0;;minput;;presult;;p">
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f43;1016;49;1016;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="result;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f51;1016;58;1016;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testDisplayField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;905;2;914;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDisplayField method;;d36,905;;b1,0;;m">
				</treenode>
				<treenode node="testDynamicAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2114;2;2214;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDynamicAssociations method;;d43,2114;;b1,0;;m">
				</treenode>
				<treenode node="testDynamicBehaviorAttachment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;212;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDynamicBehaviorAttachment method;;d49,212;;b1,0;;m">
				</treenode>
				<treenode node="testEscapeField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2339;2;2363;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEscapeField to prove it escapes the field well even when it has part of the alias on it;;d35,2339;;b1,0;;m">
				</treenode>
				<treenode node="testFindSelfAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2005;2;2107;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindSelfAssociations method;;d44,2005;;b1,0;;m">
				</treenode>
				<treenode node="testFindWithJoinsOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;272;2;303;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindWithJoinsOption method;;d43,272;;b1,0;;m">
				</treenode>
				<treenode node="testGetAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1467;2;1503;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests getAssociated method;;d37,1467;;b1,0;;m">
				</treenode>
				<treenode node="testGetColumnTypeNoDB;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2506;2;2511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that calling getColumnType() on a model that is not supposed to use a table does not trigger any calls on any datasource;;d41,2506;;b1,0;;m">
				</treenode>
				<treenode node="testGetID;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2370;2;2387;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetID;;d29,2370;;b1,0;;m">
				</treenode>
				<treenode node="testHABTMKeepExisting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;660;2;741;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test HABM operations without clobbering existing records #275;;d41,660;;b1,0;;m">
				</treenode>
				<treenode node="testHABTMKeepExistingAlternateDataFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;748;2;837;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHABTMKeepExistingAlternateDataFormat;;d60,748;;b1,0;;m">
				</treenode>
				<treenode node="testHABTMKeepExistingWithThreeDbs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;844;2;898;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test HABM operations without clobbering existing records #275;;d53,844;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmUniqueKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1686;2;1689;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmUniqueKey method;;d38,1686;;b1,0;;m">
				</treenode>
				<treenode node="testHasMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2394;2;2410;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that model-&gt;hasMethod checks self and behaviors.;;d33,2394;;b1,0;;m">
				</treenode>
				<treenode node="testIdentity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1696;2;1719;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIdentity method;;d32,1696;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1270;2;1273;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests validation parameter order in custom validation methods;;d42,1270;;b1,0;;m">
				</treenode>
				<treenode node="testLoadModelSecondIteration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1280;2;1290;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadModelSecondIteration method;;d48,1280;;b1,0;;m">
				</treenode>
				<treenode node="testMissingTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;145;2;148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that creating a model with no existent database table associated will throw an exception;;d36,145;;b1,0;;m">
				</treenode>
				<treenode node="testMultischemaFixture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2417;2;2439;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultischemaFixture;;d42,2417;;b1,0;;m">
				</treenode>
				<treenode node="testMultischemaFixtureWithThreeDatabases;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2446;2;2485;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultischemaFixtureWithThreeDatabases, three databases;;d60,2446;;b1,0;;m">
				</treenode>
				<treenode node="testPkInHabtmLinkModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;186;2;205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPkInHabtmLinkModel method;;d42,186;;b1,0;;m">
				</treenode>
				<treenode node="testPkInHabtmLinkModelArticleB;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;155;2;159;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPkInHAbtmLinkModelArticleB;;d50,155;;b1,0;;m">
				</treenode>
				<treenode node="testPluginAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1343;2;1460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginAssociations method;;d42,1343;;b1,0;;m">
				</treenode>
				<treenode node="testResetOfExistsOnCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1297;2;1312;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ensure that exists() does not persist between method calls reset on create;;d45,1297;;b1,0;;m">
				</treenode>
				<treenode node="testSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;921;2;936;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchema method;;d30,921;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaNoDB;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;2493;2;2498;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that calling schema() on a model that is not supposed to use a table does not trigger any calls on any datasource;;d34,2493;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaUseTableFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;943;2;950;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check schema() on a model with useTable = false;s;;d43,943;;b1,0;;m">
				</treenode>
				<treenode node="testTablePrefixSwitching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1217;2;1263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTablePrefixSwitching method;;d44,1217;;b1,0;;m">
				</treenode>
				<treenode node="testTreeWithContainable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;246;2;265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTreeWithContainable method;;d43,246;;b1,0;;m">
				</treenode>
				<treenode node="testUseTableFalseExistsCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1319;2;1336;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUseTableFalseExistsCheck method;;d48,1319;;b1,0;;m">
				</treenode>
				<treenode node="testWithAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f8;1726;2;1998;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWithAssociation method;;d39,1726;;b1,0;;m">
				</treenode>
				<treenode node="timeProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php;f15;957;2;1008;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider for time tests.;;d39,957;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="ModelReadTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f0;25;1;8290;;;;vpos;;vBaseModelTest;;c;;r&#xA;Description&#xA;     ModelReadTest;;d42,25;;b0,0;;m">
				<treenode node="testAfterFindUnset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;3013;2;3030;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that afterFind can completely unset data.;;d38,3013;;b1,0;;m">
				</treenode>
				<treenode node="testAssociationAfterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4992;2;5080;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAssociationAfterFind method;;d44,4992;;b1,0;;m">
				</treenode>
				<treenode node="testAssociationAfterFindCalbacksDisabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5146;2;5232;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAssociationAfterFindCallbacksDisabled method;;d60,5146;;b1,0;;m">
				</treenode>
				<treenode node="testBindModelMultipleTimesResetCorrectly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4872;2;4881;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that multiple reset = true calls to bindModel() result in the original associations.;;d60,4872;;b1,0;;m">
				</treenode>
				<treenode node="testBindMultipleTimes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4700;2;4865;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBindMultipleTimes method;;d41,4700;;b1,0;;m">
				</treenode>
				<treenode node="testBindMultipleTimesWithDifferentResetSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4888;2;4915;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBindMultipleTimes method with different reset settings;;d67,4888;;b1,0;;m">
				</treenode>
				<treenode node="testBindUnbind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4207;2;4693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBindUnbind method;;d34,4207;;b1,0;;m">
				</treenode>
				<treenode node="testBindWithCustomPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4922;2;4934;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that bindModel behaves with Custom primary Key associations;;d48,4922;;b1,0;;m">
				</treenode>
				<treenode node="testBuildQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6298;2;6321;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test buildQuery();;d34,6298;;b1,0;;m">
				</treenode>
				<treenode node="testCallbackDisabling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5120;2;5139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that callbacks can be properly disabled;;d41,5120;;b1,0;;m">
				</treenode>
				<treenode node="testCallbackSourceChange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5240;2;5244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the database configuration assigned to the model can be changed using (before|after)Find callbacks;;d44,5240;;b1,0;;m">
				</treenode>
				<treenode node="testCallbackSourceChangeUnknownDatasource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5252;2;5256;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCallbackSourceChangeUnknownDatasource method;;d61,5252;;b1,0;;m">
				</treenode>
				<treenode node="testConditionalNumerics;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6281;2;6291;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConditionalNumerics method;;d43,6281;;b1,0;;m">
				</treenode>
				<treenode node="testDeeperAssociationAfterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5087;2;5113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeeperAssociationAfterFind method;;d50,5087;;b1,0;;m">
				</treenode>
				<treenode node="testExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;31;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExists function;;d30,31;;b1,0;;m">
				</treenode>
				<treenode node="testFetchingNonUniqueFKJoinTableRecords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;57;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFetchingNonUniqueFKJoinTableRecords();;d59,57;;b1,0;;m">
				</treenode>
				<treenode node="testFindAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6328;2;6550;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test find('all') method;;d31,6328;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllArrayConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6557;2;6581;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that find() with array conditions works when there is only one element.;;d46,6557;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllFakeThread;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6061;2;6274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindAllFakeThread method;;d41,6061;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllRecursiveSelfJoin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5755;2;5856;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindAllRecursiveSelfJoin method;;d48,5755;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllRecursiveWithHabtm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5863;2;5926;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindAllRecursiveWithHabtm method;;d49,5863;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllThreaded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;3137;2;3606;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindAllThreaded method;;d39,3137;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllWithConditionInChildQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4083;2;4119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindAllWithConditionInChildQuery;;d56,4083;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllWithConditionsHavingMixedDataTypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4126;2;4200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindAllWithConditionsHavingMixedDataTypes method;;d65,4126;;b1,0;;m">
				</treenode>
				<treenode node="testFindCombinedRelations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;3792;2;4063;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindCombinedRelations method;;d45,3792;;b1,0;;m">
				</treenode>
				<treenode node="testFindCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6940;2;6980;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test find('count') method;;d33,6940;;b1,0;;m">
				</treenode>
				<treenode node="testFindCountDistinct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7002;2;7014;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test find with COUNT(DISTINCT field);;d41,7002;;b1,0;;m">
				</treenode>
				<treenode node="testFindCountWithDbExpressions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7021;2;7037;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test find(count) with Db::expression;;d50,7021;;b1,0;;m">
				</treenode>
				<treenode node="testfindCustom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;8032;2;8045;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test custom find method;;d34,8032;;b1,0;;m">
				</treenode>
				<treenode node="testFindFakeThread;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5997;2;6054;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindFakeThread method;;d38,5997;;b1,0;;m">
				</treenode>
				<treenode node="testFindField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6889;2;6911;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindField method;;d33,6889;;b1,0;;m">
				</treenode>
				<treenode node="testFindFirstNoIdUsed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6987;2;6995;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that find('first') does not use the id set to the object.;;d41,6987;;b1,0;;m">
				</treenode>
				<treenode node="testFindList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6588;2;6856;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test find('list') method;;d32,6588;;b1,0;;m">
				</treenode>
				<treenode node="testFindListArrayCondition;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6863;2;6882;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that find(list) works with array conditions that have only one element.;;d46,6863;;b1,0;;m">
				</treenode>
				<treenode node="testFindMagic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7044;2;7068;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindMagic method;;d33,7044;;b1,0;;m">
				</treenode>
				<treenode node="testFindNeighbors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;3613;2;3760;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test find('neighbors');;d37,3613;;b1,0;;m">
				</treenode>
				<treenode node="testFindNeighborsNoPrev;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;3767;2;3785;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test find(neighbors) with missing fields so no neighbors are found.;;d43,3767;;b1,0;;m">
				</treenode>
				<treenode node="testFindQueryTypeInCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7746;2;7753;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Testing availability of $this-&gt;findQueryType in Model callbacks;;d48,7746;;b1,0;;m">
				</treenode>
				<treenode node="testFindThreaded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;3051;2;3130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindThreaded method;;d36,3051;;b1,0;;m">
				</treenode>
				<treenode node="testFindThreadedNoParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;3037;2;3044;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindThreadedNoParent method;;d44,3037;;b1,0;;m">
				</treenode>
				<treenode node="testFindUnique;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;6918;2;6933;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindUnique method;;d34,6918;;b1,0;;m">
				</treenode>
				<treenode node="testGetVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7976;2;7983;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that getting virtual fields works with and without model alias attached;;d39,7976;;b1,0;;m">
				</treenode>
				<treenode node="testGroupBy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;96;2;246;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGroupBy method;;d31,96;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmFinderQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5521;2;5562;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmFinderQuery method;;d40,5521;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmLimitOptimization;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5569;2;5632;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmLimitOptimization method;;d46,5569;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmRecursiveBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5361;2;5412;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmRecursiveBelongsTo method;;d47,5361;;b1,0;;m">
				</treenode>
				<treenode node="testHasManyLimitOptimization;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5639;2;5748;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHasManyLimitOptimization method;;d48,5639;;b1,0;;m">
				</treenode>
				<treenode node="testIsVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7958;2;7969;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that isVirtualField will accept both aliased and non aliased fieldnames;;d38,7958;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleBelongsToWithSameClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5263;2;5354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleBelongsToWithSameClass method;;d54,5263;;b1,0;;m">
				</treenode>
				<treenode node="testNonNumericHabtmJoinKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5419;2;5514;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNonNumericHabtmJoinKey method;;d46,5419;;b1,0;;m">
				</treenode>
				<treenode node="testNotEqualsInArrayWithOneValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;8011;2;8025;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test to assert that != in key together with a single element array will work;;d52,8011;;b1,0;;m">
				</treenode>
				<treenode node="testNotInArrayWithOneValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7990;2;8004;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that checks for error when NOT condition passed in key and a 1 element array value;;d46,7990;;b1,0;;m">
				</treenode>
				<treenode node="testOldQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;253;2;282;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOldQuery method;;d32,253;;b1,0;;m">
				</treenode>
				<treenode node="testParameterMismatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;357;2;368;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParameterMismatch method;;d41,357;;b1,0;;m">
				</treenode>
				<treenode node="testPreparedQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;289;2;349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPreparedQuery method;;d37,289;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7075;2;7148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRead method;;d28,7075;;b1,0;;m">
				</treenode>
				<treenode node="testReadFakeThread;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;5933;2;5990;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadFakeThread method;;d38,5933;;b1,0;;m">
				</treenode>
				<treenode node="testRecursiveFindAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7263;2;7573;;;;vpos;;v;;r;;d40,7263;;b1,0;;m">
				</treenode>
				<treenode node="testRecursiveFindAllWithLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7580;2;7739;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecursiveFindAllWithLimit method;;d49,7580;;b1,0;;m">
				</treenode>
				<treenode node="testRecursiveRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7155;2;7261;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecursiveRead method;;d37,7155;;b1,0;;m">
				</treenode>
				<treenode node="testRecursiveUnbind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;395;2;2984;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecursiveUnbind method;;d39,395;;b1,0;;m">
				</treenode>
				<treenode node="testRelatedAfterFindCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;8052;2;8289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test after find callback on related model;;d48,8052;;b1,0;;m">
				</treenode>
				<treenode node="testSaveEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4070;2;4076;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveEmpty method;;d33,4070;;b1,0;;m">
				</treenode>
				<treenode node="testSelfAssociationAfterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;2991;2;3006;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSelfAssociationAfterFind method;;d48,2991;;b1,0;;m">
				</treenode>
				<treenode node="testUnbindMultipleTimesResetCorrectly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4942;2;4951;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that calling unbindModel() with reset == true multiple times leaves associations in the correct state.;;d57,4942;;b1,0;;m">
				</treenode>
				<treenode node="testUnBindMultipleTimesWithDifferentResetSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;4958;2;4985;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBindMultipleTimes method with different reset settings;;d69,4958;;b1,0;;m">
				</treenode>
				<treenode node="testVeryStrangeUseCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;376;2;388;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testVeryStrangeUseCase method;;d42,376;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldAsAString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7943;2;7951;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that virtual fields work when they don't contain functions.;;d45,7943;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7763;2;7836;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testVirtualFields();;d37,7763;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsMysql;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7892;2;7936;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testVirtualFieldsMysql();;d42,7892;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsOrder;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php;f8;7845;2;7882;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testVirtualFieldsOrder();;d42,7845;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f0;28;1;1048;;;;vpos;;vBakeTask;;c;;r&#xA;Description&#xA;     Task class for creating and updating model files.;;d33,28;;b0,0;;m">
				<treenode node="_generatePossibleKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f11;796;2;808;;;;vpos;;varray;;r&#xA;Description&#xA;     Finds all possible keys to use on custom associations.&#xA;&#xA;Return:&#xA;   Array of tables and possible keys;;d44,796;;b2,0;;m">
				</treenode>
				<treenode node="_getModelObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f11;143;2;156;;;;vpos;;vModel;;r&#xA;Description&#xA;     Get a model object for a class name.&#xA;&#xA;Parameters:&#xA;    string $className - Name of class you want model to be&#xA;    string $table - Table name&#xA;&#xA;Return:&#xA;   Model instance;;d63,143;;b2,0;;mstring $className;;pstring $table;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f36;143;46;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f48;143;54;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_interactive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f11;190;2;287;;;;vpos;;vbool;;r&#xA;Description&#xA;     Handles interactive baking;;d35,190;;b2,0;;m">
				</treenode>
				<treenode node="_printAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f11;297;2;304;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Print out all the associations of a particular type&#xA;&#xA;Parameters:&#xA;    string $modelName - Name of the model relations belong to&#xA;    string $type - Name of association you want to see&#xA;    string $associations - Collection of associations;;d72,297;;b2,0;;mstring $modelName;;pstring $type;;pstring $associations;;p">
					<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f57;297;70;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="modelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f38;297;48;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f50;297;55;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;119;2;134;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Bake all models at once.;;d23,119;;b1,0;;m">
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;817;2;862;;;;vpos;;vstring;;r&#xA;Description&#xA;     Assembles and writes a Model file.&#xA;&#xA;Parameters:&#xA;    string|object $name - Model name or object&#xA;    array|bool $data - if array and $name is not an object assume bake data, otherwise boolean;;d46,817;;b1,0;;mstring|object $name;;parray|bool $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f29;817;34;817;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f22;817;27;817;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bakeFixture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;1041;2;1046;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Interact with FixtureTask to automatically bake fixtures when baking models.&#xA;&#xA;Parameters:&#xA;    string $className - Name of class to bake fixture for&#xA;    string $useTable - Optional table name for fixture to use;;d59,1041;;b1,0;;mstring $className;;pstring $useTable;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f29;1041;39;1041;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f41;1041;50;1041;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bakeTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;870;2;875;;;;vpos;;vstring;;r&#xA;Description&#xA;     Assembles and writes a unit test file&#xA;&#xA;Parameters:&#xA;    string $className - Model class name;;d38,870;;b1,0;;mstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f26;870;36;870;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="confirmAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;697;2;714;;;;vpos;;varray;;r&#xA;Description&#xA;     Interact with the user and confirm associations.&#xA;&#xA;Parameters:&#xA;    array $model - Temporary Model instance&#xA;    array $associations - Array of associations to be confirmed&#xA;&#xA;Return:&#xA;   Array of confirmed associations;;d66,697;;b1,0;;marray $model;;parray $associations;;p">
					<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f51;697;64;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f43;697;49;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="doActsAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;567;2;583;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles behaviors&#xA;&#xA;Parameters:&#xA;    Model $model - The model object&#xA;&#xA;Return:&#xA;   Behaviors;;d34,567;;b1,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f26;567;32;567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="doAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;515;2;559;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles associations&#xA;&#xA;Parameters:&#xA;    Model $model - The model object&#xA;&#xA;Return:&#xA;   Associations;;d40,515;;b1,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f32;515;38;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="doMoreAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;723;2;789;;;;vpos;;varray;;r&#xA;Description&#xA;     Interact with the user and generate additional non-conventional associations&#xA;&#xA;Parameters:&#xA;    Model $model - Temporary model instance&#xA;    array $associations - Array of associations&#xA;&#xA;Return:&#xA;   Array of associations;;d65,723;;b1,0;;mModel $model;;parray $associations;;p">
					<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f50;723;63;723;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f42;723;48;723;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="doValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;346;2;373;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles Generation and user interaction for creating validation.&#xA;&#xA;Parameters:&#xA;    Model $model - Model to have validations generated for&#xA;&#xA;Return:&#xA;   validate Array of user selected validations;;d38,346;;b1,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f30;346;36;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;86;2;112;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Execution method always used for tasks;;d27,86;;b1,0;;m">
				</treenode>
				<treenode node="fieldValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;406;2;507;;;;vpos;;varray;;r&#xA;Description&#xA;     Does individual field validation handling.&#xA;&#xA;Parameters:&#xA;    string $fieldName - Name of field to be validated&#xA;    array $metaData - metadata for field&#xA;    string $primaryKey - The primary key field&#xA;&#xA;Return:&#xA;   Array of validation for the field;;d76,406;;b1,0;;mstring $fieldName;;parray $metaData;;pstring $primaryKey;;p">
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f33;406;43;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="metaData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f45;406;54;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f56;406;67;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;592;2;612;;;;vpos;;varray;;r&#xA;Description&#xA;     Find belongsTo relations and add them to the associations list.&#xA;&#xA;Parameters:&#xA;    Model $model - Model instance of model being generated&#xA;    array $associations - Array of in progress associations&#xA;&#xA;Return:&#xA;   Associations with belongsTo added in;;d60,592;;b1,0;;mModel $model;;parray $associations;;p">
					<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f45;592;58;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f37;592;43;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findDisplayField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;328;2;338;;;;vpos;;vmixed;;r&#xA;Description&#xA;     interact with the user to find the displayField value for a model.&#xA;&#xA;Parameters:&#xA;    array $fields - Array of fields to look for and choose as a displayField&#xA;&#xA;Return:&#xA;   Name of field to use for displayField or false if the user declines to choose;;d43,328;;b1,0;;marray $fields;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f34;328;41;328;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findHasAndBelongsToMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;664;2;688;;;;vpos;;varray;;r&#xA;Description&#xA;     Find the hasAndBelongsToMany relations and add them to associations list&#xA;&#xA;Parameters:&#xA;    Model $model - Model instance being generated&#xA;    array $associations - Array of in-progress associations&#xA;&#xA;Return:&#xA;   Associations with hasAndBelongsToMany added in;;d70,664;;b1,0;;mModel $model;;parray $associations;;p">
					<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f55;664;68;664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f47;664;53;664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findHasOneAndMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;621;2;655;;;;vpos;;varray;;r&#xA;Description&#xA;     Find the hasOne and hasMany relations and add them to associations list&#xA;&#xA;Parameters:&#xA;    Model $model - Model instance being generated&#xA;    array $associations - Array of in progress associations&#xA;&#xA;Return:&#xA;   Associations with hasOne and hasMany added in;;d64,621;;b1,0;;mModel $model;;parray $associations;;p">
					<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f49;621;62;621;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f41;621;47;621;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;312;2;320;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds a primary Key in a list of fields.&#xA;&#xA;Parameters:&#xA;    array $fields - Array of fields that might have a primary key&#xA;&#xA;Return:&#xA;   Name of field that is a primary key;;d41,312;;b1,0;;marray $fields;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f32;312;39;312;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAllTables;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;941;2;965;;;;vpos;;varray;;r&#xA;Description&#xA;     Get an Array of all the tables in the supplied connection will halt the script if no tables are found.&#xA;&#xA;Parameters:&#xA;    string $useDbConfig - Connection name to scan&#xA;&#xA;Return:&#xA;   Array of tables in the database;;d51,941;;b1,0;;mstring $useDbConfig;;p">
					<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f30;941;42;941;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;973;2;998;;;;vpos;;vstring;;r&#xA;Description&#xA;     Forces the user to specify the model he wants to bake, and returns the selected model name.&#xA;&#xA;Parameters:&#xA;    string $useDbConfig - Database config name&#xA;&#xA;Return:&#xA;   The model name;;d46,973;;b1,0;;mstring $useDbConfig;;p">
					<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f25;973;37;973;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;1005;2;1031;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,1005;;b1,0;;m">
				</treenode>
				<treenode node="getTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;908;2;932;;;;vpos;;vstring;;r&#xA;Description&#xA;     Interact with the user to determine the table name of a particular model&#xA;&#xA;Parameters:&#xA;    string $modelName - Name of the model you want a table for&#xA;    string $useDbConfig - Name of the database config you want to get tables from&#xA;&#xA;Return:&#xA;   Table name;;d59,908;;b1,0;;mstring $modelName;;pstring $useDbConfig;;p">
					<treenode node="modelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f26;908;36;908;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f38;908;50;908;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;77;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override initialize;;d30,77;;b1,0;;m">
				</treenode>
				<treenode node="initValidations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;380;2;396;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Populate the _validations array;;d35,380;;b1,0;;m">
				</treenode>
				<treenode node="inOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;166;2;183;;;;vpos;;vint;;r&#xA;Description&#xA;     Generate a key value list of options and a prompt.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options to use for the selections&#xA;    string $prompt - Prompt to use for options list&#xA;    int $default - The default option for the given prompt&#xA;&#xA;Return:&#xA;   Result of user choice;;d70,166;;b1,0;;marray $options;;pstring $prompt;;pint $default;;p">
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f53;166;61;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f27;166;35;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prompt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f37;166;44;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;883;2;899;;;;vpos;;varray;;r&#xA;Description&#xA;     outputs the a list of possible models or controllers from database&#xA;&#xA;Parameters:&#xA;    string $useDbConfig - Database configuration name;;d46,883;;b1,0;;mstring $useDbConfig;;p">
					<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f25;883;37;883;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_modelNames;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f11;63;23;63;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_tables;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f11;56;19;56;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_validations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f11;70;24;70;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;35;13;35;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="skipTables;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;49;19;49;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php;f8;42;14;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f0;34;1;1326;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ModelTaskTest class;;d41,34;;b0,0;;m">
				<treenode node="_setupOtherMocks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f11;84;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     sets up the rest of the dependencies for Model Task;;d39,84;;b2,0;;m">
				</treenode>
				<treenode node="_useMockedOut;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f11;68;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup a mock that has out mocked. Normally this is not used as it makes $this-&gt;at() really tricky.;;d36,68;;b2,0;;m">
				</treenode>
				<treenode node="nameVariations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f15;995;2;999;;;;vpos;;vvoid;;r&#xA;Description&#xA;     data provider for testExecuteWithNamedModelVariations;;d41,995;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;51;2;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,51;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;101;2;104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,101;;b1,0;;m">
				</treenode>
				<treenode node="testBakeFixture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;740;2;749;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that the fixture object is correctly called.;;d35,740;;b1,0;;m">
				</treenode>
				<treenode node="testBakeRelations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;874;2;925;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking relations;;d37,874;;b1,0;;m">
				</treenode>
				<treenode node="testBakeTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;756;2;765;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that the test object is correctly called.;;d32,756;;b1,0;;m">
				</treenode>
				<treenode node="testBakeValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;837;2;867;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking validation;;d38,837;;b1,0;;m">
				</treenode>
				<treenode node="testBakeWithBehaviors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;953;2;967;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake() for models with behaviors;;d41,953;;b1,0;;m">
				</treenode>
				<treenode node="testBakeWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;932;2;946;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake() with a -plugin param;;d38,932;;b1,0;;m">
				</treenode>
				<treenode node="testBelongsToGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;577;2;608;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that belongsTo generation works.;;d43,577;;b1,0;;m">
				</treenode>
				<treenode node="testConfirmAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;773;2;808;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test confirming of associations, and that when an association is hasMany a question for the hasOne is also not asked.;;d43,773;;b1,0;;m">
				</treenode>
				<treenode node="testDoActsAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;726;2;733;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test non interactive doActsAs;;d32,726;;b1,0;;m">
				</treenode>
				<treenode node="testDoAssociationsNonInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;688;2;719;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test non interactive doAssociations;;d52,688;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1043;2;1093;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute runs all() when args[0] = all;;d38,1043;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoAllOddTables;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1100;2;1149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that odd tablenames aren't inflected back from modelname;;d47,1100;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoBakeOddTables;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1156;2;1205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that odd tablenames aren't inflected back from modelname;;d48,1156;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1251;2;1284;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the interactive side of bake.;;d46,1251;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithNamedModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;974;2;988;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute passes runs bake depending with named model.;;d45,974;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithNamedModelHasManyCreated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1025;2;1036;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute with a model name picks up hasMany associations.;;d59,1025;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithNamedModelVariations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1007;2;1018;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute passes with different inflections of the same name.;;d60,1007;;b1,0;;mname;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f53;1007;58;1007;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testExecuteWithNonExistantTableName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1291;2;1303;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using bake interactively with a table that does not exist.;;d55,1291;;b1,0;;m">
				</treenode>
				<treenode node="testFieldValidationGuessing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;279;2;306;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that individual field validation works, with interactive = false tests the guessing features of validation;;d47,279;;b1,0;;m">
				</treenode>
				<treenode node="testFindDisplayFieldNone;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;545;2;553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test finding Display field;;d44,545;;b1,0;;m">
				</treenode>
				<treenode node="testFindDisplayName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;560;2;570;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test finding a displayname from user input;;d39,560;;b1,0;;m">
				</treenode>
				<treenode node="testFindPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;524;2;538;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that finding primary key works;;d38,524;;b1,0;;m">
				</treenode>
				<treenode node="testForcedExecuteWithNonExistantTableName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1310;2;1324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using bake interactively with a table that does not exist.;;d61,1310;;b1,0;;m">
				</treenode>
				<treenode node="testGetNameQuit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;144;2;148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that getName interacts with the user and returns the model name.;;d35,144;;b1,0;;m">
				</treenode>
				<treenode node="testGetNameValidOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;155;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getName with a valid option.;;d42,155;;b1,0;;m">
				</treenode>
				<treenode node="testGetNameWithOutOfBoundsOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;171;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that an out of bounds option causes an error.;;d52,171;;b1,0;;m">
				</treenode>
				<treenode node="testGetTableName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;183;2;188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test table name interactions;;d36,183;;b1,0;;m">
				</treenode>
				<treenode node="testGetTableNameCustom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;195;2;200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting a custom table name.;;d42,195;;b1,0;;m">
				</treenode>
				<treenode node="testGetTableOddTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;240;2;261;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getTable with non-conventional tablenames;;d40,240;;b1,0;;m">
				</treenode>
				<treenode node="testGetTableOddTableInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;207;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getTable with non-conventional tablenames;;d51,207;;b1,0;;m">
				</treenode>
				<treenode node="testHasAndBelongsToManyGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;664;2;681;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that HABTM generation works;;d53,664;;b1,0;;m">
				</treenode>
				<treenode node="testHasManyHasOneGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;615;2;657;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that hasOne and/or hasMany relations are generated properly.;;d47,615;;b1,0;;m">
				</treenode>
				<treenode node="testInitValidations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;268;2;271;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that initializing the validations works.;;d39,268;;b1,0;;m">
				</treenode>
				<treenode node="testInOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;815;2;830;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that inOptions generates questions and only accepts a valid answer;;d33,815;;b1,0;;m">
				</treenode>
				<treenode node="testInteractiveDoValidationWithSkipping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;399;2;453;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the validation generation routine with skipping the rest of the fields when doing interactive field validation.;;d59,399;;b1,0;;m">
				</treenode>
				<treenode node="testInteractiveFieldValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;313;2;322;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that interactive field validation works and returns multiple validators.;;d50,313;;b1,0;;m">
				</treenode>
				<treenode node="testInteractiveFieldValidationWithBogusResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;329;2;343;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a bogus response doesn't cause errors to bubble up.;;d67,329;;b1,0;;m">
				</treenode>
				<treenode node="testInteractiveFieldValidationWithRegexp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;350;2;359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a regular expression can be used for validation.;;d60,350;;b1,0;;m">
				</treenode>
				<treenode node="testListAllArgument;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;111;2;120;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that listAll scans the database connection and lists all the tables in it.s;;d39,111;;b1,0;;m">
				</treenode>
				<treenode node="testListAllConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;127;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that listAll uses the connection property;;d41,127;;b1,0;;m">
				</treenode>
				<treenode node="testNonInteractiveDoValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;460;2;517;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the validation Generation routine;;d50,460;;b1,0;;m">
				</treenode>
				<treenode node="testSkippingAnotherInteractiveFieldValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;382;2;391;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that skipping fields after rule choice works when doing interactive field validation.;;d65,382;;b1,0;;m">
				</treenode>
				<treenode node="testSkippingChoiceInteractiveFieldValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;366;2;375;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that skipping fields during rule choice works when doing interactive field validation.;;d64,366;;b1,0;;m">
				</treenode>
				<treenode node="testSkipTablesAndAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;1212;2;1244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that skipTables changes how all() works.;;d40,1212;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f8;41;17;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Task;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php;f24;32;30;32;;;;vposModelTask;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTest.php;f0;25;1;45;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     ModelTest class;;d52,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTest.php;f15;32;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="ModelValidationTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f0;25;1;2478;;;;vpos;;vBaseModelTest;;c;;r&#xA;Description&#xA;     ModelValidationTest;;d48,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;32;2;35;;;;vpos;;vvoid;;r&#xA;Description&#xA;     override locale to the default (eng).;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="testAddMultipleRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2122;2;2147;;;;vpos;;v;;r;;d40,2122;;b1,0;;m">
				</treenode>
				<treenode node="testAddRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1935;2;1948;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to add validation rules;;d31,1935;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1825;2;1833;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to check for validation sets for a field using an array inteface;;d41,1825;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1797;2;1818;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to get validation sets for a field using an array inteface;;d38,1797;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1840;2;1865;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to set validation rules for a field using an array inteface;;d38,1840;;b1,0;;m">
				</treenode>
				<treenode node="testArrayAccessUset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1872;2;1879;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to unset validation rules;;d39,1872;;b1,0;;m">
				</treenode>
				<treenode node="testBackwardCompatIsUniqueValidator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2456;2;2476;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test backward compatibility of the isUnique method when used as a validator for a single field.;;d55,2456;;b1,0;;m">
				</treenode>
				<treenode node="testCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1912;2;1928;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests countable interface in ModelValidator;;d29,1912;;b1,0;;m">
				</treenode>
				<treenode node="testCustomMethodsWithCakeValidationSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2248;2;2265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test to ensure custom validation methods work with CakeValidationSet;;d58,2248;;b1,0;;m">
				</treenode>
				<treenode node="testCustomMethodWithEmptyValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2267;2;2285;;;;vpos;;v;;r;;d50,2267;;b1,0;;m">
				</treenode>
				<treenode node="testDynamicValidationRuleBuilding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2230;2;2241;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Testing you can dynamically add rules to a field, added this to dispel doubts after a presentation made to show off this new feature;;d53,2230;;b1,0;;m">
				</treenode>
				<treenode node="testFirstWithDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2082;2;2120;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateFirstWithDefaults method;;d41,2082;;b1,0;;m">
				</treenode>
				<treenode node="testGetMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1722;2;1731;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetMethods method;;d34,1722;;b1,0;;m">
				</treenode>
				<treenode node="testGetMethodsRefresh;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1738;2;1760;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that methods are refreshed when the list of behaviors change;;d41,1738;;b1,0;;m">
				</treenode>
				<treenode node="testGetModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1784;2;1790;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetModel method;;d32,1784;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidFieldsWhitelist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;183;2;200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that invalidFields() integrates well with save(). And that fieldList can be an empty type.;;d46,183;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidFieldsWithFieldListParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;136;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests validation parameter fieldList in invalidFields;;d56,136;;b1,0;;m">
				</treenode>
				<treenode node="testIsUniqueValidator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2412;2;2449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the isUnique method when used as a validator for multiple fields.;;d41,2412;;b1,0;;m">
				</treenode>
				<treenode node="testIterator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1886;2;1905;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to iterate a validation object;;d32,1886;;b1,0;;m">
				</treenode>
				<treenode node="testMissingValidationErrorTriggering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;739;2;751;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that missing validation methods trigger errors in development mode. Helps to make development easier.;;d56,739;;b1,0;;m">
				</treenode>
				<treenode node="testOnRequiredConflictValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;944;2;1061;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that 'required' and 'on' are not conflicting;;d52,944;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1955;2;1971;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests it is possible to remove validation rules;;d34,1955;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepValidateOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1069;2;1389;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepValidateOnly tests the validate methods with deeper recursive data;;d47,1069;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllNotDeepValidateOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1397;2;1542;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllNotDeepValidateOnly tests the validate methods to not validate deeper recursive data;;d50,1397;;b1,0;;m">
				</treenode>
				<treenode node="testSetValidationDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1767;2;1777;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetValidationDomain method;;d43,1767;;b1,0;;m">
				</treenode>
				<treenode node="testStateRequiredValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;891;2;937;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test for 'required' =&gt; [create|update] in validation rules.;;d47,891;;b1,0;;m">
				</treenode>
				<treenode node="testStateValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;838;2;884;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test for 'on' =&gt; [create|update] in validation rules.;;d39,838;;b1,0;;m">
				</treenode>
				<treenode node="testValidateAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1549;2;1675;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateAssociated method;;d42,1549;;b1,0;;m">
				</treenode>
				<treenode node="testValidateAssociatedAtomicFalseDeepTrueWithErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2292;2;2344;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validateAssociated with atomic=false &amp; deep=true;;d71,2292;;b1,0;;m">
				</treenode>
				<treenode node="testValidateCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1978;2;1985;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests validation callbacks are triggered;;d41,1978;;b1,0;;m">
				</treenode>
				<treenode node="testValidateFirstAssociatedWithBeforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2047;2;2075;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that altering data in a beforeValidate callback will lead to saving those values in database;;d65,2047;;b1,0;;m">
				</treenode>
				<treenode node="testValidateFirstAssociatedWithBeforeValidate2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2200;2;2222;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that altering data in a beforeValidate callback will lead to saving those values in database, this time with belongsTo associations;;d66,2200;;b1,0;;m">
				</treenode>
				<treenode node="testValidateFirstWithBeforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1993;2;2039;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that altering data in a beforeValidate callback will lead to saving those values in database;;d55,1993;;b1,0;;m">
				</treenode>
				<treenode node="testValidateMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;1682;2;1715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateMany method;;d36,1682;;b1,0;;m">
				</treenode>
				<treenode node="testValidateManyAtomicFalseDeepTrueWithErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2351;2;2405;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validateMany with atomic=false &amp; deep=true;;d65,2351;;b1,0;;m">
				</treenode>
				<treenode node="testValidates;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;207;2;554;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidates method;;d33,207;;b1,0;;m">
				</treenode>
				<treenode node="testValidatesWithAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;562;2;610;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that validates() checks all the 'with' associations as well for validation as this can cause partial/wrong data insertion.;;d49,562;;b1,0;;m">
				</treenode>
				<treenode node="testValidatesWithModelsAndSaveAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;645;2;685;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saveAll and with models with validation interact well;;d53,645;;b1,0;;m">
				</treenode>
				<treenode node="testValidatesWithModelsAndSaveAllWithoutId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;693;2;730;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saveAll and with models at initial insert (no id has set yet) with validation interact well;;d62,693;;b1,0;;m">
				</treenode>
				<treenode node="testValidateWithFieldListAndBehavior;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;618;2;638;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that if a behavior modifies the model's whitelist validation gets triggered properly for those fields.;;d56,618;;b1,0;;m">
				</treenode>
				<treenode node="testValidationMessageAsArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;758;2;793;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test placeholder replacement when validation message is an array;;d48,758;;b1,0;;m">
				</treenode>
				<treenode node="testValidationMessageTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;800;2;831;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validation message translation;;d52,800;;b1,0;;m">
				</treenode>
				<treenode node="testValidationParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;42;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests validation parameter order in custom validation methods;;d40,42;;b1,0;;m">
				</treenode>
				<treenode node="testValidator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2154;2;2165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that rules are parsed correctly when calling getField();;d33,2154;;b1,0;;m">
				</treenode>
				<treenode node="testValidatorOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2172;2;2182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that validator override works as expected;;d41,2172;;b1,0;;m">
				</treenode>
				<treenode node="testValidatorTypehintException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2190;2;2192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that type hint exception is thrown;;d50,2190;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelValidator;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f0;33;1;601;;;;vpos;;vArrayAccess;;cIteratorAggregate;;cCountable;;c;;r&#xA;Description&#xA;     ModelValidator object encapsulates all methods related to data validations for a model It also provides an API to dynamically change validation rules for each model field.;;d74,33;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;84;2;86;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    Model $Model - A reference to the Model the Validator is attached to;;d43,84;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f35;84;41;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseRules;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;340;2;359;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the CakeValidationSet objects from the `Model::$validate` property If `Model::$validate` is not set or empty, this method returns false. True otherwise.&#xA;&#xA;Return:&#xA;   true if `Model::$validate` was processed, false otherwise;;d34,340;;b2,0;;m">
				</treenode>
				<treenode node="_triggerBeforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;449;2;458;;;;vpos;;vbool;;r&#xA;Description&#xA;     Propagates beforeValidate event&#xA;&#xA;Parameters:&#xA;    array $options - Options to pass to callback;;d63,449;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f43;449;51;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_validateWithModels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;414;2;440;;;;vpos;;vbool;;r&#xA;Description&#xA;     Runs validation for hasAndBelongsToMany associations that have 'with' keys set and data in the data set.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options to use on Validation of with models&#xA;&#xA;Return:&#xA;   Failure of validation on with models;;d50,414;;b2,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f40;414;48;414;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_validationList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;390;2;404;;;;vpos;;varray;;r&#xA;Description&#xA;     Processes the passed fieldList and returns the list of fields to be validated&#xA;&#xA;Parameters:&#xA;    array $fieldList - list of fields to be used for validation&#xA;&#xA;Return:&#xA;   List of validation rules to be applied;;d58,390;;b2,0;;marray $fieldList;;p">
					<treenode node="fieldList;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f36;390;46;390;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;553;2;575;;;;vpos;;v;;r&#xA;Description&#xA;     Adds a new rule to a field's rule set. If second argument is an array or instance of CakeValidationSet then rules list for the field will be replaced with second argument and third argument will be ignored.&#xA;&#xA;Parameters:&#xA;    string $field - The name of the field where the rule is to be added&#xA;    string|array|CakeValidationSet $name - name of the rule to be added or list of rules for the field&#xA;    array|CakeValidationRule $rule - or list of rules to be added to the field's rule set;;d50,553;;b1,0;;mstring $field;;pstring|array|CakeValidationSet $name;;parray|CakeValidationRule $rule;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f21;553;27;553;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f29;553;34;553;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f36;553;41;553;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="count;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;525;2;528;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the number of fields having validation rules;;d25,525;;b1,0;;m">
				</treenode>
				<treenode node="errors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;240;2;275;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of fields that have failed validation. On the current model. This method will actually run validation rules over data, not just return the messages.&#xA;&#xA;Parameters:&#xA;    string $options - An optional array of custom options to be made available in the beforeValidate callback&#xA;&#xA;Return:&#xA;   Array of invalid fields;;d44,240;;b1,0;;mstring $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f24;240;32;240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;323;2;332;;;;vpos;;vCakeValidationSet;;r&#xA;Description&#xA;     Returns a CakeValidationSet object containing all validation rules for a field, if no params are passed then it returns an array with all CakeValidationSet objects for each field&#xA;&#xA;Parameters:&#xA;    string $name - [optional] The fieldname to fetch&#xA;&#xA;Return:&#xA;   |array|null;;d40,323;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f26;323;31;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getIterator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;515;2;518;;;;vpos;;vArrayIterator;;r&#xA;Description&#xA;     Returns an iterator for each of the fields to be validated;;d31,515;;b1,0;;m">
				</treenode>
				<treenode node="getMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;295;2;314;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets all possible custom methods from the Model and attached Behaviors to be used as validators&#xA;&#xA;Return:&#xA;   List of callables to be used as validation methods;;d30,295;;b1,0;;m">
				</treenode>
				<treenode node="getModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;380;2;382;;;;vpos;;vModel;;r&#xA;Description&#xA;     Gets the model related to this validator;;d28,380;;b1,0;;m">
				</treenode>
				<treenode node="invalidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;285;2;287;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Marks a field as invalid, optionally setting a message explaining why the rule failed&#xA;&#xA;Parameters:&#xA;    string $field - The name of the field to invalidate&#xA;    string $message - Validation message explaining why the rule failed, defaults to true;;d53,285;;b1,0;;mstring $field;;pstring $message;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f28;285;34;285;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f36;285;44;285;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;466;2;469;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns whether a rule set is defined for a field or not&#xA;&#xA;Parameters:&#xA;    string $field - name of the field to check;;d38,466;;b1,0;;mstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f30;466;36;466;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;477;2;480;;;;vpos;;vCakeValidationSet;;r&#xA;Description&#xA;     Returns the rule set for a field&#xA;&#xA;Parameters:&#xA;    string $field - name of the field to check;;d35,477;;b1,0;;mstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f27;477;33;477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;489;2;497;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the rule set for a field&#xA;&#xA;Parameters:&#xA;    string $field - name of the field to set&#xA;    array|CakeValidationSet $rules - set of rules to apply to field;;d43,489;;b1,0;;mstring $field;;parray|CakeValidationSet $rules;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f27;489;33;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rules;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f35;489;41;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="offsetUnset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;505;2;508;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Unsets the rule set for a field&#xA;&#xA;Parameters:&#xA;    string $field - name of the field to unset;;d37,505;;b1,0;;mstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f29;505;35;505;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="remove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;592;2;600;;;;vpos;;v;;r&#xA;Description&#xA;     Removes a rule from the set by its name&#xA;&#xA;Parameters:&#xA;    string $field - The name of the field from which the rule will be removed&#xA;    string $rule - the name of the rule to be removed;;d46,592;;b1,0;;mstring $field;;pstring $rule;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f24;592;30;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="rule;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f32;592;37;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setValidationDomain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;367;2;373;;;;vpos;;v;;r&#xA;Description&#xA;     Sets the I18n domain for validation messages. This method is chainable.&#xA;&#xA;Parameters:&#xA;    string $validationDomain - [optional] The validation domain to be used;;d63,367;;b1,0;;mstring $validationDomain;;p">
					<treenode node="validationDomain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f37;367;54;367;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;127;2;183;;;;vpos;;varray;;r&#xA;Description&#xA;     Validates a single record, as well as all its directly associated records.&#xA;&#xA;Parameters:&#xA;    array - &amp;$data Record data to validate&#xA;    array $options - Options to use when validating record data (see above), See also $options of validates()&#xA;&#xA;Return:&#xA;   |bool If atomic: True on success, or false on failure;;d64,127;;b1,0;;marray;;parray $options;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f37;127;42;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f44;127;52;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;204;2;229;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Validates multiple individual records for a single model&#xA;&#xA;Parameters:&#xA;    array - &amp;$data Record data to validate&#xA;    array $options - Options to use when validating record data (see above), See also $options of validates()&#xA;&#xA;Return:&#xA;   If atomic: True on success, or false on failure;;d58,204;;b1,0;;marray;;parray $options;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f31;204;36;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f38;204;46;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validates;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f8;97;2;106;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if all fields pass validation. Will validate hasAndBelongsToMany associations that use the 'with' key as well. Since `Model::_saveMulti` is incapable of exiting a save operation.&#xA;&#xA;Parameters:&#xA;    array $options - An optional array of custom options to be made available in the beforeValidate callback&#xA;&#xA;Return:&#xA;   True if there are no errors;;d47,97;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f27;97;35;97;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_behaviors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;77;22;77;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;40;19;40;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;63;20;63;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;47;18;47;;;;vposModel;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_modelMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;70;25;70;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php;f11;55;21;55;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModelWriteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f0;110;1;7997;;;;vpos;;vBaseModelTest;;c;;r&#xA;Description&#xA;     ModelWriteTest;;d43,110;;b0,0;;m">
				<treenode node="_getMockDboSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f11;7809;2;7831;;;;vpos;;vDboSource;;r&#xA;Description&#xA;     Creates a convenient mock DboSource&#xA;&#xA;Parameters:&#xA;    array $methods - Configurable method names;;d58,7809;;b2,0;;marray $methods;;p">
					<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f38;7809;46;7809;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="callbackForTestSaveTransaction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;847;2;868;;;;vpos;;vbool;;r&#xA;Description&#xA;     test callback used in testSaveTransaction method&#xA;&#xA;Return:&#xA;   false to stop event propagation;;d56,847;;b1,0;;mevent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f48;847;54;847;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="callbackForWhitelistReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;416;2;419;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Callback for testing whitelist in afterSave&#xA;&#xA;Parameters:&#xA;    Model $model - The model having save called;;d51,416;;b1,0;;mModel $model;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f43;416;49;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="deleteMe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7794;2;7797;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Emulates race condition&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - containing the Model;;d34,7794;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f26;7794;32;7794;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedSaveAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7993;2;7996;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A callback for testing nested saveAssociated.&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - containing the Model;;d46,7993;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f38;7993;44;7993;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedSaveMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7982;2;7985;;;;vpos;;vvoid;;r&#xA;Description&#xA;     A callback for testing nested saveMany.&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - containing the Model;;d40,7982;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f32;7982;38;7982;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;117;2;120;;;;vpos;;vvoid;;r&#xA;Description&#xA;     override locale to the default (eng).;;d25,117;;b1,0;;m">
				</treenode>
				<treenode node="testAllowSimulatedFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;317;2;330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests validation parameter order in custom validation methods;;d44,317;;b1,0;;m">
				</treenode>
				<treenode node="testAutoSaveUuid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;256;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutoSaveUuid method;;d36,256;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeSaveSaveAbortion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;726;2;738;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that beforeSave returning false can abort saves.;;d46,726;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeValidateSaveAbortion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;707;2;719;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that beforeValidate returning false can abort saves.;;d50,707;;b1,0;;m">
				</treenode>
				<treenode node="testCacheClearOnSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;339;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that Caches are getting cleared on save(). ensure that both inflections of controller names are getting cleared as URL for controller could be either overallFavorites/index or overall_favorites/index;;d40,339;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7740;2;7748;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the clear() method.;;d29,7740;;b1,0;;m">
				</treenode>
				<treenode node="testCounterCacheDecrease;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;488;2;502;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that counter caches are updated when records are deleted;;d44,488;;b1,0;;m">
				</treenode>
				<treenode node="testCounterCacheIncrease;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;462;2;481;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that counter caches are updated when records are added;;d44,462;;b1,0;;m">
				</treenode>
				<treenode node="testCounterCacheMultipleCaches;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;626;2;678;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests having multiple counter caches for an associated model;;d50,626;;b1,0;;m">
				</treenode>
				<treenode node="testCounterCacheSkip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;685;2;700;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that counter caches are unchanged when using 'counterCache' =&gt; false;;d40,685;;b1,0;;m">
				</treenode>
				<treenode node="testCounterCacheUpdated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;509;2;524;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that counter caches are updated when foreign keys of counted records change;;d43,509;;b1,0;;m">
				</treenode>
				<treenode node="testCounterCacheWithNonstandardPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;532;2;551;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test counter cache with models that use a non-standard (i.e. not using 'id') as their primary key.;;d61,532;;b1,0;;m">
				</treenode>
				<treenode node="testCounterCacheWithSelfJoin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;558;2;579;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Counter Cache With Self Joining table;;d48,558;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithPKFiltering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2406;2;2495;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreateWithPKFiltering method;;d45,2406;;b1,0;;m">
				</treenode>
				<treenode node="testCreationOfEmptyRecord;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2387;2;2399;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreationOfEmptyRecord method;;d45,2387;;b1,0;;m">
				</treenode>
				<treenode node="testCreationWithMultipleData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2502;2;2670;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreationWithMultipleData method;;d48,2502;;b1,0;;m">
				</treenode>
				<treenode node="testCreationWithMultipleDataSameModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2677;2;2729;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreationWithMultipleDataSameModel method;;d57,2677;;b1,0;;m">
				</treenode>
				<treenode node="testCreationWithMultipleDataSameModelManualInstances;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2736;2;2766;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreationWithMultipleDataSameModelManualInstances method;;d72,2736;;b1,0;;m">
				</treenode>
				<treenode node="testFindAllForeignKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6900;2;6956;;;;vpos;;vvoid;;r&#xA;Description&#xA;     TestFindAllWithoutForeignKey;;d41,6900;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmSaveKeyResolution;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2298;2;2380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmSaveKeyResolution method;;d46,2298;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmSaveWithConditionsInAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2250;2;2291;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saving habtm records respects conditions set in the 'conditions' key for the association.;;d60,2250;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmSavingWithNoPrimaryKeyUuidJoinTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2926;2;2945;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test HABTM saving when join table has no primary key and only 2 columns.;;d64,2926;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmSavingWithNoPrimaryKeyUuidJoinTableNoWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2952;2;2970;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test HABTM saving when join table has no primary key and only 2 columns, no with model is used.;;d70,2952;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmUuidWithNumericId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2977;2;2988;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmUuidWithNumericId method;;d46,2977;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmUuidWithUuidId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2907;2;2919;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHabtmUuidWithUuidId method;;d43,2907;;b1,0;;m">
				</treenode>
				<treenode node="testInsertAnotherHabtmRecordWithSameForeignKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;145;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInsertAnotherHabtmRecordWithSameForeignKey method;;d66,145;;b1,0;;m">
				</treenode>
				<treenode node="testInsertNoData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;127;2;138;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test save() failing when there is no data.;;d36,127;;b1,0;;m">
				</treenode>
				<treenode node="testPkInReturnArrayForCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7095;2;7107;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test returned array contains primary key when save creates a new record;;d48,7095;;b1,0;;m">
				</treenode>
				<treenode node="testRecordExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2773;2;2787;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecordExists method;;d36,2773;;b1,0;;m">
				</treenode>
				<treenode node="testRecordExistsMissingTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2795;2;2799;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecordExistsMissingTable method;;d48,2795;;b1,0;;m">
				</treenode>
				<treenode node="testSafeUpdateMode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7756;2;7786;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Model::save() doesn't generate a query with WHERE 1 = 1 on race condition.;;d38,7756;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3112;2;3236;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAll method;;d31,3112;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllAssociatedTransactionNoRollback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4515;2;4593;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveAll with transactions and ensure there is no missing rollback.;;d62,4515;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllAtomic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3446;2;3515;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllAtomic method;;d37,3446;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3368;2;3400;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllBelongsTo method;;d40,3368;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3522;2;3654;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepAssociated method;;d45,3522;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepEmptyHasManyHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7653;2;7684;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepEmptyHasManyHasMany method;;d54,7653;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepFieldListHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7465;2;7501;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepFieldListHasMany method;;d51,7465;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepFieldListValidateBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7418;2;7458;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepFieldListValidateBelongsTo;;d61,7418;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepHasManyBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7508;2;7553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepHasManyBelongsTo method;;d51,7508;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepHasManyHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7560;2;7609;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepHasManyhasMany method;;d49,7560;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3662;2;3734;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepMany tests the validate methods with deeper recursive data;;d39,3662;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepOrderHasManyHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7616;2;7646;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepOrderHasManyHasMany method;;d54,7616;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllDeepValidateOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3741;2;4037;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllDeepValidateOnly tests the validate methods with deeper recursive data;;d47,3741;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllEmptyData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5299;2;5310;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saveAll behaves like plain save() when supplied empty data;;d40,5299;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllFieldListHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7278;2;7322;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllFieldListHasMany method;;d47,7278;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllFieldListHasOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7329;2;7358;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllFieldListHasOne method;;d46,7329;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllFieldListHasOneAddFkToWhitelist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7365;2;7411;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllFieldListHasOneAddFkToWhitelist method;;d62,7365;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllFieldListValidateBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7114;2;7271;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllFieldListValidateBelongsTo;;d57,7114;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllHabtm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3243;2;3267;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test SaveAll with Habtm relations;;d36,3243;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllHabtmWithExtraJoinTableFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3274;2;3310;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test SaveAll with Habtm relations and extra join table fields;;d60,3274;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4334;2;4407;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllHasMany method;;d38,4334;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllHasManyValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4414;2;4447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllHasManyValidation method;;d48,4414;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllHasManyValidationOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5196;2;5265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllHasManyValidationOnly method;;d52,5196;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllHasOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3317;2;3361;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllHasOne method;;d37,3317;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllHasOneValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;3407;2;3439;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllHasOneValidation method;;d47,3407;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllManyRowsTransactionNoRollback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4454;2;4508;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveAll with transactions and ensure there is no missing rollback.;;d60,4454;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllNestedSaveAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4600;2;4609;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveAll with nested saveAll call.;;d44,4600;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllNotDeepAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4045;2;4126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllNotDeepAssociated method test that only directly associated data gets saved;;d48,4045;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllNotDeepMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4134;2;4185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllNotDeepMany tests the save methods to not save deeper recursive data;;d42,4134;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllNotDeepValidateOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4192;2;4327;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllNotDeepValidateOnly tests the validate methods to not validate deeper recursive data;;d50,4192;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllTransaction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4616;2;4804;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllTransaction method;;d42,4616;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllValidateFirst;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5058;2;5129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllValidateFirst method;;d44,5058;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllValidateFirstAtomicFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5136;2;5189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveAll()'s return is correct when using atomic = false and validate = first.;;d55,5136;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;4811;2;4998;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllValidation method;;d41,4811;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllValidationOnly;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5005;2;5051;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAllValidationOnly method;;d45,5005;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllWithSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5272;2;5291;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saveAll still behaves like previous versions (does not necessarily need a first argument);;d38,5272;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5317;2;5396;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociated method;;d38,5317;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedAtomic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5730;2;5761;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedAtomic method;;d44,5730;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedAtomicFalseValidateFirstWithErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5404;2;5441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that validate = first, atomic = false works when associated records fail validation.;;d72,5404;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5649;2;5681;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedBelongsTo method;;d47,5649;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedEmptyData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6786;2;6797;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saveAssociated behaves like plain save() when supplied empty data;;d47,6786;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedExpressionObjects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6804;2;6823;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that saveAssociated will accept expression object values when saving.;;d55,6804;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedHabtm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5524;2;5548;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test SaveAssociated with Habtm relations;;d43,5524;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedHabtmWithExtraJoinTableFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5555;2;5591;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test SaveAssociated with Habtm relations and extra join table fields;;d67,5555;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5814;2;5883;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedHasMany method;;d45,5814;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedHasManyEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5890;2;5915;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedHasManyEmpty method;;d50,5890;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedHasManyValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5922;2;5955;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedHasManyValidation method;;d55,5922;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedHasOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5598;2;5642;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedHasOne method;;d44,5598;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedHasOneValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5688;2;5723;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedHasOneValidation method;;d54,5688;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedTransactionNoRollback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6023;2;6101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveAssociated with transactions and ensure there is no missing rollback.;;d59,6023;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedValidateFirst;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6542;2;6613;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedValidateFirst method;;d51,6542;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAtomic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;745;2;806;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAtomic method;;d34,745;;b1,0;;m">
				</treenode>
				<treenode node="testSaveDateAsFirstEntry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;201;2;224;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveDateAsFirstEntry method;;d44,201;;b1,0;;m">
				</treenode>
				<treenode node="testSaveField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;997;2;1071;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveField method;;d33,997;;b1,0;;m">
				</treenode>
				<treenode node="testSaveFieldListResetsWhitelistOnFailedSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;376;2;387;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that save() resets whitelist on failed save;;d64,376;;b1,0;;m">
				</treenode>
				<treenode node="testSaveFromXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;1507;2;1527;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveFromXml method;;d35,1507;;b1,0;;m">
				</treenode>
				<treenode node="testSaveHabtm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;1534;2;2008;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveHabtm method;;d33,1534;;b1,0;;m">
				</treenode>
				<treenode node="testSaveHabtmCustomKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2199;2;2242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveHabtmCustomKeys method;;d43,2199;;b1,0;;m">
				</treenode>
				<treenode node="testSaveHabtmEmptyData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2016;2;2049;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saving HABTM with an empty array will clear existing HABTM if unique is true;;d42,2016;;b1,0;;m">
				</treenode>
				<treenode node="testSaveHabtmNoPrimaryData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2056;2;2192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveHabtmNoPrimaryData method;;d46,2056;;b1,0;;m">
				</treenode>
				<treenode node="testSaveMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5448;2;5500;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveMany method;;d32,5448;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyAtomic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5768;2;5807;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveManyAtomic method;;d38,5768;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyEmptyData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6767;2;6778;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saveMany behaves like plain save() when suplied empty data;;d41,6767;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyNestedSaveMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6108;2;6117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveMany with nested saveMany call.;;d46,6108;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyTransaction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6124;2;6316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveManyTransaction method;;d43,6124;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyTransactionNoRollback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5962;2;6016;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveMany with transactions and ensure there is no missing rollback.;;d53,5962;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyValidateFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;5507;2;5517;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test SaveMany with validate=false.;;d45,5507;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyValidateFirstAtomicFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6620;2;6672;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saveMany()'s return is correct when using atomic = false and validate = first.;;d56,6620;;b1,0;;m">
				</treenode>
				<treenode node="testSaveManyValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6323;2;6502;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveManyValidation method;;d42,6323;;b1,0;;m">
				</treenode>
				<treenode node="testSaveMultipleHabtm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2995;2;3105;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveMultipleHabtm method;;d41,2995;;b1,0;;m">
				</treenode>
				<treenode node="testSaveResetWhitelistOnSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;394;2;408;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test save() resets the whitelist after afterSave;;d51,394;;b1,0;;m">
				</treenode>
				<treenode node="testSaveTransaction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;875;2;990;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveTransaction method;;d39,875;;b1,0;;m">
				</treenode>
				<treenode node="testSaveTransactionNoRollback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;813;2;840;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test save with transaction and ensure there is no missing rollback.;;d49,813;;b1,0;;m">
				</treenode>
				<treenode node="testSaveUuidNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;278;2;292;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that if the id key is null but present the save doesn't fail (with an x sql error: &quot;Column id specified twice&quot;);;d36,278;;b1,0;;m">
				</treenode>
				<treenode node="testSaveWithCounterCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;426;2;455;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveWithCounterCache method;;d44,426;;b1,0;;m">
				</treenode>
				<treenode node="testSaveWithCounterCacheScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;586;2;619;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveWithCounterCacheScope method;;d49,586;;b1,0;;m">
				</treenode>
				<treenode node="testSaveWithCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;1078;2;1292;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveWithCreate method;;d38,1078;;b1,0;;m">
				</treenode>
				<treenode node="testSaveWithNonExistentFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;1456;2;1500;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveWithNonExistentFields method;;d49,1456;;b1,0;;m">
				</treenode>
				<treenode node="testSaveWithNullId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;1299;2;1319;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a null Id doesn't cause errors;;d38,1299;;b1,0;;m">
				</treenode>
				<treenode node="testSaveWithSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;1326;2;1449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveWithSet method;;d35,1326;;b1,0;;m">
				</treenode>
				<treenode node="testToggleBoolFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6859;2;6893;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToggleBoolFields method;;d40,6859;;b1,0;;m">
				</treenode>
				<treenode node="testTransactionOnNestedSaveAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7899;2;7974;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that transaction behaves correctly on nested saveAssociated calls.;;d57,7899;;b1,0;;m">
				</treenode>
				<treenode node="testTransactionOnNestedSaveMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7838;2;7892;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that transactions behave correctly on nested saveMany calls.;;d51,7838;;b1,0;;m">
				</treenode>
				<treenode node="testUnderscoreFieldSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;231;2;249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUnderscoreFieldSave method;;d43,231;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateAllBoolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7691;2;7699;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateAllBoolean;;d40,7691;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateAllBooleanConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7706;2;7716;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateAllBooleanConditions;;d50,7706;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateAllEmptyValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6963;2;6970;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test updateAll with empty values.;;d44,6963;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateAllWithJoins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6977;2;7017;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateAllWithJoins;;d42,6977;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateAllWithoutForeignKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7024;2;7069;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateAllWithoutForeignKey;;d50,7024;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateBoolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7723;2;7733;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateBoolean;;d37,7723;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateExisting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2806;2;2846;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateExisting method;;d38,2806;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2874;2;2900;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateMultiple method;;d38,2874;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateSavingBlankValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;2853;2;2867;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test updating records and saving blank values.;;d47,2853;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateWithCalculation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6830;2;6852;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateWithCalculation method;;d45,6830;;b1,0;;m">
				</treenode>
				<treenode node="testValidateAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6679;2;6759;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateAssociated method;;d42,6679;;b1,0;;m">
				</treenode>
				<treenode node="testValidateMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;6509;2;6535;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateMany method;;d36,6509;;b1,0;;m">
				</treenode>
				<treenode node="testWriteFloatAsGerman;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;7076;2;7088;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test writing floats in german locale.;;d42,7076;;b1,0;;m">
				</treenode>
				<treenode node="testZeroDefaultFieldValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;299;2;310;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testZeroDefaultFieldValue method;;d45,299;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModifiedAttachment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;712;1;746;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ModifiedAttachment class;;d47,712;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;733;2;744;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterFind callback;;d55,733;;b1,0;;mresults;;pprimary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;733;45;733;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;733;35;733;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;719;13;719;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;726;17;726;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModifiedAuthor;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;999;1;1021;;;;vpos;;vAuthor;;c;;r&#xA;Description&#xA;     ModifiedAuthor class;;d36,999;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1014;2;1019;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterFind method&#xA;&#xA;Parameters:&#xA;    array $results;;d55,1014;;b1,0;;mresults;;pprimary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;1014;45;1014;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;1014;35;1014;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1006;13;1006;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ModifiedComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;531;1;576;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Modified Comment Class has afterFind Callback;;d44,531;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;566;2;574;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterFind callback;;d55,566;;b1,0;;mresults;;pprimary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;566;45;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;566;35;566;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;559;18;559;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;538;13;538;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="remove;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;552;15;552;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;545;17;545;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Monkey;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1958;1;1973;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Monkey class;;d35,1958;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1965;13;1965;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1972;17;1972;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MootoolsEngineHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f0;31;1;375;;;;vpos;;vJsBaseEngineHelper;;c;;r&#xA;Description&#xA;     MooTools Engine Helper for JsHelper;;d54,31;;b0,0;;m">
				<treenode node="domReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;171;2;174;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a domReady event. This is a special event in many libraries&#xA;&#xA;Parameters:&#xA;    string $functionBody - The code to run on domReady&#xA;&#xA;Return:&#xA;   completed domReady method;;d41,171;;b1,0;;mstring $functionBody;;p">
					<treenode node="functionBody;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f26;171;39;171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;288;2;291;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a Draggable element.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the draggable&#xA;&#xA;Return:&#xA;   Completed draggable script;;d42,288;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f22;288;30;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;307;2;326;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a Droppable element.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the droppable&#xA;&#xA;Return:&#xA;   Completed droppable script;;d42,307;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f22;307;30;307;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="each;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;182;2;184;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create an iteration over the current selection result.&#xA;&#xA;Parameters:&#xA;    string $callback - The function body you wish to apply during the iteration&#xA;&#xA;Return:&#xA;   completed iteration;;d33,182;;b1,0;;mstring $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f22;182;31;182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="effect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;194;2;224;;;;vpos;;vstring;;r&#xA;Description&#xA;     Trigger an Effect.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the effect to trigger&#xA;    array $options - Array of options for the effect&#xA;&#xA;Return:&#xA;   completed string with effect;;d51,194;;b1,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f24;194;29;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f31;194;39;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="event;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;150;2;163;;;;vpos;;vstring;;r&#xA;Description&#xA;     Add an event to the script cache. Operates on the currently selected elements.&#xA;&#xA;Parameters:&#xA;    string $type - Type of event to bind to the current dom id&#xA;    string $callback - The JavaScript function you wish to trigger or the function literal&#xA;    array $options - Options for the event&#xA;&#xA;Return:&#xA;   completed event handler;;d61,150;;b1,0;;mstring $type;;pstring $callback;;parray $options;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f30;150;39;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f41;150;49;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f23;150;28;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;122;2;135;;;;vpos;;v;;r&#xA;Description&#xA;     Create javascript selector for a CSS rule&#xA;&#xA;Parameters:&#xA;    string $selector - The selector that is targeted;;d32,122;;b1,0;;mstring $selector;;p">
					<treenode node="selector;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f21;122;30;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;236;2;263;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a new Request.&#xA;&#xA;Parameters:&#xA;    string|array $url - URL&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   The completed ajax call;;d51,236;;b1,0;;mstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f31;236;39;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f25;236;29;236;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;362;2;373;;;;vpos;;vstring;;r&#xA;Description&#xA;     Serialize the form attached to $selector.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   Completed serializeForm() snippet;;d51,362;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f31;362;39;362;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;337;2;353;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a slider control&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the slider&#xA;&#xA;Return:&#xA;   Completed slider script;;d44,337;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f24;337;32;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f8;274;2;277;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a sortable element.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the sortable&#xA;&#xA;Return:&#xA;   Completed sortable script;;d46,274;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f26;274;34;274;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_callbackArguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f11;76;30;76;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_optionMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php;f11;38;22;38;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="MootoolsEngineHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f0;27;1;381;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class MootoolsEngineHelperTest;;d52,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;34;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;46;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,46;;b1,0;;m">
				</treenode>
				<treenode node="testDomReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;107;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test dom ready event creation;;d32,107;;b1,0;;m">
				</treenode>
				<treenode node="testDrag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;260;2;271;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test drag() method;;d28,260;;b1,0;;m">
				</treenode>
				<treenode node="testDrop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;293;2;314;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test drop() method;;d28,293;;b1,0;;m">
				</treenode>
				<treenode node="testDropWithMissingOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;279;2;286;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test drop() method with the required drag option missing;;d45,279;;b1,0;;m">
				</treenode>
				<treenode node="testEach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;118;2;123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Each method;;d28,118;;b1,0;;m">
				</treenode>
				<treenode node="testEffect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;130;2;163;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Effect generation;;d30,130;;b1,0;;m">
				</treenode>
				<treenode node="testEvent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;87;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test event binding;;d29,87;;b1,0;;m">
				</treenode>
				<treenode node="testRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;170;2;234;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Request Generation;;d31,170;;b1,0;;m">
				</treenode>
				<treenode node="testSelector;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;56;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test selector method;;d32,56;;b1,0;;m">
				</treenode>
				<treenode node="testSerializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;363;2;380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the serializeForm implementation.;;d37,363;;b1,0;;m">
				</treenode>
				<treenode node="testSlider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;321;2;356;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test slider generation;;d30,321;;b1,0;;m">
				</treenode>
				<treenode node="testSortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php;f8;241;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sortable list generation;;d32,241;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Multibyte;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f0;23;1;878;;;;vpos;;v;;r&#xA;Description&#xA;     Multibyte handling methods.;;d16,23;;b0,0;;m">
				<treenode node="_codepoint;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f18;779;2;819;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return the Code points range for Unicode characters&#xA;&#xA;Parameters:&#xA;    int $decimal - Decimal value;;d48,779;;b2,5;;mint $decimal;;p">
					<treenode node="decimal;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f38;779;46;779;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f18;828;2;858;;;;vpos;;varray;;r&#xA;Description&#xA;     Find the related code folding values for $char&#xA;&#xA;Parameters:&#xA;    int $char - decimal value of character&#xA;    string $type - Type 'lower' or 'upper';;d57,828;;b2,5;;mint $char;;pstring $type;;p">
					<treenode node="char;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f33;828;38;828;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f40;828;45;828;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ascii;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;92;2;108;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts the decimal value of a multibyte character string to a string&#xA;&#xA;Parameters:&#xA;    array $array - Values array;;d38,92;;b1,5;;marray $array;;p">
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f30;92;36;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="checkMultibyte;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;866;2;876;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check the $string for multibyte characters&#xA;&#xA;Parameters:&#xA;    string $string - Value to test;;d48,866;;b1,5;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f39;866;46;866;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mimeEncode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;733;2;771;;;;vpos;;vstring;;r&#xA;Description&#xA;     Prepare a string for mail transport, using the provided encoding&#xA;&#xA;Parameters:&#xA;    string $string - value to encode&#xA;    string $charset - charset to use for encoding&#xA;    string $newline - Newline string;;d80,733;;b1,5;;mstring $string;;pstring $charset;;pstring $newline;;p">
					<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f44;733;52;733;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="newline;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f61;733;69;733;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f35;733;42;733;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;119;2;126;;;;vpos;;vint;;r&#xA;Description&#xA;     Find position of first occurrence of a case-insensitive string.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the position of the first occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    int $offset - The position in $haystack to start searching&#xA;&#xA;Return:&#xA;   |bool The numeric position of the first occurrence of $needle in the $haystack string,;;d65,119;;b1,5;;mstring $haystack;;pstring $needle;;pint $offset;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f32;119;41;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f43;119;50;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f52;119;59;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stristr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;139;2;187;;;;vpos;;vint;;r&#xA;Description&#xA;     Finds first occurrence of a string within another, case insensitive.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the first occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack, or false if $needle is not found;;d67,139;;b1,5;;mstring $haystack;;pstring $needle;;pbool $part;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f32;139;41;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f43;139;50;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f52;139;57;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strlen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;195;2;201;;;;vpos;;vint;;r&#xA;Description&#xA;     Get string length.&#xA;&#xA;Parameters:&#xA;    string $string - The string being checked for length&#xA;&#xA;Return:&#xA;   The number of characters in string $string;;d40,195;;b1,5;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f31;195;38;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;212;2;244;;;;vpos;;vint;;r&#xA;Description&#xA;     Find position of first occurrence of a string.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string being checked&#xA;    string $needle - The position counted from the beginning of haystack&#xA;    int $offset - The search offset&#xA;&#xA;Return:&#xA;   |bool The numeric position of the first occurrence of $needle in the $haystack string;;d64,212;;b1,5;;mstring $haystack;;pstring $needle;;pint $offset;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f31;212;40;212;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f42;212;49;212;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f51;212;58;212;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strrchr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;257;2;304;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds the last occurrence of a character in a string within another.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack;;d67,257;;b1,5;;mstring $haystack;;pstring $needle;;pbool $part;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f32;257;41;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f43;257;50;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f52;257;57;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strrichr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;317;2;366;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds the last occurrence of a character in a string within another, case insensitive.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack;;d68,317;;b1,5;;mstring $haystack;;pstring $needle;;pbool $part;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f33;317;42;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f44;317;51;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f53;317;58;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;377;2;416;;;;vpos;;vint;;r&#xA;Description&#xA;     Finds position of last occurrence of a string within another, case insensitive&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the position of the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    int $offset - The position in $haystack to start searching&#xA;&#xA;Return:&#xA;   |bool The numeric position of the last occurrence of $needle in the $haystack string,;;d66,377;;b1,5;;mstring $haystack;;pstring $needle;;pint $offset;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f33;377;42;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f44;377;51;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f53;377;60;377;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strrpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;428;2;466;;;;vpos;;vint;;r&#xA;Description&#xA;     Find position of last occurrence of a string in a string.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string being checked, for the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    int $offset - May be specified to begin searching an arbitrary number of characters into the string&#xA;&#xA;Return:&#xA;   |bool The numeric position of the last occurrence of $needle in the $haystack string;;d65,428;;b1,5;;mstring $haystack;;pstring $needle;;pint $offset;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f32;428;41;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f43;428;50;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f52;428;59;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strstr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;479;2;525;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds first occurrence of a string within another&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the first occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack, or true if $needle is not found;;d66,479;;b1,5;;mstring $haystack;;pstring $needle;;pbool $part;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f31;479;40;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f42;479;49;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f51;479;56;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strtolower;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;533;2;569;;;;vpos;;vstring;;r&#xA;Description&#xA;     Make a string lowercase&#xA;&#xA;Parameters:&#xA;    string $string - The string being lowercased&#xA;&#xA;Return:&#xA;   with all alphabetic characters converted to lowercase;;d44,533;;b1,5;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f35;533;42;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="strtoupper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;577;2;657;;;;vpos;;vstring;;r&#xA;Description&#xA;     Make a string uppercase&#xA;&#xA;Parameters:&#xA;    string $string - The string being uppercased&#xA;&#xA;Return:&#xA;   with all alphabetic characters converted to uppercase;;d44,577;;b1,5;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f35;577;42;577;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="substr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;702;2;723;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get part of string&#xA;&#xA;Parameters:&#xA;    string $string - The string being checked&#xA;    int $start - The first position used in $string&#xA;    int $length - The maximum length of the returned string&#xA;&#xA;Return:&#xA;   The portion of $string specified by the $string and $length parameters;;d64,702;;b1,5;;mstring $string;;pint $start;;pint $length;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f48;702;55;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="start;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f40;702;46;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f31;702;38;702;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="substrCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;666;2;692;;;;vpos;;vint;;r&#xA;Description&#xA;     Count the number of substring occurrences&#xA;&#xA;Parameters:&#xA;    string $haystack - The string being checked&#xA;    string $needle - The string being found&#xA;&#xA;Return:&#xA;   The number of times the $needle substring occurs in the $haystack string;;d56,666;;b1,5;;mstring $haystack;;pstring $needle;;p">
					<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f36;666;45;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f47;666;54;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="utf8;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f15;53;2;83;;;;vpos;;varray;;r&#xA;Description&#xA;     Converts a multibyte character string to the decimal value of the character&#xA;&#xA;Parameters:&#xA;    string $string - String to convert;;d38,53;;b1,5;;mstring $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f29;53;36;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_caseFold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f18;30;28;30;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_codeRange;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f18;37;29;37;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php;f18;44;25;44;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
			</treenode>
			<treenode node="MultibyteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f0;25;1;9227;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     MultibyteTest class;;d41,25;;b0,0;;m">
				<treenode node="testAscii;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;352;2;665;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAscii method;;d29,352;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteMimeEncode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;9028;2;9226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteSubstr method;;d43,9028;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;919;2;1159;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStripos method;;d40,919;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStristr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;1556;2;1939;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStristr method;;d40,1556;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrlen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;2093;2;2233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrlen method;;d39,2093;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;2487;2;2727;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrpos method;;d39,2487;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrrchr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;3118;2;3495;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrrchr method;;d40,3118;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrrichr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;3886;2;4263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrrichr method;;d41,3886;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;4522;2;4768;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrripos method;;d41,4522;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrrpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;5030;2;5276;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrrpos method;;d40,5030;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrstr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;5679;2;6068;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrstr method;;d39,5679;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrtolower;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;6577;2;7127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrtolower method;;d43,6577;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteStrtoupper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;7656;2;8201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteStrtoupper method;;d43,7656;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteSubstr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;8871;2;9021;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteSubstr method;;d39,8871;;b1,0;;m">
				</treenode>
				<treenode node="testMultibyteSubstrCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;8461;2;8707;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultibyteSubstrCount method;;d44,8461;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;672;2;912;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStripos method;;d38,672;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStristr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;1166;2;1549;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStristr method;;d38,1166;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrlen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;1946;2;2086;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrlen method;;d37,1946;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;2240;2;2480;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrpos method;;d37,2240;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrrchr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;2734;2;3111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrrchr method;;d38,2734;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrrichr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;3502;2;3879;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrrichr method;;d39,3502;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;4270;2;4515;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrripos method;;d39,4270;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrrpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;4775;2;5023;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrrpos method;;d38,4775;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrstr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;5283;2;5672;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrstr method;;d37,5283;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrtolower;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;6075;2;6570;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrtolower method;;d41,6075;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbStrtoupper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;7134;2;7649;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbStrtoupper method;;d41,7134;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbSubstr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;8714;2;8864;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbSubstr method;;d37,8714;;b1,0;;m">
				</treenode>
				<treenode node="testUsingMbSubstrCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;8208;2;8454;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUsingMbSubstrCount method;;d42,8208;;b1,0;;m">
				</treenode>
				<treenode node="testUtf8;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php;f8;32;2;345;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUtf8 method;;d28,32;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MutuallyReferencingOneComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;153;1;161;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     MutuallyReferencingOneComponent class;;d56,153;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;160;19;160;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MutuallyReferencingTwoComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;168;1;176;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     MutuallyReferencingTwoComponent class;;d56,168;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;175;19;175;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyAppSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;26;1;89;;;;vpos;;vCakeSchema;;c;;r&#xA;Description&#xA;     Test for Schema database management;;d37,26;;b0,0;;m">
				<treenode node="getVar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;82;2;87;;;;vpos;;vmixed;;r&#xA;Description&#xA;     getVar method&#xA;&#xA;Parameters:&#xA;    string $var - Name of var;;d30,82;;b1,0;;mstring $var;;p">
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f24;82;28;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_foo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f11;74;16;74;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="comments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;40;17;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;33;19;33;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="posts;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;57;14;57;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyCategoriesMyProduct;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2558;1;2566;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     MyCategoriesMyProduct class;;d50,2558;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2565;13;2565;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyCategoriesMyProductsFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyProductsFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class MyCategoriesMyProductsFixture;;d60,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyProductsFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyProductsFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyCategoriesMyUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2543;1;2551;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     MyCategoriesMyUser class;;d47,2543;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2550;13;2550;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyCategoriesMyUsersFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyUsersFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class MyCategoriesMyUsersFixture;;d57,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyUsersFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyUsersFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyCategory;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2499;1;2514;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     MyCategory class;;d39,2499;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2513;28;2513;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2506;13;2506;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyCategoryFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoryFixture.php;f0;23;1;45;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class MyCategoryFixture;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoryFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoryFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyCustomExceptionRenderer;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f0;110;1;121;;;;vpos;;vExceptionRenderer;;c;;r&#xA;Description&#xA;     MyCustomExceptionRenderer class;;d58,110;;b0,0;;m">
				<treenode node="missingWidgetThing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;117;2;119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     custom error message type.;;d38,117;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyPluginAppController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;94;1;95;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     MyPluginAppController class;;d50,94;;b0,0;;m">
			</treenode>
			<treenode node="MyPluginController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;120;1;157;;;;vpos;;vMyPluginAppController;;c;;r&#xA;Description&#xA;     MyPluginController class;;d55,120;;b0,0;;m">
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;143;2;145;;;;vpos;;vvoid;;r&#xA;Description&#xA;     add method;;d23,143;;b1,0;;m">
				</treenode>
				<treenode node="admin_add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;153;2;155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     admin_add method&#xA;&#xA;Parameters:&#xA;    mixed $id;;d39,153;;b1,0;;mmixed $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f27;153;30;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;134;2;136;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,134;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;127;13;127;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyProduct;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2521;1;2536;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     MyProduct class;;d38,2521;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2535;28;2535;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2528;13;2528;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyProductFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyProductFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class MyProductFixture;;d47,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyProductFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyProductFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Mysql;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f0;27;1;836;;;;vpos;;vDboSource;;c;;r&#xA;Description&#xA;     MySQL DBO driver object;;d30,27;;b0,0;;m">
				<treenode node="_alterIndexes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;666;2;686;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate MySQL index alteration statements for a table.&#xA;&#xA;Parameters:&#xA;    string $table - Table to alter indexes for&#xA;    array $indexes - Indexes to add and drop&#xA;&#xA;Return:&#xA;   Index alteration statements;;d52,666;;b2,0;;mstring $table;;parray $indexes;;p">
					<treenode node="indexes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f42;666;50;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f34;666;40;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_alterTableParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;600;2;605;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate MySQL table parameter alteration statements for a table.&#xA;&#xA;Parameters:&#xA;    string $table - Table to alter parameters for&#xA;    array $parameters - Parameters to add &amp; drop&#xA;&#xA;Return:&#xA;   Array of table property alteration statements;;d63,600;;b2,0;;mstring $table;;parray $parameters;;p">
					<treenode node="parameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f50;600;61;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f42;600;48;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_buildIndexSubPart;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;695;2;703;;;;vpos;;vstring;;r&#xA;Description&#xA;     Format length for text indexes&#xA;&#xA;Parameters:&#xA;    array $lengths - An array of lengths for a single index&#xA;    string $column - The column for which to generate the index length&#xA;&#xA;Return:&#xA;   Formatted length part of an index field;;d58,695;;b2,0;;marray $lengths;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f49;695;56;695;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="lengths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f39;695;47;695;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_dropTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;589;2;591;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a &quot;drop table&quot; statement for the given table&#xA;&#xA;Parameters:&#xA;    type $table - Name of the table to drop&#xA;&#xA;Return:&#xA;   Drop table SQL statement;;d39,589;;b2,0;;mtype $table;;p">
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f31;589;37;589;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_unsigned;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;832;2;834;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if column type is unsigned&#xA;&#xA;Parameters:&#xA;    string $real - Real database-layer column type (i&#xA;&#xA;Return:&#xA;   True if column is unsigned, false otherwise;;d37,832;;b2,0;;mstring $real;;p">
					<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f30;832;35;832;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="alterSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;525;2;581;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate a MySQL Alter Table syntax for the given Schema comparison&#xA;&#xA;Parameters:&#xA;    array $compare - Result of a CakeSchema::compare()&#xA;    string $table - The table name&#xA;&#xA;Return:&#xA;   Array of alter statements to make;;d54,525;;b1,0;;marray $compare;;pstring $table;;p">
					<treenode node="compare;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f29;525;37;525;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f39;525;45;525;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;615;2;657;;;;vpos;;varray;;r&#xA;Description&#xA;     Format indexes for create table&#xA;&#xA;Parameters:&#xA;    array $indexes - An array of indexes to generate SQL from&#xA;    string $table - Optional table name, not used&#xA;&#xA;Return:&#xA;   An array of SQL statements for indexes;;d53,615;;b1,0;;marray $indexes;;pstring $table;;p">
					<treenode node="indexes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f28;615;36;615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f38;615;44;615;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="column;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;746;2;795;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts database-layer column types to basic types&#xA;&#xA;Parameters:&#xA;    string $real - Real database-layer column type (i&#xA;&#xA;Return:&#xA;   Abstract column type (i;;d31,746;;b1,0;;mstring $real;;p">
					<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f24;746;29;746;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;151;2;201;;;;vpos;;vbool;;r&#xA;Description&#xA;     Connects to the database using options in the given configuration array.&#xA;&#xA;Return:&#xA;   True if the database could be connected, else false;;d27,151;;b1,0;;m">
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;428;2;459;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generates and executes an SQL DELETE statement for given id/conditions on given model.&#xA;&#xA;Parameters:&#xA;    Model $model - The model to delete from&#xA;    mixed $conditions - The conditions to use&#xA;&#xA;Return:&#xA;   Success;;d58,428;;b1,0;;mModel $model;;pmixed $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f38;428;49;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f30;428;36;428;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;330;2;375;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of the fields in given table name.&#xA;&#xA;Parameters:&#xA;    Model|string $model - Name of database table to inspect or model instance&#xA;&#xA;Return:&#xA;   Fields in table;;d34,330;;b1,0;;mModel|string $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f26;330;32;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;208;2;210;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check whether the MySQL extension is installed/loaded;;d27,208;;b1,0;;m">
				</treenode>
				<treenode node="fetchResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;271;2;285;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Fetches the next row from the current result set&#xA;&#xA;Return:&#xA;   array with results fetched and mapped to column names or false if there is no results left to fetch;;d31,271;;b1,0;;m">
				</treenode>
				<treenode node="getCharsetName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;302;2;321;;;;vpos;;vstring;;r&#xA;Description&#xA;     Query charset by collation&#xA;&#xA;Parameters:&#xA;    string $name - Collation name&#xA;&#xA;Return:&#xA;   Character set name;;d39,302;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f32;302;37;302;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;292;2;294;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the database encoding&#xA;&#xA;Return:&#xA;   The database encoding;;d31,292;;b1,0;;m">
				</treenode>
				<treenode node="getSchemaName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;813;2;815;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the schema name&#xA;&#xA;Return:&#xA;   The schema name;;d33,813;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;477;2;516;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of the indexes in given datasource name.&#xA;&#xA;Parameters:&#xA;    string $model - Name of model to inspect&#xA;&#xA;Return:&#xA;   Fields in table;;d31,477;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f23;477;29;477;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listDetailedSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;711;2;738;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a detailed array of sources (tables) in the database.&#xA;&#xA;Parameters:&#xA;    string $name - Table name to get parameters&#xA;&#xA;Return:&#xA;   Array of table names in the database;;d51,711;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f37;711;42;711;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;218;2;238;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of sources (tables) in the database.&#xA;&#xA;Parameters:&#xA;    mixed $data - List of tables&#xA;&#xA;Return:&#xA;   Array of table names in the database;;d43,218;;b1,0;;mmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f29;218;34;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedTransactionSupported;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;822;2;824;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the server support nested transactions;;d46,822;;b1,0;;m">
				</treenode>
				<treenode node="resultSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;246;2;264;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Builds a map of the columns contained in a result&#xA;&#xA;Parameters:&#xA;    PDOStatement $results - The results to format;;d37,246;;b1,0;;mPDOStatement $results;;p">
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f27;246;35;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;467;2;469;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the database encoding&#xA;&#xA;Parameters:&#xA;    string $enc - Database encoding;;d35,467;;b1,0;;mstring $enc;;p">
					<treenode node="enc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f29;467;33;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;386;2;419;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates and executes an SQL UPDATE statement for given model, fields, and values.&#xA;&#xA;Parameters:&#xA;    Model $model - The model to update&#xA;    array $fields - The fields to update&#xA;    array $values - The values to set&#xA;    mixed $conditions - The conditions to use;;d93,386;;b1,0;;mModel $model;;parray $fields;;parray $values;;pmixed $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f73;386;84;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f38;386;45;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f30;386;36;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f57;386;64;386;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="value;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;800;2;806;;;;vpos;;v;;r&#xA;Description&#xA;     { inheritDoc};;d46,800;;b1,0;;mdata;;pcolumn;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f30;800;37;800;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f23;800;28;800;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_baseConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;41;23;41;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_charsets;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;134;21;134;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;56;23;56;;;;vposPDO;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_useAlias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f11;77;21;77;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="columns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;113;16;113;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;34;20;34;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="endQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;70;17;70;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fieldParameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;84;24;84;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="startQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;63;19;63;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tableParameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php;f8;101;24;101;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MysqlTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f0;30;1;4094;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DboMysqlTest class;;d37,30;;b0,0;;m">
				<treenode node="_buildRelatedModels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f11;1265;2;1277;;;;vpos;;vvoid;;r&#xA;Description&#xA;     buildRelatedModels method&#xA;&#xA;Parameters:&#xA;    Model $model;;d54,1265;;b2,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f46;1265;52;1265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_prepareAssociationQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f11;1287;2;1299;;;;vpos;;varray;;r&#xA;Description&#xA;     &amp;_prepareAssociationQuery method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    array $queryData&#xA;    array $binding&#xA;&#xA;Return:&#xA;   The prepared association query;;d83,1287;;b2,0;;mModel $model;;parray $queryData;;parray $binding;;p">
					<treenode node="binding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f73;1287;81;1287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f52;1287;58;1287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f61;1287;71;1287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_scrubQueryData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f11;1307;2;1314;;;;vpos;;varray;;r&#xA;Description&#xA;     Helper method copied from DboSource::_scrubQueryData()&#xA;&#xA;Parameters:&#xA;    array $data;;d43,1307;;b2,0;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f36;1307;41;1307;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildColumnUnsignedProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3237;2;3326;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider testBuildColumnUnsigned method;;d47,3237;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;62;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up a Dbo class instance for testing;;d25,62;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;78;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up a Dbo class instance for testing;;d28,78;;b1,0;;m">
				</treenode>
				<treenode node="testAlteringTableParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;684;2;728;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test altering the table settings with schema.;;d47,684;;b1,0;;m">
				</treenode>
				<treenode node="testAlteringTwoTables;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;735;2;762;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test alterSchema on two tables.;;d41,735;;b1,0;;m">
				</treenode>
				<treenode node="testAlterSchemaIndexes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;567;2;660;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAlterSchemaIndexes method;;d42,567;;b1,0;;m">
				</treenode>
				<treenode node="testArrayConditionsOneElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2583;2;2593;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that array conditions with only one element work.;;d49,2583;;b1,0;;m">
				</treenode>
				<treenode node="testArrayConditionsParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2308;2;2557;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testArrayConditionsParsing method;;d46,2308;;b1,0;;m">
				</treenode>
				<treenode node="testArrayConditionsParsingComplexKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2600;2;2618;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testArrayConditionsParsingComplexKeys method;;d57,2600;;b1,0;;m">
				</treenode>
				<treenode node="testBlobSaving;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;667;2;677;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saving and retrieval of blobs;;d34,667;;b1,0;;m">
				</treenode>
				<treenode node="testBuildColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;363;2;391;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildColumn method;;d35,363;;b1,0;;m">
				</treenode>
				<treenode node="testBuildColumn2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3102;2;3198;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildColumn method;;d36,3102;;b1,0;;m">
				</treenode>
				<treenode node="testBuildColumnBadType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3206;2;3215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildColumnBadType method;;d42,3206;;b1,0;;m">
				</treenode>
				<treenode node="testBuildColumnUnsigned;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3227;2;3230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test `unsigned` field parameter&#xA;&#xA;Parameters:&#xA;    array $data - Column data&#xA;    string $expected - Expected sql part;;d59,3227;;b1,0;;marray $data;;pstring $expected;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f41;3227;46;3227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f48;3227;57;3227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testBuildIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3053;2;3095;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildIndex method;;d34,3053;;b1,0;;m">
				</treenode>
				<treenode node="testBuildTableParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;800;2;812;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildTableParameters method;;d44,800;;b1,0;;m">
				</treenode>
				<treenode node="testCalculations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2969;2;3004;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCalculations method;;d36,2969;;b1,0;;m">
				</treenode>
				<treenode node="testColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;503;2;559;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testColumn method;;d30,503;;b1,0;;m">
				</treenode>
				<treenode node="testComplexSortExpression;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2959;2;2962;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testComplexSortExpression method;;d45,2959;;b1,0;;m">
				</treenode>
				<treenode node="testConditionsOptionalArguments;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2646;2;2652;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConditionsOptionalArguments method;;d51,2646;;b1,0;;m">
				</treenode>
				<treenode node="testConditionsWithComplexVirtualFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3519;2;3535;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that virtualFields with complex functions and aliases work.;;d58,3519;;b1,0;;m">
				</treenode>
				<treenode node="testConditionsWithModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2659;2;2685;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConditionsWithModel;;d43,2659;;b1,0;;m">
				</treenode>
				<treenode node="testConditionsWithReplacements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2564;2;2576;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test conditions() with replacements.;;d50,2564;;b1,0;;m">
				</treenode>
				<treenode node="testCreateSchemaAutoPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1007;2;1046;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the primary flag is handled correctly.;;d50,1007;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteStatements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3978;2;4002;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test deletes with a mock.;;d40,3978;;b1,0;;m">
				</treenode>
				<treenode node="testDescribe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;879;2;892;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test describe() on a fixture.;;d32,879;;b1,0;;m">
				</treenode>
				<treenode node="testDescribeGettingFieldParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;933;2;961;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a describe() gets additional fieldParameters;;d54,933;;b1,0;;m">
				</treenode>
				<treenode node="testDescribeHandleCurrentTimestamp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;899;2;926;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that describe() ignores `default current_timestamp` in timestamp columns.;;d54,899;;b1,0;;m">
				</treenode>
				<treenode node="testDropSchemaNoSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2875;2;2877;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDropSchemaNoSchema method;;d42,2875;;b1,0;;m">
				</treenode>
				<treenode node="testExceptionOnBrokenConnection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3931;2;3939;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException MissingConnectionException;;d51,3931;;b1,0;;m">
				</treenode>
				<treenode node="testExecute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3628;2;3641;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that execute runs queries.;;d31,3628;;b1,0;;m">
				</treenode>
				<treenode node="testFieldDoubleEscaping;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1125;2;1163;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFieldDoubleEscaping method;;d43,1125;;b1,0;;m">
				</treenode>
				<treenode node="testFieldParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2692;2;2810;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFieldParsing method;;d36,2692;;b1,0;;m">
				</treenode>
				<treenode node="testFieldsWithComplexVirtualFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3601;2;3621;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that virtualFields with complex functions and aliases work.;;d54,3601;;b1,0;;m">
				</treenode>
				<treenode node="testFieldsWithExpression;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2817;2;2826;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fields() will accept objects made from DboSource::expression;;d44,2817;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryBelongsTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1560;2;1583;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryBelongsTo method;;d57,1560;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryBelongsToWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1590;2;1613;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryBelongsToWithConditions method;;d71,1590;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasAndBelongsToMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1910;2;1932;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasAndBelongsToMany method;;d67,1910;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasAndBelongsToManyWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1939;2;1958;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasAndBelongsToManyWithConditions method;;d81,1939;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasAndBelongsToManyWithOffsetAndLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1965;2;1992;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasAndBelongsToManyWithOffsetAndLimit method;;d85,1965;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasAndBelongsToManyWithPageAndLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1999;2;2026;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasAndBelongsToManyWithPageAndLimit method;;d83,1999;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1620;2;1640;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasMany method;;d55,1620;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasManyAndAggregateFunction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1891;2;1903;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generateAssociationQuery with a hasMany and an aggregate function.;;d75,1891;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasManyWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1684;2;1703;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasManyWithConditions method;;d69,1684;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasManyWithFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1778;2;1884;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasManyWithFields method;;d65,1778;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasManyWithLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1647;2;1677;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasManyWithLimit method;;d64,1647;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasManyWithOffsetAndLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1710;2;1738;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasManyWithOffsetAndLimit method;;d73,1710;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasManyWithPageAndLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1745;2;1771;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasManyWithPageAndLimit method;;d71,1745;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasOne;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1502;2;1526;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasOne method;;d54,1502;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQueryHasOneWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1533;2;1553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQueryHasOneWithConditions method;;d68,1533;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQuerySelfJoin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1170;2;1257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQuerySelfJoin method;;d56,1170;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQuerySelfJoinWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1445;2;1495;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQuerySelfJoinWithConditions method;;d70,1445;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQuerySelfJoinWithConditionsInBelongsToBinding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1421;2;1438;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQuerySelfJoinWithConditionsInBelongsToBinding method;;d88,1421;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAssociationQuerySelfJoinWithConditionsInHasOneBinding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1397;2;1414;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAssociationQuerySelfJoinWithConditionsInHasOneBinding method;;d85,1397;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateInnerJoinAssociationQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1364;2;1390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateInnerJoinAssociationQuery method;;d57,1364;;b1,0;;m">
				</treenode>
				<treenode node="testGetCharsetName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;819;2;825;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetCharsetName method;;d38,819;;b1,0;;m">
				</treenode>
				<treenode node="testGetCharsetNameCaching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;832;2;853;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetCharsetNameCaching method;;d45,832;;b1,0;;m">
				</treenode>
				<treenode node="testGetEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1102;2;1118;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that getVersion method sends the correct query for getting the client encoding;;d35,1102;;b1,0;;m">
				</treenode>
				<treenode node="testGetVersion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1093;2;1096;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that getVersion method sends the correct query for getting the mysql version;;d34,1093;;b1,0;;m">
				</treenode>
				<treenode node="testHasAny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3353;2;3375;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test hasAny();;d30,3353;;b1,0;;m">
				</treenode>
				<treenode node="testHypenInStringConditionsAndFieldNames;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2191;2;2203;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that - in conditions and field names works;;d60,2191;;b1,0;;m">
				</treenode>
				<treenode node="testIndexDetection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;264;2;356;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIndexDetection method;;d38,264;;b1,0;;m">
				</treenode>
				<treenode node="testIndexOnMySQL4Output;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;400;2;496;;;;vpos;;vvoid;;r&#xA;Description&#xA;     MySQL 4.x returns index data in a different format, Using a mock ensure that MySQL 4.x output is properly parsed.;;d43,400;;b1,0;;m">
				</treenode>
				<treenode node="testIntrospectType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3705;2;3856;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIntrospectType method;;d38,3705;;b1,0;;m">
				</treenode>
				<treenode node="testLastAffected;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;239;2;256;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLastAffected method;;d36,239;;b1,0;;m">
				</treenode>
				<treenode node="testLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3011;2;3046;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLength method;;d30,3011;;b1,0;;m">
				</treenode>
				<treenode node="testListDetailedSourcesNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1078;2;1087;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that listDetailedSources with a named table that doesn't exist.;;d48,1078;;b1,0;;m">
				</treenode>
				<treenode node="testListSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1052;2;1071;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that listSources method sends the correct query and parses the result accordingly;;d35,1052;;b1,0;;m">
				</treenode>
				<treenode node="testLocalizedFloats;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;151;2;180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that localized floats don't cause trouble.;;d39,151;;b1,0;;m">
				</treenode>
				<treenode node="testMixedConditionsParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2625;2;2639;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMixedConditionsParsing method;;d46,2625;;b1,0;;m">
				</treenode>
				<treenode node="testNestedTransaction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;4042;2;4075;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test nested transaction;;d41,4042;;b1,0;;m">
				</treenode>
				<treenode node="testOrderParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2884;2;2952;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOrderParsing method;;d36,2884;;b1,0;;m">
				</treenode>
				<treenode node="testParenthesisInArrayConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2259;2;2301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParenthesisInArrayConditions method;;d52,2259;;b1,0;;m">
				</treenode>
				<treenode node="testParenthesisInStringConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2210;2;2252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParenthesisInStringConditions method;;d53,2210;;b1,0;;m">
				</treenode>
				<treenode node="testQuotesInStringConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2168;2;2184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testQuotesInStringConditions method;;d48,2168;;b1,0;;m">
				</treenode>
				<treenode node="testQuoting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;91;2;143;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Dbo value method;;d31,91;;b1,0;;m">
				</treenode>
				<treenode node="testReadCustomJoinsAfterGeneratedJoins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;1321;2;1357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that read() places provided joins after the generated ones.;;d58,1321;;b1,0;;m">
				</treenode>
				<treenode node="testReadTableParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;769;2;793;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadTableParameters method;;d43,769;;b1,0;;m">
				</treenode>
				<treenode node="testReadVirtualFieldsWithNewLines;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3566;2;3577;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reading virtual fields containing newlines when recursive &gt; 0;;d53,3566;;b1,0;;m">
				</treenode>
				<treenode node="testRealQueries;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3863;2;3925;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRealQueries method;;d35,3863;;b1,0;;m">
				</treenode>
				<treenode node="testRenderStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2833;2;2851;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRenderStatement method;;d39,2833;;b1,0;;m">
				</treenode>
				<treenode node="testSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2858;2;2867;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSchema method;;d30,2858;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaUnsigned;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3333;2;3346;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting `unsigned` field parameter from DB;;d38,3333;;b1,0;;m">
				</treenode>
				<treenode node="testScientificNotation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;187;2;193;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that scientific notations are working correctly;;d42,187;;b1,0;;m">
				</treenode>
				<treenode node="testSelectDistict;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2033;2;2038;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSelectDistict method;;d37,2033;;b1,0;;m">
				</treenode>
				<treenode node="testSetValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;4082;2;4092;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that value() quotes set values even when numeric.;;d32,4082;;b1,0;;m">
				</treenode>
				<treenode node="testStringConditionsParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;2045;2;2161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStringConditionsParsing method;;d47,2045;;b1,0;;m">
				</treenode>
				<treenode node="testTinyintCasting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;200;2;232;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTinyintCasting method;;d38,200;;b1,0;;m">
				</treenode>
				<treenode node="testTruncateStatements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;4009;2;4035;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test truncate with a mock.;;d42,4009;;b1,0;;m">
				</treenode>
				<treenode node="testTwoColumnsWithPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;968;2;1000;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that two columns with key =&gt; primary doesn't create invalid sql.;;d48,968;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateStatements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3946;2;3971;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStatements method;;d40,3946;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3382;2;3447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test fields generating usable virtual fields to use in query;;d37,3382;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsComplexRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3672;2;3698;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reading complex virtualFields with subqueries.;;d48,3672;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldSeparators;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;860;2;872;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that changing the virtualFieldSeparator allows for __ fields.;;d46,860;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsFetch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3648;2;3665;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test a full example of using virtual fields;;d42,3648;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsInCalculate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3542;2;3559;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test calculate to generate claculate statements on virtual fields;;d48,3542;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsInConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3483;2;3512;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test conditions to generate query conditions for virtual fields;;d49,3483;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsInGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3584;2;3594;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test group to generate GROUP BY statements on virtual fields;;d44,3584;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldsWithSubquery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;3454;2;3476;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test find() generating usable virtual fields to use in query without modifying custom subqueries.;;d49,3454;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;37;21;37;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Dbo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;55;12;55;;;;vposDboSource;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php;f8;44;17;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MysqlTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4709;1;4779;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     MysqlTestModel class;;d35,4709;;b0,0;;m">
				<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4734;2;4736;;;;vpos;;vvoid;;r&#xA;Description&#xA;     find method&#xA;&#xA;Parameters:&#xA;    mixed $conditions&#xA;    mixed $fields&#xA;    mixed $order&#xA;    mixed $recursive;;d92,4734;;b1,0;;mmixed $conditions;;pmixed $fields;;pmixed $order;;pmixed $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f22;4734;33;4734;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f42;4734;49;4734;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f58;4734;64;4734;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f73;4734;83;4734;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4747;2;4749;;;;vpos;;vvoid;;r&#xA;Description&#xA;     findAll method&#xA;&#xA;Parameters:&#xA;    mixed $conditions&#xA;    mixed $fields&#xA;    mixed $order&#xA;    mixed $recursive;;d95,4747;;b1,0;;mmixed $conditions;;pmixed $fields;;pmixed $order;;pmixed $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f25;4747;36;4747;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f45;4747;52;4747;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f61;4747;67;4747;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f76;4747;86;4747;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4756;2;4777;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4756;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4756;30;4756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4716;13;4716;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4723;17;4723;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2477;1;2492;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     MyUser class;;d35,2477;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2491;28;2491;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2484;13;2484;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="MyUserFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyUserFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class MyUserFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyUserFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyUserFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NameTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;181;1;201;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     NameTest class;;d37,181;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;200;14;200;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;187;13;187;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;193;17;193;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Node;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1325;1;1348;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Node class;;d33,1325;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1339;28;1339;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1332;13;1332;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NodeAfterFind;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1185;1;1239;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     NodeAfterFind class;;d42,1185;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1235;2;1237;;;;vpos;;varray;;r&#xA;Description&#xA;     afterFind method&#xA;&#xA;Parameters:&#xA;    mixed $results;;d55,1235;;b1,0;;mresults;;pprimary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;1235;45;1235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;1235;35;1235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1227;18;1227;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1220;16;1220;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1213;15;1213;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1192;13;1192;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1206;17;1206;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1199;17;1199;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NodeAfterFindSample;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1246;1;1268;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     NodeAfterFindSample class;;d48,1246;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1267;18;1267;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1253;13;1253;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1260;17;1260;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NodeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NodeFixture.php;f0;24;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class NodeFixture;;d42,24;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NodeFixture.php;f8;31;15;31;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NodeFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NodeNoAfterFind;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1275;1;1318;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     NodeNoAfterFind class;;d44,1275;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1317;18;1317;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1310;16;1310;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1303;15;1303;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1282;13;1282;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1296;17;1296;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1289;17;1289;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NotFoundException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;138;1;153;;;;vpos;;vHttpException;;c;;r&#xA;Description&#xA;     Represents an HTTP 404 error.;;d46,138;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;146;2;151;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - If no message is given 'Not Found' will be the message&#xA;    int $code - Status code, defaults to 404;;d59,146;;b1,0;;mstring $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f46;146;51;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;146;37;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="NotImplementedException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;617;1;627;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Not Implemented Exception - used when an API method is not implemented;;d52,617;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;622;2;624;;;;vpos;;v;;r;;d52,622;;b1,0;;mmessage;;pcode;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f39;622;44;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;622;37;622;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;619;28;619;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumberHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f0;33;1;184;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Number helper library.;;d37,33;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;73;2;75;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Call methods from CakeNumber utility class&#xA;&#xA;Parameters:&#xA;    string $method - Method to call&#xA;    array $params - Parameters to pass to method&#xA;&#xA;Return:&#xA;   Whatever is returned by called method, or false on failure;;d42,73;;b1,0;;mstring $method;;parray $params;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f24;73;31;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f33;73;40;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;54;2;64;;;;vpos;;v;;r&#xA;Description&#xA;     Default Constructor&#xA;&#xA;Parameters:&#xA;    View $View - The View this helper is being attached to&#xA;    array $settings - Configuration settings for the helper;;d62,54;;b1,0;;mView $View;;parray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f41;54;50;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f34;54;39;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;169;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a currency format to the Number helper. Makes reusing currency formats easier.&#xA;&#xA;Parameters:&#xA;    string $formatName - The format name to be used in the future&#xA;    array $options - The array of options for this format;;d50,169;;b1,0;;mstring $formatName;;parray $options;;p">
					<treenode node="formatName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f27;169;38;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f40;169;48;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="currency;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;146;2;148;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a number into a currency format.&#xA;&#xA;Parameters:&#xA;    float $number - Number to format&#xA;    string $currency - Shortcut to default options&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   Number formatted as a currency;;d73,146;;b1,0;;mfloat $number;;pstring $currency;;parray $options;;p">
					<treenode node="currency;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f35;146;44;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f26;146;33;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f53;146;61;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultCurrency;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;180;2;182;;;;vpos;;vstring;;r&#xA;Description&#xA;     Getter/setter for default currency&#xA;&#xA;Parameters:&#xA;    string $currency - The currency to be used in the future&#xA;&#xA;Return:&#xA;   Currency;;d44,180;;b1,0;;mstring $currency;;p">
					<treenode node="currency;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f33;180;42;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;130;2;132;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a number into a currency format.&#xA;&#xA;Parameters:&#xA;    float $number - A floating point number&#xA;    int $options - If integer then places, if string then before, if (,&#xA;&#xA;Return:&#xA;   formatted number;;d51,130;;b1,0;;mfloat $number;;pint $options;;p">
					<treenode node="number;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f24;130;31;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f33;130;41;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="precision;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;86;2;88;;;;vpos;;vfloat;;r&#xA;Description&#xA;     Formats a number with a level of precision.&#xA;&#xA;Parameters:&#xA;    float $number - A floating point number&#xA;    int $precision - The precision of the returned number&#xA;&#xA;Return:&#xA;   Formatted float;;d52,86;;b1,0;;mfloat $number;;pint $precision;;p">
					<treenode node="number;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f27;86;34;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="precision;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f36;86;46;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toPercentage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;116;2;118;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a number into a percentage string.&#xA;&#xA;Parameters:&#xA;    float $number - A floating point number&#xA;    int $precision - The precision of the returned number&#xA;    array $options - Options&#xA;&#xA;Return:&#xA;   Percentage string;;d75,116;;b1,0;;mfloat $number;;pint $precision;;parray $options;;p">
					<treenode node="number;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f30;116;37;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f55;116;63;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="precision;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f39;116;49;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toReadableSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f8;98;2;100;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted-for-humans file size.&#xA;&#xA;Parameters:&#xA;    int $size - Size in bytes&#xA;&#xA;Return:&#xA;   Human readable size;;d39,98;;b1,0;;mint $size;;p">
					<treenode node="size;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f32;98;37;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_engine;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php;f11;40;19;40;;;;vposCakeNumber;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumberHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f0;47;1;109;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     NumberHelperTest class;;d44,47;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f8;54;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,54;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f8;64;2;67;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,64;;b1,0;;m">
				</treenode>
				<treenode node="testEngineOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f8;93;2;107;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test engine override;;d38,93;;b1,0;;m">
				</treenode>
				<treenode node="testNumberHelperProxyMethodCalls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f8;74;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test CakeNumber class methods are called correctly;;d52,74;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumberHelperTestObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f0;24;1;34;;;;vpos;;vNumberHelper;;c;;r&#xA;Description&#xA;     NumberHelperTestObject class;;d50,24;;b0,0;;m">
				<treenode node="attach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f8;26;2;28;;;;vpos;;v;;r;;d52,26;;b1,0;;mcakeNumber;;p">
					<treenode node="cakeNumber;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f39;26;50;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="engine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php;f8;30;2;32;;;;vpos;;v;;r;;d26,30;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumberTree;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2573;1;2630;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     NumberTree class;;d39,2573;;b0,0;;m">
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2600;2;2628;;;;vpos;;vvoid;;r&#xA;Description&#xA;     initialize method&#xA;&#xA;Parameters:&#xA;    int $levelLimit&#xA;    int $childLimit&#xA;    mixed $currentLevel&#xA;    mixed $parent_id&#xA;    string $prefix&#xA;    bool $hierarchal;;d137,2600;;b1,0;;mint $levelLimit;;pint $childLimit;;pmixed $currentLevel;;pmixed $parent_id;;pstring $prefix;;pbool $hierarchal;;p">
					<treenode node="childLimit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f45;2600;56;2600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="currentLevel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f62;2600;75;2600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hierarchal;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f117;2600;128;2600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="levelLimit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f28;2600;39;2600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parentId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f84;2600;93;2600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f102;2600;109;2600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2587;15;2587;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2580;13;2580;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumberTreeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumberTreeFixture.php;f0;27;1;41;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class NumberTreeFixture;;d48,27;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumberTreeFixture.php;f8;34;15;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumberTreeTwo;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2637;1;2652;;;;vpos;;vNumberTree;;c;;r&#xA;Description&#xA;     NumberTreeTwo class;;d39,2637;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2651;15;2651;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2644;13;2644;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumberTreeTwoFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumberTreeTwoFixture.php;f0;27;1;42;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class NumberTreeTwoFixture;;d51,27;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumberTreeTwoFixture.php;f8;34;15;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumericArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;331;1;347;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     NumericArticle class;;d43,331;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;338;13;338;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;345;17;345;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="NumericArticleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumericArticleFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class NumericArticleFixture;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumericArticleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumericArticleFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ObjectCollection;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f9;27;1;337;;;;vpos;;v;;r&#xA;Description&#xA;     Deals with Collections of objects. Keeping registries of those objects, loading and constructing new objects and triggering callbacks. Each subclass needs to implement its own load() functionality.;;d32,27;;b0,0;;m">
				<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;151;2;156;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Provide public read access to the loaded objects&#xA;&#xA;Parameters:&#xA;    string $name - Name of property to read;;d30,151;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f23;151;28;151;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__isset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;164;2;166;;;;vpos;;vbool;;r&#xA;Description&#xA;     Provide isset access to _loaded&#xA;&#xA;Parameters:&#xA;    string $name - Name of object being checked;;d32,164;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f25;164;30;164;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="attached;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;271;2;273;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the list of attached objects, or, whether the given object is attached&#xA;&#xA;Parameters:&#xA;    string $name - Optional&#xA;&#xA;Return:&#xA;   If $name is specified, returns the boolean status of the corresponding object;;d40,271;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f26;271;31;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="disable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;241;2;245;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Disables callbacks on an object or array of objects. Public object methods are still callable as normal.&#xA;&#xA;Parameters:&#xA;    string|array $name - CamelCased name of the objects(s) to disable (string or array);;d32,241;;b1,0;;mstring|array $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f25;241;30;241;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;175;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Enables callbacks on an object or array of objects&#xA;&#xA;Parameters:&#xA;    string|array $name - CamelCased name of the object(s) to enable (string or array)&#xA;    bool $prioritize - Prioritize enabled list after enabling object(s);;d51,175;;b1,0;;mstring|array $name;;pbool $prioritize;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f24;175;29;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prioritize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f31;175;42;175;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;255;2;260;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the list of currently-enabled objects, or, the current status of a single objects&#xA;&#xA;Parameters:&#xA;    string $name - Optional&#xA;&#xA;Return:&#xA;   If $name is specified, returns the boolean status of the corresponding object;;d39,255;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f25;255;30;255;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f17;60;57;60;;;;vpos;;vobject;;r&#xA;Description&#xA;     Loads a new object onto the collection. Can throw a variety of exceptions&#xA;&#xA;Parameters:&#xA;    string $name - Name of object to load&#xA;    array $options - Array of configuration options for the object to be constructed&#xA;&#xA;Return:&#xA;   the constructed object;;d-1,-1;;b1,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f31;60;36;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f38;60;46;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loaded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;283;2;288;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the list of loaded objects, or, whether the given object is loaded&#xA;&#xA;Parameters:&#xA;    string $name - Optional&#xA;&#xA;Return:&#xA;   If $name is specified, returns the boolean status of the corresponding object;;d38,283;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f24;283;29;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normalizeObjectArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f15;323;2;335;;;;vpos;;varray;;r&#xA;Description&#xA;     Normalizes an object array, creates an array that makes lazy loading easier&#xA;&#xA;Parameters:&#xA;    array $objects - Array of child objects to normalize&#xA;&#xA;Return:&#xA;   Array of normalized objects;;d55,323;;b1,5;;marray $objects;;p">
					<treenode node="objects;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f45;323;53;323;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prioritize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;197;2;205;;;;vpos;;varray;;r&#xA;Description&#xA;     Prioritize list of enabled object&#xA;&#xA;Return:&#xA;   Prioritized list of object;;d30,197;;b1,0;;m">
				</treenode>
				<treenode node="set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;308;2;314;;;;vpos;;varray;;r&#xA;Description&#xA;     Adds or overwrites an instantiated object to the collection&#xA;&#xA;Parameters:&#xA;    string $name - Name of the object&#xA;    Object $object - The object to use&#xA;&#xA;Return:&#xA;   Loaded objects;;d51,308;;b1,0;;mstring $name;;pObject $object;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f21;308;26;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f35;308;42;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setPriority;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;216;2;232;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set priority for an object or array of objects&#xA;&#xA;Parameters:&#xA;    string|array $name - CamelCased name of the object(s) to enable (string or array)&#xA;    int|null $priority - Integer priority to set or null for default;;d54,216;;b1,0;;mstring|array $name;;pint|null $priority;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f29;216;34;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f36;216;45;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="trigger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;93;2;143;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Trigger a callback method on every object in the collection. Used to trigger methods on objects in the collection. Will fire the methods in the order they were attached.&#xA;&#xA;Parameters:&#xA;    string|CakeEvent $callback - Method to fire on all the objects&#xA;    array $params - Array of parameters for the triggered callback&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   Either the last result or all results if collectReturn is on;;d75,93;;b1,0;;mstring|CakeEvent $callback;;parray $params;;parray $options;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f25;93;34;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f55;93;63;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f36;93;43;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;296;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Name of the object to remove from the collection&#xA;&#xA;Parameters:&#xA;    string $name - Name of the object to delete;;d31,296;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f24;296;29;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_enabled;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f11;34;20;34;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_loaded;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f11;41;19;41;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="defaultPriority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php;f8;48;24;48;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ObjectCollectionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f0;129;1;585;;;;vpos;;vCakeTestCase;;c;;r;;d48,129;;b0,0;;m">
				<treenode node="_makeMockClasses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f11;218;2;222;;;;vpos;;vvoid;;r&#xA;Description&#xA;     creates mock classes for testing;;d39,218;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;136;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,136;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;146;2;149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,146;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchEventNoSubject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;565;2;583;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tests that passing an instance of CakeEvent to trigger with omitSubject property will NOT prepend the subject to the list of arguments;;d46,565;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchEventWithSubject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;539;2;556;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tests that passing an instance of CakeEvent to trigger will prepend the subject to the list of arguments;;d48,539;;b1,0;;m">
				</treenode>
				<treenode node="testLoad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;156;2;168;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test triggering callbacks on loaded helpers;;d28,156;;b1,0;;m">
				</treenode>
				<treenode node="testnormalizeObjectArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;506;2;531;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test normalizeObjectArray;;d44,506;;b1,0;;m">
				</treenode>
				<treenode node="testSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;198;2;211;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests set();;d27,198;;b1,0;;m">
				</treenode>
				<treenode node="testTrigger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;229;2;242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test triggering callbacks.;;d31,229;;b1,0;;m">
				</treenode>
				<treenode node="testTriggerModParamsInvalidIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;347;2;363;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that setting modParams to an index that doesn't exist doesn't cause errors.;;d52,347;;b1,0;;m">
				</treenode>
				<treenode node="testTriggerModParamsNullIgnored;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;370;2;391;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that returning null doesn't modify parameters.;;d51,370;;b1,0;;m">
				</treenode>
				<treenode node="testTriggerPriority;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;398;2;499;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test order of callbacks triggering based on priority.;;d39,398;;b1,0;;m">
				</treenode>
				<treenode node="testTriggerWithBreak;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;294;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that trigger with break &amp; breakOn works.;;d40,294;;b1,0;;m">
				</treenode>
				<treenode node="testTriggerWithCollectReturn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;269;2;287;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the collectReturn option works.;;d48,269;;b1,0;;m">
				</treenode>
				<treenode node="testTriggerWithDisabledObjects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;249;2;262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test trigger and disabled objects;;d50,249;;b1,0;;m">
				</treenode>
				<treenode node="testTriggerWithModParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;318;2;339;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that trigger with modParams works.;;d44,318;;b1,0;;m">
				</treenode>
				<treenode node="testUnload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;175;2;191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test unload();;d30,175;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ObjectTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f0;279;1;678;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Object Test class;;d38,279;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;293;2;296;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,293;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;303;2;307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,303;;b1,0;;m">
				</treenode>
				<treenode node="testLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;314;2;337;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLog method;;d27,314;;b1,0;;m">
				</treenode>
				<treenode node="testMethodDispatching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;374;2;433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMethodDispatching method;;d41,374;;b1,0;;m">
				</treenode>
				<treenode node="testRequestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;440;2;481;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestAction method;;d37,440;;b1,0;;m">
				</treenode>
				<treenode node="testRequestActionArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;525;2;573;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test requestAction() with arrays.;;d42,525;;b1,0;;m">
				</treenode>
				<treenode node="testRequestActionGetParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;615;2;626;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that requestAction handles get parameters correctly.;;d50,615;;b1,0;;m">
				</treenode>
				<treenode node="testRequestActionNoPostPassing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;634;2;655;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that requestAction does not fish data out of the POST superglobal.;;d50,634;;b1,0;;m">
				</treenode>
				<treenode node="testRequestActionParamParseAndPass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;592;2;608;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that requestAction() is populating $this-&gt;params properly;;d54,592;;b1,0;;m">
				</treenode>
				<treenode node="testRequestActionPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;488;2;518;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test requestAction() and plugins.;;d44,488;;b1,0;;m">
				</treenode>
				<treenode node="testRequestActionPostWithData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;662;2;677;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test requestAction with post data.;;d49,662;;b1,0;;m">
				</treenode>
				<treenode node="testRequestActionRemoveReturnParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;580;2;585;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that requestAction() does not forward the 0 =&gt; return value.;;d54,580;;b1,0;;m">
				</treenode>
				<treenode node="testSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;344;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSet method;;d27,344;;b1,0;;m">
				</treenode>
				<treenode node="testToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;364;2;367;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToString method;;d32,364;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;286;17;286;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ObjectTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f0;268;1;272;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ObjectTestModel class;;d44,268;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;270;17;270;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="OpenidUrl;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;271;1;319;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     OpenidUrl class;;d38,271;;b0,0;;m">
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;314;2;317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeValidate method;;d52,314;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f32;314;40;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;301;19;301;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;285;18;285;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;278;17;278;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;294;17;294;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="OptionEngineHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f0;47;1;111;;;;vpos;;vJsBaseEngineHelper;;c;;r&#xA;Description&#xA;     Class OptionEngineHelper;;d52,47;;b0,0;;m">
				<treenode node="domReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;84;2;85;;;;vpos;;v;;r;;d41,84;;b1,0;;mfunctionBody;;p">
					<treenode node="functionBody;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f26;84;39;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;96;2;97;;;;vpos;;v;;r;;d42,96;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f22;96;30;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;99;2;100;;;;vpos;;v;;r;;d42,99;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f22;99;30;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="each;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;87;2;88;;;;vpos;;v;;r;;d33,87;;b1,0;;mcallback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f22;87;31;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="effect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;90;2;91;;;;vpos;;v;;r;;d51,90;;b1,0;;mname;;poptions;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f24;90;29;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f31;90;39;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="event;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;81;2;82;;;;vpos;;v;;r;;d61,81;;b1,0;;mtype;;pcallback;;poptions;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f30;81;39;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f41;81;49;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f23;81;28;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;78;2;79;;;;vpos;;v;;r;;d32,78;;b1,0;;mselector;;p">
					<treenode node="selector;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f21;78;30;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;93;2;94;;;;vpos;;v;;r;;d51,93;;b1,0;;murl;;poptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f31;93;39;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f25;93;29;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;108;2;109;;;;vpos;;v;;r;;d51,108;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f31;108;39;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;105;2;106;;;;vpos;;v;;r;;d44,105;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f24;105;32;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;102;2;103;;;;vpos;;v;;r;;d46,102;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f26;102;34;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;63;2;65;;;;vpos;;varray;;r&#xA;Description&#xA;     test method for testing option mapping&#xA;&#xA;Parameters:&#xA;    array $options;;d45,63;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f25;63;33;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testParseOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f8;74;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test method for option parsing&#xA;&#xA;Parameters:&#xA;     $options&#xA;    array $safe;;d61,74;;b1,0;;m $options;;parray $safe;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f34;74;42;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="safe;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f44;74;49;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_optionMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php;f11;49;22;49;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="OrangeComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;90;1;120;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     OrangeComponent class;;d40,90;;b0,0;;m">
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;105;2;108;;;;vpos;;vvoid;;r&#xA;Description&#xA;     initialize method&#xA;&#xA;Parameters:&#xA;    Controller $controller;;d52,105;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f39;105;50;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;116;2;118;;;;vpos;;vstring;;r&#xA;Description&#xA;     startup method&#xA;&#xA;Parameters:&#xA;    Controller $controller;;d49,116;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f36;116;47;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;97;19;97;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="OrangeSessionTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f0;51;1;69;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     OrangeSessionTestController class;;d53,51;;b0,0;;m">
				<treenode node="sessionId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;65;2;67;;;;vpos;;vstring;;r&#xA;Description&#xA;     sessionId method;;d29,65;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;58;13;58;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Orangutan;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;451;1;455;;;;vpos;;vMonkey;;c;;r&#xA;Description&#xA;     Orangutan Model;;d31,451;;b0,0;;m">
				<treenode node="called;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;453;15;453;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="OtherComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\OtherComponent.php;f0;23;1;24;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Class OtherComponent;;d39,23;;b0,0;;m">
			</treenode>
			<treenode node="OtherHelperHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Helper\OtherHelperHelper.php;f0;25;1;26;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Class OtherHelperHelper;;d42,25;;b0,0;;m">
			</treenode>
			<treenode node="OtherPagesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;218;1;246;;;;vpos;;vMyPluginAppController;;c;;r&#xA;Description&#xA;     OtherPagesController class;;d57,218;;b0,0;;m">
				<treenode node="display;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;233;2;235;;;;vpos;;vvoid;;r&#xA;Description&#xA;     display method&#xA;&#xA;Parameters:&#xA;    string $page;;d39,233;;b1,0;;mstring $page;;p">
					<treenode node="page;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f25;233;30;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;242;2;244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,242;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;225;13;225;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="OtherTaskTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Console\Command\Task\OtherTaskTask.php;f0;23;1;25;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Class OtherTaskTask;;d34,23;;b0,0;;m">
			</treenode>
			<treenode node="OverallFavorite;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2462;1;2470;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     OverallFavorite class;;d44,2462;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2469;13;2469;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="OverallFavoriteFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\OverallFavoriteFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class OverallFavoriteFixture;;d53,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\OverallFavoriteFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\OverallFavoriteFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PagesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\PagesController.php;f0;30;1;88;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Controller\PagesController.php;f0;21;1;66;;C:\xampp\htdocs\ISLL\app\Controller\PagesController.php;f0;30;1;75;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     Static content controller;;d44,30;;b0,0;;m">
				<treenode node="display;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\PagesController.php;f8;54;2;86;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Controller\PagesController.php;f8;37;2;65;;C:\xampp\htdocs\ISLL\app\Controller\PagesController.php;f8;46;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Displays a view&#xA;&#xA;Parameters:&#xA;    mixed - What page to display;;d27,54;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\PagesController.php;f8;37;16;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\PagesController.php;f8;44;13;44;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Controller\PagesController.php;f8;28;13;28;;C:\xampp\htdocs\ISLL\app\Controller\PagesController.php;f8;37;13;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PagesControllerTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\PagesControllerTest.php;f0;25;1;77;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     PagesControllerTest class;;d47,25;;b0,0;;m">
				<treenode node="testDisplay;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\PagesControllerTest.php;f8;32;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDisplay method;;d31,32;;b1,0;;m">
				</treenode>
				<treenode node="testMissingView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\PagesControllerTest.php;f8;59;2;63;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that missing view renders 404 page in production;;d35,59;;b1,0;;m">
				</treenode>
				<treenode node="testMissingViewInDebug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\PagesControllerTest.php;f8;72;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that missing view in debug mode renders missing_view error page;;d42,72;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorAuthor;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f0;172;1;190;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     PaginatorAuthor class;;d44,172;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;179;17;179;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="virtualFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;186;22;186;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f0;70;1;428;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     This component is used to handle automatic model data pagination. The primary way to use this component is to call the paginate() method. There is a convenience wrapper on Controller as well.;;d43,70;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;109;2;113;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - A ComponentCollection this component can use to lazy load its components&#xA;    array $settings - Array of configuration settings;;d83,109;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f49;109;60;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f62;109;71;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f11;256;2;292;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the object pagination will occur on.&#xA;&#xA;Parameters:&#xA;    string|Model $object - The object you are looking for&#xA;&#xA;Return:&#xA;   The model object to paginate on;;d40,256;;b2,0;;mstring|Model $object;;p">
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f31;256;38;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="checkLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;419;2;426;;;;vpos;;varray;;r&#xA;Description&#xA;     Check the limit parameter and ensure its within the maxLimit bounds.&#xA;&#xA;Parameters:&#xA;    array $options - An array of options with a limit key to be checked&#xA;&#xA;Return:&#xA;   An array of options for pagination;;d44,419;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f34;419;42;419;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getDefaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;330;2;342;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the default settings for a $model. If there are no settings for a specific model, the general settings will be used.&#xA;&#xA;Parameters:&#xA;    string $alias - Model name to get default settings for&#xA;&#xA;Return:&#xA;   An array of pagination defaults for a model, or the general settings;;d37,330;;b1,0;;mstring $alias;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f29;330;35;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mergeOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;309;2;321;;;;vpos;;varray;;r&#xA;Description&#xA;     Merges the various options that Pagination uses. Pulls settings together from the following places:&#xA;&#xA;Parameters:&#xA;    string $alias - Model alias being paginated, if the general settings has a key with this value&#xA;&#xA;Return:&#xA;   Array of merged options;;d38,309;;b1,0;;mstring $alias;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f30;309;36;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paginate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;127;2;248;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles automatic pagination of model records.&#xA;&#xA;Parameters:&#xA;    Model|string $object - Model to paginate (e&#xA;    string|array $scope - Additional find conditions to use while paginating&#xA;    array $whitelist - List of allowed fields for ordering&#xA;&#xA;Return:&#xA;   Model query results;;d82,127;;b1,0;;mModel|string $object;;pstring|array $scope;;parray $whitelist;;p">
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f26;127;33;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f42;127;48;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="whitelist;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f60;127;70;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateSort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;360;2;411;;;;vpos;;varray;;r&#xA;Description&#xA;     Validate that the desired sorting can be performed on the $object. Only fields or virtualFields can be sorted on. The direction param will also be sanitized. Lastly sort + direction keys will be converted into the model friendly order key.&#xA;&#xA;Parameters:&#xA;    Model $object - The model being paginated&#xA;    array $options - The pagination options being used for this request&#xA;    array $whitelist - The list of columns that can be used for sorting&#xA;&#xA;Return:&#xA;   An array of options with sort + direction removed and replaced with order if possible;;d89,360;;b1,0;;mModel $object;;parray $options;;parray $whitelist;;p">
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f36;360;43;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f51;360;59;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="whitelist;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f67;360;77;360;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;85;17;85;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="whitelist;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php;f8;99;18;99;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f0;283;1;1420;;;;vpos;;vCakeTestCase;;c;;r;;d50,283;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;297;2;306;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup;;d25,297;;b1,0;;m">
				</treenode>
				<treenode node="testCheckLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1104;2;1119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that maxLimit is respected;;d34,1104;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultPaginateParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;571;2;584;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDefaultPaginateParams method;;d45,571;;b1,0;;m">
				</treenode>
				<treenode node="testMergeOptionsCustomFindKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;749;2;764;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test mergeOptions with customFind key;;d49,749;;b1,0;;m">
				</treenode>
				<treenode node="testMergeOptionsDefaultWhiteList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;796;2;814;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the default whitelist doesn't let people screw with things they should not be allowed to.;;d52,796;;b1,0;;m">
				</treenode>
				<treenode node="testMergeOptionsExtraWhitelist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;821;2;842;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that modifying the whitelist works.;;d50,821;;b1,0;;m">
				</treenode>
				<treenode node="testMergeOptionsMaxLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;849;2;876;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test mergeOptions with limit &gt; maxLimit in code.;;d44,849;;b1,0;;m">
				</treenode>
				<treenode node="testMergeOptionsModelSpecific;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;702;2;721;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that option merging prefers specific models;;d49,702;;b1,0;;m">
				</treenode>
				<treenode node="testMergeOptionsNamedParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;728;2;742;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test mergeOptions with named params.;;d47,728;;b1,0;;m">
				</treenode>
				<treenode node="testMergeOptionsQueryString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;771;2;789;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test merging options from the querystring.;;d47,771;;b1,0;;m">
				</treenode>
				<treenode node="testOutOfRangePageNumberAndPageCountZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;933;2;955;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOutOfRangePageNumberAndPageCountZero;;d60,933;;b1,0;;m">
				</treenode>
				<treenode node="testOutOfRangePageNumberGetsClamped;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;900;2;909;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a really large page number gets clamped to the max page size.;;d55,900;;b1,0;;m">
				</treenode>
				<treenode node="testOutOfVeryBigPageNumberGetsClamped;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;917;2;926;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a really REALLY large page number gets clamped to the max page size.;;d57,917;;b1,0;;m">
				</treenode>
				<treenode node="testPageParamCasting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;409;2;432;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that non-numeric values are rejected for page, and limit;;d40,409;;b1,0;;m">
				</treenode>
				<treenode node="testPaginate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;313;2;402;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPaginate method;;d32,313;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateCustomFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1208;2;1242;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and custom find, to make sure the correct count is returned.;;d42,1208;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateCustomFindCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1378;2;1419;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and custom find with returning other query on count operation, to make sure the correct count is returned.;;d47,1378;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateCustomFindFieldsArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1248;2;1274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and custom find with fields array, to make sure the correct count is returned.;;d53,1248;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateCustomFindGroupBy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1313;2;1370;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and custom find with fields array, to make sure the correct count is returned.;;d49,1313;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateCustomFindWithCustomFindKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1280;2;1306;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and custom find with customFind key, to make sure the correct count is returned.;;d59,1280;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateExtraParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;439;2;534;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPaginateExtraParams method;;d43,439;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateMaxLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1126;2;1157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPaginateMaxLimit;;d40,1126;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateMissingModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;691;2;695;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests for missing models;;d44,691;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateOrderModelDefault;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;591;2;631;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and model default order;;d49,591;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateOrderVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;638;2;659;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and virtualField interactions;;d49,638;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateOrderVirtualFieldJoinedModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;666;2;683;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and virtualField on joined model;;d60,666;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateOrderVirtualFieldSharedWithRealField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1164;2;1201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test paginate() and virtualField overlapping with real fields.;;d68,1164;;b1,0;;m">
				</treenode>
				<treenode node="testPaginateSpecialType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;541;2;564;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that special paginate types are called and that the type param doesn't leak out into defaults or options.;;d43,541;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortInvalidAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1089;2;1097;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test sorting with incorrect aliases on valid fields.;;d48,1089;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortInvalidDirection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;883;2;892;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that invalid directions are ignored.;;d52,883;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1044;2;1062;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that multiple sort works.;;d44,1044;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortNoSort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1069;2;1082;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that no sort doesn't trigger an error.;;d42,1069;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortSharedFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;1020;2;1038;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that sorting fields is alias specific;;d48,1020;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;995;2;1013;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that virtual fields work.;;d48,995;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortWhitelistFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;962;2;971;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fields not in whitelist won't be part of order conditions.;;d52,962;;b1,0;;m">
				</treenode>
				<treenode node="testValidateSortWhitelistTrusted;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;978;2;988;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that fields in the whitelist are not validated;;d52,978;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;290;17;290;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorControllerComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f0;143;1;165;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     PaginatorControllerComment class;;d55,143;;b0,0;;m">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;164;14;164;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;150;13;150;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;157;17;157;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorControllerPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f0;45;1;101;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     PaginatorControllerPost class;;d52,45;;b0,0;;m">
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;81;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeFind method&#xA;&#xA;Parameters:&#xA;    mixed $query;;d36,81;;b1,0;;mmixed $query;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f28;81;34;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;92;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     find method&#xA;&#xA;Parameters:&#xA;    mixed $type&#xA;    array $options;;d95,92;;b1,0;;mconditions;;pfields;;porder;;precursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f22;92;33;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f42;92;49;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f61;92;67;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f76;92;86;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;73;18;73;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="invalidFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;59;22;59;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="lastQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;66;20;66;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;52;17;52;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorCustomPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f0;197;1;281;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     PaginatorCustomPost class;;d48,197;;b0,0;;m">
				<treenode node="_findPublished;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f11;229;2;235;;;;vpos;;varray;;r&#xA;Description&#xA;     _findPublished custom find;;d71,229;;b2,0;;mstate;;pquery;;presults;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f43;229;49;229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f51;229;59;229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f35;229;41;229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_findTotals;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f11;242;2;253;;;;vpos;;varray;;r&#xA;Description&#xA;     _findTotals custom find;;d68,242;;b2,0;;mstate;;pquery;;presults;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f40;242;46;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f48;242;56;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f32;242;38;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_findTotalsOperation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f11;260;2;279;;;;vpos;;varray;;r&#xA;Description&#xA;     _findTotalsOperation custom find;;d77,260;;b2,0;;mstate;;pquery;;presults;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f49;260;55;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f57;260;65;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f41;260;47;260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;211;18;211;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="findMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;218;20;218;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;204;17;204;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f0;31;1;1006;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Pagination Helper class for easy generation of pagination links.;;d40,31;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;90;2;102;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor for the helper. Sets up the helper that is used for creating 'AJAX' links.&#xA;&#xA;Parameters:&#xA;    View $View - the view object the helper is attached to&#xA;    array $settings - Array of settings;;d62,90;;b1,0;;mView $View;;parray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f41;90;50;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f34;90;39;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_convertUrlKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f11;459;2;473;;;;vpos;;varray;;r&#xA;Description&#xA;     Converts the keys being used into the format set by options.paramType&#xA;&#xA;Parameters:&#xA;    array $url - Array of URL params to convert&#xA;    string $type - Keys type&#xA;&#xA;Return:&#xA;   converted URL params;;d49,459;;b2,0;;marray $url;;pstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f42;459;47;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f36;459;40;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_hasPage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f11;588;2;591;;;;vpos;;vbool;;r&#xA;Description&#xA;     Does $model have $page in its range?&#xA;&#xA;Parameters:&#xA;    string $model - Model name to get parameters for&#xA;    int $page - Page number you are checking&#xA;&#xA;Return:&#xA;   Whether model has $page;;d44,588;;b2,0;;mstring $model;;pint $page;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f29;588;35;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="page;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f37;588;42;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_pagingLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f11;485;2;540;;;;vpos;;vstring;;r&#xA;Description&#xA;     Protected method for generating prev/next links&#xA;&#xA;Parameters:&#xA;    string $which - Link type: 'Prev', 'Next'&#xA;    string $title - Link title&#xA;    array $options - Options list&#xA;    string $disabledTitle - Disabled link title&#xA;    array $disabledOptions - Disabled link options;;d126,485;;b2,0;;mstring $which;;pstring $title;;parray $options;;pstring $disabledTitle;;parray $disabledOptions;;p">
					<treenode node="disabledOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f98;485;114;485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="disabledTitle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f75;485;89;485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f55;485;63;485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f40;485;46;485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="which;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f32;485;38;485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;110;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Before render callback. Overridden to merge passed args with URL options.&#xA;&#xA;Parameters:&#xA;    string $viewFile - View file name;;d41,110;;b1,0;;mstring $viewFile;;p">
					<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f30;110;39;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="counter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;628;2;681;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a counter string for the paged result set&#xA;&#xA;Parameters:&#xA;    array $options - Options for the counter string&#xA;&#xA;Return:&#xA;   Counter string;;d45,628;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;628;33;628;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="current;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;195;2;202;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the current page of the recordset for the given model&#xA;&#xA;Parameters:&#xA;    string $model - Optional model name&#xA;&#xA;Return:&#xA;   The current page number of the recordset;;d40,195;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;195;31;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="defaultModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;599;2;608;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the default model of the paged sets&#xA;&#xA;Return:&#xA;   |null Model name or null if the pagination isn't initialized;;d32,599;;b1,0;;m">
				</treenode>
				<treenode node="first;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;854;2;891;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a first or set of numbers for the first pages.&#xA;&#xA;Parameters:&#xA;    string|int $first - if string use as label for the link&#xA;    array $options - An array of options&#xA;&#xA;Return:&#xA;   Numbers string;;d64,854;;b1,0;;mstring|int $first;;parray $options;;p">
					<treenode node="first;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f23;854;29;854;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f44;854;52;854;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasNext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;560;2;562;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the given result set is not at the last page&#xA;&#xA;Parameters:&#xA;    string $model - Optional model name&#xA;&#xA;Return:&#xA;   True if the result set is not at the last page;;d40,560;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;560;31;560;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasPage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;572;2;579;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the given result set has the page number given by $page&#xA;&#xA;Parameters:&#xA;    string $model - Optional model name&#xA;    int $page - The page number - if not set defaults to 1&#xA;&#xA;Return:&#xA;   True if the given result set has the specified page number;;d51,572;;b1,0;;mstring $model;;pint $page;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;572;31;572;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="page;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f40;572;45;572;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasPrev;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;549;2;551;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the given result set is not at the first page&#xA;&#xA;Parameters:&#xA;    string $model - Optional model name&#xA;&#xA;Return:&#xA;   True if the result set is not at the first page;;d40,549;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;549;31;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="last;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;917;2;958;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a last or set of numbers for the last pages.&#xA;&#xA;Parameters:&#xA;    string|int $last - if string use as label for the link, if numeric print page numbers&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   Numbers string;;d61,917;;b1,0;;mstring|int $last;;parray $options;;p">
					<treenode node="last;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f22;917;27;917;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f41;917;49;917;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="link;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;398;2;416;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a plain or Ajax link with pagination parameters&#xA;&#xA;Parameters:&#xA;    string $title - Title for the link&#xA;    string|array $url - URL for the action&#xA;    array $options - Options for the link&#xA;&#xA;Return:&#xA;   A link with pagination parameters;;d66,398;;b1,0;;mstring $title;;pstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f46;398;54;398;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f22;398;28;398;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f30;398;34;398;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="meta;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;980;2;1004;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the meta-links for a paginated result set.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   |void Meta links;;d42,980;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f22;980;30;980;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="next;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;305;2;311;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a &quot;next&quot; link for a set of paged records&#xA;&#xA;Parameters:&#xA;    string $title - Title for the link&#xA;    array $options - Options for pagination link&#xA;    string $disabledTitle - Title when the link is disabled&#xA;    array $disabledOptions - Options for the disabled pagination link&#xA;&#xA;Return:&#xA;   A &quot;next&quot; link or $disabledTitle text if the link is disabled;;d113,305;;b1,0;;mstring $title;;parray $options;;pstring $disabledTitle;;parray $disabledOptions;;p">
					<treenode node="disabledOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f85;305;101;305;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="disabledTitle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f62;305;76;305;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f42;305;50;305;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f22;305;28;305;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="numbers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;712;2;826;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a set of numbers for the paged result set uses a modulus to decide how many numbers to show on each side of the current page (default: 8).&#xA;&#xA;Parameters:&#xA;    array|bool $options - Options for the numbers, (before, after, model, modulus, separator)&#xA;&#xA;Return:&#xA;   Numbers string;;d45,712;;b1,0;;marray|bool $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;712;33;712;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="options;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;159;2;186;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets default options for all pagination links&#xA;&#xA;Parameters:&#xA;    array|string $options - Default options for pagination links;;d45,159;;b1,0;;marray|string $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;159;33;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="param;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;143;2;149;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Convenience access to any of the paginator params.&#xA;&#xA;Parameters:&#xA;    string $key - Key of the paginator params array to retrieve&#xA;    string $model - Optional model name&#xA;&#xA;Return:&#xA;   Content of the requested param;;d44,143;;b1,0;;mstring $key;;pstring $model;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f23;143;27;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f29;143;35;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="params;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;125;2;133;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the current paging parameters from the resultset for the given model&#xA;&#xA;Parameters:&#xA;    string $model - Optional model name&#xA;&#xA;Return:&#xA;   |null The array of paging parameters for the paginated resultset;;d39,125;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f24;125;30;125;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prev;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;279;2;285;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a &quot;previous&quot; link for a set of paged records&#xA;&#xA;Parameters:&#xA;    string $title - Title for the link&#xA;    array $options - Options for pagination link&#xA;    string $disabledTitle - Title when the link is disabled&#xA;    array $disabledOptions - Options for the disabled pagination link&#xA;&#xA;Return:&#xA;   A &quot;previous&quot; link or $disabledTitle text if the link is disabled;;d117,279;;b1,0;;mstring $title;;parray $options;;pstring $disabledTitle;;parray $disabledOptions;;p">
					<treenode node="disabledOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f89;279;105;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="disabledTitle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f66;279;80;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f46;279;54;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f22;279;28;279;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;332;2;380;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a sorting link. Sets named parameters for the sort and direction. Handles direction switching automatically.&#xA;&#xA;Parameters:&#xA;    string $key - The name of the key that the recordset should be sorted&#xA;    string $title - Title for the link&#xA;    array $options - Options for sorting link&#xA;&#xA;Return:&#xA;   A link sorting default by 'asc';;d63,332;;b1,0;;mstring $key;;pstring $title;;parray $options;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f22;332;26;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f43;332;51;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f28;332;34;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortDir;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;239;2;259;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the current direction the recordset is sorted&#xA;&#xA;Parameters:&#xA;    string $model - Optional model name&#xA;    array $options - Options for pagination links&#xA;&#xA;Return:&#xA;   The direction by which the recordset is being sorted, or;;d60,239;;b1,0;;mstring $model;;parray $options;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;239;31;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f40;239;48;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;213;2;228;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the current key by which the recordset is sorted&#xA;&#xA;Parameters:&#xA;    string $model - Optional model name&#xA;    array $options - Options for pagination links&#xA;&#xA;Return:&#xA;   |null The name of the key by which the recordset is being sorted, or;;d60,213;;b1,0;;mstring $model;;parray $options;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f25;213;31;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f40;213;48;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="url;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;427;2;450;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Merges passed URL options with current pagination state to generate a pagination URL.&#xA;&#xA;Parameters:&#xA;    array $options - Pagination/URL options array&#xA;    bool $asArray - Return the URL as an array, or a URI string&#xA;    string $model - Which model to paginate on&#xA;&#xA;Return:&#xA;   By default, returns a full pagination URL string for use in non-standard contexts (i;;d74,427;;b1,0;;marray $options;;pbool $asArray;;pstring $model;;p">
					<treenode node="asArray;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f41;427;49;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f59;427;65;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f21;427;29;427;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_ajaxHelperClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f11;46;28;46;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;38;16;38;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Html;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f28;28;34;28;;;;vposHtmlHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php;f8;73;16;73;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f0;33;1;2888;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     PaginatorHelperTest class;;d47,33;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;40;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,40;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;78;2;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,78;;b1,0;;m">
				</treenode>
				<treenode node="testAjaxLinkGenerationLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2599;2;2606;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that paginatorHelper::link() uses JsHelper to make links when 'update' key is present;;d46,2599;;b1,0;;m">
				</treenode>
				<treenode node="testAjaxLinkGenerationNumbers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2585;2;2592;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that the internal link class object is called when the update key is present;;d49,2585;;b1,0;;m">
				</treenode>
				<treenode node="testCounter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2424;2;2472;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCounter method;;d31,2424;;b1,0;;m">
				</treenode>
				<treenode node="testCurrent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2712;2;2718;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the current() method;;d31,2712;;b1,0;;m">
				</treenode>
				<treenode node="testDisabledLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;112;2;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDisabledLink method;;d36,112;;b1,0;;m">
				</treenode>
				<treenode node="testFirstAndLastTag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2171;2;2194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test first() and last() with tag options;;d39,2171;;b1,0;;m">
				</treenode>
				<treenode node="testFirstBoundaries;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2251;2;2277;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test first() on the fence-post;;d39,2251;;b1,0;;m">
				</treenode>
				<treenode node="testFirstEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2215;2;2221;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test first() on the first page.;;d34,2215;;b1,0;;m">
				</treenode>
				<treenode node="testFirstFullBaseUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2228;2;2244;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test first() and options();;d40,2228;;b1,0;;m">
				</treenode>
				<treenode node="testGenericLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;1284;2;1310;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenericLinks method;;d36,1284;;b1,0;;m">
				</treenode>
				<treenode node="testGenericLinksWithPresetOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;1317;2;1347;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests generation of generic links with preset options;;d53,1317;;b1,0;;m">
				</treenode>
				<treenode node="testHasNext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;100;2;105;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHasNext method;;d31,100;;b1,0;;m">
				</treenode>
				<treenode node="testHasPage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2479;2;2491;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHasPage method;;d31,2479;;b1,0;;m">
				</treenode>
				<treenode node="testHasPrevious;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;88;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHasPrevious method;;d35,88;;b1,0;;m">
				</treenode>
				<treenode node="testLast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2308;2;2347;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test last() method;;d28,2308;;b1,0;;m">
				</treenode>
				<treenode node="testLastNoOutput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2201;2;2208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that on the last page you don't get a link ot the last page.;;d36,2201;;b1,0;;m">
				</treenode>
				<treenode node="testLastOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2354;2;2417;;;;vpos;;vvoid;;r&#xA;Description&#xA;     undocumented function;;d35,2354;;b1,0;;m">
				</treenode>
				<treenode node="testMetaPage0;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2788;2;2800;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify that no next and prev links are created for single page results;;d33,2788;;b1,0;;m">
				</treenode>
				<treenode node="testMetaPage1;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2807;2;2821;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify that page 1 only has a next link;;d33,2807;;b1,0;;m">
				</treenode>
				<treenode node="testMetaPage10Last;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2871;2;2886;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify that a page in the middle has both links;;d38,2871;;b1,0;;m">
				</treenode>
				<treenode node="testMetaPage1InlineFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2828;2;2843;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify that the method will append to a block;;d44,2828;;b1,0;;m">
				</treenode>
				<treenode node="testMetaPage1Last;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2850;2;2864;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify that the last page only has a prev link;;d37,2850;;b1,0;;m">
				</treenode>
				<treenode node="testMockAjaxProviderClassInjection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2614;2;2634;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that mock classes injected into paginatorHelper are called when using link();;d54,2614;;b1,0;;m">
				</treenode>
				<treenode node="testNextLinkUsingDotNotation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2548;2;2578;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNextLinkUsingDotNotation method;;d48,2548;;b1,0;;m">
				</treenode>
				<treenode node="testNoDefaultModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2725;2;2728;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the defaultModel() method;;d38,2725;;b1,0;;m">
				</treenode>
				<treenode node="testNumbers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;1354;2;2164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNumbers method;;d31,1354;;b1,0;;m">
				</treenode>
				<treenode node="testOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;698;2;738;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOptions method;;d31,698;;b1,0;;m">
				</treenode>
				<treenode node="testOptionsConvertKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2697;2;2705;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that additional keys can be flagged as query string args.;;d42,2697;;b1,0;;m">
				</treenode>
				<treenode node="testPagingLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;879;2;1185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPagingLinks method;;d35,879;;b1,0;;m">
				</treenode>
				<treenode node="testPagingLinksNotDefaultModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;1234;2;1277;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPagingLinksNotDefaultModel;;d50,1234;;b1,0;;m">
				</treenode>
				<treenode node="testPagingLinksOptionsReplaceEmptyDisabledOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;1193;2;1225;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that __pagingLink methods use $options when $disabledOptions is an empty value. allowing you to use shortcut syntax;;d69,1193;;b1,0;;m">
				</treenode>
				<treenode node="testParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2295;2;2301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test param() method;;d29,2295;;b1,0;;m">
				</treenode>
				<treenode node="testParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2284;2;2288;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test params() method;;d30,2284;;b1,0;;m">
				</treenode>
				<treenode node="testPassedArgsMergingWithUrlOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;745;2;805;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPassedArgsMergingWithUrlOptions method;;d55,745;;b1,0;;m">
				</treenode>
				<treenode node="testPassedArgsMergingWithUrlOptionsParamTypeQuerystring;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;812;2;872;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPassedArgsMergingWithUrlOptionsParamTypeQuerystring method;;d75,812;;b1,0;;m">
				</treenode>
				<treenode node="testQuerystringNextAndPrev;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2665;2;2690;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test query string paging link.;;d46,2665;;b1,0;;m">
				</treenode>
				<treenode node="testQuerystringUrlGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2641;2;2658;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that query string URLs can be generated.;;d48,2641;;b1,0;;m">
				</treenode>
				<treenode node="testSortAdminLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;553;2;596;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSortAdminLinks method;;d38,553;;b1,0;;m">
				</treenode>
				<treenode node="testSortDir;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;458;2;520;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSortDir method;;d31,458;;b1,0;;m">
				</treenode>
				<treenode node="testSortDirFallbackToParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;528;2;546;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that sortDir falls back to the default sorting options set in the $params which are the default pagination options.;;d47,528;;b1,0;;m">
				</treenode>
				<treenode node="testSortKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;413;2;427;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSortKey method;;d31,413;;b1,0;;m">
				</treenode>
				<treenode node="testSortKeyFallbackToParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;435;2;451;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that sortKey falls back to the default sorting options set in the $params which are the default pagination options.;;d47,435;;b1,0;;m">
				</treenode>
				<treenode node="testSortLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;132;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSortLinks method;;d33,132;;b1,0;;m">
				</treenode>
				<treenode node="testSortLinksUsingDirectionOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;331;2;356;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSortLinksUsingDirectionOption method;;d53,331;;b1,0;;m">
				</treenode>
				<treenode node="testSortLinksUsingDotNotation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;363;2;406;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSortLinksUsingDotNotation method;;d49,363;;b1,0;;m">
				</treenode>
				<treenode node="testSortLinksWithLockOption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;238;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSortLinksWithLockOption method;;d47,238;;b1,0;;m">
				</treenode>
				<treenode node="testSortLinkWithVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;285;2;324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that sort() works with virtual field order options.;;d48,285;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;603;2;627;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUrlGeneration method;;d37,603;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationWithPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;634;2;691;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test URL generation with prefix routes;;d49,634;;b1,0;;m">
				</treenode>
				<treenode node="testWithOnePage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2735;2;2753;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the numbers() method when there is only one page;;d35,2735;;b1,0;;m">
				</treenode>
				<treenode node="testWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2498;2;2541;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWithPlugin method;;d34,2498;;b1,0;;m">
				</treenode>
				<treenode node="testWithZeroPages;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php;f8;2760;2;2781;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the numbers() method when there is only one page;;d37,2760;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PaginatorTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f0;30;1;38;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     PaginatorTestController class;;d49,30;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php;f8;37;19;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ParamTestComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;26;1;34;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     ParamTestComponent;;d43,26;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;33;19;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Permission;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f0;23;1;256;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Permissions linking AROs with ACOs;;d34,23;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;57;2;63;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor, used to tell this model to use the database configured for ACL;;d31,57;;b1,0;;m">
				</treenode>
				<treenode node="allow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;170;2;208;;;;vpos;;vbool;;r&#xA;Description&#xA;     Allow $aro to have access to action $actions in $aco&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $actions - Action (defaults to *) Invalid permissions will result in an exception&#xA;    int $value - Value to indicate access type (1 to give access, -1 to deny, 0 to inherit)&#xA;&#xA;Return:&#xA;   Success;;d63,170;;b1,0;;mstring $aro;;pstring $aco;;pstring $actions;;pint $value;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f29;170;33;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="actions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f35;170;43;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f23;170;27;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f51;170;57;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;73;2;158;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the given $aro has access to action $action in $aco&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success (true if ARO has access to action in ACO, false otherwise);;d50,73;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f29;73;33;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f35;73;42;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f23;73;27;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAclLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;217;2;238;;;;vpos;;varray;;r&#xA;Description&#xA;     Get an array of access-control links between the given Aro and Aco&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;&#xA;Return:&#xA;   Indexed array with: 'aro', 'aco' and 'link';;d40,217;;b1,0;;mstring $aro;;pstring $aco;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f34;217;38;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f28;217;32;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAcoKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;246;2;255;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the crud type keys&#xA;&#xA;Parameters:&#xA;    array $keys - Permission schema&#xA;&#xA;Return:&#xA;   permission keys;;d35,246;;b1,0;;marray $keys;;p">
					<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f28;246;33;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;51;15;51;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;44;18;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;30;21;30;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php;f8;37;17;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PermissionTwoTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f0;110;1;146;;;;vpos;;vPermission;;c;;r&#xA;Description&#xA;     PermissionTwoTest class;;d43,110;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;145;15;145;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;138;18;138;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;131;21;131;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;117;13;117;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php;f8;124;17;124;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PersisterOne;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterOne.php;f0;23;1;60;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Class PersisterOne;;d36,23;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterOne.php;f8;27;15;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterOne.php;f8;29;16;29;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterOne.php;f8;25;17;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterOne.php;f8;31;17;31;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PersisterOneBehaviorBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Behavior\PersisterOneBehaviorBehavior.php;f0;26;1;27;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Behavior to allow for dynamic and atomic manipulation of a Model's associations used for a find call. Most useful for limiting the amount of associations and data returned.;;d57,26;;b0,0;;m">
			</treenode>
			<treenode node="PersisterTwo;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterTwo.php;f0;23;1;31;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Class PersisterTwo;;d36,23;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterTwo.php;f8;27;15;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterTwo.php;f8;29;16;29;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterTwo.php;f8;25;17;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PersisterTwoBehaviorBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Behavior\PersisterTwoBehaviorBehavior.php;f0;26;1;27;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Behavior to allow for dynamic and atomic manipulation of a Model's associations used for a find call. Most useful for limiting the amount of associations and data returned.;;d57,26;;b0,0;;m">
			</treenode>
			<treenode node="Person;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2307;1;2331;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Person class;;d35,2307;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2321;18;2321;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2314;13;2314;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PersonFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PersonFixture.php;f0;23;1;55;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class PersonFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PersonFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PersonFixture.php;f8;46;16;46;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpAcl;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f0;24;20;24;;;;vpos;;v;;r&#xA;Description&#xA;     PhpAcl implements an access control system using a plain PHP configuration file. An example file can be found in app/Config/acl.php;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="PhpAclTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f0;27;1;373;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case for the PhpAcl implementation;;d38,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;34;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="testAcoResolve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;311;2;325;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test resolving of ACOs;;d34,311;;b1,0;;m">
				</treenode>
				<treenode node="testAddRole;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;68;2;72;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test adding a role;;d31,68;;b1,0;;m">
				</treenode>
				<treenode node="testAllow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;220;2;235;;;;vpos;;vvoid;;r&#xA;Description&#xA;     allow should work in-memory;;d29,220;;b1,0;;m">
				</treenode>
				<treenode node="testAroAliases;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;105;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test correct resolution of defined aliases;;d34,105;;b1,0;;m">
				</treenode>
				<treenode node="testAroDeclarationContainsCycles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;332;2;350;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that declaring cyclic dependencies should give an error when building the tree;;d52,332;;b1,0;;m">
				</treenode>
				<treenode node="testAroResolve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;79;2;98;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test resolving ARO;;d34,79;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;157;2;201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test check method;;d29,157;;b1,0;;m">
				</treenode>
				<treenode node="testCheckIsCaseInsensitive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;208;2;213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     lhs of defined rules are case insensitive;;d46,208;;b1,0;;m">
				</treenode>
				<treenode node="testDeny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;242;2;251;;;;vpos;;vvoid;;r&#xA;Description&#xA;     deny should work in-memory;;d28,242;;b1,0;;m">
				</treenode>
				<treenode node="testDenyRuleIsStrongerThanAllowRule;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;258;2;277;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a deny rule wins over an equally specific allow rule;;d55,258;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidConfigWithAcosMissing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;293;2;304;;;;vpos;;v;;r;;d52,293;;b1,0;;m">
				</treenode>
				<treenode node="testInvalidConfigWithAroMissing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;284;2;291;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that an invalid configuration throws exception;;d51,284;;b1,0;;m">
				</treenode>
				<treenode node="testPolicy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;357;2;371;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that with policy allow, only denies count;;d30,357;;b1,0;;m">
				</treenode>
				<treenode node="testRoleInheritance;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php;f8;51;2;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test role inheritance;;d39,51;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpAco;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f0;200;1;359;;;;vpos;;v;;r&#xA;Description&#xA;     Access Control Object;;d13,200;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;223;2;231;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $rules - Rules array;;d53,223;;b1,0;;marray $rules;;p">
					<treenode node="rules;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f35;223;41;223;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="access;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;287;2;312;;;;vpos;;vvoid;;r&#xA;Description&#xA;     allow/deny ARO access to ARO&#xA;&#xA;Parameters:&#xA;    string $aro - ARO string&#xA;    string $aco - ACO string&#xA;    string $action - Action string&#xA;    string $type - access type;;d61,287;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;pstring $type;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f30;287;34;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f36;287;43;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f24;287;28;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f45;287;50;287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="build;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;339;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     build a tree representation from the given allow/deny informations for ACO paths&#xA;&#xA;Parameters:&#xA;    array $allow - ACO allow rules&#xA;    array $deny - ACO deny rules;;d60,339;;b1,0;;marray $allow;;parray $deny;;p">
					<treenode node="allow;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f29;339;35;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="deny;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f43;339;48;339;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="path;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;239;2;276;;;;vpos;;varray;;r&#xA;Description&#xA;     return path to the requested ACO with allow and deny rules attached on each level&#xA;&#xA;Parameters:&#xA;    string $aco - ACO string;;d28,239;;b1,0;;mstring $aco;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f22;239;26;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;320;2;330;;;;vpos;;varray;;r&#xA;Description&#xA;     resolve given ACO string to a path&#xA;&#xA;Parameters:&#xA;    string $aco - ACO string&#xA;&#xA;Return:&#xA;   path;;d31,320;;b1,0;;mstring $aco;;p">
					<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f25;320;29;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_tree;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f11;207;17;207;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="modifiers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f15;214;25;214;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="PhpAro;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f0;365;1;562;;;;vpos;;v;;r&#xA;Description&#xA;     Access Request Object;;d13,365;;b0,0;;m">
				<treenode node="DEFAULT_ROLE;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f6;373;19;373;;;;vposstring;;v;;r'Role/default';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;413;2;420;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $aro - The aro data&#xA;    array $map - The identifier mappings&#xA;    array $aliases - The aliases to map;;d99,413;;b1,0;;marray $aro;;parray $map;;parray $aliases;;p">
					<treenode node="aliases;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f79;413;87;413;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f35;413;39;413;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f57;413;61;413;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;547;2;549;;;;vpos;;vvoid;;r&#xA;Description&#xA;     adds one or more aliases to the internal map. Overwrites existing entries.&#xA;&#xA;Parameters:&#xA;    array $alias - alias from =&gt; to (e;;d40,547;;b1,0;;marray $alias;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f32;547;38;547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addRole;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;505;2;539;;;;vpos;;vvoid;;r&#xA;Description&#xA;     adds a new ARO to the tree&#xA;&#xA;Parameters:&#xA;    array $aro - one or more ARO records;;d37,505;;b1,0;;marray $aro;;p">
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f31;505;35;505;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="build;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;557;2;560;;;;vpos;;vvoid;;r&#xA;Description&#xA;     build an ARO tree structure for internal processing&#xA;&#xA;Parameters:&#xA;    array $aros - array of AROs as key and their inherited AROs as values;;d36,557;;b1,0;;marray $aros;;p">
					<treenode node="aros;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f29;557;34;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolve;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;458;2;497;;;;vpos;;vstring;;r&#xA;Description&#xA;     resolve an ARO identifier to an internal ARO string using the internal mapping information.&#xA;&#xA;Parameters:&#xA;    string|array $aro - ARO identifier (User&#xA;&#xA;Return:&#xA;   internal aro string (e;;d31,458;;b1,0;;mstring|array $aro;;p">
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f25;458;29;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="roles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;432;2;449;;;;vpos;;varray;;r&#xA;Description&#xA;     From the perspective of the given ARO, walk down the tree and collect all inherited AROs levelwise such that AROs from different branches with equal distance to the requested ARO will be collected at the same index. The resulting array will contain a prioritized list of (list of) roles ordered from the most distant AROs to the requested one itself.&#xA;&#xA;Parameters:&#xA;    string|array $aro - An ARO identifier&#xA;&#xA;Return:&#xA;   prioritized AROs;;d29,432;;b1,0;;mstring|array $aro;;p">
					<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f23;432;27;432;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_tree;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f11;404;17;404;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="aliases;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;397;16;397;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;387;12;387;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpReader;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f0;28;1;117;;;;vpos;;vConfigReaderInterface;;c;;r&#xA;Description&#xA;     PHP Reader allows Configure to load configuration values from files containing simple PHP arrays.;;d49,28;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f8;42;2;47;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor for PHP Config file reading.&#xA;&#xA;Parameters:&#xA;    string $path - The path to read config files from;;d43,42;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f29;42;34;42;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getFilePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f11;101;2;115;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get file path&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to write to&#xA;&#xA;Return:&#xA;   Full file path;;d39,101;;b2,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f33;101;37;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f8;87;2;92;;;;vpos;;vint;;r&#xA;Description&#xA;     Converts the provided $data into a string of PHP code that can be used saved into a file and loaded later.&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to write to&#xA;    array $data - Data to dump&#xA;&#xA;Return:&#xA;   Bytes saved;;d35,87;;b1,0;;mstring $key;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f28;87;33;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f22;87;26;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f8;61;2;76;;;;vpos;;varray;;r&#xA;Description&#xA;     Read a config file and return its contents.&#xA;&#xA;Parameters:&#xA;    string $key - The identifier to read from&#xA;&#xA;Return:&#xA;   Parsed configuration values;;d28,61;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f22;61;26;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php;f11;35;17;35;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PhpReaderTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f0;25;1;192;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class PhpReaderTest;;d41,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;52;2;55;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup.;;d25,52;;b1,0;;m">
				</treenode>
				<treenode node="testDump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;140;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test dumping data to PHP format.;;d28,140;;b1,0;;m">
				</treenode>
				<treenode node="testDumpRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;183;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that dump() makes files read() can read.;;d32,183;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;62;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading files.;;d28,62;;b1,0;;m">
				</treenode>
				<treenode node="testReadEmptyFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;100;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading an empty file.;;d37,100;;b1,0;;m">
				</treenode>
				<treenode node="testReadPluginValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;121;2;133;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading from plugins.;;d39,121;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithDots;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;111;2;114;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test reading keys with ../ doesn't work.;;d36,111;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithExistentFileWithoutExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;78;2;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test an exception is thrown by reading files that exist without .php extension.;;d60,78;;b1,0;;m">
				</treenode>
				<treenode node="testReadWithNonExistentFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;89;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test an exception is thrown by reading files that don't exist.;;d47,89;;b1,0;;m">
				</treenode>
				<treenode node="testData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php;f8;32;17;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Player;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4925;1;4934;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Player class;;d35,4925;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4927;28;4927;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PlayerFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PlayerFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class PlayerFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PlayerFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PlayerFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PluggedHelperHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Helper\PluggedHelperHelper.php;f0;23;1;26;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Class PluggedHelperHelper;;d44,23;;b0,0;;m">
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Helper\PluggedHelperHelper.php;f8;25;16;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PluginsComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\PluginsComponent.php;f0;23;1;27;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Class PluginsComponent;;d41,23;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\PluginsComponent.php;f8;25;19;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PluginShortRoute;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\PluginShortRoute.php;f0;23;1;58;;;;vpos;;vCakeRoute;;c;;r&#xA;Description&#xA;     Plugin short route, that copies the plugin param to the controller parameters It is used for supporting /:plugin routes.;;d41,23;;b0,0;;m">
				<treenode node="match;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\PluginShortRoute.php;f8;48;2;56;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Reverse route plugin shortcut URLs. If the plugin and controller are not the same the match is an auto fail.&#xA;&#xA;Parameters:&#xA;    array $url - Array of parameters to convert to a string&#xA;&#xA;Return:&#xA;   either false or a string URL;;d29,48;;b1,0;;marray $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\PluginShortRoute.php;f23;48;27;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\PluginShortRoute.php;f8;32;2;39;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Parses a string URL into an array. If a plugin key is found, it will be copied to the controller parameter&#xA;&#xA;Parameters:&#xA;    string $url - The URL to parse&#xA;&#xA;Return:&#xA;   false on failure, or an array of request parameters;;d29,32;;b1,0;;mstring $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\PluginShortRoute.php;f23;32;27;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="PluginShortRouteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\PluginShortRouteTest.php;f0;26;1;70;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     test case for PluginShortRoute;;d48,26;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\PluginShortRouteTest.php;f8;33;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="testMatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\PluginShortRouteTest.php;f8;61;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the reverse routing of the plugin shortcut URLs.;;d29,61;;b1,0;;m">
				</treenode>
				<treenode node="testParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\PluginShortRouteTest.php;f8;44;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the parsing of routes.;;d31,44;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PluginTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f0;26;1;237;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     The Plugin Task handles creating an empty plugin, ready to be used;;d34,26;;b0,0;;m">
				<treenode node="_interactive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f11;78;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Interactive interface&#xA;&#xA;Parameters:&#xA;    string $plugin - The plugin name;;d49,78;;b2,0;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f33;78;40;78;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_modifyBootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f11;180;2;188;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update the app's bootstrap.php file.&#xA;&#xA;Parameters:&#xA;    string $plugin - Name of plugin;;d46,180;;b2,0;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f37;180;44;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f8;94;2;172;;;;vpos;;vbool;;r&#xA;Description&#xA;     Bake the plugin, create directories and files&#xA;&#xA;Parameters:&#xA;    string $plugin - Name of the plugin in CamelCased format;;d31,94;;b1,0;;mstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f22;94;29;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f8;57;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Execution method always used for tasks;;d27,57;;b1,0;;m">
				</treenode>
				<treenode node="findPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f8;196;2;217;;;;vpos;;vvoid;;r&#xA;Description&#xA;     find and change $this-&gt;path to the user selection&#xA;&#xA;Parameters:&#xA;    array $pathOptions - The list of paths to look in;;d40,196;;b1,0;;marray $pathOptions;;p">
					<treenode node="pathOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f26;196;38;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f8;224;2;235;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,224;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f8;47;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     initialize;;d30,47;;b1,0;;m">
				</treenode>
				<treenode node="bootstrap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f8;40;18;40;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php;f8;33;13;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PluginTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php;f0;34;1;214;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     PluginTaskPlugin class;;d42,34;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php;f8;41;2;62;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,41;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php;f8;69;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown();;d28,69;;b1,0;;m">
				</treenode>
				<treenode node="testBakeFoldersAndFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php;f8;81;2;128;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake();;d43,81;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithNoArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php;f8;135;2;155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test execute with no args, flowing into interactive,;;d41,135;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithOneArg;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php;f8;162;2;184;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Execute;;d41,162;;b1,0;;m">
				</treenode>
				<treenode node="testFindPathNonExistant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php;f8;191;2;213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that findPath ignores paths that don't exist.;;d43,191;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Portfolio;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1579;1;1594;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Portfolio class;;d38,1579;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1593;28;1593;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1586;13;1586;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PortfolioFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PortfolioFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class PortfolioFixture;;d47,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PortfolioFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PortfolioFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Post;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Post.php;f0;23;1;27;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;921;1;958;;;;vpos;;vAppModel;;c;;r&#xA;Description&#xA;     Class Post;;d28,23;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;953;2;956;;;;vpos;;varray;;r&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    array $results&#xA;    bool $primary&#xA;&#xA;Return:&#xA;   results;;d55,953;;b1,0;;marray $results;;pbool $primary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;953;45;953;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;953;35;953;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;941;2;946;;;;vpos;;vbool;;r&#xA;Description&#xA;     &#xA;&#xA;Parameters:&#xA;    array $queryData&#xA;&#xA;Return:&#xA;   true;;d40,941;;b1,0;;marray $queryData;;p">
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f28;941;38;941;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;935;18;935;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;928;13;928;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Post.php;f8;25;17;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostFixture.php;f0;23;1;50;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Clas PostFixture;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Postgres;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f0;23;1;974;;;;vpos;;vDboSource;;c;;r&#xA;Description&#xA;     PostgreSQL layer for DBO.;;d33,23;;b0,0;;m">
				<treenode node="_alterIndexes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f11;611;2;644;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate PostgreSQL index alteration statements for a table.&#xA;&#xA;Parameters:&#xA;    string $table - Table to alter indexes for&#xA;    array $indexes - Indexes to add and drop&#xA;&#xA;Return:&#xA;   Index alteration statements;;d52,611;;b2,0;;mstring $table;;parray $indexes;;p">
					<treenode node="indexes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f42;611;50;611;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f34;611;40;611;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_quoteFunctionField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f11;442;2;459;;;;vpos;;vstring;;r&#xA;Description&#xA;     Auxiliary function to quote matched `(Model.fields)` from a preg_replace_callback call Quotes the fields in a function call.&#xA;&#xA;Parameters:&#xA;    string $match - matched string&#xA;&#xA;Return:&#xA;   quoted string;;d48,442;;b2,0;;mstring $match;;p">
					<treenode node="match;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f40;442;46;442;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="alterSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;506;2;602;;;;vpos;;varray;;r&#xA;Description&#xA;     Alter the Schema of a table.&#xA;&#xA;Parameters:&#xA;    array $compare - Results of CakeSchema::compare()&#xA;    string $table - name of the table;;d54,506;;b1,0;;marray $compare;;pstring $table;;p">
					<treenode node="compare;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f29;506;37;506;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f39;506;45;506;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="boolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;798;2;820;;;;vpos;;vbool;;r&#xA;Description&#xA;     Translates between PHP boolean values and PostgreSQL boolean values&#xA;&#xA;Parameters:&#xA;    mixed $data - Value to be translated&#xA;    bool $quote - true to quote a boolean to be used in a query, false to return the boolean value&#xA;&#xA;Return:&#xA;   Converted boolean value;;d48,798;;b1,0;;mmixed $data;;pbool $quote;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f25;798;30;798;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f32;798;38;798;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;853;2;890;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a Postgres-native column schema string&#xA;&#xA;Parameters:&#xA;    array $column - An array structured like the following:;;d38,853;;b1,0;;marray $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f29;853;36;853;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;899;2;922;;;;vpos;;vstring;;r&#xA;Description&#xA;     Format indexes for create table&#xA;&#xA;Parameters:&#xA;    array $indexes - The index to build&#xA;    string $table - The table name;;d53,899;;b1,0;;marray $indexes;;pstring $table;;p">
					<treenode node="indexes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f28;899;36;899;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f38;899;44;899;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="column;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;670;2;713;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts database-layer column types to basic types&#xA;&#xA;Parameters:&#xA;    string $real - Real database-layer column type (i&#xA;&#xA;Return:&#xA;   Abstract column type (i;;d31,670;;b1,0;;mstring $real;;p">
					<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f24;670;29;670;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;108;2;145;;;;vpos;;vbool;;r&#xA;Description&#xA;     Connects to the database using options in the given configuration array.&#xA;&#xA;Return:&#xA;   True if successfully connected;;d27,108;;b1,0;;m">
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;194;2;282;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of the fields in given table name.&#xA;&#xA;Parameters:&#xA;    Model|string $model - Name of database table to inspect&#xA;&#xA;Return:&#xA;   Fields in table;;d34,194;;b1,0;;mModel|string $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f26;194;32;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;152;2;154;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if PostgreSQL is enabled/loaded;;d27,152;;b1,0;;m">
				</treenode>
				<treenode node="fetchResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;766;2;789;;;;vpos;;varray;;r&#xA;Description&#xA;     Fetches the next row from the current result set;;d31,766;;b1,0;;m">
				</treenode>
				<treenode node="fields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;385;2;433;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates the fields list of an SQL query.&#xA;&#xA;Parameters:&#xA;    Model $model - The model to get fields for&#xA;    string $alias - Alias table name&#xA;    mixed $fields - The list of fields to get&#xA;    bool $quote - Whether or not to quote identifiers;;d87,385;;b1,0;;mModel $model;;pstring $alias;;pmixed $fields;;pbool $quote;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f38;385;44;385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f53;385;60;385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f30;385;36;385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f72;385;78;385;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;837;2;843;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the database encoding&#xA;&#xA;Return:&#xA;   The database encoding;;d31,837;;b1,0;;m">
				</treenode>
				<treenode node="getSchemaName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;961;2;963;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the schema name&#xA;&#xA;Return:&#xA;   The schema name;;d33,961;;b1,0;;m">
				</treenode>
				<treenode node="getSequence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;303;2;314;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the associated sequence for the given table/field&#xA;&#xA;Parameters:&#xA;    string|Model $table - Either a full table name (with prefix) as a string, or a model object&#xA;    string $field - Name of the ID database field&#xA;&#xA;Return:&#xA;   The associated sequence name from the sequence map, defaults to &quot;{$table}_{$field}_seq&quot;;;d52,303;;b1,0;;mstring|Model $table;;pstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f37;303;43;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f29;303;35;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;467;2;497;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of the indexes in given datasource name.&#xA;&#xA;Parameters:&#xA;    string $model - Name of model to inspect&#xA;&#xA;Return:&#xA;   Fields in table;;d31,467;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f23;467;29;467;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastInsertId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;291;2;294;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the ID generated from the previous INSERT operation.&#xA;&#xA;Parameters:&#xA;    string $source - Name of the database table&#xA;    string $field - Name of the ID database field;;d61,291;;b1,0;;mstring $source;;pstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f46;291;52;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f30;291;37;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="length;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;721;2;735;;;;vpos;;vint;;r&#xA;Description&#xA;     Gets the length of a database-native column description, or null if no length&#xA;&#xA;Parameters:&#xA;    string $real - Real database-layer column type (i&#xA;&#xA;Return:&#xA;   An integer representing the length of the column;;d31,721;;b1,0;;mstring $real;;p">
					<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f24;721;29;721;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="limit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;653;2;662;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a limit statement in the correct format for the particular database.&#xA;&#xA;Parameters:&#xA;    int $limit - Limit of results returned&#xA;    int $offset - Offset from which to start results&#xA;&#xA;Return:&#xA;   SQL limit/offset statement;;d47,653;;b1,0;;mint $limit;;pint $offset;;p">
					<treenode node="limit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f23;653;29;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f31;653;38;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;162;2;186;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of tables in the database. If there are no tables, an error is raised and the application exits.&#xA;&#xA;Parameters:&#xA;    mixed $data - The sources to list&#xA;&#xA;Return:&#xA;   Array of table names in the database;;d43,162;;b1,0;;mmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f29;162;34;162;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;369;2;374;;;;vpos;;vstring;;r&#xA;Description&#xA;     Prepares field names to be quoted by parent&#xA;&#xA;Parameters:&#xA;    string $data - The name to format&#xA;&#xA;Return:&#xA;   SQL field;;d29,369;;b1,0;;mstring $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f22;369;27;369;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedTransactionSupported;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;970;2;972;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the server support nested transactions;;d46,970;;b1,0;;m">
				</treenode>
				<treenode node="renderStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;931;2;954;;;;vpos;;vstring;;r&#xA;Description&#xA;     Overrides DboSource::renderStatement to handle schema generation with Postgres-style indexes&#xA;&#xA;Parameters:&#xA;    string $type - The query type&#xA;    array $data - The array of data to render;;d47,931;;b1,0;;mstring $type;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f40;931;45;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f33;931;38;931;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resetSequence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;325;2;333;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reset a sequence based on the MAX() value of $column. Useful for resetting sequences after using insertMulti().&#xA;&#xA;Parameters:&#xA;    string $table - The name of the table to update&#xA;    string $column - The column to use when resetting the sequence value,&#xA;&#xA;Return:&#xA;   success;;d48,325;;b1,0;;mstring $table;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f39;325;46;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f31;325;37;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resultSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;743;2;759;;;;vpos;;vvoid;;r&#xA;Description&#xA;     resultSet method&#xA;&#xA;Parameters:&#xA;    array - &amp;$results The results;;d38,743;;b1,0;;marray;;p">
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f28;743;36;743;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;828;2;830;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the database encoding&#xA;&#xA;Parameters:&#xA;    mixed $enc - Database encoding&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d35,828;;b1,0;;mmixed $enc;;p">
					<treenode node="enc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f29;828;33;828;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="truncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;343;2;361;;;;vpos;;vbool;;r&#xA;Description&#xA;     Deletes all the records in a table and drops all associated auto-increment sequences&#xA;&#xA;Parameters:&#xA;    string|Model $table - A string or model class representing the table to be truncated&#xA;    bool $reset - true for resetting the sequence, false to leave it as is&#xA;&#xA;Return:&#xA;   SQL TRUNCATE TABLE statement, false if not applicable;;d50,343;;b1,0;;mstring|Model $table;;pbool $reset;;p">
					<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f34;343;40;343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f26;343;32;343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_baseConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f11;37;23;37;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_sequenceMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f11;93;24;93;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_sqlOps;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f11;100;19;100;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="columns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;55;16;55;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;30;20;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="endQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;85;17;85;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="startQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php;f8;78;19;78;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostgresClientTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f0;145;1;169;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     PostgresClientTestModel class;;d44,145;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;159;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,159;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f24;159;30;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;152;17;152;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostgresTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f0;176;1;1202;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     PostgresTest class;;d40,176;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;215;2;222;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up a Dbo class instance for testing;;d25,215;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;229;2;233;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up a Dbo class instance for testing;;d28,229;;b1,0;;m">
				</treenode>
				<treenode node="testAlterIndexes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;774;2;842;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the alter index capabilities of postgres;;d36,774;;b1,0;;m">
				</treenode>
				<treenode node="testAlteringTwoTables;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;958;2;986;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test alterSchema on two tables.;;d41,958;;b1,0;;m">
				</treenode>
				<treenode node="testAlterSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;646;2;703;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the alterSchema capabilities of postgres;;d35,646;;b1,0;;m">
				</treenode>
				<treenode node="testAlterSchemaBooleanToIntegerField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;710;2;731;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the alterSchema changing boolean to integer;;d56,710;;b1,0;;m">
				</treenode>
				<treenode node="testAlterSchemaRenameTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;849;2;861;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the alterSchema RENAME statements;;d43,849;;b1,0;;m">
				</treenode>
				<treenode node="testAlterSchemaTextToIntegerField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;738;2;767;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the alterSchema changing text to integer;;d53,738;;b1,0;;m">
				</treenode>
				<treenode node="testBinaryDataIntegrity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;454;2;480;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that binary data is escaped/unescaped properly on reads and writes;;d43,454;;b1,0;;m">
				</treenode>
				<treenode node="testBooleanDefaultFalseInSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;404;2;410;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that default -&gt; false in schemas works correctly.;;d51,404;;b1,0;;m">
				</treenode>
				<treenode node="testBooleanNormalization;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;383;2;397;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that different Postgres boolean 'flavors' are properly returned as native PHP booleans;;d44,383;;b1,0;;m">
				</treenode>
				<treenode node="testCakeSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;534;2;576;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCakeSchema method;;d34,534;;b1,0;;m">
				</treenode>
				<treenode node="testCakeSchemaBigserial;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;585;2;608;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCakeSchemaBegserial method;;d43,585;;b1,0;;m">
				</treenode>
				<treenode node="testColumnParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;291;2;306;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testColumnParsing method;;d37,291;;b1,0;;m">
				</treenode>
				<treenode node="testColumnUseLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;439;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that column types without default lengths in $columns do not have length values applied when generating schemas.;;d39,439;;b1,0;;m">
				</treenode>
				<treenode node="testDateAndTimeAsNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;364;2;376;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that date and time columns do not generate errors with null and nullish values.;;d41,364;;b1,0;;m">
				</treenode>
				<treenode node="testDescribeTimestamp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;1162;2;1200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test describe() behavior for timestamp columns.;;d41,1162;;b1,0;;m">
				</treenode>
				<treenode node="testDescribeUuid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;1142;2;1155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that postgres describes UUID columns correctly.;;d36,1142;;b1,0;;m">
				</treenode>
				<treenode node="testEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;993;2;1005;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test encoding setting.;;d32,993;;b1,0;;m">
				</treenode>
				<treenode node="testFieldQuoting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;240;2;284;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test field quoting method;;d36,240;;b1,0;;m">
				</treenode>
				<treenode node="testIndexGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;615;2;639;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test index generation from table info.;;d39,615;;b1,0;;m">
				</treenode>
				<treenode node="testLastInsertIdMultipleInsert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;417;2;431;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLastInsertIdMultipleInsert method;;d50,417;;b1,0;;m">
				</treenode>
				<treenode node="testLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;1117;2;1135;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the limit function.;;d29,1117;;b1,0;;m">
				</treenode>
				<treenode node="testLocalizedFloats;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;345;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that localized floats don't cause trouble.;;d39,345;;b1,0;;m">
				</treenode>
				<treenode node="testNestedTransaction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;1045;2;1072;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test nested transaction;;d41,1045;;b1,0;;m">
				</treenode>
				<treenode node="testOrderAdditionalParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;908;2;912;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests additional order options for postgres;;d45,908;;b1,0;;m">
				</treenode>
				<treenode node="testQuoteDistinctInFunction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;920;2;934;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test it is possible to do a SELECT COUNT(DISTINCT Model.field) query in postgres and it gets correctly quoted;;d47,920;;b1,0;;m">
				</treenode>
				<treenode node="testRegexpOperatorConditionsParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;487;2;492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests passing PostgreSQL regular expression operators when building queries;;d55,487;;b1,0;;m">
				</treenode>
				<treenode node="testResetSequence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;1074;2;1094;;;;vpos;;v;;r;;d37,1074;;b1,0;;m">
				</treenode>
				<treenode node="testSchemaIndexSyntax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;499;2;524;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the syntax of generated schema indexes;;d41,499;;b1,0;;m">
				</treenode>
				<treenode node="testSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;1096;2;1110;;;;vpos;;v;;r;;d32,1096;;b1,0;;m">
				</treenode>
				<treenode node="testTruncateStatements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;1012;2;1038;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test truncate with a mock.;;d42,1012;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateAllWithNonQualifiedConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;941;2;951;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that saveAll works even with conditions that lack a model name.;;d59,941;;b1,0;;m">
				</treenode>
				<treenode node="testValueQuoting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;313;2;338;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValueQuoting method;;d36,313;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldAsAConstant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;889;2;901;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that virtual fields work with SQL constants;;d47,889;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;868;2;882;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test it is possible to use virtual field with postgresql;;d37,868;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;184;21;184;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Dbo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;201;12;201;;;;vposDboSource;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Dbo2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;208;13;208;;;;vposDboSource;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;191;17;191;;;;vposobject;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostgresTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f0;64;1;138;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     PostgresTestModel class;;d38,64;;b0,0;;m">
				<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;93;2;95;;;;vpos;;vvoid;;r&#xA;Description&#xA;     find method&#xA;&#xA;Parameters:&#xA;    mixed $conditions&#xA;    mixed $fields&#xA;    mixed $order&#xA;    mixed $recursive;;d92,93;;b1,0;;mmixed $conditions;;pmixed $fields;;pmixed $order;;pmixed $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f22;93;33;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f42;93;49;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f58;93;64;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f73;93;83;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;106;2;108;;;;vpos;;vvoid;;r&#xA;Description&#xA;     findAll method&#xA;&#xA;Parameters:&#xA;    mixed $conditions&#xA;    mixed $fields&#xA;    mixed $order&#xA;    mixed $recursive;;d95,106;;b1,0;;mmixed $conditions;;pmixed $fields;;pmixed $order;;pmixed $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f25;106;36;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f45;106;52;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f61;106;67;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f76;106;86;106;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;115;2;136;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,115;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f24;115;30;115;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;78;18;78;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php;f8;71;17;71;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f1;71;2;83;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     Class PostsController;;d45,71;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php;f9;78;20;78;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PostsTagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostsTagFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class PostsTagFixture;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostsTagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostsTagFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PrefixTestFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrefixTestFixture.php;f0;23;1;31;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     PrefixTestFixture;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrefixTestFixture.php;f8;27;15;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrefixTestFixture.php;f8;25;14;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PrefixTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4785;1;4786;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Test model for datasource prefixes;;d44,4785;;b0,0;;m">
			</treenode>
			<treenode node="PrefixTestUseTableModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4788;1;4794;;;;vpos;;vCakeTestModel;;c;;r;;d52,4788;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4790;13;4790;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4792;17;4792;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PrimaryModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1826;1;1834;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     PrimaryModel class;;d41,1826;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1833;13;1833;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PrimaryModelFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrimaryModelFixture.php;f0;23;1;43;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class PrimaryModelFixture;;d50,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrimaryModelFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrimaryModelFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PrivateActionException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;293;1;303;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Private Action exception - used when a controller action starts with a  `_`.;;d51,293;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;298;2;300;;;;vpos;;v;;r;;d80,298;;b1,0;;mmessage;;pcode;;pprevious;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f39;298;44;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;298;37;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="previous;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f62;298;71;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_messageTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f11;295;28;295;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Product;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2353;1;2361;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Product class;;d36,2353;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2360;13;2360;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ProductFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductFixture.php;f0;23;1;52;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ProductFixture;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ProductUpdateAll;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3505;1;3511;;;;vpos;;vCakeTestModel;;c;;r;;d45,3505;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3507;13;3507;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3509;17;3509;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ProductUpdateAllFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductUpdateAllFixture.php;f0;23;1;61;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ProductUpdateAllFixture;;d54,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductUpdateAllFixture.php;f8;27;15;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductUpdateAllFixture.php;f8;35;16;35;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductUpdateAllFixture.php;f8;25;14;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Project;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1028;1;1043;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Project class;;d36,1028;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1042;16;1042;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1035;13;1035;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ProjectFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProjectFixture.php;f0;23;1;45;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ProjectFixture;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProjectFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProjectFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ProjectTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f0;28;1;452;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Task class for creating new project apps and plugins;;d35,28;;b0,0;;m">
				<treenode node="_replaceCorePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f11;336;2;355;;;;vpos;;vbool;;r&#xA;Description&#xA;     Replaces the __CAKE_PATH__ placeholder in the template files.&#xA;&#xA;Parameters:&#xA;    string $filename - The filename to operate on&#xA;    bool $hardCode - Whether or not the define should be uncommented&#xA;&#xA;Return:&#xA;   Success;;d59,336;;b2,0;;mstring $filename;;pbool $hardCode;;p">
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f37;336;46;336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hardCode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f48;336;57;336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;166;2;226;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Looks for a skeleton template of a Cake application, and if not found asks the user for a path. When there is a path this method will make a deep copy of the skeleton to the project directory.&#xA;&#xA;Parameters:&#xA;    string $path - Project path&#xA;    string $skel - Path to copy from&#xA;    string $skip - array of directories to skip when copying;;d67,166;;b1,0;;mstring $path;;pstring $skel;;pstring $skip;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f22;166;27;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="skel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f29;166;34;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="skip;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f43;166;48;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cachePrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;297;2;306;;;;vpos;;vbool;;r&#xA;Description&#xA;     Writes cache prefix using app's name&#xA;&#xA;Parameters:&#xA;    string $dir - Path to project&#xA;&#xA;Return:&#xA;   Success;;d35,297;;b1,0;;mstring $dir;;p">
					<treenode node="dir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f29;297;33;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cakeAdmin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;363;2;375;;;;vpos;;vbool;;r&#xA;Description&#xA;     Enables Configure::read('Routing.prefixes') in /app/Config/core.php&#xA;&#xA;Parameters:&#xA;    string $name - Name to use as admin routing&#xA;&#xA;Return:&#xA;   Success;;d34,363;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f27;363;32;363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cakeOnIncludePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;146;2;154;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks PHP's include_path for CakePHP.&#xA;&#xA;Return:&#xA;   Indicates whether or not CakePHP exists on include_path;;d37,146;;b1,0;;m">
				</treenode>
				<treenode node="consolePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;235;2;248;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generates the correct path to the CakePHP libs that are generating the project and points app/console/cake.php to the right place&#xA;&#xA;Parameters:&#xA;    string $path - Project path&#xA;&#xA;Return:&#xA;   success;;d36,235;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f29;235;34;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="corePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;315;2;327;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generates and writes CAKE_CORE_INCLUDE_PATH&#xA;&#xA;Parameters:&#xA;    string $path - Project path&#xA;    bool $hardCode - Whether or not define calls should be hardcoded&#xA;&#xA;Return:&#xA;   Success;;d51,315;;b1,0;;mstring $path;;pbool $hardCode;;p">
					<treenode node="hardCode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f33;315;42;315;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f26;315;31;315;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;43;2;139;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Checks that given project path does not already exist, and finds the app directory in it. Then it calls bake() with that information.;;d27,43;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;430;2;450;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,430;;b1,0;;m">
				</treenode>
				<treenode node="getPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;382;2;423;;;;vpos;;vstring;;r&#xA;Description&#xA;     Checks for Configure::read('Routing.prefixes') and forces user to input it if not enabled&#xA;&#xA;Return:&#xA;   Admin route to use;;d29,382;;b1,0;;m">
				</treenode>
				<treenode node="securityCipherSeed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;276;2;289;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generates and writes 'Security.cipherSeed'&#xA;&#xA;Parameters:&#xA;    string $path - Project path&#xA;&#xA;Return:&#xA;   Success;;d43,276;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f36;276;41;276;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="securitySalt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;256;2;268;;;;vpos;;vbool;;r&#xA;Description&#xA;     Generates and writes 'Security.salt'&#xA;&#xA;Parameters:&#xA;    string $path - Project path&#xA;&#xA;Return:&#xA;   Success;;d37,256;;b1,0;;mstring $path;;p">
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f30;256;35;256;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php;f8;35;19;35;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ProjectTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f0;33;1;385;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ProjectTask Test class;;d43,33;;b0,0;;m">
				<treenode node="_setupTestProject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f11;70;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     creates a test project that is used for testing project task.;;d40,70;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;40;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,40;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;57;2;63;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,57;;b1,0;;m">
				</treenode>
				<treenode node="testBake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;81;2;128;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake() method and directory creation.;;d28,81;;b1,0;;m">
				</treenode>
				<treenode node="testBakeEmptyFlag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;182;2;214;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake() method with -empty flag,  directory creation and empty files.;;d37,182;;b1,0;;m">
				</treenode>
				<treenode node="testCachePrefixGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;255;2;266;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generation of cache prefix;;d45,255;;b1,0;;m">
				</treenode>
				<treenode node="testCakeAdmin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;314;2;327;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test cakeAdmin() writing core.php;;d33,314;;b1,0;;m">
				</treenode>
				<treenode node="testConsolePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;374;2;384;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test console path;;d35,374;;b1,0;;m">
				</treenode>
				<treenode node="testExecute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;349;2;367;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test execute method with one param to destination folder.;;d31,349;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithAbsolutePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;135;2;148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake with an absolute path.;;d47,135;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithCakeOnIncludePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;155;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake with CakePHP on the include path. The constants should remain commented out.;;d52,155;;b1,0;;m">
				</treenode>
				<treenode node="testGetPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;292;2;307;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getPrefix method, and that it returns Routing.prefix or writes to config file.;;d33,292;;b1,0;;m">
				</treenode>
				<treenode node="testGetPrefixWithMultiplePrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;334;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the prefix with more than one prefix setup;;d53,334;;b1,0;;m">
				</treenode>
				<treenode node="testIndexPhpGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;273;2;285;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that index.php is generated correctly.;;d42,273;;b1,0;;m">
				</treenode>
				<treenode node="testSecurityCipherSeedGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;238;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generation of Security.cipherSeed;;d52,238;;b1,0;;m">
				</treenode>
				<treenode node="testSecuritySaltGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php;f8;221;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generation of Security.salt;;d46,221;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="PrototypeEngineHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f0;31;1;368;;;;vpos;;vJsBaseEngineHelper;;c;;r&#xA;Description&#xA;     Prototype Engine Helper for JsHelper;;d55,31;;b0,0;;m">
				<treenode node="domReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;167;2;170;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a domReady event. This is a special event in many libraries&#xA;&#xA;Parameters:&#xA;    string $functionBody - The code to run on domReady&#xA;&#xA;Return:&#xA;   completed domReady method;;d41,167;;b1,0;;mstring $functionBody;;p">
					<treenode node="functionBody;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f26;167;39;167;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;289;2;298;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a Draggable element.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the draggable&#xA;&#xA;Return:&#xA;   Completed draggable script;;d42,289;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f22;289;30;289;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="drop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;309;2;315;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a Droppable element.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the droppable&#xA;&#xA;Return:&#xA;   Completed droppable script;;d42,309;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f22;309;30;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="each;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;178;2;180;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create an iteration over the current selection result.&#xA;&#xA;Parameters:&#xA;    string $callback - The function body you wish to apply during the iteration&#xA;&#xA;Return:&#xA;   completed iteration;;d33,178;;b1,0;;mstring $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f22;178;31;178;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="effect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;192;2;225;;;;vpos;;vstring;;r&#xA;Description&#xA;     Trigger an Effect.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the effect to trigger&#xA;    array $options - Array of options for the effect&#xA;&#xA;Return:&#xA;   completed string with effect;;d51,192;;b1,0;;mstring $name;;parray $options;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f24;192;29;192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f31;192;39;192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="event;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;146;2;159;;;;vpos;;vstring;;r&#xA;Description&#xA;     Add an event to the script cache. Operates on the currently selected elements.&#xA;&#xA;Parameters:&#xA;    string $type - Type of event to bind to the current 946 id&#xA;    string $callback - The JavaScript function you wish to trigger or the function literal&#xA;    array $options - Options for the event&#xA;&#xA;Return:&#xA;   completed event handler;;d61,146;;b1,0;;mstring $type;;pstring $callback;;parray $options;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f30;146;39;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f41;146;49;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f23;146;28;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;118;2;131;;;;vpos;;v;;r&#xA;Description&#xA;     Create javascript selector for a CSS rule&#xA;&#xA;Parameters:&#xA;    string $selector - The selector that is targeted;;d32,118;;b1,0;;mstring $selector;;p">
					<treenode node="selector;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f21;118;30;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;234;2;258;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create an Ajax or Ajax.Updater call.&#xA;&#xA;Parameters:&#xA;    string|array $url - URL&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   The completed ajax call;;d51,234;;b1,0;;mstring|array $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f31;234;39;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f25;234;29;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;355;2;366;;;;vpos;;vstring;;r&#xA;Description&#xA;     Serialize the form attached to $selector.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   Completed serializeForm() snippet;;d51,355;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f31;355;39;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="slider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;326;2;346;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a slider control widget.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the slider&#xA;&#xA;Return:&#xA;   Completed slider script;;d44,326;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f24;326;32;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f8;272;2;278;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a sortable element.&#xA;&#xA;Parameters:&#xA;    array $options - Array of options for the sortable&#xA;&#xA;Return:&#xA;   Completed sortable script;;d46,272;;b1,0;;marray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f26;272;34;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_callbackArguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f11;83;30;83;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_multiple;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f11;38;21;38;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_optionMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php;f11;45;22;45;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="PrototypeEngineHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f0;27;1;389;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class PrototypeEngineHelperTest;;d53,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;34;2;39;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;46;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,46;;b1,0;;m">
				</treenode>
				<treenode node="testDomReady;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;107;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test dom ready event creation;;d32,107;;b1,0;;m">
				</treenode>
				<treenode node="testDrag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;294;2;316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test drag() method. Scriptaculous lacks the ability to take an Array of Elements in new Drag() when selection is a multiple type. Iterate over the array.;;d28,294;;b1,0;;m">
				</treenode>
				<treenode node="testDrop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;323;2;333;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test drop() method;;d28,323;;b1,0;;m">
				</treenode>
				<treenode node="testEach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;118;2;123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Each method;;d28,118;;b1,0;;m">
				</treenode>
				<treenode node="testEffect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;130;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Effect generation;;d30,130;;b1,0;;m">
				</treenode>
				<treenode node="testEvent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;87;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test event binding;;d29,87;;b1,0;;m">
				</treenode>
				<treenode node="testRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;186;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Request Generation;;d31,186;;b1,0;;m">
				</treenode>
				<treenode node="testSelector;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;56;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test selector method;;d32,56;;b1,0;;m">
				</treenode>
				<treenode node="testSerializeForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;371;2;388;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the serializeForm implementation.;;d37,371;;b1,0;;m">
				</treenode>
				<treenode node="testSlider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;340;2;364;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ensure that slider() method behaves properly;;d30,340;;b1,0;;m">
				</treenode>
				<treenode node="testSortable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php;f8;277;2;286;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sortable list generation;;d32,277;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RedirectRoute;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f0;26;1;124;;;;vpos;;vCakeRoute;;c;;r&#xA;Description&#xA;     Redirect route will perform an immediate redirect. Redirect routes are useful when you want to have Routing layer redirects occur in your application, for when URLs move.;;d38,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f8;56;2;59;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $template - Template string with parameter placeholders&#xA;    array $defaults - Array of defaults for the route&#xA;    array $options - Array of additional options for the Route;;d81,56;;b1,0;;mstring $template;;parray $defaults;;parray $options;;p">
					<treenode node="defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f40;56;49;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f61;56;69;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f29;56;38;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_stop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f11;118;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Stop execution of the current script. Wraps exit() making testing easier.&#xA;&#xA;Parameters:&#xA;    int|string $code - See http://php;;d37,118;;b2,0;;mint|string $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f26;118;31;118;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="match;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f8;107;2;109;;;;vpos;;vmixed;;r&#xA;Description&#xA;     There is no reverse routing redirection routes&#xA;&#xA;Parameters:&#xA;    array $url - Array of parameters to convert to a string&#xA;&#xA;Return:&#xA;   either false or a string URL;;d29,107;;b1,0;;marray $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f23;107;27;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f8;68;2;99;;;;vpos;;vbool;;r&#xA;Description&#xA;     Parses a string URL into an array. Parsed URLs will result in an automatic redirection&#xA;&#xA;Parameters:&#xA;    string $url - The URL to parse&#xA;&#xA;Return:&#xA;   False on failure;;d29,68;;b1,0;;mstring $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f23;68;27;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirect;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f8;40;17;40;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f8;33;17;33;;;;vposCakeResponse;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="stop;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php;f8;47;13;47;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RedirectRouteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\RedirectRouteTest.php;f0;27;1;121;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     test case for RedirectRoute;;d45,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\RedirectRouteTest.php;f8;34;2;38;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="testParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\RedirectRouteTest.php;f8;45;2;119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the parsing of routes.;;d31,45;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RedisEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f0;23;1;229;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     Redis storage engine for cache.;;d38,23;;b0,0;;m">
				<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;224;2;228;;;;vpos;;v;;r&#xA;Description&#xA;     Disconnects from the redis server;;d30,224;;b1,0;;m">
				</treenode>
				<treenode node="_connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f11;80;2;101;;;;vpos;;vbool;;r&#xA;Description&#xA;     Connects to a Redis server&#xA;&#xA;Return:&#xA;   True if Redis server was connected;;d31,80;;b2,0;;m">
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;180;2;188;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache&#xA;&#xA;Parameters:&#xA;    bool $check - Whether or not expiration keys should be checked&#xA;&#xA;Return:&#xA;   True if the cache was successfully cleared, false otherwise;;d31,180;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f23;180;29;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;217;2;219;;;;vpos;;vbool;;r&#xA;Description&#xA;     Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.&#xA;&#xA;Parameters:&#xA;    string $group - The group name to clear&#xA;&#xA;Return:&#xA;   success;;d36,217;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f28;217;34;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;159;2;161;;;;vpos;;vNew;;r&#xA;Description&#xA;     Decrements the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;&#xA;Return:&#xA;   decremented value, false otherwise;;d46,159;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f27;159;31;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f33;159;40;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;169;2;171;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d30,169;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f24;169;28;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;197;2;208;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the `group value` for each of the configured groups If the group initial value was not found, then it initializes the group accordingly.;;d26,197;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;147;2;149;;;;vpos;;vNew;;r&#xA;Description&#xA;     Increments the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to increment&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d46,147;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f27;147;31;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f33;147;40;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;55;2;73;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the Cache Engine&#xA;&#xA;Parameters:&#xA;    array $settings - array of setting for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,55;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f22;55;31;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;128;2;137;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d28,128;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f22;128;26;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;111;2;120;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into cache.&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached&#xA;    int $duration - How long to cache the data, in seconds&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d48,111;;b1,0;;mstring $key;;pmixed $value;;pint $duration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f37;111;46;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f23;111;27;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f29;111;35;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Redis;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f11;30;18;30;;;;vposRedis;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php;f8;44;17;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RedisEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f0;26;1;383;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     RedisEngineTest class;;d43,26;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;33;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,33;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;51;2;58;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,51;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;276;2;295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test clearing redis.;;d29,276;;b1,0;;m">
				</treenode>
				<treenode node="testConnect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;89;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnect method;;d31,89;;b1,0;;m">
				</treenode>
				<treenode node="testDecrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;233;2;249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecrement method;;d33,233;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;219;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCache method;;d35,219;;b1,0;;m">
				</treenode>
				<treenode node="testExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;171;2;212;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExpiry method;;d30,171;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;367;2;381;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test clearing a cache group;;d34,367;;b1,0;;m">
				</treenode>
				<treenode node="testGroupDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;349;2;360;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deleteing from a groups-enabled config is possible;;d35,349;;b1,0;;m">
				</treenode>
				<treenode node="testGroupReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;318;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that configuring groups for stored keys return the correct values when read/written Shows that altering the group value is equivalent to deleting all keys under the same group;;d38,318;;b1,0;;m">
				</treenode>
				<treenode node="testIncrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;256;2;269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIncrement method;;d33,256;;b1,0;;m">
				</treenode>
				<treenode node="testMultiDatabaseOperations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;99;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultiDatabaseOperations method;;d47,99;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;144;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteCache method;;d41,144;;b1,0;;m">
				</treenode>
				<treenode node="testSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;65;2;82;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSettings method;;d32,65;;b1,0;;m">
				</treenode>
				<treenode node="testZeroDuration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php;f8;302;2;309;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a 0 duration can successfully write.;;d36,302;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RegisterArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;40;1;41;;;;vpos;;vClassRegisterModel;;c;;r&#xA;Description&#xA;     RegisterArticle class;;d49,40;;b0,0;;m">
			</treenode>
			<treenode node="RegisterArticleFeatured;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;48;1;49;;;;vpos;;vClassRegisterModel;;c;;r&#xA;Description&#xA;     RegisterArticleFeatured class;;d57,48;;b0,0;;m">
			</treenode>
			<treenode node="RegisterArticleTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;56;1;57;;;;vpos;;vClassRegisterModel;;c;;r&#xA;Description&#xA;     RegisterArticleTag class;;d52,56;;b0,0;;m">
			</treenode>
			<treenode node="RegisterCategory;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;87;1;88;;;;vpos;;vClassRegisterModel;;c;;r&#xA;Description&#xA;     RegisterCategory class;;d50,87;;b0,0;;m">
			</treenode>
			<treenode node="RegisterPrefixedDs;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;94;1;102;;;;vpos;;vClassRegisterModel;;c;;r&#xA;Description&#xA;     RegisterPrefixedDs class;;d52,94;;b0,0;;m">
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;101;20;101;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RegistryPluginAppModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;64;1;72;;;;vpos;;vClassRegisterModel;;c;;r&#xA;Description&#xA;     RegistryPluginAppModel class;;d56,64;;b0,0;;m">
				<treenode node="tablePrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f8;71;20;71;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RequestActionController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f0;43;1;127;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     RequestActionController class;;d49,43;;b0,0;;m">
				<treenode node="another_ra_test;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;68;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     another_ra_test method&#xA;&#xA;Parameters:&#xA;    mixed $id&#xA;    mixed $other;;d46,68;;b1,0;;mmixed $id;;pmixed $other;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f33;68;36;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="other;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f38;68;44;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normal_request_action;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;77;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     normal_request_action method;;d41,77;;b1,0;;m">
				</treenode>
				<treenode node="paginate_request_action;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;95;2;98;;;;vpos;;vvoid;;r&#xA;Description&#xA;     paginate_request_action method;;d43,95;;b1,0;;m">
				</treenode>
				<treenode node="param_check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;118;2;125;;;;vpos;;v;;r;;d31,118;;b1,0;;m">
				</treenode>
				<treenode node="params_pass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;114;2;116;;;;vpos;;varray;;r&#xA;Description&#xA;     test param passing and parsing.;;d31,114;;b1,0;;m">
				</treenode>
				<treenode node="post_pass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;105;2;107;;;;vpos;;varray;;r&#xA;Description&#xA;     post pass, testing post passing;;d29,105;;b1,0;;m">
				</treenode>
				<treenode node="return_here;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;86;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     returns $this-&gt;here;;d31,86;;b1,0;;m">
				</treenode>
				<treenode node="test_request_action;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;57;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test_request_action method;;d39,57;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;50;13;50;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RequestActionPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f0;28;1;36;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     RequestActionPost class;;d46,28;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;35;17;35;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RequestHandlerComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f0;36;1;782;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Request object for handling alternative HTTP requests;;d48,36;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;109;2;116;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor. Parses the accepted content types accepted by the client using HTTP_ACCEPT&#xA;&#xA;Parameters:&#xA;    ComponentCollection $collection - ComponentCollection object&#xA;    array $settings - Array of settings;;d83,109;;b1,0;;mComponentCollection $collection;;parray $settings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f49;109;60;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f62;109;71;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f11;155;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the extension based on the accept headers. Compares the accepted types and configured extensions. If there is one common type, that is assigned as the ext/content type for the response. Type with the highest weight will be set. If the highest weight has more then one type matching the extensions, the order in which extensions are specified determines which type will be set.;;d36,155;;b2,0;;m">
				</treenode>
				<treenode node="accepts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;478;2;497;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Determines which content types the client accepts. Acceptance is based on the file extension parsed by the Router (if present), and by the HTTP_ACCEPT header. Unlike CakeRequest::accepts() this method deals entirely with mapped content types.&#xA;&#xA;Parameters:&#xA;    string|array $type - Can be null (or no parameter), a string type name, or an&#xA;&#xA;Return:&#xA;   If null or no parameter is passed, returns an array of content;;d39,478;;b1,0;;mstring|array $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f25;478;30;478;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="addInputType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;754;2;759;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add a new mapped input type. Mapped input types are automatically converted by RequestHandlerComponent during the startup() callback.&#xA;&#xA;Parameters:&#xA;    string $type - The type alias being converted, ie&#xA;    array $handler - The handler array for the type;;d47,754;;b1,0;;mstring $type;;parray $handler;;p">
					<treenode node="handler;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f37;754;45;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f30;754;35;754;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;251;2;273;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Handles (fakes) redirects for Ajax requests using requestAction() Modifies the $_POST and $_SERVER['REQUEST_METHOD'] to simulate a new GET request.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the controller&#xA;    string|array $url - A string or array containing the redirect location&#xA;    int|array $status - HTTP Status for redirect&#xA;    bool $exit - Whether to exit script, defaults to `true`;;d92,251;;b1,0;;mController $controller;;pstring|array $url;;pint|array $status;;pbool $exit;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f43;251;54;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f78;251;83;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f62;251;69;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f56;251;60;251;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;284;2;288;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if the response can be considered different according to the request headers, and the caching response headers. If it was not modified, then the render process is skipped. And the client will get a blank response with a &quot;304 Not Modified&quot; header.&#xA;&#xA;Parameters:&#xA;    Controller $controller - Controller instance&#xA;&#xA;Return:&#xA;   false if the render process should be aborted;;d54,284;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f41;284;52;284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="convertXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;229;2;239;;;;vpos;;varray;;r&#xA;Description&#xA;     Helper method to parse xml input data, due to lack of anonymous functions this lives here.&#xA;&#xA;Parameters:&#xA;    string $xml - XML string&#xA;&#xA;Return:&#xA;   Xml array data;;d34,229;;b1,0;;mstring $xml;;p">
					<treenode node="xml;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f28;229;32;229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getAjaxVersion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;412;2;415;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets Prototype version if call is Ajax, otherwise empty string. The Prototype library sets a special &quot;Prototype version&quot; HTTP header.&#xA;&#xA;Return:&#xA;   |bool When Ajax the prototype version of component making the call otherwise false;;d34,412;;b1,0;;m">
				</treenode>
				<treenode node="getClientIP;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;451;2;453;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets remote client IP&#xA;&#xA;Parameters:&#xA;    bool $safe - Use safe = false when you think the user might manipulate&#xA;&#xA;Return:&#xA;   Client IP address;;d43,451;;b1,0;;mbool $safe;;p">
					<treenode node="safe;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f29;451;34;451;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getReferer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;439;2;441;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the server name from which this request was referred&#xA;&#xA;Return:&#xA;   Server address;;d30,439;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;128;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Checks to see if a file extension has been parsed by the Router, or if the HTTP_ACCEPT_TYPE has matches only one content type with the supported extensions. If there is only one matching type between the supported content types &amp; extensions, and the requested mime-types, RequestHandler::$ext is set to that value.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the controller;;d52,128;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f39;128;50;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isAjax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;296;2;298;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current HTTP request is Ajax, false otherwise&#xA;&#xA;Return:&#xA;   True if call is Ajax;;d26,296;;b1,0;;m">
				</treenode>
				<treenode node="isAtom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;343;2;345;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current call accepts an Atom response, false otherwise&#xA;&#xA;Return:&#xA;   True if client accepts an RSS response;;d26,343;;b1,0;;m">
				</treenode>
				<treenode node="isDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;402;2;404;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current call a DELETE request&#xA;&#xA;Return:&#xA;   True if call is a DELETE;;d28,402;;b1,0;;m">
				</treenode>
				<treenode node="isFlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;306;2;308;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current HTTP request is coming from a Flash-based client&#xA;&#xA;Return:&#xA;   True if call is from Flash;;d27,306;;b1,0;;m">
				</treenode>
				<treenode node="isGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;392;2;394;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current call a GET request&#xA;&#xA;Return:&#xA;   True if call is a GET;;d25,392;;b1,0;;m">
				</treenode>
				<treenode node="isMobile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;353;2;355;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if user agent string matches a mobile web browser, or if the client accepts WAP content.&#xA;&#xA;Return:&#xA;   True if user agent is a mobile web browser;;d28,353;;b1,0;;m">
				</treenode>
				<treenode node="isPost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;372;2;374;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current call a POST request&#xA;&#xA;Return:&#xA;   True if call is a POST;;d26,372;;b1,0;;m">
				</treenode>
				<treenode node="isPut;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;382;2;384;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current call a PUT request&#xA;&#xA;Return:&#xA;   True if call is a PUT;;d25,382;;b1,0;;m">
				</treenode>
				<treenode node="isRss;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;334;2;336;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current call accepts an RSS response, false otherwise&#xA;&#xA;Return:&#xA;   True if client accepts an RSS response;;d25,334;;b1,0;;m">
				</treenode>
				<treenode node="isSSL;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;316;2;318;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current request is over HTTPS, false otherwise.&#xA;&#xA;Return:&#xA;   True if call is over HTTPS;;d25,316;;b1,0;;m">
				</treenode>
				<treenode node="isWap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;362;2;364;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the client accepts WAP content;;d25,362;;b1,0;;m">
				</treenode>
				<treenode node="isXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;325;2;327;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the current call accepts an XML response, false otherwise&#xA;&#xA;Return:&#xA;   True if client accepts an XML response;;d25,325;;b1,0;;m">
				</treenode>
				<treenode node="mapAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;729;2;741;;;;vpos;;vstring;;r&#xA;Description&#xA;     Maps a content type alias back to its mime-type(s)&#xA;&#xA;Parameters:&#xA;    string|array $alias - String alias to convert back into a content type&#xA;&#xA;Return:&#xA;   |null Null on an undefined alias;;d34,729;;b1,0;;mstring|array $alias;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f26;729;32;729;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;718;2;720;;;;vpos;;vstring;;r&#xA;Description&#xA;     Maps a content-type back to an alias&#xA;&#xA;Parameters:&#xA;    string|array $cType - Either a string content type to map, or an array of types&#xA;&#xA;Return:&#xA;   |array Aliases for the types provided;;d33,718;;b1,0;;mstring|array $cType;;p">
					<treenode node="cType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f25;718;31;718;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="prefers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;549;2;578;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Determines which content-types the client prefers. If no parameters are given, the single content-type that the client most likely prefers is returned. If $type is an array, the first item in the array that the client accepts is returned. Preference is determined primarily by the file extension parsed by the Router if provided, and secondarily by the list of content-types provided in HTTP_ACCEPT.&#xA;&#xA;Parameters:&#xA;    string|array $type - An optional array of 'friendly' content-type names, i&#xA;&#xA;Return:&#xA;   If $type is null or not provided, the first content-type in the;;d39,549;;b1,0;;mstring|array $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f25;549;30;549;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renderAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;600;2;651;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the layout and template paths for the content type defined by $type.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to a controller object&#xA;    string $type - Type of response to send (e&#xA;    array $options - Array of options to use;;d77,600;;b1,0;;mController $controller;;pstring $type;;parray $options;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f37;600;48;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f57;600;65;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f50;600;55;600;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="requestedWith;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;507;2;530;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Determines the content type of the data the client has sent (i.e. in a POST request)&#xA;&#xA;Parameters:&#xA;    string|array $type - Can be null (or no parameter), a string type name, or an array of types&#xA;&#xA;Return:&#xA;   If a single type is supplied a boolean will be returned;;d45,507;;b1,0;;mstring|array $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f31;507;36;507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="respondAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;666;2;699;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the response header based on type map index name. This wraps several methods available on CakeResponse. It also allows you to use Content-Type aliases.&#xA;&#xA;Parameters:&#xA;    string|array $type - Friendly type name, i&#xA;    array $options - If $type is a friendly type name that is associated with&#xA;&#xA;Return:&#xA;   Returns false if the friendly type name given in $type does;;d54,666;;b1,0;;mstring|array $type;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f34;666;42;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f27;666;32;666;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="responseType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;707;2;709;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the current response type (Content-type header), or null if not alias exists&#xA;&#xA;Return:&#xA;   A string content type alias, or raw content type if no alias map exists,;;d32,707;;b1,0;;m">
				</treenode>
				<treenode node="setContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;429;2;431;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Adds/sets the Content-type(s) for the given name. This method allows content-types to be mapped to friendly aliases (or extensions), which allows RequestHandler to automatically respond to requests of that type in the startup method.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the Content-type, i&#xA;    string|array $type - The Content-type or array of Content-types assigned to the name,;;d49,429;;b1,0;;mstring $name;;pstring|array $type;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f28;429;33;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f35;429;40;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;199;2;220;;;;vpos;;vvoid;;r&#xA;Description&#xA;     The startup method of the RequestHandler enables several automatic behaviors related to the detection of certain properties of the HTTP request, including:&#xA;&#xA;Parameters:&#xA;    Controller $controller - A reference to the controller;;d49,199;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f36;199;47;199;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="viewClassMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;768;2;780;;;;vpos;;varray;;r&#xA;Description&#xA;     Getter/setter for viewClassMap&#xA;&#xA;Parameters:&#xA;    array|string $type - The type string or array with format `array('type' =&gt; 'viewClass')` to map one or more&#xA;    array $viewClass - The viewClass to be used for the type without `View` appended&#xA;&#xA;Return:&#xA;   |string Returns viewClass when only string $type is set, else array with viewClassMap;;d63,768;;b1,0;;marray|string $type;;parray $viewClass;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f30;768;35;768;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="viewClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f44;768;54;768;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_inputTypeMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f11;88;25;88;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_renderType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f11;80;23;80;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_viewClassMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f11;98;25;98;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="ajaxLayout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;44;19;44;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="enabled;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;51;16;51;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="ext;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;73;12;73;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;58;16;58;;;;vposCakeRequest;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php;f8;65;17;65;;;;vposCakeResponse;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RequestHandlerComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f0;87;1;969;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     RequestHandlerComponentTest class;;d55,87;;b0,0;;m">
				<treenode node="_init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f11;118;2;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     init method;;d28,118;;b2,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;108;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,108;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;132;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,132;;b1,0;;m">
				</treenode>
				<treenode node="testAccepts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;732;2;739;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test accepts() on the component;;d31,732;;b1,0;;m">
				</treenode>
				<treenode node="testAddInputTypeException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;910;2;912;;;;vpos;;vvoid;;r&#xA;Description&#xA;      expectedException CakeException;;d45,910;;b1,0;;m">
				</treenode>
				<treenode node="testAjaxRedirectAsRequestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;800;2;821;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that ajax requests involving redirects trigger requestAction instead.;;d51,800;;b1,0;;m">
				</treenode>
				<treenode node="testAjaxRedirectAsRequestActionStillRenderingLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;829;2;851;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that ajax requests involving redirects don't force no layout this would cause the ajax layout to not be rendered.;;d71,829;;b1,0;;m">
				</treenode>
				<treenode node="testAjaxRedirectWithNoUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;440;2;450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that redirects with ajax and no URL don't do anything.;;d45,440;;b1,0;;m">
				</treenode>
				<treenode node="testAutoAjaxLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;359;2;371;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutoAjaxLayout method;;d38,359;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeRedirectCallbackWithArrayUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;861;2;881;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the beforeRedirect callback properly converts array URLs into their correct string ones, and adds base =&gt; false so the correct URLs are generated.;;d58,861;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeRedirectCallingHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;888;2;904;;;;vpos;;vvoid;;r&#xA;Description&#xA;     assure that beforeRedirect with a status code will correctly set the status header;;d51,888;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagAndTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;947;2;956;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d53,947;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagExact;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;933;2;940;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d51,933;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedByEtagStar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;919;2;926;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d50,919;;b1,0;;m">
				</treenode>
				<treenode node="testCheckNotModifiedNoInfo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;963;2;968;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test checkNotModified method;;d46,963;;b1,0;;m">
				</treenode>
				<treenode node="testClientProperties;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;784;2;793;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClientProperties method;;d40,784;;b1,0;;m">
				</treenode>
				<treenode node="testConstructorSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;146;2;156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the constructor sets the settings.;;d43,146;;b1,0;;m">
				</treenode>
				<treenode node="testCustomContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;772;2;777;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustomContent method;;d37,772;;b1,0;;m">
				</treenode>
				<treenode node="testDisabling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;345;2;352;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDisabling method;;d33,345;;b1,0;;m">
				</treenode>
				<treenode node="testFlashDetection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;574;2;582;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the detection of various Flash versions;;d38,574;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeAmbiguousAndroidAccepts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;270;2;277;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that ext is not set with confusing android accepts headers.;;d57,270;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;163;2;168;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInitializeCallback method;;d42,163;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeContentTypeAndExtensionMismatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;297;2;311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that a type mismatch doesn't incorrectly set the ext;;d65,297;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeContentTypeSettingExt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;175;2;183;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a mapped Accept-type header will set $this-&gt;ext correctly.;;d55,175;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeContentTypeWithjQueryAccept;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;190;2;197;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that RequestHandler sets $this-&gt;ext when jQuery sends its wonky-ish headers.;;d61,190;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeContentTypeWithjQueryAcceptAndMultiplesExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;205;2;212;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that RequestHandler sets $this-&gt;ext when jQuery sends its wonky-ish headers and the application is configured to handle multiple extensions;;d83,205;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeContentTypeWithMultipleAcceptedTypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;256;2;263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that ext is set to type with highest weight;;d70,256;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeNoContentTypeWithMultipleAcceptedTypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;236;2;249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that ext is set to the first listed extension with multiple accepted content types. Having multiple types accepted with same weight, means the client lets the server choose the returned content type.;;d72,236;;b1,0;;m">
				</treenode>
				<treenode node="testInitializeNoContentTypeWithSingleAccept;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;219;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that RequestHandler does not set $this-&gt;ext when multiple accepts are sent.;;d63,219;;b1,0;;m">
				</treenode>
				<treenode node="testInititalizeFirefoxHeaderNotXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;284;2;290;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the headers sent by firefox are not treated as XML requests.;;d54,284;;b1,0;;m">
				</treenode>
				<treenode node="testMapAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;712;2;725;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that map alias converts aliases to content types.;;d32,712;;b1,0;;m">
				</treenode>
				<treenode node="testMobileDeviceDetection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;652;2;660;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMobileDeviceDetection method;;d45,652;;b1,0;;m">
				</treenode>
				<treenode node="testNonAjaxRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;429;2;433;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNonAjaxRedirect method;;d39,429;;b1,0;;m">
				</treenode>
				<treenode node="testPrefers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;746;2;765;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test accepts and prefers methods.;;d31,746;;b1,0;;m">
				</treenode>
				<treenode node="testRenderAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;457;2;465;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRenderAs method;;d32,457;;b1,0;;m">
				</treenode>
				<treenode node="testRenderAsCalledTwice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;545;2;554;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that calling renderAs() more than once continues to work.;;d43,545;;b1,0;;m">
				</treenode>
				<treenode node="testRenderAsWithAttachment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;472;2;492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that attachment headers work with renderAs;;d46,472;;b1,0;;m">
				</treenode>
				<treenode node="testRequestClientTypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;561;2;567;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestClientTypes method;;d42,561;;b1,0;;m">
				</treenode>
				<treenode node="testRequestContentTypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;589;2;634;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestContentTypes method;;d43,589;;b1,0;;m">
				</treenode>
				<treenode node="testRequestMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;682;2;705;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestMethod method;;d37,682;;b1,0;;m">
				</treenode>
				<treenode node="testRequestProperties;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;667;2;675;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestProperties method;;d41,667;;b1,0;;m">
				</treenode>
				<treenode node="testRespondAs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;499;2;510;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that respondAs works as expected.;;d33,499;;b1,0;;m">
				</treenode>
				<treenode node="testRespondAsWithAttachment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;517;2;537;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that attachment headers work with respondAs;;d47,517;;b1,0;;m">
				</treenode>
				<treenode node="testResponseContentType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;641;2;645;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testResponseContentType method;;d43,641;;b1,0;;m">
				</treenode>
				<treenode node="testStartupCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;378;2;385;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStartupCallback method;;d39,378;;b1,0;;m">
				</treenode>
				<treenode node="testStartupCallbackCharset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;392;2;399;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStartupCallback with charset.;;d46,392;;b1,0;;m">
				</treenode>
				<treenode node="testStartupCustomTypeProcess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;406;2;422;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test mapping a new type and having startup process it.;;d48,406;;b1,0;;m">
				</treenode>
				<treenode node="testViewClassMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;318;2;338;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testViewClassMap method;;d36,318;;b1,0;;m">
				</treenode>
				<treenode node="Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;94;19;94;;;;vposRequestHandlerTestController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="RequestHandler;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;101;23;101;;;;vposRequestHandlerComponent;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RequestHandlerTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f0;30;1;71;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     RequestHandlerTestController class;;d54,30;;b0,0;;m">
				<treenode node="ajax2_layout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;64;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test method for testing layout rendering when isAjax();;d32,64;;b1,0;;m">
				</treenode>
				<treenode node="destination;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;44;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test method for ajax redirection;;d31,44;;b1,0;;m">
				</treenode>
				<treenode node="param_method;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;54;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test method for ajax redirection + parameter parsing;;d56,54;;b1,0;;mone;;ptwo;;p">
					<treenode node="one;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f30;54;34;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f43;54;47;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php;f8;37;13;37;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Router;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f0;40;1;1268;;;;vpos;;v;;r&#xA;Description&#xA;     Parses the request URL into controller, action, and parameters. Uses the connected routes to match the incoming URL string to parameters that will allow the request to be dispatched. Also handles converting parameter lists into URL strings, using the connected routes. Routing allows you to decouple the way the world interacts with your application (URLs) and the implementation (controllers and actions).;;d13,40;;b0,0;;m">
				<treenode node="ACTION;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f6;91;13;91;;;;vposstring;;v;;r'index|show|add|create|edit|update|remove|del|delete|view|item';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="DAY;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f6;112;10;112;;;;vposstring;;v;;r'0[1-9]|[12][0-9]|3[01]';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="ID;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f6;119;9;119;;;;vposstring;;v;;r'[0-9]+';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="MONTH;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f6;105;12;105;;;;vposstring;;v;;r'0[1-9]|1[012]';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="UUID;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f6;126;11;126;;;;vposstring;;v;;r'[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="YEAR;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f6;98;11;98;;;;vposstring;;v;;r'[12][0-9]{3}';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="_handleNoRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;985;2;1047;;;;vpos;;vstring;;r&#xA;Description&#xA;     A special fallback method that handles URL arrays that cannot match any defined routes.&#xA;&#xA;Parameters:&#xA;    array $url - A URL that didn't match any routes&#xA;&#xA;Return:&#xA;   A generated URL for the array;;d48,985;;b2,5;;marray $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f42;985;46;985;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;1263;2;1266;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Loads route configuration;;d41,1263;;b2,5;;m">
				</treenode>
				<treenode node="_parseExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;637;2;658;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses a file extension out of a URL, if Router::parseExtensions() is enabled.&#xA;&#xA;Parameters:&#xA;    string $url - URL&#xA;&#xA;Return:&#xA;   Returns an array containing the altered URL and the parsed extension;;d49,637;;b2,5;;mstring $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f43;637;47;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;242;2;247;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the Routing prefixes.;;d42,242;;b2,5;;m">
				</treenode>
				<treenode node="_validateRouteClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;228;2;235;;;;vpos;;vstring;;r&#xA;Description&#xA;     Validates that the passed route class exists and is a subclass of CakeRoute&#xA;&#xA;Parameters:&#xA;    string $routeClass - Route class name;;d60,228;;b2,5;;mstring $routeClass;;p">
					<treenode node="routeClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f47;228;58;228;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;343;2;378;;;;vpos;;varray;;r&#xA;Description&#xA;     Connects a new Route in the router.&#xA;&#xA;Parameters:&#xA;    string $route - A string describing the template of the route&#xA;    array $defaults - An array describing the default route parameters&#xA;    array $options - An array matching the named elements in the route to regular expressions which that&#xA;&#xA;Return:&#xA;   Array of routes;;d81,343;;b1,5;;mstring $route;;parray $defaults;;parray $options;;p">
					<treenode node="defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f40;343;49;343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f61;343;69;343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f32;343;38;343;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connectNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;473;2;503;;;;vpos;;varray;;r&#xA;Description&#xA;     Specifies what named parameters CakePHP should be parsing out of incoming URLs. By default CakePHP will parse every named parameter out of incoming URLs. However, if you want to take more control over how named parameters are parsed you can use one of the following setups:&#xA;&#xA;Parameters:&#xA;    array $named - A list of named parameters&#xA;    array $options - Allows to control all settings: separator, greedy, reset, default;;d65,473;;b1,5;;marray $named;;parray $options;;p">
					<treenode node="named;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f37;473;43;473;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f45;473;53;473;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="currentRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1173;2;1176;;;;vpos;;vCakeRoute;;r&#xA;Description&#xA;     Returns the route matching the current request (useful for requestAction traces)&#xA;&#xA;Return:&#xA;   Matching route object;;d39,1173;;b1,5;;m">
				</treenode>
				<treenode node="defaultRouteClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;213;2;219;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Set the default route class to use or return the current one&#xA;&#xA;Parameters:&#xA;    string $routeClass - to set as default&#xA;&#xA;Return:&#xA;   void|string;;d62,213;;b1,5;;mstring $routeClass;;p">
					<treenode node="routeClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f42;213;53;213;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1231;2;1237;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the list of extensions that can be parsed by Router.&#xA;&#xA;Return:&#xA;   Array of extensions Router is configured to parse;;d37,1231;;b1,5;;m">
				</treenode>
				<treenode node="fullBaseUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;966;2;975;;;;vpos;;vstring;;r&#xA;Description&#xA;     Sets the full base URL that will be used as a prefix for generating fully qualified URLs for this application. If no parameters are passed, the currently configured value is returned.&#xA;&#xA;Parameters:&#xA;    string $base - the prefix for URLs generated containing the domain;;d50,966;;b1,5;;mstring $base;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f36;966;41;966;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getNamedExpressions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;255;2;257;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the named route elements for use in app/Config/routes.php&#xA;&#xA;Return:&#xA;   Named route elements;;d46,255;;b1,5;;m">
				</treenode>
				<treenode node="getParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;734;2;740;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets URL parameter by name&#xA;&#xA;Parameters:&#xA;    string $name - Parameter name&#xA;    bool $current - Current parameter, useful when using requestAction&#xA;&#xA;Return:&#xA;   |null Parameter value;;d73,734;;b1,5;;mstring $name;;pbool $current;;p">
					<treenode node="current;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f55;734;63;734;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f33;734;38;734;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;717;2;725;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets parameter information&#xA;&#xA;Parameters:&#xA;    bool $current - Get current request parameter, useful when using requestAction&#xA;&#xA;Return:&#xA;   Parameter information;;d52,717;;b1,5;;mbool $current;;p">
					<treenode node="current;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f34;717;42;717;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;748;2;756;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets path information&#xA;&#xA;Parameters:&#xA;    bool $current - Current parameter, useful when using requestAction;;d51,748;;b1,5;;mbool $current;;p">
					<treenode node="current;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f33;748;41;748;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;703;2;709;;;;vpos;;vCakeRequest;;r&#xA;Description&#xA;     Gets the current request object, or the first one.&#xA;&#xA;Parameters:&#xA;    bool $current - True to get the current request object, or false to get the first one&#xA;&#xA;Return:&#xA;   |null Null if stack is empty;;d53,703;;b1,5;;mbool $current;;p">
					<treenode node="current;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f35;703;43;703;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapResources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;530;2;575;;;;vpos;;varray;;r&#xA;Description&#xA;     Creates REST resource routes for the given controller(s). When creating resource routes for a plugin, by default the prefix will be changed to the lower_underscore version of the plugin name. By providing a prefix you can override this behavior.&#xA;&#xA;Parameters:&#xA;    string|array $controller - A controller name or array of controller names (i&#xA;    array $options - Options to use when generating REST routes&#xA;&#xA;Return:&#xA;   Array of mapped resources;;d70,530;;b1,5;;mstring|array $controller;;parray $options;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f37;530;48;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f50;530;58;530;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="namedConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;511;2;513;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the current named parameter configuration values.;;d38,511;;b1,5;;m">
				</treenode>
				<treenode node="normalize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1134;2;1157;;;;vpos;;vstring;;r&#xA;Description&#xA;     Normalizes a URL for purposes of comparison.&#xA;&#xA;Parameters:&#xA;    array|string $url - URL to normalize Either an array or a string URL&#xA;&#xA;Return:&#xA;   Normalized URL;;d46,1134;;b1,5;;marray|string $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f34;1134;38;1134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;592;2;629;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses given URL string. Returns 'routing' parameters for that URL.&#xA;&#xA;Parameters:&#xA;    string $url - URL to be parsed&#xA;&#xA;Return:&#xA;   Parsed elements from URL;;d36,592;;b1,5;;mstring $url;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f30;592;34;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1216;2;1221;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Instructs the router to parse out file extensions from the URL.;;d42,1216;;b1,5;;m">
				</treenode>
				<treenode node="popRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;693;2;695;;;;vpos;;vCakeRequest;;r&#xA;Description&#xA;     Pops a request off of the request stack. Used when doing requestAction&#xA;&#xA;Return:&#xA;   The request removed from the stack;;d37,693;;b1,5;;m">
				</treenode>
				<treenode node="prefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;582;2;584;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the list of prefixes used in connected routes&#xA;&#xA;Return:&#xA;   A list of prefixes used in connected routes;;d35,582;;b1,5;;m">
				</treenode>
				<treenode node="promote;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;785;2;796;;;;vpos;;vbool;;r&#xA;Description&#xA;     Promote a route (by default, the last one added) to the beginning of the list&#xA;&#xA;Parameters:&#xA;    int $which - A zero-based array index representing the route to move&#xA;&#xA;Return:&#xA;   Returns false if no route exists at the position specified by $which;;d47,785;;b1,5;;mint $which;;p">
					<treenode node="which;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f32;785;38;785;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="queryString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1058;2;1086;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates a well-formed querystring from $q&#xA;&#xA;Parameters:&#xA;    string|array $q - Query string Either a string of already compiled query string arguments or&#xA;    array $extra - Extra querystring parameters&#xA;    bool $escape - Whether or not to use escaped &amp;;;d75,1058;;b1,5;;mstring|array $q;;parray $extra;;pbool $escape;;p">
					<treenode node="escape;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f58;1058;65;1058;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extra;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f40;1058;46;1058;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="q;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f36;1058;38;1058;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;412;2;419;;;;vpos;;varray;;r&#xA;Description&#xA;     Connects a new redirection Route in the router.&#xA;&#xA;Parameters:&#xA;    string $route - A string describing the template of the route&#xA;    array $url - A URL to redirect to&#xA;    array $options - An array matching the named elements in the route to regular expressions which that&#xA;&#xA;Return:&#xA;   Array of routes;;d67,412;;b1,5;;mstring $route;;parray $url;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f47;412;55;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="route;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f33;412;39;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f41;412;45;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;764;2;776;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Reloads default Router settings. Resets all class variables and removes all connected routes.;;d33,764;;b1,5;;m">
				</treenode>
				<treenode node="requestRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1164;2;1166;;;;vpos;;vCakeRoute;;r&#xA;Description&#xA;     Returns the route matching the current request URL.&#xA;&#xA;Return:&#xA;   Matching route object;;d39,1164;;b1,5;;m">
				</treenode>
				<treenode node="resourceMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;266;2;271;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Resource map getter &amp; setter.&#xA;&#xA;Parameters:&#xA;    array $resourceMap - Resource map;;d57,266;;b1,5;;marray $resourceMap;;p">
					<treenode node="resourceMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f36;266;48;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reverse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1103;2;1123;;;;vpos;;vstring;;r&#xA;Description&#xA;     Reverses a parsed parameter array into a string.&#xA;&#xA;Parameters:&#xA;    CakeRequest|array $params - The params array or CakeRequest object that needs to be reversed&#xA;    bool $full - Set to true to include the full URL including the protocol when reversing&#xA;&#xA;Return:&#xA;   The string that is the reversed result of the array;;d56,1103;;b1,5;;mCakeRequest|array $params;;pbool $full;;p">
					<treenode node="full;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f41;1103;46;1103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f32;1103;39;1103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1248;2;1256;;;;vpos;;varray;;r&#xA;Description&#xA;     Set/add valid extensions.&#xA;&#xA;Parameters:&#xA;    array $extensions - List of extensions to be added as valid extension&#xA;    bool $merge - Default true will merge extensions;;d66,1248;;b1,5;;marray $extensions;;pbool $merge;;p">
					<treenode node="extensions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f38;1248;49;1248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f51;1248;57;1248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setRequestInfo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;674;2;684;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Takes parameter and path information back from the Dispatcher, sets these parameters as the current request parameters that are merged with URL arrays created later in the request.&#xA;&#xA;Parameters:&#xA;    CakeRequest|array $request - Parameters and path information or a CakeRequest object;;d49,674;;b1,5;;mCakeRequest|array $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f39;674;47;674;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;1185;2;1197;;;;vpos;;vstring;;r&#xA;Description&#xA;     Removes the plugin name from the base URL.&#xA;&#xA;Parameters:&#xA;    string $base - Base URL&#xA;    string $plugin - Plugin name&#xA;&#xA;Return:&#xA;   base URL with plugin name removed if present;;d59,1185;;b1,5;;mstring $base;;pstring $plugin;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f36;1185;41;1185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f43;1185;50;1185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="url;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;827;2;949;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds URL for specified action.&#xA;&#xA;Parameters:&#xA;    string|array $url - Cake-relative URL, like &quot;/products/edit/92&quot; or &quot;/presidents/elect/4&quot;&#xA;    bool|array $full - If (bool) true, the full base URL will be prepended to the result&#xA;&#xA;Return:&#xA;   Full translated URL with base path;;d56,827;;b1,5;;mstring|array $url;;pbool|array $full;;p">
					<treenode node="full;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f41;827;46;827;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f28;827;32;827;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_currentRoute;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;159;32;159;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_fullBaseUrl;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;62;31;62;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_initialState;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;197;32;197;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_namedConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;147;31;147;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_namedExpressions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;133;36;133;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_parseExtensions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;77;35;77;;;;vposbool;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_prefixes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;70;28;70;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_requests;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;188;28;188;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_resourceMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;166;31;166;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_resourceMapped;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;180;34;180;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_routeClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;204;30;204;;;;vposstring;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="_validExtensions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f18;84;35;84;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="initialized;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;54;27;54;;;;vposbool;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="routes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php;f15;47;22;47;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="RouterException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;528;1;529;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for Router. This exception will be thrown from Router when it encounters an error.;;d44,528;;b0,0;;m">
			</treenode>
			<treenode node="RouterTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f0;30;1;2861;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     RouterTest class;;d38,30;;b0,0;;m">
				<treenode node="parseReverseSymmetryData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1269;2;1279;;;;vpos;;varray;;r&#xA;Description&#xA;     Data for parse and reverse test;;d44,1269;;b1,0;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;37;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,37;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;47;2;52;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,47;;b1,0;;m">
				</treenode>
				<treenode node="testArrayNamedParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;542;2;591;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests using arrays in named parameters;;d44,542;;b1,0;;m">
				</treenode>
				<treenode node="testAutoPrefixRoutePersistence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1797;2;1821;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that auto-generated prefix routes persist;;d50,1797;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;71;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the base URL can be changed at runtime.;;d31,71;;b1,0;;m">
				</treenode>
				<treenode node="testBaseUrlWithBasePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;87;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Router uses App.base to build URL's when there are no stored request objects.;;d43,87;;b1,0;;m">
				</treenode>
				<treenode node="testCanLeavePlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;962;2;996;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that you can leave active plugin routes with plugin = null;;d38,962;;b1,0;;m">
				</treenode>
				<treenode node="testConnectDefaultRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2374;2;2404;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the required default routes are connected.;;d44,2374;;b1,0;;m">
				</treenode>
				<treenode node="testConnectNamed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1500;2;1524;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectNamed method;;d36,1500;;b1,0;;m">
				</treenode>
				<treenode node="testCurrentRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2292;2;2298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrentRoute;;d36,2292;;b1,0;;m">
				</treenode>
				<treenode node="testCurrentRouteWhenNonExistentRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2280;2;2283;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCurrentRouteWhenNonExistentRoute;;d56,2280;;b1,0;;m">
				</treenode>
				<treenode node="testCustomRouteException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2455;2;2457;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that route classes must extend CakeRoute;;d44,2455;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultRouteClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2764;2;2770;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting the default route class;;d41,2764;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultRouteClassGetter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2777;2;2783;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting the default route class;;d47,2777;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultRouteException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2791;2;2794;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that route classes must extend CakeRoute;;d45,2791;;b1,0;;m">
				</treenode>
				<treenode node="testDefaultsMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2362;2;2367;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that connectDefaults() can disable default route connection;;d38,2362;;b1,0;;m">
				</treenode>
				<treenode node="testExtensionParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1418;2;1464;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExtensionParsing method;;d40,1418;;b1,0;;m">
				</treenode>
				<treenode node="testFullBaseUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;59;2;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFullBaseUrl method;;d35,59;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateUrlResourceRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;277;2;303;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateUrlResourceRoute method;;d48,277;;b1,0;;m">
				</treenode>
				<treenode node="testGetParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2330;2;2355;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetParams;;d33,2330;;b1,0;;m">
				</treenode>
				<treenode node="testMapResources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;108;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapResources method;;d36,108;;b1,0;;m">
				</treenode>
				<treenode node="testMapResourcesConnectOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;195;2;212;;;;vpos;;v;;r&#xA;Description&#xA;     testMapResources with custom connectOptions;;d50,195;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleResourceRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;260;2;270;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleResourceRoute method;;d45,260;;b1,0;;m">
				</treenode>
				<treenode node="testNamedArgsUrlGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1531;2;1585;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNamedArgsUrlGeneration method;;d46,1531;;b1,0;;m">
				</treenode>
				<treenode node="testNamedArgsUrlParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1592;2;1646;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNamedArgsUrlParsing method;;d43,1592;;b1,0;;m">
				</treenode>
				<treenode node="testPagesUrlParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1924;2;1963;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPagesUrlParsing method;;d39,1924;;b1,0;;m">
				</treenode>
				<treenode node="testParseExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1375;2;1380;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseExtensions method;;d39,1375;;b1,0;;m">
				</treenode>
				<treenode node="testParseReverseSymmetry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1260;2;1262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test parse and reverse symmetry;;d48,1260;;b1,0;;murl;;p">
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f42;1260;46;1260;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testParsingWithPatternOnAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2002;2;2027;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that patterns work for :action;;d50,2002;;b1,0;;m">
				</treenode>
				<treenode node="testParsingWithPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2034;2;2096;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParsingWithPrefixes method;;d43,2034;;b1,0;;m">
				</treenode>
				<treenode node="testParsingWithTrailingPeriod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1970;2;1978;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that requests with a trailing dot don't loose the do.;;d49,1970;;b1,0;;m">
				</treenode>
				<treenode node="testParsingWithTrailingPeriodAndParseExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1985;2;1995;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that requests with a trailing dot don't loose the do.;;d67,1985;;b1,0;;m">
				</treenode>
				<treenode node="testPassedArgsOrder;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2168;2;2215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPassedArgsOrder method;;d39,2168;;b1,0;;m">
				</treenode>
				<treenode node="testPatternOnAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2686;2;2704;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Testing that patterns on the :action param work properly.;;d39,2686;;b1,0;;m">
				</treenode>
				<treenode node="testPersistentParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1145;2;1199;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the persist key works.;;d44,1145;;b1,0;;m">
				</treenode>
				<treenode node="testPluginMapResources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;157;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapResources with plugin controllers.;;d42,157;;b1,0;;m">
				</treenode>
				<treenode node="testPluginMapResourcesWithPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;219;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test mapResources with a plugin and prefix.;;d52,219;;b1,0;;m">
				</treenode>
				<treenode node="testPrefixFalseIgnored;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1870;2;1886;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that setting a prefix to false is ignored, as its generally user error.;;d42,1870;;b1,0;;m">
				</treenode>
				<treenode node="testPrefixOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1828;2;1863;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that setting a prefix override the current one;;d38,1828;;b1,0;;m">
				</treenode>
				<treenode node="testPrefixRoutingAndPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1310;2;1368;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test prefix routing and plugin combinations;;d47,1310;;b1,0;;m">
				</treenode>
				<treenode node="testQueryString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2821;2;2860;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests generating well-formed querystrings;;d35,2821;;b1,0;;m">
				</treenode>
				<treenode node="testQuerystringGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1471;2;1493;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testQuerystringGeneration method;;d45,1471;;b1,0;;m">
				</treenode>
				<treenode node="testRegexRouteMatching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2222;2;2258;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRegexRouteMatching method;;d42,2222;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveBase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1893;2;1917;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveBase method;;d34,1893;;b1,0;;m">
				</treenode>
				<treenode node="testRequestRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2305;2;2323;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequestRoute;;d36,2305;;b1,0;;m">
				</treenode>
				<treenode node="testResourceMap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2711;2;2735;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests resourceMap as getter and setter.;;d35,2711;;b1,0;;m">
				</treenode>
				<treenode node="testReverseWithExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2549;2;2564;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that extensions work with Router::reverse();;d44,2549;;b1,0;;m">
				</treenode>
				<treenode node="testRouteDefaultParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;98;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRouteDefaultParams method;;d42,98;;b1,0;;m">
				</treenode>
				<treenode node="testRouteRedirection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2742;2;2757;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting redirect routes;;d40,2742;;b1,0;;m">
				</treenode>
				<treenode node="testRouterReverse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2466;2;2542;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reversing parameter arrays back into strings.;;d37,2466;;b1,0;;m">
				</treenode>
				<treenode node="testRouteSymmetry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1222;2;1252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRouteSymmetry method;;d37,1222;;b1,0;;m">
				</treenode>
				<treenode node="testRoutingPrefixesSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1287;2;1303;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Routing.prefixes are used when a Router instance is created or reset;;d46,1287;;b1,0;;m">
				</treenode>
				<treenode node="testSetExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1387;2;1411;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetExtensions method;;d37,1387;;b1,0;;m">
				</treenode>
				<treenode node="testSetRequestInfoLegacy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2571;2;2589;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that setRequestInfo can accept arrays and turn that into a CakeRequest object.;;d44,2571;;b1,0;;m">
				</treenode>
				<treenode node="testSettingInvalidDefaultRouteException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2802;2;2804;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that route classes must extend CakeRoute;;d59,2802;;b1,0;;m">
				</treenode>
				<treenode node="testSettingNonExistentDefaultRouteException;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2812;2;2814;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that class must exist;;d63,2812;;b1,0;;m">
				</treenode>
				<treenode node="testStripPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2265;2;2273;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStripPlugin;;d35,2265;;b1,0;;m">
				</treenode>
				<treenode node="testUrlCatchAllRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;518;2;535;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that catch all routes work with a variety of falsey inputs.;;d40,518;;b1,0;;m">
				</treenode>
				<treenode node="testUrlFullUrlReturnFromRoute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2628;2;2638;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a route object returning a full URL is not modified.;;d49,2628;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationBasic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;381;2;511;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generation of basic URLs.;;d42,381;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;921;2;955;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginUrlGeneration method;;d44,921;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationWithAdminPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;705;2;890;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test URL generation with an admin prefix;;d52,705;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationWithAutoPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1725;2;1790;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test newer style automatically generated prefix routes.;;d53,1725;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationWithExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;897;2;914;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUrlGenerationWithExtensions method;;d51,897;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationWithLegacyPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1654;2;1718;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test URL generation with legacy (1.2) style prefix routes.;;d55,1654;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationWithQueryStrings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;598;2;615;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generation of routes with query string parameters.;;d53,598;;b1,0;;m">
				</treenode>
				<treenode node="testUrlGenerationWithRegexQualifiedParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;622;2;698;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that regex validation of keyed route params is working.;;d61,622;;b1,0;;m">
				</treenode>
				<treenode node="testUrlNormalization;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;310;2;374;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUrlNormalization method;;d40,310;;b1,0;;m">
				</treenode>
				<treenode node="testUrlParseFailureDoubleSlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1003;2;1013;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that URL's fail to parse when they are prefixed with //;;d50,1003;;b1,0;;m">
				</treenode>
				<treenode node="testUrlParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1020;2;1138;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUrlParsing method;;d34,1020;;b1,0;;m">
				</treenode>
				<treenode node="testUrlProtocol;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2645;2;2679;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test protocol in url;;d35,2645;;b1,0;;m">
				</treenode>
				<treenode node="testUrlWithRequestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2596;2;2621;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that Router::url() uses the first request;;d44,2596;;b1,0;;m">
				</treenode>
				<treenode node="testUrlWritingWithPrefixes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2103;2;2130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests URL generation with flags and prefixes in and out of context;;d46,2103;;b1,0;;m">
				</treenode>
				<treenode node="testUrlWritingWithPrefixesAndCustomRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2137;2;2161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test url generation with prefixes and custom routes;;d61,2137;;b1,0;;m">
				</treenode>
				<treenode node="testUsingCustomRouteClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2411;2;2425;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using a custom route class for route connection;;d45,2411;;b1,0;;m">
				</treenode>
				<treenode node="testUsingCustomRouteClassPluginDotSyntax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;2432;2;2447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using custom route class in PluginDot notation;;d60,2432;;b1,0;;m">
				</treenode>
				<treenode node="testUuidRoutes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php;f8;1206;2;1215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUuidRoutes method;;d34,1206;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RssHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f0;30;1;354;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     RSS Helper class for easy output RSS structures.;;d34,30;;b0,0;;m">
				<treenode node="channel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;124;2;157;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns an RSS `&lt;channel /&gt;` element&#xA;&#xA;Parameters:&#xA;    array $attrib - `&lt;channel /&gt;` tag attributes&#xA;    array $elements - Named array elements which are converted to tags&#xA;    string $content - Content (`&lt;item /&gt;`'s belonging to this channel&#xA;&#xA;Return:&#xA;   An RSS `&lt;channel /&gt;`;;d82,124;;b1,0;;marray $attrib;;parray $elements;;pstring $content;;p">
					<treenode node="attrib;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f25;124;32;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f65;124;73;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="elements;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f44;124;53;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="document;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;103;2;113;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns an RSS document wrapped in `&lt;rss /&gt;` tags&#xA;&#xA;Parameters:&#xA;    array $attrib - `&lt;rss /&gt;` tag attributes&#xA;    string $content - Tag content&#xA;&#xA;Return:&#xA;   An RSS document;;d62,103;;b1,0;;marray $attrib;;pstring $content;;p">
					<treenode node="attrib;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f26;103;33;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f45;103;53;103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="elem;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;295;2;352;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates an XML element&#xA;&#xA;Parameters:&#xA;    string $name - The name of the XML element&#xA;    array $attrib - The attributes of the XML element&#xA;    string|array $content - XML element content&#xA;    bool $endTag - Whether the end tag of the element should be printed&#xA;&#xA;Return:&#xA;   XML;;d81,295;;b1,0;;mstring $name;;parray $attrib;;pstring|array $content;;pbool $endTag;;p">
					<treenode node="attrib;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f29;295;36;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f48;295;56;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="endTag;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f65;295;72;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f22;295;27;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="item;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;191;2;271;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts an array into an `&lt;item /&gt;` element and its contents&#xA;&#xA;Parameters:&#xA;    array $att - The attributes of the `&lt;item /&gt;` element&#xA;    array $elements - The list of elements contained in this `&lt;item /&gt;`&#xA;&#xA;Return:&#xA;   An RSS `&lt;item /&gt;` element;;d59,191;;b1,0;;marray $att;;parray $elements;;p">
					<treenode node="att;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f22;191;26;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="elements;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f38;191;47;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="items;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;169;2;181;;;;vpos;;vstring;;r&#xA;Description&#xA;     Transforms an array of data using an optional callback, and maps it to a set of `&lt;item /&gt;` tags&#xA;&#xA;Parameters:&#xA;    array $items - The list of items to be mapped&#xA;    string|array $callback - A string function name, or array containing an object&#xA;&#xA;Return:&#xA;   A set of RSS `&lt;item /&gt;` elements;;d49,169;;b1,0;;marray $items;;pstring|array $callback;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f31;169;40;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="items;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f23;169;29;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="time;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;281;2;283;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a time in any format to an RSS time&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $time - UNIX timestamp or valid time string or DateTime object&#xA;&#xA;Return:&#xA;   An RSS-formatted timestamp;;d29,281;;b1,0;;mint|string|DateTime $time;;p">
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f22;281;27;281;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;65;15;65;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;44;13;44;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;72;13;72;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;86;14;86;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;37;16;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="here;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;51;13;51;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;79;14;79;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;58;15;58;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f28;27;34;27;;;;vposTimeHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="version;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php;f8;93;16;93;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="RssHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f0;28;1;756;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     RssHelperTest class;;d41,28;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;35;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,35;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;47;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,47;;b1,0;;m">
				</treenode>
				<treenode node="testChannel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;91;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testChannel method;;d31,91;;b1,0;;m">
				</treenode>
				<treenode node="testChannelElementAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;164;2;204;;;;vpos;;v;;r;;d48,164;;b1,0;;m">
				</treenode>
				<treenode node="testChannelElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;120;2;162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test correct creation of channel sub elements.;;d39,120;;b1,0;;m">
				</treenode>
				<treenode node="testDocument;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;57;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDocument method;;d32,57;;b1,0;;m">
				</treenode>
				<treenode node="testElementAttrNotInParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;675;2;696;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testElementAttrNotInParent method;;d46,675;;b1,0;;m">
				</treenode>
				<treenode node="testElementNamespaceWithoutPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;698;2;718;;;;vpos;;v;;r;;d53,698;;b1,0;;m">
				</treenode>
				<treenode node="testElementNamespaceWithPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;720;2;755;;;;vpos;;v;;r;;d50,720;;b1,0;;m">
				</treenode>
				<treenode node="testItem;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;280;2;446;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testItem method;;d28,280;;b1,0;;m">
				</treenode>
				<treenode node="testItemCdata;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;453;2;569;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test item() with cdata blocks.;;d33,453;;b1,0;;m">
				</treenode>
				<treenode node="testItemEnclosureLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;576;2;668;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test item() with enclosure data.;;d43,576;;b1,0;;m">
				</treenode>
				<treenode node="testItems;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php;f8;211;2;273;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testItems method;;d29,211;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Sample;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;833;1;848;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Sample class;;d35,833;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;847;18;847;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;840;13;840;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SampleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SampleFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class SampleFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SampleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SampleFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SamplePluginClassTestName;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Vendor\sample\sample_plugin.php;f0;23;1;24;;;;vpos;;v;;r&#xA;Description&#xA;     Class SamplePluginClassTestName;;d32,23;;b0,0;;m">
			</treenode>
			<treenode node="SampleShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Console\Command\SampleShell.php;f0;23;1;33;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Class SampleShell;;d32,23;;b0,0;;m">
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Console\Command\SampleShell.php;f8;30;2;32;;;;vpos;;vvoid;;r&#xA;Description&#xA;     main method;;d24,30;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Sanitize;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f0;31;1;268;;;;vpos;;v;;r&#xA;Description&#xA;     Data Sanitization.;;d15,31;;b0,0;;m">
				<treenode node="clean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;217;2;267;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Sanitizes given array or value for safe input. Use the options to specify the connection to use, and what filters should be applied (with a boolean value). Valid filters:&#xA;&#xA;Parameters:&#xA;    string|array $data - Data to sanitize&#xA;    string|array $options - If string, DB connection being used, otherwise set of options&#xA;&#xA;Return:&#xA;   Sanitized data;;d57,217;;b1,5;;mstring|array $data;;pstring|array $options;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f30;217;35;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f37;217;45;217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="escape;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;67;2;79;;;;vpos;;vstring;;r&#xA;Description&#xA;     Makes a string SQL-safe.&#xA;&#xA;Parameters:&#xA;    string $string - String to sanitize&#xA;    string $connection - Database connection being used&#xA;&#xA;Return:&#xA;   SQL safe string;;d65,67;;b1,5;;mstring $string;;pstring $connection;;p">
					<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f40;67;51;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f31;67;38;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="html;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;98;2;120;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns given string safe for display as HTML. Renders entities.&#xA;&#xA;Parameters:&#xA;    string $string - String from where to strip tags&#xA;    array $options - Array of options to use&#xA;&#xA;Return:&#xA;   Sanitized string;;d58,98;;b1,5;;mstring $string;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f38;98;46;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f29;98;36;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paranoid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;40;2;58;;;;vpos;;vstring;;r&#xA;Description&#xA;     Removes any non-alphanumeric characters.&#xA;&#xA;Parameters:&#xA;    string $string - String to sanitize&#xA;    array $allowed - An array of additional characters that are not to be removed&#xA;&#xA;Return:&#xA;   Sanitized string;;d62,40;;b1,5;;mstring $string;;parray $allowed;;p">
					<treenode node="allowed;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f42;40;50;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f33;40;40;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;170;2;176;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strips extra whitespace, images, scripts and stylesheets from output&#xA;&#xA;Parameters:&#xA;    string $str - String to sanitize&#xA;&#xA;Return:&#xA;   sanitized string;;d39,170;;b1,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f33;170;37;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripImages;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;138;2;146;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strips image tags from output&#xA;&#xA;Parameters:&#xA;    string $str - String to sanitize&#xA;&#xA;Return:&#xA;   Sting with images stripped;;d42,138;;b1,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f36;138;40;138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripScripts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;154;2;162;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strips scripts and stylesheets from output&#xA;&#xA;Parameters:&#xA;    string $str - String to sanitize&#xA;&#xA;Return:&#xA;   String with &lt;link&gt;, &lt;img&gt;, &lt;script&gt;, &lt;style&gt; elements and html comments removed;;d43,154;;b1,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f37;154;41;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;189;2;197;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strips the specified tags from output. First parameter is string from where to remove tags. All subsequent parameters are tags.&#xA;&#xA;Parameters:&#xA;    string $str - String to sanitize&#xA;&#xA;Return:&#xA;   sanitized String;;d40,189;;b1,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f34;189;38;189;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripWhitespace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f15;128;2;130;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strips extra whitespace from output&#xA;&#xA;Parameters:&#xA;    string $str - String to sanitize&#xA;&#xA;Return:&#xA;   whitespace sanitized string;;d46,128;;b1,5;;mstring $str;;p">
					<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php;f40;128;44;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SanitizeArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f0;40;1;48;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Article class;;d44,40;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;47;17;47;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SanitizeDataTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f0;25;1;33;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     DataTest class;;d45,25;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;32;17;32;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SanitizeTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f0;55;1;447;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SanitizeTest class;;d40,55;;b0,0;;m">
				<treenode node="testClean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;107;2;180;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClean method;;d29,107;;b1,0;;m">
				</treenode>
				<treenode node="testEscapeAlphaNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;76;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEscapeAlphaNumeric method;;d42,76;;b1,0;;m">
				</treenode>
				<treenode node="testHtml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;187;2;221;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHtml method;;d28,187;;b1,0;;m">
				</treenode>
				<treenode node="testParanoid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;245;2;279;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParanoid method;;d32,245;;b1,0;;m">
				</treenode>
				<treenode node="testStripAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;381;2;404;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStripAll method;;d32,381;;b1,0;;m">
				</treenode>
				<treenode node="testStripImages;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;286;2;306;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStripImages method;;d35,286;;b1,0;;m">
				</treenode>
				<treenode node="testStripScripts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;313;2;374;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStripScripts method;;d36,313;;b1,0;;m">
				</treenode>
				<treenode node="testStripTags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;411;2;446;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStripTags method;;d33,411;;b1,0;;m">
				</treenode>
				<treenode node="testStripWhitespace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;228;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStripWhitespace method;;d39,228;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;62;21;62;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php;f8;69;17;69;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Scaffold;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f0;31;1;447;;;;vpos;;v;;r&#xA;Description&#xA;     Scaffolding is a set of automatic actions for starting web development work faster.;;d15,31;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;105;2;150;;;;vpos;;v;;r&#xA;Description&#xA;     Construct and set up given controller with given parameters.&#xA;&#xA;Parameters:&#xA;    Controller $controller - Controller to scaffold&#xA;    CakeRequest $request - Request parameters;;d75,105;;b1,0;;mController $controller;;pCakeRequest $request;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f40;105;51;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f65;105;73;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_associations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;415;2;445;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns associations for controllers models.&#xA;&#xA;Return:&#xA;   Associations for model;;d36,415;;b2,0;;m">
				</treenode>
				<treenode node="_scaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;352;2;408;;;;vpos;;vvoid;;r&#xA;Description&#xA;     When methods are now present in a controller scaffoldView is used to call default Scaffold methods if: `public $scaffold;s` is placed in the controller's class definition.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object for scaffolding;;d52,352;;b2,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f42;352;50;352;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_scaffoldDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;290;2;316;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Performs a delete on given scaffolded Model.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request for scaffolding&#xA;&#xA;Return:&#xA;   Success on delete, error if delete fails;;d58,290;;b2,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f48;290;56;290;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_scaffoldError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;338;2;340;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Show a scaffold error&#xA;&#xA;Return:&#xA;   A rendered view showing the error;;d37,338;;b2,0;;m">
				</treenode>
				<treenode node="_scaffoldForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;202;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Renders an add or edit action for scaffolded model.&#xA;&#xA;Parameters:&#xA;    string $action - Action (add or edit);;d52,202;;b2,0;;mstring $action;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f34;202;41;202;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_scaffoldIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;184;2;194;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Renders index action of scaffolded model.&#xA;&#xA;Parameters:&#xA;    array $params - Parameters for scaffolding&#xA;&#xA;Return:&#xA;   A rendered view listing rows from Models database table;;d44,184;;b2,0;;marray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f35;184;42;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_scaffoldSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;218;2;280;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Saves or updates the scaffolded model.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request Object for scaffolding&#xA;    string $action - add or edit&#xA;&#xA;Return:&#xA;   Success on save/update, add/edit form if data is empty or error if save or update fails;;d74,218;;b2,0;;mCakeRequest $request;;pstring $action;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f56;218;63;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f46;218;54;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_scaffoldView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;159;2;176;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Renders a view action of scaffolded model.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request Object for scaffolding&#xA;&#xA;Return:&#xA;   A rendered view of a row from Models database table;;d56,159;;b2,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f46;159;54;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_sendMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;325;2;331;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sends a message to the user. Either uses Sessions or flash messages depending on the availability of a session&#xA;&#xA;Parameters:&#xA;    string $message - Message to display;;d43,325;;b2,0;;mstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f33;325;41;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_passedVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;87;23;87;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_validSession;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f11;80;25;80;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;38;19;38;;;;vposController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;66;15;66;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;52;14;52;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;45;13;45;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;73;16;73;;;;vposCakeRequest;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="scaffoldTitle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;96;22;96;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="viewPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php;f8;59;17;59;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4882;1;4902;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ScaffoldComment class;;d44,4882;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4896;18;4896;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4889;17;4889;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldMock;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4801;1;4848;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ScaffoldMock class;;d41,4801;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4815;18;4815;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4839;28;4839;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4827;16;4827;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4808;17;4808;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldMockController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f0;31;1;39;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ScaffoldMockController class;;d48,31;;b0,0;;m">
				<treenode node="scaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;38;17;38;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldMockControllerWithError;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f0;80;1;106;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ScaffoldMockControllerWithError class;;d57,80;;b0,0;;m">
				<treenode node="beforeScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;102;2;104;;;;vpos;;vbool;;r&#xA;Description&#xA;     function beforeScaffold&#xA;&#xA;Parameters:&#xA;    string $method - Method name&#xA;&#xA;Return:&#xA;   false;;d41,102;;b1,0;;mstring $method;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f32;102;39;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;87;13;87;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="scaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;94;17;94;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldMockControllerWithFields;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f0;46;1;73;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ScaffoldMockControllerWithFields class;;d58,46;;b0,0;;m">
				<treenode node="beforeScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;68;2;71;;;;vpos;;vbool;;r&#xA;Description&#xA;     function beforeScaffold&#xA;&#xA;Parameters:&#xA;    string $method - Method name&#xA;&#xA;Return:&#xA;   true;;d41,68;;b1,0;;mstring $method;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f32;68;39;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;53;13;53;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="scaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;60;17;60;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4909;1;4918;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ScaffoldTag class;;d40,4909;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4916;17;4916;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f0;141;1;415;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Scaffold Test class;;d40,141;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;162;2;168;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,162;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;175;2;178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,175;;b1,0;;m">
				</treenode>
				<treenode node="testEditScaffoldWithScaffoldFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;347;2;377;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the proper names and variable values are set by Scaffold;;d54,347;;b1,0;;m">
				</treenode>
				<treenode node="testHabtmFieldAdditionWithScaffoldForm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;311;2;340;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that habtm relationship keys get added to scaffoldFields.;;d58,311;;b1,0;;m">
				</treenode>
				<treenode node="testScaffoldChangingViewProperty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;256;2;264;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that Scaffold overrides the view property even if its set to 'Theme';;d52,256;;b1,0;;m">
				</treenode>
				<treenode node="testScaffoldError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;384;2;414;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test in case of scaffold error;;d37,384;;b1,0;;m">
				</treenode>
				<treenode node="testScaffoldFlashMessages;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;271;2;304;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that scaffold outputs flash messages when sessions are unset.;;d45,271;;b1,0;;m">
				</treenode>
				<treenode node="testScaffoldParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;186;2;209;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the correct Generation of Scaffold Params. This ensures that the correct action and view will be generated;;d38,186;;b1,0;;m">
				</treenode>
				<treenode node="testScaffoldVariableSetting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;216;2;249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the proper names and variable values are set by Scaffold;;d47,216;;b1,0;;m">
				</treenode>
				<treenode node="Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;148;19;148;;;;vposSecurityTestController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;155;17;155;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4855;1;4875;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ScaffoldUser class;;d41,4855;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4869;16;4869;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4862;17;4862;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ScaffoldView.php;f0;28;1;90;;;;vpos;;vView;;c;;r&#xA;Description&#xA;     ScaffoldView provides specific view file loading features for scaffolded views.;;d32,28;;b0,0;;m">
				<treenode node="_getViewFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ScaffoldView.php;f11;37;2;88;;;;vpos;;vstring;;r&#xA;Description&#xA;     Override _getViewFileName Appends special scaffolding views in.&#xA;&#xA;Parameters:&#xA;    string $name - name of the view file to get&#xA;&#xA;Return:&#xA;   action;;d51,37;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ScaffoldView.php;f37;37;42;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ScaffoldViewMockController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f0;49;1;64;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ScaffoldViewMockController class;;d52,49;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;56;13;56;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="scaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;63;17;63;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ScaffoldViewTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f0;71;1;462;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ScaffoldViewTest class;;d44,71;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;85;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,85;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;103;2;106;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,103;;b1,0;;m">
				</treenode>
				<treenode node="testAdminEditScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;383;2;415;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Admin Index Scaffolding.;;d41,383;;b1,0;;m">
				</treenode>
				<treenode node="testAdminIndexScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;338;2;376;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Admin Index Scaffolding.;;d42,338;;b1,0;;m">
				</treenode>
				<treenode node="testEditScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;296;2;331;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test default view scaffold generation;;d36,296;;b1,0;;m">
				</treenode>
				<treenode node="testGetViewFilename;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;113;2;191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetViewFilename method;;d39,113;;b1,0;;m">
				</treenode>
				<treenode node="testGetViewFileNameWithTheme;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;198;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the view file name for themed scaffolds.;;d48,198;;b1,0;;m">
				</treenode>
				<treenode node="testIndexScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;215;2;247;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test default index scaffold generation;;d37,215;;b1,0;;m">
				</treenode>
				<treenode node="testMultiplePrefixScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;422;2;460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Admin Index Scaffolding.;;d46,422;;b1,0;;m">
				</treenode>
				<treenode node="testViewScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;254;2;289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test default view scaffold generation;;d36,254;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;78;17;78;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;234;1;249;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SchemaComment class;;d42,234;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;248;18;248;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;241;17;241;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaCrossDatabase;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;306;1;321;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SchemaCrossDatabase class;;d48,306;;b0,0;;m">
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;320;20;320;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;313;17;313;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaCrossDatabaseFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;328;1;363;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     SchemaCrossDatabaseFixture class;;d57,328;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;349;15;349;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;335;13;335;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;359;16;359;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;342;14;342;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaDatatype;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;278;1;286;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SchemaDatatype class;;d43,278;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;285;17;285;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;205;1;227;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SchemaPost class;;d39,205;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;226;28;226;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;219;16;219;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;212;17;212;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaPrefixAuthUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;370;1;385;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SchemaPrefixAuthUser class;;d49,370;;b0,0;;m">
				<treenode node="tablePrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;377;20;377;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;384;17;384;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f0;29;1;569;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Schema is a command-line database management utility for automating programmer chores.;;d35,29;;b0,0;;m">
				<treenode node="_create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f11;314;2;353;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Create database from Schema object Should be called via the run method&#xA;&#xA;Parameters:&#xA;    CakeSchema $Schema - The schema instance to create&#xA;    string $table - The table name;;d63,314;;b2,0;;mCakeSchema $Schema;;pstring $table;;p">
					<treenode node="Schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f39;314;46;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f48;314;54;314;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadSchema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f11;267;2;304;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prepares the Schema objects for database operations.;;d34,267;;b2,0;;m">
				</treenode>
				<treenode node="_run;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f11;418;2;454;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Runs sql from _create() or _update()&#xA;&#xA;Parameters:&#xA;    array $contents - The contents to execute&#xA;    string $event - The event to fire&#xA;    CakeSchema $Schema - The schema instance;;d64,418;;b2,0;;marray $contents;;pstring $event;;pCakeSchema $Schema;;p">
					<treenode node="contents;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f25;418;34;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f36;418;42;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f55;418;62;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f11;363;2;408;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update database with Schema object Should be called via the run method&#xA;&#xA;Parameters:&#xA;    CakeSchema - &amp;$Schema The schema instance&#xA;    string $table - The table name;;d53,363;;b2,0;;mCakeSchema;;pstring $table;;p">
					<treenode node="Schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f29;363;36;363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f38;363;44;363;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;247;2;250;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run database create commands. Alias for run create.;;d26,247;;b1,0;;m">
				</treenode>
				<treenode node="dump;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;204;2;240;;;;vpos;;vstring;;r&#xA;Description&#xA;     Dump Schema object to sql file Use the `write` param to enable and control SQL file output location. Simply using -write will write the sql file to the same dir as the schema file. If -write contains a full path name the file will be saved there. If -write only contains no DS, that will be used as the file name, in the same dir as the schema file.;;d24,204;;b1,0;;m">
				</treenode>
				<treenode node="generate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;118;2;193;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Read database and Write schema object accepts a connection as first arg or path to save as second arg;;d28,118;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;461;2;567;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,461;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;50;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override startup;;d27,50;;b1,0;;m">
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;257;2;260;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run database create commands. Alias for run create.;;d26,257;;b1,0;;m">
				</treenode>
				<treenode node="view;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;101;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Read and output contents of schema object path to read as second arg;;d24,101;;b1,0;;m">
				</treenode>
				<treenode node="_dry;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f11;43;16;43;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="Schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php;f8;36;15;36;;;;vposCakeSchema;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f0;87;1;697;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SchemaShellTest class;;d43,87;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;104;2;114;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,104;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;121;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,121;;b1,0;;m">
				</treenode>
				<treenode node="testCreateNoArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;454;2;471;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test schema run create with no table args.;;d36,454;;b1,0;;m">
				</treenode>
				<treenode node="testCreateOptionYes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;431;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test schema run create with --yes option;;d39,431;;b1,0;;m">
				</treenode>
				<treenode node="testCreateWithTableArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;478;2;501;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test schema run create with no table args.;;d43,478;;b1,0;;m">
				</treenode>
				<treenode node="testDumpFileWritingWithPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;235;2;259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that dump() can find and work with plugin schema files.;;d50,235;;b1,0;;m">
				</treenode>
				<treenode node="testDumpWithFileWriting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;208;2;228;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test dump() with sql file generation;;d43,208;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateExclude;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;404;2;424;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generate with excluded tables;;d39,404;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateModels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;370;2;397;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generate with specific models;;d38,370;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateNoOverwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;286;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generate without a snapshot.;;d43,286;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateOverwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;306;2;328;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generate with overwriting of the schema files.;;d41,306;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateSnapshot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;266;2;279;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generate with snapshot generation;;d40,266;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateWithPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;336;2;363;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that generate() can read plugin dirs and generate schema files for the models in a plugin.;;d43,336;;b1,0;;m">
				</treenode>
				<treenode node="testName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;611;2;633;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that underscored names also result in CamelCased class names;;d28,611;;b1,0;;m">
				</treenode>
				<treenode node="testNameAndFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;641;2;669;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that passing name and file creates the passed filename with the passed class name;;d35,641;;b1,0;;m">
				</treenode>
				<treenode node="testPluginDotSyntaxWithCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;676;2;696;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that using Plugin.name with write.;;d49,676;;b1,0;;m">
				</treenode>
				<treenode node="testPluginParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;591;2;604;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the plugin param creates the correct path in the schema object.;;d35,591;;b1,0;;m">
				</treenode>
				<treenode node="testStartup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;134;2;162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test startup method;;d31,134;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateWithOptionYes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;564;2;584;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test run update with --yes option;;d43,564;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateWithTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;508;2;529;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test run update with a table arg.;;d39,508;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateWithTableCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;536;2;557;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test run update with a table arg. and checks that a CREATE statement is issued table creation;;d45,536;;b1,0;;m">
				</treenode>
				<treenode node="testView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;169;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test View - and that it dumps the schema file to stdout;;d28,169;;b1,0;;m">
				</treenode>
				<treenode node="testViewWithPlugins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;183;2;201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that view() can find plugin schema files.;;d39,183;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;94;17;94;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaShellTestSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f0;30;1;80;;;;vpos;;vCakeSchema;;c;;r&#xA;Description&#xA;     Test for Schema database management;;d47,30;;b0,0;;m">
				<treenode node="articles;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;61;17;61;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="comments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;44;17;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;37;19;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="newone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php;f8;73;15;73;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SchemaTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;256;1;271;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SchemaTag class;;d38,256;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;270;28;270;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;263;17;263;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SecondaryModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1841;1;1849;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SecondaryModel class;;d43,1841;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1848;13;1848;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SecondaryModelFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SecondaryModelFixture.php;f0;23;1;43;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class SecondaryModelFixture;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SecondaryModelFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SecondaryModelFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SecondaryPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f0;27;1;39;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Secondary Post stub class.;;d34,27;;b0,0;;m">
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;37;20;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php;f8;32;17;32;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SecondBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;439;1;440;;;;vpos;;vFirstBehavior;;c;;r&#xA;Description&#xA;     SecondBehavior;;d43,439;;b0,0;;m">
			</treenode>
			<treenode node="SecondGenericObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f0;57;1;65;;;;vpos;;vGenericObject;;c;;r&#xA;Description&#xA;     Second Extension of Generic Object;;d48,57;;b0,0;;m">
				<treenode node="callback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;62;2;63;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ;;d28,62;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Security;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f0;25;1;383;;;;vpos;;v;;r&#xA;Description&#xA;     Security Library contains utility methods related to security;;d15,25;;b0,0;;m">
				<treenode node="_checkKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f18;336;2;340;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Check the encryption key for proper length.&#xA;&#xA;Parameters:&#xA;    string $key - Key to check&#xA;    string $method - The method the key is being checked for;;d52,336;;b2,5;;mstring $key;;pstring $method;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f37;336;41;336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f43;336;50;336;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_crypt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f18;273;2;293;;;;vpos;;vstring;;r&#xA;Description&#xA;     One way encryption using php's crypt() function. To use blowfish hashing see ``Security::hash()``&#xA;&#xA;Parameters:&#xA;    string $password - The string to be encrypted&#xA;    mixed $salt - false to generate a new salt or an existing salt&#xA;&#xA;Return:&#xA;   The hashed string or an empty string on error;;d60,273;;b2,5;;mstring $password;;pmixed $salt;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f34;273;43;273;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="salt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f45;273;50;273;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_salt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f18;257;2;264;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a pseudo random salt suitable for use with php's crypt() function. The salt length should not exceed 27. The salt will be composed of [./0-9A-Za-z]{$length}.&#xA;&#xA;Parameters:&#xA;    int $length - The length of the returned salt&#xA;&#xA;Return:&#xA;   The generated salt;;d47,257;;b2,5;;mint $length;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f33;257;40;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cipher;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;183;2;202;;;;vpos;;vstring;;r&#xA;Description&#xA;     Runs $text through a XOR cipher.&#xA;&#xA;Parameters:&#xA;    string $text - Encrypted string to decrypt, normal string to encrypt&#xA;    string $key - Key to use&#xA;&#xA;Return:&#xA;   Encrypted/Decrypted string;;d44,183;;b1,5;;mstring $text;;pstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f38;183;42;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f31;183;36;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrypt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;351;2;381;;;;vpos;;vstring;;r&#xA;Description&#xA;     Decrypt a value using AES-256.&#xA;&#xA;Parameters:&#xA;    string $cipher - The ciphertext to decrypt&#xA;    string $key - The 256 bit/32 byte key to use as a cipher key&#xA;    string $hmacSalt - The salt to use for the HMAC process&#xA;&#xA;Return:&#xA;   Decrypted data;;d65,351;;b1,5;;mstring $cipher;;pstring $key;;pstring $hmacSalt;;p">
					<treenode node="cipher;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f32;351;39;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hmacSalt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f47;351;56;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f41;351;45;351;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="encrypt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;308;2;326;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encrypt a value using AES-256.&#xA;&#xA;Parameters:&#xA;    string $plain - The value to encrypt&#xA;    string $key - The 256 bit/32 byte key to use as a cipher key&#xA;    string $hmacSalt - The salt to use for the HMAC process&#xA;&#xA;Return:&#xA;   Encrypted data;;d64,308;;b1,5;;mstring $plain;;pstring $key;;pstring $hmacSalt;;p">
					<treenode node="hmacSalt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f46;308;55;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f40;308;44;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f32;308;38;308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateAuthKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;64;2;66;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate authorization hash.&#xA;&#xA;Return:&#xA;   Hash;;d42,64;;b1,5;;m">
				</treenode>
				<treenode node="hash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;105;2;136;;;;vpos;;vstring;;r&#xA;Description&#xA;     Create a hash from string using given method or fallback on next available method.&#xA;&#xA;Parameters:&#xA;    string $string - String to hash&#xA;    string $type - Method to use (sha1/sha256/md5/blowfish)&#xA;    mixed $salt - If true, automatically prepends the application's salt&#xA;&#xA;Return:&#xA;   Hash;;d67,105;;b1,5;;mstring $string;;pstring $type;;pmixed $salt;;p">
					<treenode node="salt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f52;105;57;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f29;105;36;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f38;105;43;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inactiveMins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;47;2;57;;;;vpos;;vint;;r&#xA;Description&#xA;     Get allowed minutes of inactivity based on security level.&#xA;&#xA;Return:&#xA;   Allowed inactivity in minutes;;d39,47;;b1,5;;m">
				</treenode>
				<treenode node="rijndael;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;216;2;247;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encrypts/Decrypts a text using the given key using rijndael method.&#xA;&#xA;Parameters:&#xA;    string $text - Encrypted string to decrypt, normal string to encrypt&#xA;    string $key - Key to use as the encryption key for encrypted data&#xA;    string $operation - Operation to perform, encrypt or decrypt&#xA;&#xA;Return:&#xA;   Encrypted/Decrypted string;;d58,216;;b1,5;;mstring $text;;pstring $key;;pstring $operation;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f40;216;44;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operation;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f46;216;56;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f33;216;38;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setCost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;156;2;166;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the cost for they blowfish hash method.&#xA;&#xA;Parameters:&#xA;    int $cost - Valid values are 4-31;;d39,156;;b1,5;;mint $cost;;p">
					<treenode node="cost;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f32;156;37;156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setHash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;146;2;148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the default hash method for the Security object. This affects all objects using Security::hash().&#xA;&#xA;Parameters:&#xA;    string $hash - Method to use (sha1/sha256/md5/blowfish);;d39,146;;b1,5;;mstring $hash;;p">
					<treenode node="hash;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f32;146;37;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateAuthKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;74;2;76;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validate authorization hash.&#xA;&#xA;Parameters:&#xA;    string $authKey - Authorization hash&#xA;&#xA;Return:&#xA;   Success;;d50,74;;b1,5;;mstring $authKey;;p">
					<treenode node="authKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f40;74;48;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hashCost;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;39;24;39;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
				<treenode node="hashType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php;f15;32;24;32;;;;vposstring;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="SecurityComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f0;36;1;624;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     The Security Component creates an easy way to integrate tighter security in your application. It provides methods for various tasks like:;;d42,36;;b0,0;;m">
				<treenode node="_authRequired;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;403;2;434;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if authentication is required&#xA;&#xA;Parameters:&#xA;    Controller $controller - Instantiating controller&#xA;&#xA;Return:&#xA;   |null True if authentication required;;d58,403;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f45;403;56;403;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_callback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;617;2;622;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Calls a controller callback method&#xA;&#xA;Parameters:&#xA;    Controller $controller - Controller to run callback on&#xA;    string $method - Method to execute&#xA;    array $params - Parameters to send to method&#xA;&#xA;Return:&#xA;   Controller callback method's response;;d82,617;;b2,0;;mController $controller;;pstring $method;;parray $params;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f41;617;52;617;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f54;617;61;617;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f63;617;70;617;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_expireTokens;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;594;2;606;;;;vpos;;varray;;r&#xA;Description&#xA;     Expire CSRF nonces and remove them from the valid tokens. Uses a simple timeout to expire the tokens.&#xA;&#xA;Parameters:&#xA;    array $tokens - An array of nonce =&gt; expires&#xA;&#xA;Return:&#xA;   An array of nonce =&gt; expires;;d43,594;;b2,0;;marray $tokens;;p">
					<treenode node="tokens;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f34;594;41;594;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_methodsRequired;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;359;2;374;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if HTTP methods are required&#xA;&#xA;Parameters:&#xA;    Controller $controller - Instantiating controller&#xA;&#xA;Return:&#xA;   True if $method is required;;d61,359;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f48;359;59;359;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_requireMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;346;2;351;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the actions that require a $method HTTP request, or empty for all actions&#xA;&#xA;Parameters:&#xA;    string $method - The HTTP method to assign controller actions to&#xA;    array $actions - Controller actions to set the required HTTP method to;;d64,346;;b2,0;;mstring $method;;parray $actions;;p">
					<treenode node="actions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f44;346;52;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f35;346;42;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_secureRequired;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;382;2;395;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if access requires secure connection&#xA;&#xA;Parameters:&#xA;    Controller $controller - Instantiating controller&#xA;&#xA;Return:&#xA;   True if secure connection required;;d60,382;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f47;382;58;382;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_validateCsrf;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;575;2;585;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validate that the controller has a CSRF token in the POST data and that the token is legit/not expired. If the token is valid it will be removed from the list of valid tokens.&#xA;&#xA;Parameters:&#xA;    Controller $controller - A controller to check&#xA;&#xA;Return:&#xA;   Valid csrf token;;d58,575;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f45;575;56;575;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_validatePost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;442;2;519;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validate submitted form&#xA;&#xA;Parameters:&#xA;    Controller $controller - Instantiating controller&#xA;&#xA;Return:&#xA;   true if submitted form is valid;;d58,442;;b2,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f45;442;56;442;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="blackHole;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;332;2;337;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Black-hole an invalid request with a 400 error or custom callback. If SecurityComponent::$blackHoleCallback is specified, it will use this callback by executing the method indicated in $error&#xA;&#xA;Parameters:&#xA;    Controller $controller - Instantiating controller&#xA;    string $error - Error method&#xA;&#xA;Return:&#xA;   If specified, controller blackHoleCallback's response, or no return otherwise;;d64,332;;b1,0;;mController $controller;;pstring $error;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f38;332;49;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f51;332;57;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;527;2;565;;;;vpos;;vbool;;r&#xA;Description&#xA;     Manually add CSRF token information into the provided request object.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - The request object to add into;;d53,527;;b1,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f43;527;51;527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="requireAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;316;2;319;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the actions that require whitelisted form submissions.;;d31,316;;b1,0;;m">
				</treenode>
				<treenode node="requireDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;290;2;293;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the actions that require a DELETE request, or empty for all actions;;d33,290;;b1,0;;m">
				</treenode>
				<treenode node="requireGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;268;2;271;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the actions that require a GET request, or empty for all actions;;d30,268;;b1,0;;m">
				</treenode>
				<treenode node="requirePost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;257;2;260;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the actions that require a POST request, or empty for all actions;;d31,257;;b1,0;;m">
				</treenode>
				<treenode node="requirePut;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;279;2;282;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the actions that require a PUT request, or empty for all actions;;d30,279;;b1,0;;m">
				</treenode>
				<treenode node="requireSecure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;301;2;304;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the actions that require a request that is SSL-secured, or empty for all actions;;d33,301;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;219;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Component startup. All security checking happens here.&#xA;&#xA;Parameters:&#xA;    Controller $controller - Instantiating controller;;d49,219;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f36;219;47;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f11;204;19;204;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="allowedActions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;113;23;113;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="allowedControllers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;104;27;104;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="blackHoleCallback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;43;26;43;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;197;19;197;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="csrfCheck;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;158;18;158;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="csrfExpires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;167;20;167;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="csrfLimit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;190;18;190;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="csrfUseOnce;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;177;20;177;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="disabledFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;122;23;122;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;211;16;211;;;;vposCakeRequest;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="requireAuth;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;95;20;95;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="requireDelete;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;79;22;79;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="requireGet;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;61;19;61;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="requirePost;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;52;20;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="requirePut;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;70;19;70;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="requireSecure;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;87;22;87;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="unlockedActions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;141;24;141;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="unlockedFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;132;23;132;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validatePost;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php;f8;149;21;149;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SecurityComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f0;120;1;1459;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SecurityComponentTest class;;d49,120;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;141;2;158;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,141;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;165;2;171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tear-down method. Resets environment state.;;d28,165;;b1,0;;m">
				</treenode>
				<treenode node="testBlackHoleNotDeletingSessionInformation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1159;2;1164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that blackhole doesn't delete the _Token session key so repeat data submissions stay blackholed.;;d62,1159;;b1,0;;m">
				</treenode>
				<treenode node="testBlackholeWithBrokenCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;180;2;191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that requests are still blackholed when controller has incorrect visibility keyword in the blackhole callback;;d51,180;;b1,0;;m">
				</treenode>
				<treenode node="testConstructorSettingProperties;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;214;2;227;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that initialize can set properties.;;d52,214;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfBlackHoleOnExpiredKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1324;2;1347;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that when the key is missing the request is blackHoled;;d49,1324;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfBlackHoleOnKeyMismatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1294;2;1317;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that when the key is missing the request is blackHoled;;d50,1294;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1425;2;1444;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the limiting of CSRF tokens.;;d33,1425;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfNonceConsumption;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1225;2;1249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that nonces are consumed by form submits.;;d44,1225;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfNonceVacuum;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1273;2;1287;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that expired values in the csrfTokens are cleaned up.;;d39,1273;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfNotUseOnce;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1354;2;1372;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that csrfUseOnce = false works.;;d38,1354;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfNotUseOnceValidationLeavingToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1379;2;1404;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ensure that longer session tokens are not consumed;;d60,1379;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfReusableTokenRenewal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1254;2;1266;;;;vpos;;v;;r&#xA;Description&#xA;     tests that reusable CSRF-token expiry is renewed;;d48,1254;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfSettingMultipleNonces;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1205;2;1218;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting multiple nonces, when startup() is called more than once, (ie more than one request.);;d49,1205;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1188;2;1198;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting;;d36,1188;;b1,0;;m">
				</treenode>
				<treenode node="testCsrfSkipRequestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1171;2;1181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that csrf checks are skipped for request action.;;d45,1171;;b1,0;;m">
				</treenode>
				<treenode node="testExceptionWhenActionIsBlackholeCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;199;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Ensure that directly requesting the blackholeCallback as the controller action results in an exception.;;d62,199;;b1,0;;m">
				</treenode>
				<treenode node="testFormDisabledFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1038;2;1062;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormDisabledFields method;;d42,1038;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1411;2;1418;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generateToken();;d37,1411;;b1,0;;m">
				</treenode>
				<treenode node="testRequireAuthFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;300;2;323;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireAuthFail method;;d39,300;;b1,0;;m">
				</treenode>
				<treenode node="testRequireAuthSucceed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;330;2;350;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireAuthSucceed method;;d42,330;;b1,0;;m">
				</treenode>
				<treenode node="testRequireDeleteFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;448;2;454;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireDeleteFail method;;d41,448;;b1,0;;m">
				</treenode>
				<treenode node="testRequireDeleteSucceed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;461;2;467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireDeleteSucceed method;;d44,461;;b1,0;;m">
				</treenode>
				<treenode node="testRequireDeleteSucceedWrongMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;474;2;480;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireDeleteSucceedWrongMethod method;;d55,474;;b1,0;;m">
				</treenode>
				<treenode node="testRequireGetFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;370;2;376;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireGetFail method;;d38,370;;b1,0;;m">
				</treenode>
				<treenode node="testRequireGetSucceed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;383;2;389;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireGetSucceed method;;d41,383;;b1,0;;m">
				</treenode>
				<treenode node="testRequireGetSucceedWrongMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;396;2;402;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireGetSucceedWrongMethod method;;d52,396;;b1,0;;m">
				</treenode>
				<treenode node="testRequirePostFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;246;2;252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequirePostFail method;;d39,246;;b1,0;;m">
				</treenode>
				<treenode node="testRequirePostSucceed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;259;2;265;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequirePostSucceed method;;d42,259;;b1,0;;m">
				</treenode>
				<treenode node="testRequirePostSucceedWrongMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;357;2;363;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequirePostSucceedWrongMethod method;;d53,357;;b1,0;;m">
				</treenode>
				<treenode node="testRequirePutFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;409;2;415;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequirePutFail method;;d38,409;;b1,0;;m">
				</treenode>
				<treenode node="testRequirePutSucceed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;422;2;428;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequirePutSucceed method;;d41,422;;b1,0;;m">
				</treenode>
				<treenode node="testRequirePutSucceedWrongMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;435;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequirePutSucceedWrongMethod method;;d52,435;;b1,0;;m">
				</treenode>
				<treenode node="testRequireSecureFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;272;2;279;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireSecureFail method;;d41,272;;b1,0;;m">
				</treenode>
				<treenode node="testRequireSecureSucceed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;286;2;293;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRequireSecureSucceed method;;d44,286;;b1,0;;m">
				</treenode>
				<treenode node="testSettingTokenForRequestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1141;2;1150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a requestAction's controller will have the _Token appended to the params.;;d52,1141;;b1,0;;m">
				</treenode>
				<treenode node="testStartup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;234;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStartup method;;d31,234;;b1,0;;m">
				</treenode>
				<treenode node="testUnlockedActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1451;2;1458;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test unlocked actions;;d39,1451;;b1,0;;m">
				</treenode>
				<treenode node="testValidateHasManyModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;893;2;916;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateHasManyModel method;;d44,893;;b1,0;;m">
				</treenode>
				<treenode node="testValidateHasManyRecordsFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;996;2;1031;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateHasManyRecords method;;d50,996;;b1,0;;m">
				</treenode>
				<treenode node="testValidateHasManyRecordsPass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;923;2;958;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateHasManyRecordsPass method;;d50,923;;b1,0;;m">
				</treenode>
				<treenode node="testValidateHiddenMultipleModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;872;2;886;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateHiddenMultipleModel method;;d51,872;;b1,0;;m">
				</treenode>
				<treenode node="testValidateNestedNumericSets;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;965;2;987;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that values like Foo.0.1;;d49,965;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;487;2;499;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Simple hash validation test;;d36,487;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;567;2;579;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests validation of checkbox arrays;;d41,567;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostCheckbox;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;703;2;738;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidatePostCheckbox method;;d44,703;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostComplex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;628;2;650;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests hash validation for multiple records, including locked fields;;d43,628;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostDisabledFieldsInData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;790;2;813;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test validating post data with posted unlocked fields.;;d56,790;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostFailDisabledFieldTampering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;844;2;865;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that validatePost fails when unlocked fields are changed.;;d62,844;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostFailNoDisabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;820;2;837;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that missing 'unlocked' input causes failure;;d50,820;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostFormHacking;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;525;2;536;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that validatePost fails if any of its required fields are missing.;;d47,525;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostHidden;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;745;2;760;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidatePostHidden method;;d42,745;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostMultipleSelect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;657;2;693;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test ValidatePost with multiple select elements.;;d50,657;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostNoModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;586;2;600;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidatePostNoModel method;;d43,586;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostNoSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;506;2;518;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that validatePost fails if you are missing the session information.;;d45,506;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostObjectDeserialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;544;2;560;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that objects can't be passed into the serialized string. This was a vector for RFI and LFI attacks. Thanks to Felix Wilhelm;;d53,544;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostRadio;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1069;2;1101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRadio method;;d41,1069;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostSimple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;607;2;621;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidatePostSimple method;;d42,607;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostUrlAsHashInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;1108;2;1132;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test validatePost uses here() as a hash input.;;d50,1108;;b1,0;;m">
				</treenode>
				<treenode node="testValidatePostWithDisabledFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;767;2;783;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidatePostWithDisabledFields method;;d54,767;;b1,0;;m">
				</treenode>
				<treenode node="Controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;127;19;127;;;;vposSecurityTestController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="oldSalt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;134;16;134;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SecurityTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f0;22;1;426;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SecurityTest class;;d40,22;;b0,0;;m">
				<treenode node="testCipher;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;202;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCipher method;;d30,202;;b1,0;;m">
				</treenode>
				<treenode node="testCipherEmptyKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;234;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCipherEmptyKey method;;d38,234;;b1,0;;m">
				</treenode>
				<treenode node="testDecryptHmacFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;337;2;346;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that decrypt fails when there is an hmac error.;;d42,337;;b1,0;;m">
				</treenode>
				<treenode node="testDecryptHmacSaltFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;353;2;361;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that changing the hmac salt will cause failures.;;d46,353;;b1,0;;m">
				</treenode>
				<treenode node="testDecryptInvalidData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;420;2;424;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that empty data cause errors;;d42,420;;b1,0;;m">
				</treenode>
				<treenode node="testDecryptInvalidKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;407;2;411;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that short keys cause errors;;d41,407;;b1,0;;m">
				</treenode>
				<treenode node="testDecryptKeyFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;323;2;330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that changing the key causes decryption to fail.;;d41,323;;b1,0;;m">
				</treenode>
				<treenode node="testEncryptDecrypt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;309;2;316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test encrypt/decrypt.;;d38,309;;b1,0;;m">
				</treenode>
				<treenode node="testEncryptDecryptFalseyData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;381;2;398;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test encrypting falsey data;;d48,381;;b1,0;;m">
				</treenode>
				<treenode node="testEncryptInvalidKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;370;2;374;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that short keys cause errors;;d41,370;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateAuthkey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;52;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateAuthkey method;;d39,52;;b1,0;;m">
				</treenode>
				<treenode node="testHash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;110;2;151;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHash method;;d28,110;;b1,0;;m">
				</treenode>
				<treenode node="testHashAnotherInvalidSalt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;82;2;84;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHashAnotherInvalidSalt;;d46,82;;b1,0;;m">
				</treenode>
				<treenode node="testHashBlowfish;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;158;2;195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that hash() works with blowfish.;;d36,158;;b1,0;;m">
				</treenode>
				<treenode node="testHashInvalidCost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;102;2;104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHashInvalidCost method;;d39,102;;b1,0;;m">
				</treenode>
				<treenode node="testHashInvalidSalt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;72;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHashInvalidSalt method;;d39,72;;b1,0;;m">
				</treenode>
				<treenode node="testHashYetAnotherInvalidSalt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;92;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHashYetAnotherInvalidSalt;;d49,92;;b1,0;;m">
				</treenode>
				<treenode node="testInactiveMins;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;36;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInactiveMins method;;d36,36;;b1,0;;m">
				</treenode>
				<treenode node="testRijndael;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;245;2;262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRijndael method;;d32,245;;b1,0;;m">
				</treenode>
				<treenode node="testRijndaelBackwardCompatibility;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;269;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that rijndael() can still decrypt values with a fixed iv.;;d53,269;;b1,0;;m">
				</treenode>
				<treenode node="testRijndaelInvalidKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;298;2;302;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRijndaelInvalidKey method;;d42,298;;b1,0;;m">
				</treenode>
				<treenode node="testRijndaelInvalidOperation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;286;2;290;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRijndaelInvalidOperation method;;d48,286;;b1,0;;m">
				</treenode>
				<treenode node="testValidateAuthKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;61;2;64;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidateAuthKey method;;d39,61;;b1,0;;m">
				</treenode>
				<treenode node="sut;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php;f8;29;12;29;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SecurityTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f0;45;1;99;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     SecurityTestController;;d48,45;;b0,0;;m">
				<treenode node="fail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;73;2;75;;;;vpos;;vvoid;;r&#xA;Description&#xA;     fail method;;d24,73;;b1,0;;m">
				</treenode>
				<treenode node="header;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;95;2;97;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Convenience method for header()&#xA;&#xA;Parameters:&#xA;    string $status;;d33,95;;b1,0;;mstring $status;;p">
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f24;95;31;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;85;2;87;;;;vpos;;vvoid;;r&#xA;Description&#xA;     redirect method&#xA;&#xA;Parameters:&#xA;    string|array $url&#xA;    mixed $code&#xA;    mixed $exit;;d62,85;;b1,0;;mstring|array $url;;pmixed $code;;pmixed $exit;;p">
					<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f48;85;53;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f32;85;39;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f26;85;30;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;52;19;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="failed;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;59;15;59;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="testHeaders;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;66;20;66;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ServerShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f0;24;1;166;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     built-in Server Shell;;d35,24;;b0,0;;m">
				<treenode node="DEFAULT_HOST;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f6;31;19;31;;;;vposstring;;v;;r'localhost';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="DEFAULT_PORT;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f6;38;19;38;;;;vposint;;v;;r80;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="_welcome;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f11;109;2;117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Displays a header for the shell;;d31,109;;b2,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f8;147;2;165;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,147;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f8;66;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override initialize of the Shell;;d30,66;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f8;124;2;140;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override main() to handle action;;d24,124;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f8;82;2;102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Starts up the Shell and displays the welcome message. Allows for checking and configuring prior to command or main execution;;d27,82;;b1,0;;m">
				</treenode>
				<treenode node="_documentRoot;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f11;59;25;59;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_host;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f11;45;17;45;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_port;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php;f11;52;17;52;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SessionComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f0;30;1;188;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     The CakePHP SessionComponent provides a way to persist client data between page requests. It acts as a wrapper for the `$_SESSION` as well as providing convenience methods for several `$_SESSION` related functions.;;d41,30;;b0,0;;m">
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;93;2;95;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to check if a session variable is set&#xA;&#xA;Parameters:&#xA;    string $name - the name of the session key you want to check&#xA;&#xA;Return:&#xA;   true is session variable is set, false if not;;d30,93;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f23;93;28;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;80;2;82;;;;vpos;;vbool;;r&#xA;Description&#xA;     Wrapper for SessionComponent::del();s&#xA;&#xA;Parameters:&#xA;    string $name - the name of the session key you want to delete&#xA;&#xA;Return:&#xA;   true is session variable is set and can be deleted, false is variable was not set;;d31,80;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f24;80;29;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;158;2;160;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Used to destroy sessions;;d27,158;;b1,0;;m">
				</treenode>
				<treenode node="error;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;104;2;106;;;;vpos;;vstring;;r&#xA;Description&#xA;     Used to determine the last error in a session.&#xA;&#xA;Return:&#xA;   Last session error;;d25,104;;b1,0;;m">
				</treenode>
				<treenode node="id;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;172;2;177;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get/Set the session id.&#xA;&#xA;Parameters:&#xA;    string $id - Id to use (optional)&#xA;&#xA;Return:&#xA;   The current session id;;d32,172;;b1,0;;mstring $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f20;172;23;172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;67;2;69;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Used to read a session values for a key or return values for all keys.&#xA;&#xA;Parameters:&#xA;    string $name - the name of the session key you want to read&#xA;&#xA;Return:&#xA;   value from the session vars;;d36,67;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f22;67;27;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renew;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;135;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Used to renew a session id;;d25,135;;b1,0;;m">
				</treenode>
				<treenode node="setFlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;124;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Used to set a session variable that can be used to output messages in the view.&#xA;&#xA;Parameters:&#xA;    string $message - Message to be flashed&#xA;    string $element - Element to wrap flash message in&#xA;    array $params - Parameters to be sent to layout as view variables&#xA;    string $key - Message key, default is 'flash';;d93,124;;b1,0;;mstring $message;;pstring $element;;parray $params;;pstring $key;;p">
					<treenode node="element;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f36;124;44;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f77;124;81;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f26;124;34;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f58;124;65;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="started;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;184;2;186;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns a bool, whether or not the session has been started.;;d27,184;;b1,0;;m">
				</treenode>
				<treenode node="userAgent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;38;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Get / Set the userAgent&#xA;&#xA;Parameters:&#xA;    string $userAgent - Set the userAgent;;d46,38;;b1,0;;mstring $userAgent;;p">
					<treenode node="userAgent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f27;38;37;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="valid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;146;2;148;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to check for a valid session.&#xA;&#xA;Return:&#xA;   true is session is valid, false is session is invalid;;d25,146;;b1,0;;m">
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f8;53;2;55;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to write a value to a session key.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the key your are setting in the session&#xA;    string $value - The value you want to store in a session&#xA;&#xA;Return:&#xA;   Success;;d45,53;;b1,0;;mstring $name;;pstring $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f23;53;28;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php;f30;53;36;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SessionComponentTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f0;76;1;290;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SessionComponentTest class;;d48,76;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;115;2;119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,115;;b1,0;;m">
				</treenode>
				<treenode node="setupBeforeClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f15;92;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test case startup;;d43,92;;b1,5;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;126;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,126;;b1,0;;m">
				</treenode>
				<treenode node="teardownAfterClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f15;106;2;108;;;;vpos;;vvoid;;r&#xA;Description&#xA;     cleanup after test case.;;d45,106;;b1,5;;m">
				</treenode>
				<treenode node="testSessionCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;229;2;237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionCheck method;;d36,229;;b1,0;;m">
				</treenode>
				<treenode node="testSessionDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;215;2;222;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionDelete method;;d37,215;;b1,0;;m">
				</treenode>
				<treenode node="testSessionDestroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;281;2;288;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionDestroy method;;d38,281;;b1,0;;m">
				</treenode>
				<treenode node="testSessionError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;172;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionError method;;d36,172;;b1,0;;m">
				</treenode>
				<treenode node="testSessionFlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;244;2;262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionFlash method;;d36,244;;b1,0;;m">
				</treenode>
				<treenode node="testSessionId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;269;2;274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionId method;;d33,269;;b1,0;;m">
				</treenode>
				<treenode node="testSessionIdConsistentAcrossRequestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;136;2;146;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ensure that session ids don't change when request action is called.;;d62,136;;b1,0;;m">
				</treenode>
				<treenode node="testSessionReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;183;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionReadWrite method;;d40,183;;b1,0;;m">
				</treenode>
				<treenode node="testSessionValid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;153;2;165;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSessionValid method;;d36,153;;b1,0;;m">
				</treenode>
				<treenode node="_sessionBackup;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f18;78;33;78;;;;vpos;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;85;17;85;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SessionFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SessionFixture.php;f0;23;1;42;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class SessionFixture;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SessionFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SessionFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SessionHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f0;29;1;161;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Session Helper.;;d38,29;;b0,0;;m">
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f8;54;2;56;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to check is a session key has been set&#xA;&#xA;Parameters:&#xA;    string $name - Session key to check;;d30,54;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f23;54;28;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="error;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f8;66;2;68;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns last error encountered in a session&#xA;&#xA;Return:&#xA;   last error;;d25,66;;b1,0;;m">
				</treenode>
				<treenode node="flash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f8;117;2;149;;;;vpos;;vstring;;r&#xA;Description&#xA;     Used to render the message set in Controller::Session::setFlash()&#xA;&#xA;Parameters:&#xA;    string $key - The [Message&#xA;    array $attrs - Additional attributes to use for the creation of this flash message;;d57,117;;b1,0;;mstring $key;;parray $attrs;;p">
					<treenode node="attrs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f39;117;45;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f23;117;27;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f8;41;2;43;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Used to read a session values set in a controller for a key or return values for all keys.&#xA;&#xA;Parameters:&#xA;    string $name - the name of the session key you want to read&#xA;&#xA;Return:&#xA;   values from the session vars;;d36,41;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f22;41;27;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="valid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php;f8;157;2;159;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to check is a session is valid in a view;;d25,157;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SessionHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f0;27;1;190;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SessionHelperTest class;;d45,27;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;34;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,34;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;78;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,78;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;103;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheck method;;d29,103;;b1,0;;m">
				</treenode>
				<treenode node="testFlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;118;2;141;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFlash method;;d29,118;;b1,0;;m">
				</treenode>
				<treenode node="testFlashAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;148;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test flash() with the attributes.;;d39,148;;b1,0;;m">
				</treenode>
				<treenode node="testFlashElementInAttrs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;160;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test setting the element from the attrs.;;d43,160;;b1,0;;m">
				</treenode>
				<treenode node="testFlashWithPluginElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;177;2;189;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test using elements in plugins.;;d46,177;;b1,0;;m">
				</treenode>
				<treenode node="testRead;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php;f8;90;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRead method;;d28,90;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SessionsSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php;f0;16;1;56;;C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php;f0;26;1;56;;;;vpos;;vCakeSchema;;c;;r&#xA;Description&#xA;     Using the Schema command line utility cake schema run create Sessions;;d40,16;;b0,0;;m">
				<treenode node="after;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php;f8;41;2;42;;C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php;f8;46;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After event.&#xA;&#xA;Parameters:&#xA;    array $event - The event data;;d41,41;;b1,0;;marray $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php;f23;41;29;41;;C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php;f23;46;29;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="before;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php;f8;31;2;33;;C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php;f8;36;2;38;;;;vpos;;vbool;;r&#xA;Description&#xA;     Before event.&#xA;&#xA;Parameters:&#xA;    array $event - The event data&#xA;&#xA;Return:&#xA;   Success;;d42,31;;b1,0;;marray $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php;f24;31;30;31;;C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php;f24;36;30;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cake_sessions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php;f8;49;22;49;;C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php;f8;49;22;49;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php;f8;23;13;23;;C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php;f8;28;13;28;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SessionTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f0;26;1;44;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     SessionTestController class;;d47,26;;b0,0;;m">
				<treenode node="sessionId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;40;2;42;;;;vpos;;vstring;;r&#xA;Description&#xA;     sessionId method;;d29,40;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php;f8;33;13;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SessionTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f0;28;1;32;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Class SessionTestModel;;d37,28;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php;f8;30;17;30;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Set;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f0;27;1;1111;;;;vpos;;v;;r&#xA;Description&#xA;     Class used for manipulation of arrays.;;d10,27;;b0,0;;m">
				<treenode node="_flatten;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f18;933;2;947;;;;vpos;;varray;;r&#xA;Description&#xA;     Flattens an array for sorting&#xA;&#xA;Parameters:&#xA;    array $results - Array to flatten&#xA;    string $key - Key;;d59,933;;b2,5;;marray $results;;pstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f46;933;50;933;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f36;933;44;933;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_map;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f18;127;2;182;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Maps the given value as an object. If $value is an object, it returns $value. Otherwise it maps $value as an object of type $class, and if primary assign _name_ $key on first array. If $value is not empty, it will be used to set properties of returned object (recursively). If $key is numeric will maintain array structure&#xA;&#xA;Parameters:&#xA;    array - &amp;$array Array to map&#xA;    string $class - Class name&#xA;    bool $primary - whether to assign first array key as the _name_&#xA;&#xA;Return:&#xA;   Mapped object;;d67,127;;b2,5;;marray;;pstring $class;;pbool $primary;;p">
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f33;127;39;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f41;127;47;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f49;127;57;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="apply;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;1011;2;1024;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Allows the application of a callback method to elements of an array extracted by a Set::extract() compatible path.&#xA;&#xA;Parameters:&#xA;    mixed $path - Set-compatible path to the array value&#xA;    array $data - An array of data to extract from &amp; then process with the $callback&#xA;    mixed $callback - Callback method to be applied to extracted data&#xA;    array $options - Options are:&#xA;&#xA;Return:&#xA;   Result of the callback when applied to extracted data;;d75,1011;;b1,5;;mmixed $path;;parray $data;;pmixed $callback;;parray $options;;p">
					<treenode node="callback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f44;1011;53;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f37;1011;42;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f55;1011;63;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f30;1011;35;1011;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;650;2;672;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a particular path is set in an array&#xA;&#xA;Parameters:&#xA;    string|array $data - Data to check on&#xA;    string|array $path - A dot-separated string&#xA;&#xA;Return:&#xA;   true if path is found, false otherwise;;d51,650;;b1,5;;mstring|array $data;;pstring|array $path;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f30;650;35;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f37;650;42;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="classicExtract;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;538;2;615;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets a value from an array or object that is contained in a given path using an array path syntax, i.e.: &quot;{n}.Person.{[a-z]+}&quot; - Where &quot;{n}&quot; represents a numeric key, &quot;Person&quot; represents a string literal, and &quot;{[a-z]+}&quot; (i.e. any string literal enclosed in brackets besides {n} and {s}) is interpreted as a regular expression.&#xA;&#xA;Parameters:&#xA;    array $data - Array from where to extract&#xA;    string|array $path - As an array, or as a dot-separated string&#xA;&#xA;Return:&#xA;   An array of matched items or the content of a single selected item or null in any of these cases: $path or $data are null, no items found;;d60,538;;b1,5;;marray $data;;pstring|array $path;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f39;538;44;538;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f46;538;51;538;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="combine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;796;2;849;;;;vpos;;varray;;r&#xA;Description&#xA;     Creates an associative array using a $path1 as the path to build its keys, and optionally $path2 as path to get the values. If $path2 is not specified, all values will be initialized to null (useful for Set::merge). You can optionally group the values by what is obtained when following the path specified in $groupPath.&#xA;&#xA;Parameters:&#xA;    array|object $data - Array or object from where to extract keys and values&#xA;    string|array $path1 - As an array, or as a dot-separated string&#xA;    string|array $path2 - As an array, or as a dot-separated string&#xA;    string $groupPath - As an array, or as a dot-separated string&#xA;&#xA;Return:&#xA;   Combined array;;d88,796;;b1,5;;marray|object $data;;pstring|array $path1;;pstring|array $path2;;pstring $groupPath;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f32;796;37;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="groupPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f69;796;79;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path1;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f39;796;45;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f54;796;60;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="contains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;710;2;725;;;;vpos;;vbool;;r&#xA;Description&#xA;     Determines if one Set or array contains the exact keys and values of another.&#xA;&#xA;Parameters:&#xA;    array $val1 - First value&#xA;    array $val2 - Second value&#xA;&#xA;Return:&#xA;   true if $val1 contains $val2, false otherwise;;d54,710;;b1,5;;marray $val1;;parray $val2;;p">
					<treenode node="val1;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f33;710;38;710;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="val2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f40;710;45;710;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="countDim;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;737;2;754;;;;vpos;;vint;;r&#xA;Description&#xA;     Counts the dimensions of an array. If $all is set to false (which is the default) it will only consider the dimension of the first element in the array.&#xA;&#xA;Parameters:&#xA;    array $array - Array to count dimensions on&#xA;    bool $all - Set to true to count the dimension considering all elements in array&#xA;    int $count - Start the dimension count at this number&#xA;&#xA;Return:&#xA;   The number of dimensions in $array;;d67,737;;b1,5;;marray $array;;pbool $all;;pint $count;;p">
					<treenode node="all;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f41;737;45;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f33;737;39;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f55;737;61;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="diff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;683;2;700;;;;vpos;;varray;;r&#xA;Description&#xA;     Computes the difference between a Set and an array, two Sets, or two arrays&#xA;&#xA;Parameters:&#xA;    mixed $val1 - First value&#xA;    mixed $val2 - Second value&#xA;&#xA;Return:&#xA;   Returns the key =&gt; value pairs that are not common in $val1 and $val2;;d50,683;;b1,5;;mmixed $val1;;pmixed $val2;;p">
					<treenode node="val1;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f29;683;34;683;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="val2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f36;683;41;683;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enum;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;210;2;222;;;;vpos;;vstring;;r&#xA;Description&#xA;     Return a value from an array list if the key exists.&#xA;&#xA;Parameters:&#xA;    string $select - Key in $list to return&#xA;    array|string $list - can be an array or a comma-separated list&#xA;&#xA;Return:&#xA;   the value of the array key or null if no match;;d52,210;;b1,5;;mstring $select;;parray|string $list;;p">
					<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f38;210;43;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="select;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f29;210;36;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="expand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;922;2;924;;;;vpos;;varray;;r&#xA;Description&#xA;     Expand/unflattens a string to an array&#xA;&#xA;Parameters:&#xA;    array $data - Flattened array&#xA;    string $separator - The delimiter used;;d56,922;;b1,5;;marray $data;;pstring $separator;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f31;922;36;922;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f38;922;48;922;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extract;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;313;2;452;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Implements partial support for XPath 2.0. If $path does not contain a '/' the call is delegated to Set::classicExtract(). Also the $path and $data arguments are reversible.&#xA;&#xA;Parameters:&#xA;    string $path - An absolute XPath 2&#xA;    array $data - An array of data to extract from&#xA;    array $options - Currently only supports 'flatten' which can be disabled for higher XPath-ness&#xA;&#xA;Return:&#xA;   An array of matched items or the content of a single selected item or null in any of these cases: $path or $data are null, no items found;;d73,313;;b1,5;;mstring $path;;parray $data;;parray $options;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f39;313;44;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f53;313;61;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f32;313;37;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="filter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;63;2;65;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Filters empty elements out of a route array, excluding '0'.&#xA;&#xA;Parameters:&#xA;    array $var - Either an array to filter, or value when in callback&#xA;&#xA;Return:&#xA;   Either filtered array, or true/false when in callback;;d43,63;;b1,5;;marray $var;;p">
					<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f37;63;41;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="flatten;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;907;2;909;;;;vpos;;varray;;r&#xA;Description&#xA;     Collapses a multi-dimensional array into a single dimension, using a delimited array path for each array element's key, i.e. array(array('Foo' =&gt; array('Bar' =&gt; 'Far'))) becomes array('0.Foo.Bar' =&gt; 'Far').&#xA;&#xA;Parameters:&#xA;    array $data - Array to flatten&#xA;    string $separator - String used to separate array key elements in a path, defaults to ';;d57,907;;b1,5;;marray $data;;pstring $separator;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f32;907;37;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f39;907;49;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;233;2;278;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a series of values extracted from an array, formatted in a format string.&#xA;&#xA;Parameters:&#xA;    array $data - Source array from which to extract the data&#xA;    string $format - Format string into which values will be inserted, see sprintf()&#xA;    array $keys - An array containing one or more Set::extract()-style key paths&#xA;&#xA;Return:&#xA;   An array of strings extracted from $keys and formatted with $format;;d54,233;;b1,5;;marray $data;;pstring $format;;parray $keys;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f31;233;36;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f38;233;45;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f47;233;52;233;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;1098;2;1109;;;;vpos;;vthe;;r&#xA;Description&#xA;     Return the value at the specified position&#xA;&#xA;Parameters:&#xA;    array $input - an array&#xA;    string|array $path - string or array of array keys&#xA;&#xA;Return:&#xA;   value at the specified position or null if it doesn't exist;;d50,1098;;b1,5;;marray $input;;pstring|array $path;;p">
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f28;1098;34;1098;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f36;1098;41;1098;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;626;2;628;;;;vpos;;varray;;r&#xA;Description&#xA;     Inserts $data into an array as defined by $path.&#xA;&#xA;Parameters:&#xA;    array $list - Where to insert into&#xA;    string $path - A dot-separated string&#xA;    array $data - Data to insert;;d59,626;;b1,5;;marray $list;;pstring $path;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f45;626;50;626;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f31;626;36;626;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f38;626;43;626;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="map;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;102;2;112;;;;vpos;;vobject;;r&#xA;Description&#xA;     Maps the contents of the Set object to an object hierarchy. Maintains numeric keys as arrays of objects&#xA;&#xA;Parameters:&#xA;    string $class - A class name of the type of object to map to&#xA;    string $tmp - A temporary class name used as $class if $class is an array&#xA;&#xA;Return:&#xA;   |null Hierarchical object;;d68,102;;b1,5;;mstring $class;;pstring $tmp;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f28;102;34;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="tmp;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f49;102;53;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="matches;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;464;2;525;;;;vpos;;vbool;;r&#xA;Description&#xA;     This function can be used to see if a single item or a given xpath match certain conditions.&#xA;&#xA;Parameters:&#xA;    string|array $conditions - An array of condition strings or an XPath expression&#xA;    array $data - An array of data to execute the match on&#xA;    int $i - Optional: The 'nth'-number of the item being matched&#xA;    int $length - Length;;d89,464;;b1,5;;mstring|array $conditions;;parray $data;;pint $i;;pint $length;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f32;464;43;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f45;464;50;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="i;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f62;464;64;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f73;464;80;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="merge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;45;2;54;;;;vpos;;varray;;r&#xA;Description&#xA;     This function can be thought of as a hybrid between PHP's array_merge and array_merge_recursive. The difference to the two is that if an array key contains another array then the function behaves recursive (unlike array_merge) but does not do if for keys containing strings (unlike array_merge_recursive).&#xA;&#xA;Parameters:&#xA;    array $data - Array to be merged&#xA;    array $merge - Array to merge with&#xA;&#xA;Return:&#xA;   Merged array;;d52,45;;b1,5;;marray $data;;parray $merge;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f30;45;35;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f37;45;43;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;1038;2;1089;;;;vpos;;varray;;r&#xA;Description&#xA;     Takes in a flat array and returns a nested array&#xA;&#xA;Parameters:&#xA;    mixed $data - Data&#xA;    array $options - Options are:&#xA;&#xA;Return:&#xA;   of results, nested;;d56,1038;;b1,5;;mmixed $data;;parray $options;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f29;1038;34;1038;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f36;1038;44;1038;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="normalize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;766;2;781;;;;vpos;;varray;;r&#xA;Description&#xA;     Normalizes a string or array list.&#xA;&#xA;Parameters:&#xA;    mixed $list - List to normalize&#xA;    bool $assoc - If true, $list will be converted to an associative array&#xA;    string $sep - If $list is a string, it will be split into an array with $sep&#xA;    bool $trim - If true, separated strings will be trimmed;;d82,766;;b1,5;;mmixed $list;;pbool $assoc;;pstring $sep;;pbool $trim;;p">
					<treenode node="assoc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f41;766;47;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f34;766;39;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sep;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f56;766;60;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="trim;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f68;766;73;766;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="numeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;191;2;193;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks to see if all the values in the array are numeric&#xA;&#xA;Parameters:&#xA;    array $array - The array to check&#xA;&#xA;Return:&#xA;   true if values are numeric, false otherwise;;d47,191;;b1,5;;marray $array;;p">
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f32;191;38;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="pushDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;75;2;91;;;;vpos;;varray;;r&#xA;Description&#xA;     Pushes the differences in $array2 onto the end of $array&#xA;&#xA;Parameters:&#xA;    array $array - Original array&#xA;    array $array2 - Differences to push&#xA;&#xA;Return:&#xA;   Combined array;;d50,75;;b1,5;;marray $array;;parray $array2;;p">
					<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f33;75;39;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="array2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f41;75;48;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="remove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;638;2;640;;;;vpos;;varray;;r&#xA;Description&#xA;     Removes an element from a Set or array as defined by $path.&#xA;&#xA;Parameters:&#xA;    array $list - From where to remove&#xA;    string $path - A dot-separated string&#xA;&#xA;Return:&#xA;   Array with $path removed from its value;;d52,638;;b1,5;;marray $list;;pstring $path;;p">
					<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f31;638;36;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f38;638;43;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reverse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;858;2;895;;;;vpos;;varray;;r&#xA;Description&#xA;     Converts an object into an array.&#xA;&#xA;Parameters:&#xA;    object $object - Object to reverse&#xA;&#xA;Return:&#xA;   Array representation of given object;;d41,858;;b1,5;;mobject $object;;p">
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f32;858;39;858;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="sort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f15;958;2;993;;;;vpos;;varray;;r&#xA;Description&#xA;     Sorts an array by any value, determined by a Set-compatible path&#xA;&#xA;Parameters:&#xA;    array $data - An array of data to sort&#xA;    string $path - A Set-compatible path to the array value&#xA;    string $dir - Direction of sorting - either ascending (ASC), or descending (DESC)&#xA;&#xA;Return:&#xA;   Sorted array of data;;d49,958;;b1,5;;marray $data;;pstring $path;;pstring $dir;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f29;958;34;958;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f43;958;47;958;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php;f36;958;41;958;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SetTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f0;26;1;3565;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SetTest class;;d35,26;;b0,0;;m">
				<treenode node="method;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f15;2804;2;2807;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to test Set::apply();;d45,2804;;b1,5;;mval1;;pval2;;p">
					<treenode node="val1;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f31;2804;36;2804;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="val2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f38;2804;43;2804;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testApply;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2767;2;2797;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetApply method;;d29,2767;;b1,0;;m">
				</treenode>
				<treenode node="testCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1707;2;1722;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCheck method;;d29,1707;;b1,0;;m">
				</treenode>
				<treenode node="testClassicExtract;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1474;2;1649;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClassicExtract method;;d38,1474;;b1,0;;m">
				</treenode>
				<treenode node="testClassicExtractMaxInt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1656;2;1663;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test classicExtract with keys that exceed 32bit max int.;;d44,1656;;b1,0;;m">
				</treenode>
				<treenode node="testCombine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1850;2;1978;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCombine method;;d31,1850;;b1,0;;m">
				</treenode>
				<treenode node="testContains;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1828;2;1843;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testContains method;;d32,1828;;b1,0;;m">
				</treenode>
				<treenode node="testCountDim;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2287;2;2334;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCountDim method;;d32,2287;;b1,0;;m">
				</treenode>
				<treenode node="testDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1746;2;1821;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDiff method;;d28,1746;;b1,0;;m">
				</treenode>
				<treenode node="testEnum;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;44;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEnum method;;d28,44;;b1,0;;m">
				</treenode>
				<treenode node="testExpand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3097;2;3102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests Set::expand;;d30,3097;;b1,0;;m">
				</treenode>
				<treenode node="testExtract;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;393;2;1005;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExtract method;;d31,393;;b1,0;;m">
				</treenode>
				<treenode node="testExtractMatchesNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1357;2;1379;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that extract() + matching can hit null things.;;d42,1357;;b1,0;;m">
				</treenode>
				<treenode node="testExtractParentSelector;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1012;2;1181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test parent selectors with extract;;d45,1012;;b1,0;;m">
				</treenode>
				<treenode node="testExtractWithArrays;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1293;2;1302;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExtractWithArrays method;;d41,1293;;b1,0;;m">
				</treenode>
				<treenode node="testExtractWithNonArrayElements;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1309;2;1350;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test extract() with elements that have non-array children.;;d51,1309;;b1,0;;m">
				</treenode>
				<treenode node="testExtractWithNonZeroArrays;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1188;2;1286;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that extract() still works when arrays don't contain a 0 index.;;d48,1188;;b1,0;;m">
				</treenode>
				<treenode node="testFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;85;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFilter method;;d30,85;;b1,0;;m">
				</treenode>
				<treenode node="testFlatten;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3067;2;3090;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests Set::flatten;;d31,3067;;b1,0;;m">
				</treenode>
				<treenode node="testFormatting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2220;2;2260;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormatting method;;d34,2220;;b1,0;;m">
				</treenode>
				<treenode node="testFormattingNullValues;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2267;2;2280;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFormattingNullValues method;;d44,2267;;b1,0;;m">
				</treenode>
				<treenode node="testInsert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1671;2;1682;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInsert method;;d30,1671;;b1,0;;m">
				</treenode>
				<treenode node="testKeyCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;107;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testKeyCheck method;;d32,107;;b1,0;;m">
				</treenode>
				<treenode node="testMapNesting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2341;2;2460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapNesting method;;d34,2341;;b1,0;;m">
				</treenode>
				<treenode node="testMapReverse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1985;2;2213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapReverse method;;d34,1985;;b1,0;;m">
				</treenode>
				<treenode node="testMatches;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1386;2;1449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMatches method;;d31,1386;;b1,0;;m">
				</treenode>
				<treenode node="testMerge;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;144;2;219;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMerge method;;d29,144;;b1,0;;m">
				</treenode>
				<treenode node="testMissingParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3523;2;3564;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Set nest with no specified parent data.;;d37,3523;;b1,0;;m">
				</treenode>
				<treenode node="testNest1Dimensional;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3413;2;3513;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Set nest with a 1d array - this method should be able to handle any type of array input;;d40,3413;;b1,0;;m">
				</treenode>
				<treenode node="testNestedMappedData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2467;2;2715;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNestedMappedData method;;d40,2467;;b1,0;;m">
				</treenode>
				<treenode node="testNestModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3156;2;3296;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Set nest with a normal model result set. For kicks rely on Set nest detecting the key names automatically;;d33,3156;;b1,0;;m">
				</treenode>
				<treenode node="testNestModelExplicitRoot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3303;2;3406;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Set nest with a normal model result set, and a nominated root id;;d45,3303;;b1,0;;m">
				</treenode>
				<treenode node="testNormalizeArrays;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3128;2;3148;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test normalizing arrays;;d39,3128;;b1,0;;m">
				</treenode>
				<treenode node="testNormalizeStrings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3109;2;3121;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test normalization;;d40,3109;;b1,0;;m">
				</treenode>
				<treenode node="testNumericArrayCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;97;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNumericArrayCheck method;;d41,97;;b1,0;;m">
				</treenode>
				<treenode node="testNumericKeyExtraction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;33;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNumericKeyExtraction method;;d44,33;;b1,0;;m">
				</treenode>
				<treenode node="testPushDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2722;2;2760;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPushDiff method;;d32,2722;;b1,0;;m">
				</treenode>
				<treenode node="testRemove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1689;2;1700;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemove method;;d30,1689;;b1,0;;m">
				</treenode>
				<treenode node="testSetExtractReturnsEmptyArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1456;2;1467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSetExtractReturnsEmptyArray method;;d51,1456;;b1,0;;m">
				</treenode>
				<treenode node="testSort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;226;2;335;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSort method;;d28,226;;b1,0;;m">
				</treenode>
				<treenode node="testSortString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;342;2;359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sorting with string keys.;;d34,342;;b1,0;;m">
				</treenode>
				<treenode node="testSortWithOutOfOrderKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;366;2;386;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test sorting with out of order keys.;;d46,366;;b1,0;;m">
				</treenode>
				<treenode node="testStrictKeyCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;3056;2;3059;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStrictKeyCheck method;;d38,3056;;b1,0;;m">
				</treenode>
				<treenode node="testWritingWithFunkyKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;1729;2;1739;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWritingWithFunkyKeys method;;d44,1729;;b1,0;;m">
				</treenode>
				<treenode node="testXmlSetReverse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php;f8;2814;2;3049;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testXmlSetReverse method;;d37,2814;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Shell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f0;30;19;30;;;;vpos;;v;;r&#xA;Description&#xA;     Base class for command-line utilities for automating programmer chores.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ShellDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f0;22;1;369;;;;vpos;;v;;r&#xA;Description&#xA;     Shell dispatcher handles dispatching cli commands.;;d22,22;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;47;2;55;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    array $args - the argv from PHP&#xA;    bool $bootstrap - Should the environment be bootstrapped;;d65,47;;b1,0;;marray $args;;pbool $bootstrap;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f29;47;34;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="bootstrap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f46;47;56;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_bootstrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f11;120;2;153;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initializes the environment and loads the CakePHP core.&#xA;&#xA;Return:&#xA;   Success;;d33,120;;b2,0;;m">
				</treenode>
				<treenode node="_getShell;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f11;238;2;256;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get shell to use, either plugin shell or application shell&#xA;&#xA;Parameters:&#xA;    string $shell - Optionally the name of a plugin&#xA;&#xA;Return:&#xA;   An object;;d38,238;;b2,0;;mstring $shell;;p">
					<treenode node="shell;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f30;238;36;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_initConstants;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f11;73;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Defines core configuration.;;d37,73;;b2,0;;m">
				</treenode>
				<treenode node="_initEnvironment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f11;98;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Defines current working environment.;;d39,98;;b2,0;;m">
				</treenode>
				<treenode node="_parsePaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f11;324;2;338;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parses out the paths from from the argv&#xA;&#xA;Parameters:&#xA;    array $args - The argv to parse;;d39,324;;b2,0;;marray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f32;324;37;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_stop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f11;365;2;367;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Stop execution of the current script&#xA;&#xA;Parameters:&#xA;    int|string $status - see http://php;;d39,365;;b2,0;;mint|string $status;;p">
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f26;365;33;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;187;2;227;;;;vpos;;vbool;;r&#xA;Description&#xA;     Dispatches a CLI request;;d28,187;;b1,0;;m">
				</treenode>
				<treenode node="help;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;354;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Shows console help. Performs an internal dispatch to the CommandList Shell;;d24,354;;b1,0;;m">
				</treenode>
				<treenode node="parseParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;264;2;316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parses command line options and extracts the directory paths from $params&#xA;&#xA;Parameters:&#xA;    array $args - Parameters to parse;;d36,264;;b1,0;;marray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f29;264;34;264;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="run;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f15;63;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run the dispatcher&#xA;&#xA;Parameters:&#xA;    array $argv - The argv from PHP;;d35,63;;b1,5;;marray $argv;;p">
					<treenode node="argv;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f28;63;33;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setErrorHandlers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;163;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the error/exception handlers for the console based on the `Error.consoleHandler`, and `Exception.consoleHandler` values if they are set. If they are not set, the default ConsoleErrorHandler will be used.;;d36,163;;b1,0;;m">
				</treenode>
				<treenode node="shiftArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;345;2;347;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Removes first argument and shifts other arguments up&#xA;&#xA;Return:&#xA;   Null if there are no arguments otherwise the shifted argument;;d29,345;;b1,0;;m">
				</treenode>
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;36;13;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php;f8;29;15;29;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ShellDispatcherTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f0;104;1;565;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ShellDispatcherTest;;d47,104;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;111;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,111;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;129;2;132;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,129;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchNotAShellWithMain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;479;2;503;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify correct dispatch of custom classes with a main method;;d49,479;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchNotAShellWithoutMain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;510;2;534;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify correct dispatch of custom classes without a main method;;d52,510;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchShellWithMain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;436;2;451;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify correct dispatch of Shell subclasses with a main method;;d45,436;;b1,0;;m">
				</treenode>
				<treenode node="testDispatchShellWithoutMain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;458;2;472;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify correct dispatch of Shell subclasses without a main method;;d48,458;;b1,0;;m">
				</treenode>
				<treenode node="testGetShell;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;411;2;429;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify loading of (plugin-) shells;;d32,411;;b1,0;;m">
				</treenode>
				<treenode node="testParseParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;139;2;404;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testParseParams method;;d35,139;;b1,0;;m">
				</treenode>
				<treenode node="testShiftArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;541;2;563;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Verify shifting of arguments;;d33,541;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f0;121;1;932;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ShellTest class;;d37,121;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;138;2;150;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,138;;b1,0;;m">
				</treenode>
				<treenode node="testConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;157;2;162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConstruct method;;d33,157;;b1,0;;m">
				</treenode>
				<treenode node="testCreateFileInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;626;2;662;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test createFile when the shell is interactive.;;d45,626;;b1,0;;m">
				</treenode>
				<treenode node="testCreateFileNonInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;598;2;619;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCreateFile method;;d48,598;;b1,0;;m">
				</treenode>
				<treenode node="testCreateFileNoPermissions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;669;2;685;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that you can't create files that aren't writable.;;d47,669;;b1,0;;m">
				</treenode>
				<treenode node="testErr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;405;2;429;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testErr method;;d27,405;;b1,0;;m">
				</treenode>
				<treenode node="testError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;480;2;500;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testError;;d29,480;;b1,0;;m">
				</treenode>
				<treenode node="testFileAndConsoleLogging;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;875;2;900;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test file and console and logging;;d45,875;;b1,0;;m">
				</treenode>
				<treenode node="testGetOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;862;2;868;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that option parsers are created with the correct name/command.;;d39,862;;b1,0;;m">
				</treenode>
				<treenode node="testHasMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;709;2;714;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the hasMethod;;d33,709;;b1,0;;m">
				</treenode>
				<treenode node="testHasTask;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;692;2;702;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test hasTask method;;d31,692;;b1,0;;m">
				</treenode>
				<treenode node="testHr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;453;2;473;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHr;;d26,453;;b1,0;;m">
				</treenode>
				<treenode node="testIn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;245;2;287;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIn method;;d26,245;;b1,0;;m">
				</treenode>
				<treenode node="testInitialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;188;2;212;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInitialize method;;d34,188;;b1,0;;m">
				</treenode>
				<treenode node="testInNonInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;294;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test in() when not interactive.;;d40,294;;b1,0;;m">
				</treenode>
				<treenode node="testLoadModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;219;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadModel method;;d33,219;;b1,0;;m">
				</treenode>
				<treenode node="testLoadTasks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;507;2;537;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLoadTasks method;;d33,507;;b1,0;;m">
				</treenode>
				<treenode node="testMagicGetArgAndParamReferences;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;544;2;555;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that __get() makes args and params references;;d53,544;;b1,0;;m">
				</treenode>
				<treenode node="testMergeVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;169;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test merging vars;;d33,169;;b1,0;;m">
				</treenode>
				<treenode node="testNl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;436;2;446;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNl;;d26,436;;b1,0;;m">
				</treenode>
				<treenode node="testOut;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;306;2;330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testOut method;;d27,306;;b1,0;;m">
				</treenode>
				<treenode node="testOverwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;375;2;398;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test overwriting.;;d33,375;;b1,0;;m">
				</treenode>
				<treenode node="testProtectedUseLogger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;907;2;916;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that _useLogger works properly;;d42,907;;b1,0;;m">
				</treenode>
				<treenode node="testQuietLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;923;2;930;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test file and console and logging quiet output;;d32,923;;b1,0;;m">
				</treenode>
				<treenode node="testQuietOutput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;358;2;368;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that verbose and quiet output levels work;;d35,358;;b1,0;;m">
				</treenode>
				<treenode node="testRunCommandBaseclassMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;747;2;758;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test run command causing exception on Shell method.;;d49,747;;b1,0;;m">
				</treenode>
				<treenode node="testRunCommandHittingTask;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;804;2;819;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that runCommand will call runCommand on the task.;;d45,804;;b1,0;;m">
				</treenode>
				<treenode node="testRunCommandMain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;721;2;727;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test run command calling main.;;d38,721;;b1,0;;m">
				</treenode>
				<treenode node="testRunCommandMissingMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;765;2;777;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test run command causing exception on Shell method.;;d47,765;;b1,0;;m">
				</treenode>
				<treenode node="testRunCommandTriggeringHelp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;784;2;797;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that a --help causes help to show.;;d48,784;;b1,0;;m">
				</treenode>
				<treenode node="testRunCommandWithMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;734;2;740;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test run command calling a legit method.;;d44,734;;b1,0;;m">
				</treenode>
				<treenode node="testShellNaming;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;850;2;855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Testing camel cased naming of tasks;;d35,850;;b1,0;;m">
				</treenode>
				<treenode node="testShortPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;562;2;591;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testShortPath method;;d33,562;;b1,0;;m">
				</treenode>
				<treenode node="testVerboseOutput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;337;2;351;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that verbose and quiet output levels work;;d37,337;;b1,0;;m">
				</treenode>
				<treenode node="testWrapText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;826;2;843;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test wrapBlock wrapping text.;;d32,826;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;128;17;128;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ShellTestShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f0;29;1;85;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     ShellTestShell class;;d35,29;;b0,0;;m">
				<treenode node="_secret;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f11;62;2;63;;;;vpos;;v;;r;;d30,62;;b2,0;;m">
				</treenode>
				<treenode node="_stop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f11;58;2;60;;;;vpos;;vvoid;;r&#xA;Description&#xA;     stop method&#xA;&#xA;Parameters:&#xA;    int $status;;d39,58;;b2,0;;mint $status;;p">
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f26;58;33;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="do_something;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;66;2;67;;;;vpos;;v;;r;;d32,66;;b1,0;;m">
				</treenode>
				<treenode node="log_something;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;72;2;74;;;;vpos;;v;;r;;d33,72;;b1,0;;m">
				</treenode>
				<treenode node="mergeVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;77;2;79;;;;vpos;;v;;r;;d67,77;;b1,0;;mproperties;;pclass;;pnormalize;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f40;77;46;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="normalize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f48;77;58;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="properties;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f27;77;38;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="no_access;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f11;69;2;70;;;;vpos;;v;;r;;d32,69;;b2,0;;m">
				</treenode>
				<treenode node="useLogger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;81;2;83;;;;vpos;;v;;r;;d43,81;;b1,0;;menable;;p">
					<treenode node="enable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f27;81;34;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;36;13;36;;;;vposname;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="stopped;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;43;16;43;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="testMessage;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;50;20;50;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SimplePasswordHasher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php;f0;23;1;54;;;;vpos;;vAbstractPasswordHasher;;c;;r&#xA;Description&#xA;     Simple password hashing class.;;d58,23;;b0,0;;m">
				<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php;f8;50;2;52;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check hash. Generate hash for user provided password and check against existing hash.&#xA;&#xA;Parameters:&#xA;    string $password - Plain text password to hash&#xA;    string $hashedPassword - Existing hashed password&#xA;&#xA;Return:&#xA;   True if hashes match else false;;d51,50;;b1,0;;mstring $password;;pstring $hashedPassword;;p">
					<treenode node="hashedPassword;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php;f34;50;49;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php;f23;50;32;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php;f8;39;2;41;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates password hash.&#xA;&#xA;Parameters:&#xA;    string $password - Plain text password to hash&#xA;&#xA;Return:&#xA;   Password hash;;d33,39;;b1,0;;mstring $password;;p">
					<treenode node="password;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php;f22;39;31;39;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php;f11;30;19;30;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="Site;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3551;1;3560;;;;vpos;;vCakeTestModel;;c;;r;;d33,3551;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3557;28;3557;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3553;13;3553;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3555;17;3555;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SiteFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SiteFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class SiteFixture;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SiteFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SiteFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SmtpTestTransport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f0;26;1;68;;;;vpos;;vSmtpTransport;;c;;r&#xA;Description&#xA;     Help to test SmtpTransport;;d46,26;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;63;2;66;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Magic function to call protected methods&#xA;&#xA;Parameters:&#xA;    string $method&#xA;    string $args;;d40,63;;b1,0;;mstring $method;;pstring $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f33;63;38;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f24;63;31;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_generateSocket;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f11;53;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Disabled the socket change;;d38,53;;b2,0;;m">
				</treenode>
				<treenode node="setCakeEmail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;44;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper to change the CakeEmail&#xA;&#xA;Parameters:&#xA;    object $cakeEmail;;d42,44;;b1,0;;mobject $cakeEmail;;p">
					<treenode node="cakeEmail;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f30;44;40;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setSocket;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;34;2;36;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper to change the socket&#xA;&#xA;Parameters:&#xA;    object $socket;;d47,34;;b1,0;;mobject $socket;;p">
					<treenode node="socket;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f38;34;45;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="SmtpTransport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f0;25;1;376;;;;vpos;;vAbstractTransport;;c;;r&#xA;Description&#xA;     Send mail using SMTP protocol;;d46,25;;b0,0;;m">
				<treenode node="_auth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;191;2;211;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Send authentication;;d28,191;;b2,0;;m">
				</treenode>
				<treenode node="_bufferResponseLines;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;132;2;143;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Parses and stores the reponse lines in `'code' =&gt; 'message'` format.&#xA;&#xA;Parameters:&#xA;    array $responseLines - Response lines to parse;;d63,132;;b2,0;;marray $responseLines;;p">
					<treenode node="responseLines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f47;132;61;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;151;2;183;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Connect to SMTP Server;;d31,151;;b2,0;;m">
				</treenode>
				<treenode node="_disconnect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;323;2;326;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Disconnect;;d34,323;;b2,0;;m">
				</treenode>
				<treenode node="_generateSocket;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;334;2;336;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to generate socket;;d38,334;;b2,0;;m">
				</treenode>
				<treenode node="_prepareFromAddress;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;238;2;244;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepares the `from` email address.;;d42,238;;b2,0;;m">
				</treenode>
				<treenode node="_prepareFromCmd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;219;2;221;;;;vpos;;vstring;;r&#xA;Description&#xA;     Prepares the `MAIL FROM` SMTP command.&#xA;&#xA;Parameters:&#xA;    string $email - The email address to send with the command;;d44,219;;b2,0;;mstring $email;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f36;219;42;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_prepareMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;272;2;283;;;;vpos;;vstring;;r&#xA;Description&#xA;     Prepares the message body.;;d38,272;;b2,0;;m">
				</treenode>
				<treenode node="_prepareMessageHeaders;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;263;2;265;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepares the message headers.;;d45,263;;b2,0;;m">
				</treenode>
				<treenode node="_prepareRcptCmd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;229;2;231;;;;vpos;;vstring;;r&#xA;Description&#xA;     Prepares the `RCPT TO` SMTP command.&#xA;&#xA;Parameters:&#xA;    string $email - The email address to send with the command;;d44,229;;b2,0;;mstring $email;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f36;229;42;229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_prepareRecipientAddresses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;251;2;256;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepares the recipient email addresses.;;d49,251;;b2,0;;m">
				</treenode>
				<treenode node="_sendData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;307;2;315;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Send Data;;d32,307;;b2,0;;m">
				</treenode>
				<treenode node="_sendRcpt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;291;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Send emails;;d32,291;;b2,0;;m">
				</treenode>
				<treenode node="_smtpSend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;346;2;374;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Protected method for sending data to SMTP connection&#xA;&#xA;Parameters:&#xA;    string $data - data to be sent to SMTP server&#xA;    string|bool $checkCode - code to check for in server response, false to skip;;d57,346;;b2,0;;mstring $data;;pstring|bool $checkCode;;p">
					<treenode node="checkCode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f37;346;47;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f30;346;35;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f8;109;2;124;;;;vpos;;varray;;r&#xA;Description&#xA;     Set the configuration&#xA;&#xA;Parameters:&#xA;    array $config - Configuration options&#xA;&#xA;Return:&#xA;   Returns configs;;d40,109;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f24;109;31;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLastResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f8;80;2;82;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the response of the last sent SMTP command.;;d35,80;;b1,0;;m">
				</treenode>
				<treenode node="send;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f8;91;2;101;;;;vpos;;varray;;r&#xA;Description&#xA;     Send mail&#xA;&#xA;Parameters:&#xA;    CakeEmail $email - CakeEmail;;d40,91;;b1,0;;mCakeEmail $email;;p">
					<treenode node="email;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f32;91;38;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_cakeEmail;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;39;22;39;;;;vposCakeEmail;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;46;20;46;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_lastResponse;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;53;25;53;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_socket;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php;f11;32;19;32;;;;vposCakeSocket;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SmtpTransportTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f0;74;1;539;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test case;;d45,74;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;81;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup;;d25,81;;b1,0;;m">
				</treenode>
				<treenode node="testAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;214;2;226;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuth method;;d28,214;;b1,0;;m">
				</treenode>
				<treenode node="testAuthBadPassword;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;298;2;310;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthBadPassword method;;d39,298;;b1,0;;m">
				</treenode>
				<treenode node="testAuthBadSequence;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;265;2;271;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthBadSequence method;;d39,265;;b1,0;;m">
				</treenode>
				<treenode node="testAuthBadUsername;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;280;2;289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthBadUsername method;;d39,280;;b1,0;;m">
				</treenode>
				<treenode node="testAuthNoAuth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;317;2;322;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthNoAuth method;;d34,317;;b1,0;;m">
				</treenode>
				<treenode node="testAuthNotImplemented;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;250;2;256;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthNotImplemented method;;d42,250;;b1,0;;m">
				</treenode>
				<treenode node="testAuthNotRecognized;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;235;2;241;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAuthNotRecognized method;;d41,235;;b1,0;;m">
				</treenode>
				<treenode node="testBufferResponseLines;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;517;2;538;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBufferResponseLines method;;d43,517;;b1,0;;m">
				</treenode>
				<treenode node="testConnectEhlo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;95;2;103;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectEhlo method;;d35,95;;b1,0;;m">
				</treenode>
				<treenode node="testConnectEhloNoTlsOnRequiredTlsServer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;156;2;169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectEhloNoTlsOnRequiredTlsServer method;;d59,156;;b1,0;;m">
				</treenode>
				<treenode node="testConnectEhloTls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;110;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectEhloTls method;;d38,110;;b1,0;;m">
				</treenode>
				<treenode node="testConnectEhloTlsOnNonTlsServer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;135;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectEhloTlsOnNonTlsServer method;;d52,135;;b1,0;;m">
				</treenode>
				<treenode node="testConnectFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;196;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectFail method;;d35,196;;b1,0;;m">
				</treenode>
				<treenode node="testConnectHelo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;176;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testConnectHelo method;;d35,176;;b1,0;;m">
				</treenode>
				<treenode node="testEmptyConfigArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;439;2;449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEmptyConfigArray method;;d40,439;;b1,0;;m">
				</treenode>
				<treenode node="testGetLastResponse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;456;2;510;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetLastResponse method;;d39,456;;b1,0;;m">
				</treenode>
				<treenode node="testQuit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;429;2;432;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testQuit method;;d28,429;;b1,0;;m">
				</treenode>
				<treenode node="testRcpt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;329;2;354;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRcpt method;;d28,329;;b1,0;;m">
				</treenode>
				<treenode node="testRcptWithReturnPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;361;2;376;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRcptWithReturnPath method;;d42,361;;b1,0;;m">
				</treenode>
				<treenode node="testSendData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php;f8;383;2;422;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSendData method;;d32,383;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SocketException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;564;1;565;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for Socket. This exception will be thrown from CakeSocket, CakeEmail, HttpSocket SmtpTransport, MailTransport and HttpResponse when it encounters an error.;;d44,564;;b0,0;;m">
			</treenode>
			<treenode node="SomePagesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;164;1;211;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     SomePagesController class;;d48,164;;b0,0;;m">
				<treenode node="display;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;179;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     display method&#xA;&#xA;Parameters:&#xA;    string $page;;d39,179;;b1,0;;mstring $page;;p">
					<treenode node="page;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f25;179;30;179;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;188;2;190;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,188;;b1,0;;m">
				</treenode>
				<treenode node="responseGenerator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;197;2;199;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     Test method for returning responses.;;d37,197;;b1,0;;m">
				</treenode>
				<treenode node="sendfile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;206;2;209;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     Test file sending;;d28,206;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;171;13;171;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SomePostsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;329;1;377;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     SomePostsController class;;d48,329;;b0,0;;m">
				<treenode node="beforeFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;350;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeFilter method;;d32,350;;b1,0;;m">
				</treenode>
				<treenode node="change;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;373;2;375;;;;vpos;;vvoid;;r&#xA;Description&#xA;     change method;;d26,373;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;364;2;366;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,364;;b1,0;;m">
				</treenode>
				<treenode node="autoRender;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;343;19;343;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;336;13;336;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Something;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1479;1;1494;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Something class;;d38,1479;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1493;28;1493;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1486;13;1486;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SomethingElse;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1501;1;1533;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SomethingElse class;;d42,1501;;b0,0;;m">
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1524;2;1531;;;;vpos;;varray;;r&#xA;Description&#xA;     afterFind callBack&#xA;&#xA;Parameters:&#xA;    array $results&#xA;    bool $primary;;d55,1524;;b1,0;;marray $results;;pbool $primary;;p">
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;1524;45;1524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;1524;35;1524;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1515;28;1515;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1508;13;1508;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SomethingElseFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingElseFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class SomethingElseFixture;;d51,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingElseFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingElseFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SomethingFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class SomethingFixture;;d47,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SomethingWithEmailComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f0;183;1;191;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     SomethingWithEmailComponent class;;d52,183;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php;f8;190;19;190;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Sqlite;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f0;28;1;590;;;;vpos;;vDboSource;;c;;r&#xA;Description&#xA;     DBO implementation for the SQLite3 DBMS.;;d31,28;;b0,0;;m">
				<treenode node="_dropTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f11;568;2;570;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a &quot;drop table&quot; statement for the given table&#xA;&#xA;Parameters:&#xA;    type $table - Name of the table to drop&#xA;&#xA;Return:&#xA;   Drop table SQL statement;;d39,568;;b2,0;;mtype $table;;p">
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f31;568;37;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;400;2;428;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a database-native column schema string&#xA;&#xA;Parameters:&#xA;    array $column - An array structured like the following: array('name'=&gt;'value', 'type'=&gt;'value'[, options]),;;d38,400;;b1,0;;marray $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f29;400;36;400;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;459;2;488;;;;vpos;;vstring;;r&#xA;Description&#xA;     Removes redundant primary key indexes, as they are handled in the column def of the key.&#xA;&#xA;Parameters:&#xA;    array $indexes - The indexes to build&#xA;    string $table - The table name&#xA;&#xA;Return:&#xA;   The completed index;;d53,459;;b1,0;;marray $indexes;;pstring $table;;p">
					<treenode node="indexes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f28;459;36;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f38;459;44;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="column;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;244;2;284;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts database-layer column types to basic types&#xA;&#xA;Parameters:&#xA;    string $real - Real database-layer column type (i&#xA;&#xA;Return:&#xA;   Abstract column type (i;;d31,244;;b1,0;;mstring $real;;p">
					<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f24;244;29;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;107;2;123;;;;vpos;;vbool;;r&#xA;Description&#xA;     Connects to the database using config['database'] as a filename.;;d27,107;;b1,0;;m">
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;166;2;199;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of the fields in given table name.&#xA;&#xA;Parameters:&#xA;    Model|string $model - Either the model or table name you want described&#xA;&#xA;Return:&#xA;   Fields in table;;d34,166;;b1,0;;mModel|string $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f26;166;32;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;130;2;132;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check whether the SQLite extension is installed/loaded;;d27,130;;b1,0;;m">
				</treenode>
				<treenode node="fetchResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;359;2;373;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Fetches the next row from the current result set&#xA;&#xA;Return:&#xA;   array with results fetched and mapped to column names or false if there is no results left to fetch;;d31,359;;b1,0;;m">
				</treenode>
				<treenode node="getEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;448;2;450;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the database encoding&#xA;&#xA;Return:&#xA;   The database encoding;;d31,448;;b1,0;;m">
				</treenode>
				<treenode node="getSchemaName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;577;2;579;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the schema name&#xA;&#xA;Return:&#xA;   The schema name;;d33,577;;b1,0;;m">
				</treenode>
				<treenode node="hasResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;558;2;560;;;;vpos;;vbool;;r&#xA;Description&#xA;     PDO deals in objects, not resources, so overload accordingly.;;d29,558;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;497;2;528;;;;vpos;;varray;;r&#xA;Description&#xA;     Overrides DboSource::index to handle SQLite index introspection Returns an array of the indexes in given table name.&#xA;&#xA;Parameters:&#xA;    string $model - Name of model to inspect&#xA;&#xA;Return:&#xA;   Fields in table;;d31,497;;b1,0;;mstring $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f23;497;29;497;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="limit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;382;2;391;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a limit statement in the correct format for the particular database.&#xA;&#xA;Parameters:&#xA;    int $limit - Limit of results returned&#xA;    int $offset - Offset from which to start results&#xA;&#xA;Return:&#xA;   SQL limit/offset statement;;d47,382;;b1,0;;mint $limit;;pint $offset;;p">
					<treenode node="limit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f23;382;29;382;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f31;382;38;382;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;140;2;158;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of tables in the database. If there are no tables, an error is raised and the application exits.&#xA;&#xA;Parameters:&#xA;    mixed $data - Unused&#xA;&#xA;Return:&#xA;   Array of table names in the database;;d43,140;;b1,0;;mmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f29;140;34;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nestedTransactionSupported;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;586;2;588;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the server support nested transactions;;d46,586;;b1,0;;m">
				</treenode>
				<treenode node="renderStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;537;2;551;;;;vpos;;vstring;;r&#xA;Description&#xA;     Overrides DboSource::renderStatement to handle schema generation with SQLite-style indexes&#xA;&#xA;Parameters:&#xA;    string $type - The type of statement being rendered&#xA;    array $data - The data to convert to SQL;;d47,537;;b1,0;;mstring $type;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f40;537;45;537;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f33;537;38;537;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resultSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;292;2;352;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Generate ResultSet&#xA;&#xA;Parameters:&#xA;    mixed $results - The results to modify;;d37,292;;b1,0;;mmixed $results;;p">
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f27;292;35;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;436;2;441;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the database encoding&#xA;&#xA;Parameters:&#xA;    string $enc - Database encoding;;d35,436;;b1,0;;mstring $enc;;p">
					<treenode node="enc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f29;436;33;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="truncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;231;2;236;;;;vpos;;vbool;;r&#xA;Description&#xA;     Deletes all the records in a table and resets the count of the auto-incrementing primary key, where applicable.&#xA;&#xA;Parameters:&#xA;    string|Model $table - A string or model class representing the table to be truncated&#xA;&#xA;Return:&#xA;   SQL TRUNCATE TABLE statement, false if not applicable;;d34,231;;b1,0;;mstring|Model $table;;p">
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f26;231;32;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;210;2;222;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates and executes an SQL UPDATE statement for given model, fields, and values.&#xA;&#xA;Parameters:&#xA;    Model $model - The model instance to update&#xA;    array $fields - The fields to update&#xA;    array $values - The values to set columns to&#xA;    mixed $conditions - array of conditions to use;;d93,210;;b1,0;;mModel $model;;parray $fields;;parray $values;;pmixed $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f73;210;84;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f38;210;45;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f30;210;36;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f57;210;64;210;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_baseConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f11;56;23;56;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="columns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;67;16;67;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;35;20;35;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="endQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;49;17;49;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fieldParameters;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;88;24;88;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="startQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php;f8;42;19;42;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqliteTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f0;65;1;562;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     DboSqliteTest class;;d38,65;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;93;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up a Dbo class instance for testing;;d25,93;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;107;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up a Dbo class instance for testing;;d28,107;;b1,0;;m">
				</treenode>
				<treenode node="testBuildColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;193;2;279;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test building columns with SQLite;;d35,193;;b1,0;;m">
				</treenode>
				<treenode node="testCacheKeyName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;164;2;186;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that cached table descriptions are saved under the sanitized key name;;d36,164;;b1,0;;m">
				</treenode>
				<treenode node="testDatatypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;345;2;387;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that datatypes are reflected;;d33,345;;b1,0;;m">
				</treenode>
				<treenode node="testDescribe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;286;2;338;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test describe() and normal results.;;d32,286;;b1,0;;m">
				</treenode>
				<treenode node="testDescribeWithUuidPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;394;2;422;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that describe does not corrupt UUID primary keys;;d50,394;;b1,0;;m">
				</treenode>
				<treenode node="testFetchRowColumnParsing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;525;2;560;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that fields are parsed out in a reasonable fashion.;;d45,525;;b1,0;;m">
				</treenode>
				<treenode node="testIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;133;2;157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Index introspection.;;d29,133;;b1,0;;m">
				</treenode>
				<treenode node="testLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;500;2;518;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the limit function.;;d29,500;;b1,0;;m">
				</treenode>
				<treenode node="testNestedTransaction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;467;2;493;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test nested transaction;;d41,467;;b1,0;;m">
				</treenode>
				<treenode node="testTableListCacheDisabling;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;117;2;126;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that SELECT queries from DboSqlite::listSources() are not cached;;d47,117;;b1,0;;m">
				</treenode>
				<treenode node="testUuidPrimaryKeyInsertion;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;446;2;460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that records can be inserted with UUID primary keys, and that the primary key is not blank;;d47,446;;b1,0;;m">
				</treenode>
				<treenode node="testVirtualFieldWithFunction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;429;2;438;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test virtualFields with functions.;;d48,429;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;72;21;72;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Dbo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;86;12;86;;;;vposDboSource;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php;f8;79;17;79;;;;vposobject;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Sqlserver;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f0;30;1;815;;;;vpos;;vDboSource;;c;;r&#xA;Description&#xA;     Dbo layer for Microsoft's official SQLServer driver;;d34,30;;b0,0;;m">
				<treenode node="ROW_COUNTER;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f6;112;18;112;;;;vposstring;;v;;r'_cake_page_rownum_';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="_dropTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f11;802;2;804;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a &quot;drop table&quot; statement for the given table&#xA;&#xA;Parameters:&#xA;    type $table - Name of the table to drop&#xA;&#xA;Return:&#xA;   Drop table SQL statement;;d39,802;;b2,0;;mtype $table;;p">
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f31;802;37;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f11;770;2;794;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Executes given SQL statement.&#xA;&#xA;Parameters:&#xA;    string $sql - SQL statement&#xA;    array $params - list of params to be bound to query (supported only in select)&#xA;    array $prepareOptions - Options to be used in the prepare statement&#xA;&#xA;Return:&#xA;   PDOStatement if query executes with no problem, true as the result of a successful, false on error;;d81,770;;b2,0;;mstring $sql;;parray $params;;parray $prepareOptions;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f35;770;42;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepareOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f54;770;69;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f29;770;33;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f11;735;2;743;;;;vpos;;vstring;;r&#xA;Description&#xA;     Makes sure it will return the primary key&#xA;&#xA;Parameters:&#xA;    Model|string $model - Model instance of table name;;d43,735;;b2,0;;mModel|string $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f35;735;41;735;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;683;2;699;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate a database-native column schema string&#xA;&#xA;Parameters:&#xA;    array $column - An array structured like the;;d38,683;;b1,0;;marray $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f29;683;36;683;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;708;2;727;;;;vpos;;vstring;;r&#xA;Description&#xA;     Format indexes for create table&#xA;&#xA;Parameters:&#xA;    array $indexes - The indexes to build&#xA;    string $table - The table to make indexes for;;d53,708;;b1,0;;marray $indexes;;pstring $table;;p">
					<treenode node="indexes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f28;708;36;708;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f38;708;44;708;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="column;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;417;2;459;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts database-layer column types to basic types&#xA;&#xA;Parameters:&#xA;    mixed $real - Either the string value of the fields type&#xA;&#xA;Return:&#xA;   Abstract column type (i;;d31,417;;b1,0;;mmixed $real;;p">
					<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f24;417;29;417;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="connect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;120;2;154;;;;vpos;;vbool;;r&#xA;Description&#xA;     Connects to the database using options in the given configuration array.&#xA;&#xA;Return:&#xA;   True if the database could be connected, else false;;d27,120;;b1,0;;m">
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;345;2;363;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates and executes an SQL INSERT statement for given model, fields, and values. Removes Identity (primary key) column from update data before returning to parent, if value is empty.&#xA;&#xA;Parameters:&#xA;    Model $model - The model to insert into&#xA;    array $fields - The fields to set&#xA;    array $values - The values to set;;d70,345;;b1,0;;mModel $model;;parray $fields;;parray $values;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f38;345;45;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f30;345;36;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f54;345;61;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;200;2;266;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of the fields in given table name.&#xA;&#xA;Parameters:&#xA;    Model|string $model - Model object to describe, or a string table name&#xA;&#xA;Return:&#xA;   Fields in table;;d34,200;;b1,0;;mModel|string $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f26;200;32;200;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;161;2;163;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that PDO SQL Server is installed/loaded;;d27,161;;b1,0;;m">
				</treenode>
				<treenode node="fetchResult;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;630;2;647;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Fetches the next row from the current result set. Eats the magic ROW_COUNTER variable.;;d31,630;;b1,0;;m">
				</treenode>
				<treenode node="fields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;277;2;333;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates the fields list of an SQL query.&#xA;&#xA;Parameters:&#xA;    Model $model - The model to get fields for&#xA;    string $alias - Alias table name&#xA;    array $fields - The fields so far&#xA;    bool $quote - Whether or not to quote identfiers;;d87,277;;b1,0;;mModel $model;;pstring $alias;;parray $fields;;pbool $quote;;p">
					<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f38;277;44;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f53;277;60;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f30;277;36;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="quote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f72;277;78;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getSchemaName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;811;2;813;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the schema name&#xA;&#xA;Return:&#xA;   The schema name;;d33,811;;b1,0;;m">
				</treenode>
				<treenode node="insertMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;657;2;673;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Inserts multiple values into a table&#xA;&#xA;Parameters:&#xA;    string $table - The table to insert into&#xA;    string $fields - The fields to set&#xA;    array $values - The values to set;;d55,657;;b1,0;;mstring $table;;pstring $fields;;parray $values;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f37;657;44;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f29;657;35;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f46;657;53;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lastAffected;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;752;2;758;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns number of affected rows in previous database operation. If no previous operation exists, this returns false.&#xA;&#xA;Parameters:&#xA;    mixed $source - Unused&#xA;&#xA;Return:&#xA;   Number of affected rows;;d46,752;;b1,0;;mmixed $source;;p">
					<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f30;752;37;752;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="length;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;468;2;482;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Handle SQLServer specific length properties. SQLServer handles text types as nvarchar/varchar with a length of -1.&#xA;&#xA;Parameters:&#xA;    mixed $length - Either the length as a string, or a Column descriptor object&#xA;&#xA;Return:&#xA;   null|integer with length of column;;d33,468;;b1,0;;mmixed $length;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f24;468;31;468;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="limit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;395;2;408;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a limit statement in the correct format for the particular database.&#xA;&#xA;Parameters:&#xA;    int $limit - Limit of results returned&#xA;    int $offset - Offset from which to start results&#xA;&#xA;Return:&#xA;   SQL limit/offset statement;;d47,395;;b1,0;;mint $limit;;pint $offset;;p">
					<treenode node="limit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f23;395;29;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f31;395;38;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;171;2;191;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of sources (tables) in the database.&#xA;&#xA;Parameters:&#xA;    mixed $data - The names&#xA;&#xA;Return:&#xA;   Array of table names in the database;;d43,171;;b1,0;;mmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f29;171;34;171;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;618;2;622;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of all result rows for a given SQL query. Returns false if no rows matched.&#xA;&#xA;Parameters:&#xA;    Model $model - The model to read from&#xA;    array $queryData - The query data&#xA;    int $recursive - How many layers to go&#xA;&#xA;Return:&#xA;   |false Array of resultset rows, or false if no rows matched;;d77,618;;b1,0;;mModel $model;;parray $queryData;;pint $recursive;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f28;618;34;618;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f36;618;46;618;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f58;618;68;618;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renderStatement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;522;2;579;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds final SQL statement&#xA;&#xA;Parameters:&#xA;    string $type - Query type&#xA;    array $data - Query data;;d47,522;;b1,0;;mstring $type;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f40;522;45;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f33;522;38;522;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resultSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;490;2;513;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Builds a map of the columns contained in a result&#xA;&#xA;Parameters:&#xA;    PDOStatement $results - The result to modify;;d37,490;;b1,0;;mPDOStatement $results;;p">
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f27;490;35;490;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;375;2;386;;;;vpos;;varray;;r&#xA;Description&#xA;     Generates and executes an SQL UPDATE statement for given model, fields, and values. Removes Identity (primary key) column from update data before returning to parent.&#xA;&#xA;Parameters:&#xA;    Model $model - The model to update&#xA;    array $fields - The fields to set&#xA;    array $values - The values to set&#xA;    mixed $conditions - The conditions to use;;d93,375;;b1,0;;mModel $model;;parray $fields;;parray $values;;pmixed $conditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f73;375;84;375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f38;375;45;375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f30;375;36;375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f57;375;64;375;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="value;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;588;2;607;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a quoted and escaped string of $data for use in an SQL statement.&#xA;&#xA;Parameters:&#xA;    string $data - String to be prepared for use in an SQL statement&#xA;    string $column - The column into which this data will be inserted&#xA;&#xA;Return:&#xA;   Quoted and escaped data;;d46,588;;b1,0;;mstring $data;;pstring $column;;p">
					<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f30;588;37;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f23;588;28;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_baseConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f11;73;23;73;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_fieldMappings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f11;59;26;59;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_lastAffected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f11;66;25;66;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="columns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;88;16;88;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="description;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;37;20;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="endQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;51;17;51;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="startQuote;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php;f8;44;19;44;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqlserverClientTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f0;179;1;200;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SqlserverClientTestModel class;;d53,179;;b0,0;;m">
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f11;193;19;193;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;186;17;186;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqlserverTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f0;238;1;709;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SqlserverTest class;;d41,238;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;266;2;274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets up a Dbo class instance for testing;;d25,266;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;281;2;285;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,281;;b1,0;;m">
				</treenode>
				<treenode node="testBuildColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;512;2;586;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildColumn;;d35,512;;b1,0;;m">
				</treenode>
				<treenode node="testBuildIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;593;2;613;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildIndex method;;d34,593;;b1,0;;m">
				</treenode>
				<treenode node="testDescribe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;406;2;505;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDescribe method;;d32,406;;b1,0;;m">
				</treenode>
				<treenode node="testDistinctFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;377;2;385;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDistinctFields method;;d38,377;;b1,0;;m">
				</treenode>
				<treenode node="testDistinctWithLimit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;392;2;399;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDistinctWithLimit method;;d41,392;;b1,0;;m">
				</treenode>
				<treenode node="testFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;323;2;370;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFields method;;d30,323;;b1,0;;m">
				</treenode>
				<treenode node="testGetPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;636;2;647;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetPrimaryKey method;;d37,636;;b1,0;;m">
				</treenode>
				<treenode node="testLimitOffsetHack;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;654;2;680;;;;vpos;;vvoid;;r&#xA;Description&#xA;     SQL server &lt; 11 doesn't have proper limit/offset support, test that our hack works.;;d39,654;;b1,0;;m">
				</treenode>
				<treenode node="testQuoting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;292;2;316;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testQuoting method;;d31,292;;b1,0;;m">
				</treenode>
				<treenode node="testStoredProcedureReturn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;687;2;707;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that the return of stored procedures is honoured;;d45,687;;b1,0;;m">
				</treenode>
				<treenode node="testUpdateAllSyntax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;620;2;629;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUpdateAllSyntax method;;d39,620;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;252;21;252;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;245;11;245;;;;vposDboSource;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;259;17;259;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqlserverTestDb;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f0;29;1;106;;;;vpos;;vSqlserver;;c;;r&#xA;Description&#xA;     SqlserverTestDb class;;d40,29;;b0,0;;m">
				<treenode node="_execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f11;53;2;56;;;;vpos;;vmixed;;r&#xA;Description&#xA;     execute method&#xA;&#xA;Parameters:&#xA;    mixed $sql&#xA;    mixed $params&#xA;    mixed $prepareOptions;;d81,53;;b2,0;;mmixed $sql;;pmixed $params;;pmixed $prepareOptions;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f35;53;42;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="prepareOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f54;53;69;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f29;53;33;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_matchRecords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f11;64;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     fetchAll method&#xA;&#xA;Parameters:&#xA;    mixed $sql;;d68,64;;b2,0;;mmodel;;pconditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f48;64;59;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f40;64;46;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearFieldMappings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;92;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     clearFieldMappings method;;d38,92;;b1,0;;m">
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;102;2;104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     describe method&#xA;&#xA;Parameters:&#xA;    object $model;;d34,102;;b1,0;;mobject $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f26;102;32;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getLastQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;73;2;75;;;;vpos;;vstring;;r&#xA;Description&#xA;     getLastQuery method;;d32,73;;b1,0;;m">
				</treenode>
				<treenode node="getPrimaryKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;83;2;85;;;;vpos;;vstring;;r&#xA;Description&#xA;     getPrimaryKey method&#xA;&#xA;Parameters:&#xA;    mixed $model;;d39,83;;b1,0;;mmixed $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f31;83;37;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="executeResultsStack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;43;28;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="simulated;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;36;18;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqlserverTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f0;113;1;172;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     SqlserverTestModel class;;d47,113;;b0,0;;m">
				<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;168;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     find method&#xA;&#xA;Parameters:&#xA;    mixed $conditions&#xA;    mixed $fields&#xA;    mixed $order&#xA;    mixed $recursive;;d92,168;;b1,0;;mmixed $conditions;;pmixed $fields;;pmixed $order;;pmixed $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f22;168;33;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f42;168;49;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f58;168;64;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f73;168;83;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f11;127;19;127;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;153;18;153;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;120;17;120;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SqlserverTestResultIterator;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f0;207;1;231;;;;vpos;;vArrayIterator;;c;;r&#xA;Description&#xA;     SqlserverTestResultIterator class;;d56,207;;b0,0;;m">
				<treenode node="closeCursor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;214;2;215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     closeCursor method;;d31,214;;b1,0;;m">
				</treenode>
				<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php;f8;222;2;229;;;;vpos;;vvoid;;r&#xA;Description&#xA;     fetch method;;d25,222;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="StoriesTagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoriesTagFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class StoriesTagFixture;;d48,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoriesTagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoriesTagFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Story;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2368;1;2397;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Story class;;d34,2368;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2389;28;2389;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2375;13;2375;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2382;19;2382;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2396;17;2396;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="StoryFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoryFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class StoryFixture;;d43,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoryFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoryFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="StringMock;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f0;43;1;44;;;;vpos;;v;;r&#xA;Description&#xA;     StringMock class;;d17,43;;b0,0;;m">
			</treenode>
			<treenode node="StringsTestFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f0;71;1;109;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     StringTestFixture class;;d49,71;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;92;15;92;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;78;13;78;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;104;16;104;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php;f8;85;14;85;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="StringTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f0;25;1;822;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     StringTest class;;d38,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;27;2;30;;;;vpos;;v;;r;;d25,27;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;32;2;35;;;;vpos;;v;;r;;d28,32;;b1,0;;m">
				</treenode>
				<treenode node="testAutoIgnoreBadInsertData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;274;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that non-insertable variables (i.e. arrays) are skipped when used as values in String::insert().;;d47,274;;b1,0;;m">
				</treenode>
				<treenode node="testCleanInsert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;234;2;266;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Clean Insert;;d35,234;;b1,0;;m">
				</treenode>
				<treenode node="testExcerpt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;739;2;772;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExcerpt method;;d31,739;;b1,0;;m">
				</treenode>
				<treenode node="testExcerptCaseInsensitivity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;779;2;789;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExcerptCaseInsensitivity method;;d48,779;;b1,0;;m">
				</treenode>
				<treenode node="testHighlight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;623;2;650;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHighlight method;;d33,623;;b1,0;;m">
				</treenode>
				<treenode node="testHighlightCaseInsensitivity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;723;2;732;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHighlightCaseInsensitivity method;;d50,723;;b1,0;;m">
				</treenode>
				<treenode node="testHighlightHtml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;657;2;676;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHighlightHtml method;;d37,657;;b1,0;;m">
				</treenode>
				<treenode node="testHighlightMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;683;2;689;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testHighlightMulti method;;d38,683;;b1,0;;m">
				</treenode>
				<treenode node="testInsert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;73;2;227;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInsert method;;d30,73;;b1,0;;m">
				</treenode>
				<treenode node="testListGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;796;2;820;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testListGeneration method;;d38,796;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleUuidGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;54;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleUuidGeneration method;;d46,54;;b1,0;;m">
				</treenode>
				<treenode node="testReplaceWithQuestionMarkInString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;311;2;316;;;;vpos;;v;;r;;d55,311;;b1,0;;m">
				</treenode>
				<treenode node="testStripLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;696;2;716;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStripLinks method;;d34,696;;b1,0;;m">
				</treenode>
				<treenode node="testTail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;580;2;616;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTail method;;d28,580;;b1,0;;m">
				</treenode>
				<treenode node="testTokenize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;285;2;309;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTokenize method;;d32,285;;b1,0;;m">
				</treenode>
				<treenode node="testTruncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;452;2;550;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTruncate method;;d32,452;;b1,0;;m">
				</treenode>
				<treenode node="testTruncateLegacy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;557;2;573;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTruncate method with non utf8 sites;;d38,557;;b1,0;;m">
				</treenode>
				<treenode node="testUuidGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;42;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUuidGeneration method;;d38,42;;b1,0;;m">
				</treenode>
				<treenode node="testWordWrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;324;2;328;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that wordWrap() works the same as built-in wordwrap function;;d74,324;;b1,0;;mtext;;pwidth;;pbreak;;pcut;;p">
					<treenode node="break;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f45;324;51;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="cut;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f60;324;64;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f30;324;35;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f37;324;43;324;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testWordWrapNewlineAware;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;384;2;394;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that wordWrap() properly handle newline characters.;;d44,384;;b1,0;;m">
				</treenode>
				<treenode node="testWordWrapUnicodeAware;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;357;2;377;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that wordWrap() properly handle unicode strings.;;d44,357;;b1,0;;m">
				</treenode>
				<treenode node="testWrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;401;2;429;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test wrap method.;;d28,401;;b1,0;;m">
				</treenode>
				<treenode node="testWrapIndent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;436;2;445;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test wrap() indenting;;d34,436;;b1,0;;m">
				</treenode>
				<treenode node="wordWrapProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php;f8;335;2;350;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider for testWordWrap method;;d36,335;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Syfile;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1645;1;1660;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Syfile class;;d35,1645;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1659;18;1659;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1652;13;1652;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SyfileFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SyfileFixture.php;f0;23;1;50;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class SyfileFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SyfileFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SyfileFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SyslogLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f0;25;1;157;;;;vpos;;vBaseLog;;c;;r&#xA;Description&#xA;     Syslog stream for Logging. Writes logs to the system logger;;d32,25;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f8;89;2;92;;;;vpos;;v;;r&#xA;Description&#xA;     Make sure the configuration contains the format parameter, by default it uses the error number and the type as a prefix to the message&#xA;&#xA;Parameters:&#xA;    array $config - Options list;;d48,89;;b1,0;;marray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f29;89;36;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f8;153;2;155;;;;vpos;;v;;r&#xA;Description&#xA;     Closes the logger connection;;d30,153;;b1,0;;m">
				</treenode>
				<treenode node="_open;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f11;134;2;136;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Extracts the call to openlog() in order to run unit tests on it. This function will initialize the connection to the system logger&#xA;&#xA;Parameters:&#xA;    string $ident - the prefix to add to all messages logged&#xA;    int $options - the options flags to be used for logged messages&#xA;    int $facility - the stream or facility to log to;;d55,134;;b2,0;;mstring $ident;;pint $options;;pint $facility;;p">
					<treenode node="facility;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f44;134;53;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ident;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f26;134;32;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f34;134;42;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f11;146;2;148;;;;vpos;;vbool;;r&#xA;Description&#xA;     Extracts the call to syslog() in order to run unit tests on it. This function will perform the actual write in the system logger&#xA;&#xA;Parameters:&#xA;    int $priority - Message priority&#xA;    string $message - Message to log;;d48,146;;b2,0;;mint $priority;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f38;146;46;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="priority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f27;146;36;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f8;104;2;123;;;;vpos;;vbool;;r&#xA;Description&#xA;     Writes a message to syslog&#xA;&#xA;Parameters:&#xA;    string $type - The type of log you are making&#xA;    string $message - The message you want to log&#xA;&#xA;Return:&#xA;   success of write;;d40,104;;b1,0;;mstring $type;;pstring $message;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f30;104;38;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f23;104;28;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f11;53;21;53;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_open;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f11;81;17;81;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_priorityMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php;f11;65;24;65;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="SyslogLogTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php;f0;23;1;90;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     SyslogLogTest class;;d41,23;;b0,0;;m">
				<treenode node="testOpenLog;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php;f8;30;2;45;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that the connection to the logger is open with the right arguments;;d31,30;;b1,0;;m">
				</treenode>
				<treenode node="testWriteMultiLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php;f8;64;2;70;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that multiple lines are split and logged separately;;d38,64;;b1,0;;m">
				</treenode>
				<treenode node="testWriteOneLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php;f8;53;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that single lines are written to syslog;;d52,53;;b1,0;;mtype;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php;f41;53;50;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php;f34;53;39;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typesProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php;f8;77;2;88;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for the write function test;;d33,77;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="SysReviewsController;PHP:Class Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f0;2;1;26;;;;vpos;;vAppController;;c;;r;;d0,3;;b0,0;;m">
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;7;2;19;;;;vpos;;v;;r;;d1,8;;b1,0;;m">
					<treenode node="this;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f5;9;10;9;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;12;8;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="viewall;PHP:Function Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;21;2;24;;;;vpos;;v;;r;;d1,22;;b1,0;;m">
					<treenode node="this;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f2;23;7;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;5;19;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;4;16;4;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Tag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;457;1;465;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Tag class;;d32,457;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;464;13;464;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TagB;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3403;1;3418;;;;vpos;;vCakeTestModel;;c;;r;;d33,3403;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3409;28;3409;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3405;13;3405;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3407;17;3407;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TagFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TagFixture;;d41,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TagFixture.php;f8;42;16;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TaskCollection;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f0;26;1;99;;;;vpos;;vObjectCollection;;c;;r&#xA;Description&#xA;     Collection object for Tasks. Provides features for lazily loading tasks, and firing callbacks on loaded tasks.;;d46,26;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f8;47;2;49;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    Shell $Shell - The shell this task collection is attached to;;d43,47;;b1,0;;mShell $Shell;;p">
					<treenode node="Shell;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f35;47;41;47;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f8;69;2;97;;;;vpos;;vTask;;r&#xA;Description&#xA;     Loads/constructs a task. Will return the instance in the registry if it already exists.&#xA;&#xA;Parameters:&#xA;    string $task - Task name to load&#xA;    array $settings - Settings for the task&#xA;&#xA;Return:&#xA;   A task object, Either the existing loaded task or a new one;;d50,69;;b1,0;;mstring $task;;parray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f29;69;38;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="task;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f22;69;27;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_Shell;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f11;33;18;33;;;;vposShell;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="taskPathPrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php;f8;40;23;40;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TaskCollectionTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f0;32;1;154;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class TaskCollectionTest;;d46,32;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;39;2;44;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp;;d25,39;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;51;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown;;d28,51;;b1,0;;m">
				</treenode>
				<treenode node="testLoad;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;61;2;68;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test triggering callbacks on loaded tasks;;d28,61;;b1,0;;m">
				</treenode>
				<treenode node="testLoadMissingTask;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;89;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test missingtask exception;;d39,89;;b1,0;;m">
				</treenode>
				<treenode node="testLoadPluginTask;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;98;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test loading a plugin helper.;;d38,98;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;138;2;152;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests loading as an alias;;d37,138;;b1,0;;m">
				</treenode>
				<treenode node="testLoadWithEnableFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;75;2;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test load and enable = false;;d43,75;;b1,0;;m">
				</treenode>
				<treenode node="testUnload;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php;f8;118;2;131;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test unload();;d30,118;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TemplateTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f0;26;1;216;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     Template Task can generate templated output Used in other Tasks. Acts like a simplified View class.;;d36,26;;b0,0;;m">
				<treenode node="_findTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f11;201;2;214;;;;vpos;;vstring;;r&#xA;Description&#xA;     Find a template inside a directory inside a path. Will scan all other theme dirs if the template is not found in the first directory.&#xA;&#xA;Parameters:&#xA;    string $path - The initial path to look for the file on&#xA;    string $directory - Subdirectory to look for ie&#xA;    string $filename - lower_case_underscored filename you want&#xA;&#xA;Return:&#xA;   filename will exit program if template is not found;;d64,201;;b2,0;;mstring $path;;pstring $directory;;pstring $filename;;p">
					<treenode node="directory;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f41;201;51;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f53;201;62;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f34;201;39;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_findThemes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f11;60;2;102;;;;vpos;;varray;;r&#xA;Description&#xA;     Find the paths to all the installed shell themes in the app.&#xA;&#xA;Return:&#xA;   Array of bake themes that are installed;;d34,60;;b2,0;;m">
				</treenode>
				<treenode node="generate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f8;137;2;155;;;;vpos;;vstring;;r&#xA;Description&#xA;     Runs the template&#xA;&#xA;Parameters:&#xA;    string $directory - directory / type of thing you want&#xA;    string $filename - template name&#xA;    array $vars - Additional vars to set to template scope&#xA;&#xA;Return:&#xA;   contents of generated code template;;d63,137;;b1,0;;mstring $directory;;pstring $filename;;parray $vars;;p">
					<treenode node="directory;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f26;137;36;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f38;137;47;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="vars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f49;137;54;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getThemePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f8;165;2;190;;;;vpos;;vstring;;r&#xA;Description&#xA;     Find the theme name for the current operation. If there is only one theme in $templatePaths it will be used. If there is a -theme param in the cli args, it will be used. If there is more than one installed theme user interaction will happen&#xA;&#xA;Return:&#xA;   returns the path to the selected theme;;d32,165;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f8;48;2;50;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initialize callback. Setup paths for the template task.;;d30,48;;b1,0;;m">
				</treenode>
				<treenode node="set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f8;112;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set variable values to the template scope&#xA;&#xA;Parameters:&#xA;    string|array $one - A string or an array of data&#xA;    string|array $two - Value in case $one is a string (which then works as the key);;d40,112;;b1,0;;mstring|array $one;;pstring|array $two;;p">
					<treenode node="one;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f21;112;25;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f27;112;31;112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="templatePaths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f8;41;22;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="templateVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php;f8;33;21;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TemplateTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f0;31;1;163;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TemplateTaskTest class;;d44,31;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f8;38;2;47;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,38;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f8;54;2;57;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,54;;b1,0;;m">
				</treenode>
				<treenode node="testFindingInstalledThemesForBake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f8;87;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test finding themes installed in;;d53,87;;b1,0;;m">
				</treenode>
				<treenode node="testGenerate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f8;124;2;136;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generate;;d32,124;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateWithTemplateFallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f8;144;2;162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test generate with a missing template in the chosen theme. ensure fallback to default works.;;d53,144;;b1,0;;m">
				</treenode>
				<treenode node="testGetThemePath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f8;99;2;117;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting the correct theme name. Ensure that with only one theme, or a theme param that the user is not bugged. If there are more, find and return the correct theme name;;d36,99;;b1,0;;m">
				</treenode>
				<treenode node="testSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php;f8;64;2;80;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that set sets variables;;d27,64;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Test;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;63;1;93;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Test class;;d33,63;;b0,0;;m">
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;84;19;84;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;77;13;77;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;70;17;70;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Test2Behavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;338;1;348;;;;vpos;;vTestBehavior;;c;;r&#xA;Description&#xA;     Test2Behavior class;;d41,338;;b0,0;;m">
				<treenode node="mapped;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;345;2;346;;;;vpos;;v;;r;;d55,345;;b1,0;;mmodel;;pmethod;;pquery;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f38;345;45;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f30;345;36;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f47;345;53;345;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="resolveMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;342;2;343;;;;vpos;;v;;r;;d53,342;;b1,0;;mmodel;;pstuff;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;342;43;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="stuff;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f45;342;51;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;340;19;340;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Test2Component;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;333;1;346;;;;vpos;;vTestComponent;;c;;r;;d43,333;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;337;2;340;;;;vpos;;v;;r;;d73,337;;b1,0;;mcollection;;psettings;;p">
					<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f49;337;60;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f62;337;71;337;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;342;2;344;;;;vpos;;v;;r;;d54,342;;b1,0;;mcontroller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f41;342;52;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;335;14;335;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Test2DispatcherFilter;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\Test2DispatcherFilter.php;f0;23;1;35;;;;vpos;;vDispatcherFilter;;c;;r&#xA;Description&#xA;     Class Test2DispatcherFilter;;d53,23;;b0,0;;m">
				<treenode node="afterDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\Test2DispatcherFilter.php;f8;31;2;33;;;;vpos;;v;;r;;d49,31;;b1,0;;mevent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\Test2DispatcherFilter.php;f41;31;47;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\Test2DispatcherFilter.php;f8;25;2;29;;;;vpos;;v;;r;;d50,25;;b1,0;;mevent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\Test2DispatcherFilter.php;f42;25;48;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Test2OtherSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f0;1;1;26;;;;vpos;;vDataSource;;c;;r;;d42,1;;b0,0;;m">
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f8;11;2;13;;;;vpos;;v;;r;;d70,11;;b1,0;;mmodel;;pfields;;pvalues;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f38;11;45;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f30;11;36;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f54;11;61;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f8;23;2;25;;;;vpos;;v;;r;;d50,23;;b1,0;;mmodel;;pid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f38;23;41;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f30;23;36;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f8;3;2;5;;;;vpos;;v;;r;;d34,3;;b1,0;;mmodel;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f26;3;32;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f8;7;2;9;;;;vpos;;v;;r;;d43,7;;b1,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f29;7;34;7;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f8;15;2;17;;;;vpos;;v;;r;;d77,15;;b1,0;;mmodel;;pqueryData;;precursive;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f28;15;34;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f36;15;46;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f58;15;68;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f8;19;2;21;;;;vpos;;v;;r;;d96,19;;b1,0;;mmodel;;pfields;;pvalues;;pconditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f76;19;87;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f38;19;45;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f30;19;36;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php;f57;19;64;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Test2Source;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f0;1;1;26;;;;vpos;;vDataSource;;c;;r;;d37,1;;b0,0;;m">
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f8;11;2;13;;;;vpos;;v;;r;;d70,11;;b1,0;;mmodel;;pfields;;pvalues;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f38;11;45;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f30;11;36;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f54;11;61;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f8;23;2;25;;;;vpos;;v;;r;;d50,23;;b1,0;;mmodel;;pid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f38;23;41;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f30;23;36;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f8;3;2;5;;;;vpos;;v;;r;;d34,3;;b1,0;;mmodel;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f26;3;32;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f8;7;2;9;;;;vpos;;v;;r;;d43,7;;b1,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f29;7;34;7;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f8;15;2;17;;;;vpos;;v;;r;;d77,15;;b1,0;;mmodel;;pqueryData;;precursive;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f28;15;34;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f36;15;46;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f58;15;68;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f8;19;2;21;;;;vpos;;v;;r;;d96,19;;b1,0;;mmodel;;pfields;;pvalues;;pconditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f76;19;87;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f38;19;45;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f30;19;36;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php;f57;19;64;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Test3Behavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;355;1;356;;;;vpos;;vTestBehavior;;c;;r&#xA;Description&#xA;     Test3Behavior class;;d41,355;;b0,0;;m">
			</treenode>
			<treenode node="Test4Behavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;363;1;371;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Test4Behavior class;;d42,363;;b0,0;;m">
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;365;2;369;;;;vpos;;v;;r;;d53,365;;b1,0;;mmodel;;pconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;365;44;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f29;365;35;365;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Test5Behavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;378;1;386;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Test5Behavior class;;d42,378;;b0,0;;m">
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;380;2;384;;;;vpos;;v;;r;;d53,380;;b1,0;;mmodel;;pconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;380;44;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f29;380;35;380;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Test6Behavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;393;1;401;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Test6Behavior class;;d42,393;;b0,0;;m">
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;395;2;399;;;;vpos;;v;;r;;d53,395;;b1,0;;mmodel;;pconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;395;44;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f29;395;35;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="Test7Behavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;408;1;416;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Test7Behavior class;;d42,408;;b0,0;;m">
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;410;2;414;;;;vpos;;v;;r;;d53,410;;b1,0;;mmodel;;pconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;410;44;410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f29;410;35;410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestAlias;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;100;1;129;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestAlias class;;d38,100;;b0,0;;m">
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;121;19;121;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;114;13;114;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;107;17;107;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestAliasBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;421;1;422;;;;vpos;;vTestBehavior;;c;;r&#xA;Description&#xA;     Extended TestBehavior;;d45,421;;b0,0;;m">
			</treenode>
			<treenode node="TestAppCacheEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f0;23;1;48;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     Class TestAppCacheEngine;;d45,23;;b0,0;;m">
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f8;43;2;44;;;;vpos;;v;;r;;d31,43;;b1,0;;mcheck;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f23;43;29;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f8;46;2;47;;;;vpos;;v;;r;;d36,46;;b1,0;;mgroup;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f28;46;34;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f8;37;2;38;;;;vpos;;v;;r;;d46,37;;b1,0;;mkey;;poffset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f27;37;31;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f33;37;40;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f8;40;2;41;;;;vpos;;v;;r;;d30,40;;b1,0;;mkey;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f24;40;28;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f8;34;2;35;;;;vpos;;v;;r;;d46,34;;b1,0;;mkey;;poffset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f27;34;31;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f33;34;40;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f8;31;2;32;;;;vpos;;v;;r;;d28,31;;b1,0;;mkey;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f22;31;26;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f8;25;2;29;;;;vpos;;v;;r;;d48,25;;b1,0;;mkey;;pvalue;;pduration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f37;25;46;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f23;25;27;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php;f29;25;35;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestAppEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Utility\TestAppEngine.php;f0;2;1;4;;;;vpos;;v;;r;;d20,2;;b0,0;;m">
			</treenode>
			<treenode node="TestAppleTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f0;105;1;106;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     TestAppleTask class;;d34,105;;b0,0;;m">
			</treenode>
			<treenode node="TestAppLibSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f0;8;1;29;;;;vpos;;vCakeSessionHandlerInterface;;c;;r&#xA;Description&#xA;     Test suite app/Model/Datasource/Session session handler;;d63,8;;b0,0;;m">
				<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f8;14;2;15;;;;vpos;;v;;r;;d25,14;;b1,0;;m">
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f8;23;2;24;;;;vpos;;v;;r;;d30,23;;b1,0;;mid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f25;23;28;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f8;26;2;27;;;;vpos;;v;;r;;d37,26;;b1,0;;mexpires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f20;26;28;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="open;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f8;10;2;12;;;;vpos;;v;;r;;d24,10;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f8;17;2;18;;;;vpos;;v;;r;;d27,17;;b1,0;;mid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f22;17;25;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f8;20;2;21;;;;vpos;;v;;r;;d35,20;;b1,0;;mid;;pdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f28;20;33;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php;f23;20;26;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestAppLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Log\Engine\TestAppLog.php;f0;25;1;30;;;;vpos;;vBaseLog;;c;;r&#xA;Description&#xA;     Class TestAppLog;;d33,25;;b0,0;;m">
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Log\Engine\TestAppLog.php;f8;27;2;28;;;;vpos;;v;;r;;d40,27;;b1,0;;mtype;;pmessage;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Log\Engine\TestAppLog.php;f30;27;38;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Log\Engine\TestAppLog.php;f23;27;28;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestAppSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;96;1;198;;;;vpos;;vCakeSchema;;c;;r&#xA;Description&#xA;     TestAppSchema class;;d39,96;;b0,0;;m">
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;186;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup method&#xA;&#xA;Parameters:&#xA;    mixed $version;;d33,186;;b1,0;;mmixed $version;;p">
					<treenode node="version;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f23;186;31;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="teardown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;195;2;196;;;;vpos;;vvoid;;r&#xA;Description&#xA;     teardown method&#xA;&#xA;Parameters:&#xA;    mixed $version;;d36,195;;b1,0;;mmixed $version;;p">
					<treenode node="version;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f26;195;34;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="comments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;110;17;110;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="datatypes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;170;18;170;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;103;13;103;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="posts;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;127;14;127;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="posts_tags;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;144;19;144;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tags;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f8;156;13;156;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestAppsErrorController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestAppsErrorController.php;f0;4;1;13;;;;vpos;;vCakeErrorController;;c;;r;;d58,4;;b0,0;;m">
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestAppsErrorController.php;f8;6;16;6;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestAppsExceptionRenderer;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Error\TestAppsExceptionRenderer.php;f0;2;1;20;;;;vpos;;vExceptionRenderer;;c;;r;;d58,2;;b0,0;;m">
				<treenode node="_getController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Error\TestAppsExceptionRenderer.php;f11;4;2;18;;;;vpos;;v;;r;;d47,4;;b2,0;;mexception;;p">
					<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Error\TestAppsExceptionRenderer.php;f35;4;45;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestAuthComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f0;75;1;130;;;;vpos;;vAuthComponent;;c;;r&#xA;Description&#xA;     TestAuthComponent class;;d46,75;;b0,0;;m">
				<treenode node="_stop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f11;122;2;124;;;;vpos;;vvoid;;r&#xA;Description&#xA;     stop method;;d39,122;;b2,0;;mstatus;;p">
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f26;122;33;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearUser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f15;126;2;128;;;;vpos;;v;;r;;d36,126;;b1,5;;m">
				</treenode>
				<treenode node="getAuthenticateObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;101;2;104;;;;vpos;;vobject;;r&#xA;Description&#xA;     Helper method to get an authenticate object instance&#xA;&#xA;Parameters:&#xA;    int $index - The index at which to get the object&#xA;&#xA;Return:&#xA;   $object;;d47,101;;b1,0;;mint $index;;p">
					<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f39;101;45;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setAuthenticateObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;91;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to add/set an authenticate object instance&#xA;&#xA;Parameters:&#xA;    int $index - The index at which to add/set the object&#xA;    object $object - The object to add/set;;d56,91;;b1,0;;mint $index;;pobject $object;;p">
					<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f39;91;45;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f47;91;54;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setAuthorizeObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;113;2;115;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to add/set an authorize object instance&#xA;&#xA;Parameters:&#xA;    int $index - The index at which to add/set the object&#xA;    Object $object - The object to add/set;;d53,113;;b1,0;;mint $index;;pObject $object;;p">
					<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f36;113;42;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f44;113;51;113;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testStop;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;82;17;82;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestAuthentication;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f0;26;1;50;;;;vpos;;v;;r&#xA;Description&#xA;     TestAuthentication class;;d25,26;;b0,0;;m">
				<treenode node="authentication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f15;35;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     authentication method&#xA;&#xA;Parameters:&#xA;    HttpSocket $http&#xA;    array $authInfo;;d69,35;;b1,5;;mHttpSocket $http;;parray $authInfo;;p">
					<treenode node="authInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f58;35;67;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="http;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f50;35;55;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="proxyAuthentication;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f15;46;2;48;;;;vpos;;vvoid;;r&#xA;Description&#xA;     proxyAuthentication method&#xA;&#xA;Parameters:&#xA;    HttpSocket $http&#xA;    array $proxyInfo;;d75,46;;b1,5;;mHttpSocket $http;;parray $proxyInfo;;p">
					<treenode node="http;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f55;46;60;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="proxyInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f63;46;73;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestAuthor;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f0;28;1;63;;;;vpos;;vAuthor;;c;;r&#xA;Description&#xA;     Helper class for testing with mocked datasources;;d32,28;;b0,0;;m">
				<treenode node="getDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;56;2;61;;;;vpos;;vDataSource;;r&#xA;Description&#xA;     Overwritten in order to return the directly set datasource object if available;;d33,56;;b1,0;;m">
				</treenode>
				<treenode node="setDataSourceObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;46;2;48;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to set a datasource object&#xA;&#xA;Parameters:&#xA;    Object $object - The datasource object;;d46,46;;b1,0;;mObject $object;;p">
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f37;46;44;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_dataSourceObject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f11;36;29;36;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="dataForAfterSave;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;38;25;38;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;30;16;30;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestBananaTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f0;113;1;114;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     TestBananaTask class;;d35,113;;b0,0;;m">
			</treenode>
			<treenode node="TestBaseAuthenticate;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f0;30;1;68;;;;vpos;;vBaseAuthenticate;;c;;r&#xA;Description&#xA;     TestFormAuthenticate class;;d52,30;;b0,0;;m">
				<treenode node="afterIdentify;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;50;2;52;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test function to be used in event dispatching;;d39,50;;b1,0;;mevent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f31;50;37;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="authenticate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;61;2;66;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Authenticate a user based on the request information.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request to get authentication information from&#xA;    CakeResponse $response - A response object that can have headers added&#xA;&#xA;Return:&#xA;   Either false on failure, or an array of user data on success;;d76,61;;b1,0;;mCakeRequest $request;;pCakeResponse $response;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f42;61;50;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f65;61;74;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;37;2;41;;;;vpos;;varray;;r&#xA;Description&#xA;     Implemented events&#xA;&#xA;Return:&#xA;   of events =&gt; callbacks;;d37,37;;b1,0;;m">
				</treenode>
				<treenode node="afterIdentifyCallable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php;f8;43;30;43;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestBeforeAfterHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;190;1;219;;;;vpos;;vHelper;;c;;r&#xA;Description&#xA;     TestBeforeAfterHelper class;;d43,190;;b0,0;;m">
				<treenode node="afterLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;215;2;217;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterLayout method&#xA;&#xA;Parameters:&#xA;    string $layoutFile;;d42,215;;b1,0;;mstring $layoutFile;;p">
					<treenode node="layoutFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f29;215;40;215;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;205;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeLayout method&#xA;&#xA;Parameters:&#xA;    string $viewFile;;d41,205;;b1,0;;mstring $viewFile;;p">
					<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f30;205;39;205;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="property;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;197;17;197;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;29;1;331;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     TestBehavior class;;d41,29;;b0,0;;m">
				<treenode node="afterDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;239;2;249;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterDelete method&#xA;&#xA;Parameters:&#xA;    Model $model;;d43,239;;b1,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f35;239;41;239;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;85;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterFind method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    array $results&#xA;    bool $primary;;d69,85;;b1,0;;mModel $model;;parray $results;;pbool $primary;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f33;85;39;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f51;85;59;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f41;85;49;85;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;134;2;156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterSave method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    bool $created&#xA;    array $options - Options passed from Model::save();;d71,134;;b1,0;;mModel $model;;pbool $created;;parray $options;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f41;134;49;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f33;134;39;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f51;134;59;134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;193;2;205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterValidate method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    bool $cascade;;d45,193;;b1,0;;mmodel;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;193;43;193;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;214;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeDelete method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    bool $cascade;;d61,214;;b1,0;;mModel $model;;pbool $cascade;;p">
					<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f44;214;52;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f36;214;42;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;60;2;75;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeFind method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    array $query;;d50,60;;b1,0;;mModel $model;;parray $query;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f34;60;40;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f42;60;48;60;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;110;2;124;;;;vpos;;vmixed;;r&#xA;Description&#xA;     beforeSave method&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   False if the operation should abort;;d62,110;;b1,0;;mModel $model;;parray $options;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f34;110;40;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f42;110;50;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;271;2;277;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeTest method&#xA;&#xA;Parameters:&#xA;    Model $model;;d42,271;;b1,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f34;271;40;271;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;166;2;184;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeValidate Callback&#xA;&#xA;Parameters:&#xA;    Model $Model - Model invalidFields was called on&#xA;    array $options - Options passed from Model::save();;d66,166;;b1,0;;mModel $Model;;parray $options;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f38;166;44;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f46;166;54;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="onError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;257;2;263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     onError method&#xA;&#xA;Parameters:&#xA;    Model $model;;d47,257;;b1,0;;mmodel;;perror;;p">
					<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f39;257;45;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f31;257;37;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;45;2;51;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setup method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    array $config;;d56,45;;b1,0;;mModel $model;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;45;44;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f29;45;35;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="speakEnglish;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;325;2;329;;;;vpos;;vvoid;;r&#xA;Description&#xA;     speakEnglish method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    string $method&#xA;    string $query;;d61,325;;b1,0;;mModel $model;;pstring $method;;pstring $query;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f44;325;51;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f36;325;42;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f53;325;59;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;298;2;304;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testData method&#xA;&#xA;Parameters:&#xA;    Model $model;;d40,298;;b1,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f32;298;38;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;286;2;290;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMethod method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    bool $param;;d57,286;;b1,0;;mModel $model;;pbool $param;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f34;286;40;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f42;286;48;286;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;313;2;315;;;;vpos;;vvoid;;r&#xA;Description&#xA;     validateField method&#xA;&#xA;Parameters:&#xA;    Model $model&#xA;    string|array $field;;d53,313;;b1,0;;mModel $model;;pstring|array $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f45;313;51;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f37;313;43;313;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f8;36;19;36;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestCachedPagesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;384;1;473;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     TestCachedPagesController class;;d51,384;;b0,0;;m">
				<treenode node="cache_form;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;457;2;460;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test cached forms / tests view object being registered;;d30,457;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;430;2;432;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,430;;b1,0;;m">
				</treenode>
				<treenode node="test_nocache_tags;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;439;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test_nocache_tags method;;d37,439;;b1,0;;m">
				</treenode>
				<treenode node="themed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;467;2;471;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test cached views with themes.;;d26,467;;b1,0;;m">
				</treenode>
				<treenode node="view;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;448;2;450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     view method;;d34,448;;b1,0;;mid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f22;448;25;448;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_responseClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f11;416;26;416;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="cacheAction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;405;20;405;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;398;16;398;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;391;13;391;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="viewPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;423;17;423;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestCacheSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f0;44;1;50;;;;vpos;;vCacheSession;;c;;r&#xA;Description&#xA;     Class TestCacheSession;;d44,44;;b0,0;;m">
				<treenode node="_writeSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f11;46;2;48;;;;vpos;;v;;r;;d36,46;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestCakeEmail;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f0;24;1;86;;;;vpos;;vCakeEmail;;c;;r&#xA;Description&#xA;     Help to test CakeEmail;;d38,24;;b0,0;;m">
				<treenode node="encode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;73;2;75;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encode to protected method;;d31,73;;b1,0;;mtext;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f24;73;29;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="formatAddress;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;46;2;48;;;;vpos;;varray;;r&#xA;Description&#xA;     Wrap to protected method;;d41,46;;b1,0;;maddress;;p">
					<treenode node="address;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f31;46;39;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBoundary;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;64;2;66;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the boundary attribute;;d31,64;;b1,0;;m">
				</treenode>
				<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;82;2;84;;;;vpos;;varray;;r&#xA;Description&#xA;     Render to protected method;;d34,82;;b1,0;;mcontent;;p">
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f24;82;32;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;55;2;57;;;;vpos;;varray;;r&#xA;Description&#xA;     Wrap to protected method;;d68,55;;b1,0;;mtext;;plength;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f29;55;36;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f22;55;27;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f11;39;19;39;;;;vpos;;v;;r&#xA;Description&#xA;     Config;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_configClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f11;33;24;33;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestCakeLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f0;34;1;40;;;;vpos;;vCakeLog;;c;;r&#xA;Description&#xA;     Class TestCakeLog;;d34,34;;b0,0;;m">
				<treenode node="replace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f15;36;2;38;;;;vpos;;v;;r;;d48,36;;b1,5;;mkey;;pengine;;p">
					<treenode node="engine;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f39;36;46;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f32;36;36;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestCakeRequest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f0;27;1;54;;;;vpos;;vCakeRequest;;c;;r&#xA;Description&#xA;     Class TestCakeRequest;;d42,27;;b0,0;;m">
				<treenode node="reConstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f8;36;2;52;;;;vpos;;vvoid;;r&#xA;Description&#xA;     reConstruct method&#xA;&#xA;Parameters:&#xA;    string $url&#xA;    bool $parseEnvironment;;d75,36;;b1,0;;mstring $url;;pbool $parseEnvironment;;p">
					<treenode node="parseEnvironment;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f49;36;66;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php;f29;36;33;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestCakeSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f0;27;1;37;;;;vpos;;vCakeSession;;c;;r&#xA;Description&#xA;     Class TestCakeSession;;d42,27;;b0,0;;m">
				<treenode node="setHost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f15;33;2;35;;;;vpos;;v;;r;;d39,33;;b1,5;;mhost;;p">
					<treenode node="host;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f32;33;37;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setUserAgent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f15;29;2;31;;;;vpos;;v;;r;;d45,29;;b1,5;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f37;29;43;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestCompletionStringOutput;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f0;31;1;39;;;;vpos;;vConsoleOutput;;c;;r&#xA;Description&#xA;     Class TestCompletionStringOutput;;d55,31;;b0,0;;m">
				<treenode node="_write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f11;35;2;37;;;;vpos;;v;;r;;d37,35;;b2,0;;mmessage;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f27;35;35;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="output;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php;f8;33;15;33;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;286;27;286;;;;vpos;;v;;r&#xA;Description&#xA;     TestComponent class;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TestConfigsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestConfigsController.php;f0;4;1;12;;;;vpos;;vCakeErrorController;;c;;r;;d56,4;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestConfigsController.php;f8;6;19;6;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestConsoleLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php;f0;25;1;27;;;;vpos;;vConsoleLog;;c;;r&#xA;Description&#xA;     Class TestConsoleLog;;d40,25;;b0,0;;m">
			</treenode>
			<treenode node="TestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f0;208;1;279;;;;vpos;;vControllerTestAppController;;c;;r&#xA;Description&#xA;     TestController class;;d57,208;;b0,0;;m">
				<treenode node="_hidden;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;272;2;273;;;;vpos;;v;;r;;d27,272;;b1,0;;m">
				</treenode>
				<treenode node="admin_add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;276;2;277;;;;vpos;;v;;r;;d29,276;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;240;2;245;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method&#xA;&#xA;Parameters:&#xA;    mixed $testId&#xA;    mixed $test2Id;;d44,240;;b1,0;;mmixed $testId;;pmixed $test2Id;;p">
					<treenode node="testId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f23;240;30;240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="testTwoId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f32;240;42;240;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="private_m;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f9;269;2;270;;;;vpos;;v;;r;;d30,269;;b3,0;;m">
				</treenode>
				<treenode node="protected_m;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f11;266;2;267;;;;vpos;;v;;r;;d34,266;;b2,0;;m">
				</treenode>
				<treenode node="returner;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;261;2;263;;;;vpos;;v;;r;;d28,261;;b1,0;;m">
				</treenode>
				<treenode node="view;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;254;2;259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     view method&#xA;&#xA;Parameters:&#xA;    mixed $testId&#xA;    mixed $test2Id;;d43,254;;b1,0;;mmixed $testId;;pmixed $test2Id;;p">
					<treenode node="testId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f22;254;29;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="testTwoId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f31;254;41;254;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_mergeParent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f11;231;24;231;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;222;19;222;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;215;16;215;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;229;13;229;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestDatabaseSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f0;57;1;63;;;;vpos;;vDatabaseSession;;c;;r&#xA;Description&#xA;     Class TestDatabaseSession;;d50,57;;b0,0;;m">
				<treenode node="_writeSession;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php;f11;59;2;61;;;;vpos;;v;;r;;d36,59;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestDbAcl;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f0;180;1;193;;;;vpos;;vDbAcl;;c;;r&#xA;Description&#xA;     TestDbAcl class;;d30,180;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php;f8;186;2;191;;;;vpos;;v;;r&#xA;Description&#xA;     construct method;;d31,186;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Testdescribe;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php;f0;298;1;299;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Testdescribe class;;d41,298;;b0,0;;m">
			</treenode>
			<treenode node="TestDeValidation;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f0;76;1;88;;;;vpos;;v;;r&#xA;Description&#xA;     TestDeValidation class;;d23,76;;b0,0;;m">
				<treenode node="phone;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f15;84;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     phone function, for testing phone pass through.&#xA;&#xA;Parameters:&#xA;    string $check;;d38,84;;b1,5;;mstring $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f30;84;36;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;45;1;87;;;;vpos;;vDispatcher;;c;;r&#xA;Description&#xA;     TestDispatcher class;;d40,45;;b0,0;;m">
				<treenode node="_invoke;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f11;61;2;64;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     invoke method&#xA;&#xA;Parameters:&#xA;    Controller $controller&#xA;    CakeRequest $request;;d74,61;;b2,0;;mController $controller;;pCakeRequest $request;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f39;61;50;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f64;61;72;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="filterTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;72;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper function to test single method attaching for dispatcher filters&#xA;&#xA;Parameters:&#xA;    CakeEvent $event;;d36,72;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f28;72;34;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="filterTest2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;82;2;85;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper function to test single method attaching for dispatcher filters&#xA;&#xA;Parameters:&#xA;    CakeEvent;;d37,82;;b1,0;;mCakeEvent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f29;82;35;82;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;52;19;52;;;;vposController;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestDispatcherFilter;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\TestDispatcherFilter.php;f0;23;1;33;;;;vpos;;vDispatcherFilter;;c;;r&#xA;Description&#xA;     Class TestDispatcherFilter;;d52,23;;b0,0;;m">
				<treenode node="afterDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\TestDispatcherFilter.php;f8;29;2;31;;;;vpos;;v;;r;;d49,29;;b1,0;;mevent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\TestDispatcherFilter.php;f41;29;47;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\TestDispatcherFilter.php;f8;25;2;27;;;;vpos;;v;;r;;d50,25;;b1,0;;mevent;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\TestDispatcherFilter.php;f42;25;48;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestDispatchPagesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;253;1;280;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     TestDispatchPagesController class;;d56,253;;b0,0;;m">
				<treenode node="admin_index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;267;2;269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     admin_index method;;d31,267;;b1,0;;m">
				</treenode>
				<treenode node="camelCased;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;276;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     camelCased method;;d30,276;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;260;13;260;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestDriver;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Database\TestDriver.php;f0;1;1;2;;;;vpos;;vTestSource;;c;;r;;d36,1;;b0,0;;m">
			</treenode>
			<treenode node="TestEmailConfig;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f0;92;1;122;;;;vpos;;v;;r&#xA;Description&#xA;     EmailConfig class;;d22,92;;b0,0;;m">
				<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;99;13;99;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="test2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php;f8;113;14;113;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestErrorController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f0;68;1;103;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     TestErrorController class;;d45,68;;b0,0;;m">
				<treenode node="beforeRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;89;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeRender method;;d32,89;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;98;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,98;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;82;19;82;;;;vpos;;vvoid;;r&#xA;Description&#xA;     components property;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php;f8;75;13;75;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestFilterDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;505;1;531;;;;vpos;;vDispatcherFilter;;c;;r&#xA;Description&#xA;     TestFilterDispatcher class;;d52,505;;b0,0;;m">
				<treenode node="afterDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;528;2;529;;;;vpos;;vmixed;;r&#xA;Description&#xA;     TestFilterDispatcher::afterDispatch()&#xA;&#xA;Parameters:&#xA;    mixed $event&#xA;&#xA;Return:&#xA;   boolean to stop the event dispatching or null to continue;;d49,528;;b1,0;;mmixed $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f41;528;47;528;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDispatch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;515;2;520;;;;vpos;;vCakeResponse;;r&#xA;Description&#xA;     TestFilterDispatcher::beforeDispatch()&#xA;&#xA;Parameters:&#xA;    mixed $event&#xA;&#xA;Return:&#xA;   |bool;;d50,515;;b1,0;;mmixed $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f42;515;48;515;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="priority;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;507;17;507;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f0;157;1;189;;;;vpos;;vHelper;;c;;r;;d32,157;;b0,0;;m">
				<treenode node="parseAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;185;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     expose a method as public&#xA;&#xA;Parameters:&#xA;    string $options&#xA;    string $exclude&#xA;    string $insertBefore&#xA;    string $insertAfter;;d102,185;;b1,0;;mstring $options;;pstring $exclude;;pstring $insertBefore;;pstring $insertAfter;;p">
					<treenode node="exclude;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f43;185;51;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="insertAfter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f81;185;93;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="insertBefore;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f60;185;73;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f33;185;41;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;174;16;174;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php;f8;164;17;164;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestHtmlHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f0;53;1;81;;;;vpos;;vHtmlHelper;;c;;r;;d40,53;;b0,0;;m">
				<treenode node="getAttribute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;74;2;79;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get a protected attribute value&#xA;&#xA;Parameters:&#xA;    string $attribute;;d42,74;;b1,0;;mstring $attribute;;p">
					<treenode node="attribute;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f30;74;40;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;64;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     expose a method as public&#xA;&#xA;Parameters:&#xA;    string $options&#xA;    string $exclude&#xA;    string $insertBefore&#xA;    string $insertAfter;;d102,64;;b1,0;;mstring $options;;pstring $exclude;;pstring $insertBefore;;pstring $insertAfter;;p">
					<treenode node="exclude;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f43;64;51;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="insertAfter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f81;64;93;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="insertBefore;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f60;64;73;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f33;64;41;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestHttpResponse;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f0;24;1;77;;;;vpos;;vHttpResponse;;c;;r&#xA;Description&#xA;     TestHttpResponse class;;d44,24;;b0,0;;m">
				<treenode node="decodeBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;43;2;45;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    string $body - A string containing the body to decode&#xA;    bool|string $encoding - Can be false in case no encoding is being used, or a string representing the encoding&#xA;&#xA;Return:&#xA;   Array or false;;d58,43;;b1,0;;mstring $body;;pbool|string $encoding;;p">
					<treenode node="body;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f28;43;33;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f35;43;44;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decodeChunkedBody;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;53;2;55;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    string $body - A string containing the chunked body to decode&#xA;&#xA;Return:&#xA;   Array or false;;d42,53;;b1,0;;mstring $body;;p">
					<treenode node="body;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f35;53;40;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;32;2;34;;;;vpos;;varray;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    array $header - Header as an indexed array (field =&gt; value)&#xA;&#xA;Return:&#xA;   Parsed header;;d38,32;;b1,0;;marray $header;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f29;32;36;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tokenEscapeChars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;73;2;75;;;;vpos;;varray;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    bool $hex - true to get them as HEX values, false otherwise&#xA;&#xA;Return:&#xA;   Escape chars;;d62,73;;b1,0;;mhex;;pchars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f47;73;53;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f34;73;38;73;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unescapeToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f8;63;2;65;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    string $token - Token to unescape&#xA;&#xA;Return:&#xA;   Unescaped token;;d54,63;;b1,0;;mtoken;;pchars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f39;63;45;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="token;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php;f31;63;37;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestHttpSocket;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f0;79;1;164;;;;vpos;;vHttpSocket;;c;;r&#xA;Description&#xA;     TestHttpSocket;;d40,79;;b0,0;;m">
				<treenode node="buildHeader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;119;2;121;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    array $header - Header to build&#xA;&#xA;Return:&#xA;   Header built from array;;d58,119;;b1,0;;mheader;;pmode;;p">
					<treenode node="header;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f29;119;36;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f38;119;43;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildRequestLine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;140;2;142;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    array $request - Needs to contain a 'uri' key&#xA;    string $versionToken - The version token to use, defaults to HTTP/1&#xA;&#xA;Return:&#xA;   Request line;;d54,140;;b1,0;;mrequest;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f34;140;42;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;109;2;111;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    array $uri - A $uri array, or uses $this-&gt;config if left empty&#xA;    string $uriTemplate - The Uri template/format to use&#xA;&#xA;Return:&#xA;   A fully qualified URL formatted according to $uriTemplate;;d117,109;;b1,0;;marray $uri;;pstring $uriTemplate;;p">
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f26;109;30;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uriTemplate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f42;109;54;109;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="configUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;87;2;89;;;;vpos;;varray;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI (see {&#xA;&#xA;Return:&#xA;   Current configuration settings;;d40,87;;b1,0;;mstring|array $uri;;p">
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f27;87;31;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="escapeToken;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;160;2;162;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    string $token - Token to escape&#xA;&#xA;Return:&#xA;   Escaped token;;d52,160;;b1,0;;mtoken;;pchars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f37;160;43;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="token;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f29;160;35;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;129;2;131;;;;vpos;;varray;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    string|array $query - A query string to parse into an array or an array to return directly &quot;as is&quot;&#xA;&#xA;Return:&#xA;   The $query parsed into a possibly multi-level array;;d36,129;;b1,0;;mstring|array $query;;p">
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f28;129;34;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="parseUri;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;98;2;100;;;;vpos;;varray;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    string|array $uri - URI to parse&#xA;    bool|array $base - If true use default URI config, otherwise indexed array to set 'scheme', 'host', 'port', etc&#xA;&#xA;Return:&#xA;   Parsed URI;;d56,98;;b1,0;;mstring|array $uri;;pbool|array $base;;p">
					<treenode node="base;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f39;98;44;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="uri;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f26;98;30;98;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tokenEscapeChars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f8;150;2;152;;;;vpos;;varray;;r&#xA;Description&#xA;     Convenience method for testing protected method&#xA;&#xA;Parameters:&#xA;    bool $hex - true to get them as HEX values, false otherwise&#xA;&#xA;Return:&#xA;   Escape chars;;d62,150;;b1,0;;mhex;;pchars;;p">
					<treenode node="chars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f47;150;53;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="hex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php;f34;150;38;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestLocalDriver;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Database\TestLocalDriver.php;f0;4;1;5;;;;vpos;;vTestSource;;c;;r;;d41,4;;b0,0;;m">
			</treenode>
			<treenode node="TestMail;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;486;1;495;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestMail class;;d37,486;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;493;17;493;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestMemcachedEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f0;28;1;48;;;;vpos;;vMemcachedEngine;;c;;r&#xA;Description&#xA;     Class TestMemcachedEngine;;d50,28;;b0,0;;m">
				<treenode node="getMemcached;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;44;2;46;;;;vpos;;v;;r;;d32,44;;b1,0;;m">
				</treenode>
				<treenode node="parseServerString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;36;2;38;;;;vpos;;varray;;r&#xA;Description&#xA;     public accessor to _parseServerString&#xA;&#xA;Parameters:&#xA;    string $server;;d44,36;;b1,0;;mstring $server;;p">
					<treenode node="server;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f35;36;42;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMemcached;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f8;40;2;42;;;;vpos;;v;;r;;d42,40;;b1,0;;mmemcached;;p">
					<treenode node="memcached;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php;f30;40;40;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestMemcacheEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f0;26;1;42;;;;vpos;;vMemcacheEngine;;c;;r&#xA;Description&#xA;     Class TestMemcacheEngine;;d48,26;;b0,0;;m">
				<treenode node="parseServerString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;34;2;36;;;;vpos;;varray;;r&#xA;Description&#xA;     public accessor to _parseServerString&#xA;&#xA;Parameters:&#xA;    string $server;;d44,34;;b1,0;;mstring $server;;p">
					<treenode node="server;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f35;34;42;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setMemcache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f8;38;2;40;;;;vpos;;v;;r;;d40,38;;b1,0;;mmemcache;;p">
					<treenode node="memcache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php;f29;38;38;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestMergeShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f0;92;1;98;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Class for testing merging vars;;d35,92;;b0,0;;m">
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;94;14;94;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php;f8;96;13;96;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3578;1;3646;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel class;;d38,3578;;b0,0;;m">
				<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3629;2;3631;;;;vpos;;vvoid;;r&#xA;Description&#xA;     find method&#xA;&#xA;Parameters:&#xA;    mixed $conditions&#xA;    mixed $fields&#xA;    mixed $order&#xA;    mixed $recursive;;d92,3629;;b1,0;;mmixed $conditions;;pmixed $fields;;pmixed $order;;pmixed $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f22;3629;33;3629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f42;3629;49;3629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f58;3629;64;3629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f73;3629;83;3629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="findAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3642;2;3644;;;;vpos;;vvoid;;r&#xA;Description&#xA;     findAll method&#xA;&#xA;Parameters:&#xA;    mixed $conditions&#xA;    mixed $fields&#xA;    mixed $order&#xA;    mixed $recursive;;d95,3642;;b1,0;;mmixed $conditions;;pmixed $fields;;pmixed $order;;pmixed $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f25;3642;36;3642;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f45;3642;52;3642;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f61;3642;67;3642;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f76;3642;86;3642;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;3599;19;3599;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3585;13;3585;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3592;17;3592;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3653;1;3668;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel2 class;;d39,3653;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3660;13;3660;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3667;17;3667;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel3;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3675;1;3690;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel4 class;;d39,3675;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3682;13;3682;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3689;17;3689;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel4;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3697;1;3774;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel4 class;;d39,3697;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3762;2;3772;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,3762;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;3762;30;3762;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3725;18;3725;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3749;28;3749;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3737;15;3737;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3704;13;3704;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3711;14;3711;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3718;17;3718;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel4TestModel7;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3781;1;3819;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel4TestModel7 class;;d49,3781;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3809;2;3817;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,3809;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;3809;30;3809;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3788;13;3788;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3795;14;3795;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3802;17;3802;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel5;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3826;1;3887;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel5 class;;d39,3826;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3874;2;3885;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,3874;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;3874;30;3874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3854;18;3854;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3864;16;3864;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3833;13;3833;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3840;14;3840;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3847;17;3847;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel6;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3894;1;3947;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel6 class;;d39,3894;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3934;2;3945;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,3934;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;3934;30;3934;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3922;18;3922;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3901;13;3901;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3908;14;3908;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3915;17;3915;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel7;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3954;1;3994;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel7 class;;d39,3954;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3982;2;3992;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,3982;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;3982;30;3982;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3961;13;3961;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3968;14;3968;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3975;17;3975;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel8;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4001;1;4055;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel8 class;;d39,4001;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4042;2;4053;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4042;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4042;30;4042;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4029;15;4029;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4008;13;4008;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4015;14;4015;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4022;17;4022;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestModel9;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4062;1;4116;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestModel9 class;;d39,4062;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4103;2;4114;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4103;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4103;30;4103;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4090;18;4090;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4069;13;4069;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4076;14;4076;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4083;17;4083;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestNlValidation;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f0;46;1;67;;;;vpos;;v;;r&#xA;Description&#xA;     TestNlValidation class;;d23,46;;b0,0;;m">
				<treenode node="postal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f15;54;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     postal function, for testing postal pass through.&#xA;&#xA;Parameters:&#xA;    string $check;;d39,54;;b1,5;;mstring $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f31;54;37;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ssn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f15;63;2;65;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ssn function for testing ssn pass through;;d36,63;;b1,5;;mcheck;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f28;63;34;63;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f0;134;24;134;;;;vpos;;v;;r&#xA;Description&#xA;     TestObject class;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="TestObjectWithoutToString;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;239;1;240;;;;vpos;;v;;r&#xA;Description&#xA;     Class TestObjectWithoutToString;;d32,239;;b0,0;;m">
			</treenode>
			<treenode node="TestObjectWithToString;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;226;1;232;;;;vpos;;v;;r&#xA;Description&#xA;     Class TestObjectWithToString;;d29,226;;b0,0;;m">
				<treenode node="__toString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;228;2;230;;;;vpos;;v;;r;;d30,228;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestOtherSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f0;1;1;26;;;;vpos;;vDataSource;;c;;r;;d41,1;;b0,0;;m">
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f8;11;2;13;;;;vpos;;v;;r;;d73,11;;b1,0;;mmodel;;pfields;;pvalues;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f38;11;45;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f30;11;36;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f54;11;61;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f8;23;2;25;;;;vpos;;v;;r;;d50,23;;b1,0;;mmodel;;pid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f38;23;41;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f30;23;36;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f8;3;2;5;;;;vpos;;v;;r;;d34,3;;b1,0;;mmodel;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f26;3;32;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f8;7;2;9;;;;vpos;;v;;r;;d43,7;;b1,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f29;7;34;7;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f8;15;2;17;;;;vpos;;v;;r;;d77,15;;b1,0;;mmodel;;pqueryData;;precursive;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f28;15;34;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f36;15;46;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f58;15;68;15;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f8;19;2;21;;;;vpos;;v;;r;;d96,19;;b1,0;;mmodel;;pfields;;pvalues;;pconditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f76;19;87;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f38;19;45;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f30;19;36;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php;f57;19;64;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestPluginAppController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestPluginAppController.php;f0;25;1;26;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     Class TestPluginAppController;;d52,25;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginAppHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Helper\TestPluginAppHelper.php;f0;1;1;3;;;;vpos;;vAppHelper;;c;;r;;d44,1;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginAppModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAppModel.php;f0;23;1;24;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Class TestPluginAppModel;;d47,23;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginAppSchema;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\Schema\schema.php;f0;25;1;39;;;;vpos;;vCakeSchema;;c;;r&#xA;Description&#xA;     Class TestPluginAppSchema;;d45,25;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\Schema\schema.php;f8;27;13;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="test_plugin_acos;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\Schema\schema.php;f8;29;25;29;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2924;1;2952;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestPluginArticle class;;d46,2924;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2938;18;2938;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2945;16;2945;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2931;13;2931;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginArticleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginArticleFixture.php;f0;23;1;50;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TestPluginArticleFixture;;d55,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginArticleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginArticleFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginAuthors;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthors.php;f0;23;1;38;;;;vpos;;vTestPluginAppModel;;c;;r&#xA;Description&#xA;     Class TestPluginAuthors;;d51,23;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthors.php;f8;27;13;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthors.php;f8;25;17;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthors.php;f8;29;17;29;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginAuthUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthUser.php;f0;23;1;45;;;;vpos;;vTestPluginAppModel;;c;;r&#xA;Description&#xA;     Class TestPluginAuthUser;;d52,23;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthUser.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthUser.php;f8;44;20;44;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthUser.php;f8;37;17;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginCacheEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f0;23;1;45;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     Class TestPluginCacheEngine;;d48,23;;b0,0;;m">
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f8;40;2;41;;;;vpos;;v;;r;;d31,40;;b1,0;;mcheck;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f23;40;29;40;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f8;43;2;44;;;;vpos;;v;;r;;d36,43;;b1,0;;mgroup;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f28;43;34;43;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f8;34;2;35;;;;vpos;;v;;r;;d46,34;;b1,0;;mkey;;poffset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f27;34;31;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f33;34;40;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f8;37;2;38;;;;vpos;;v;;r;;d30,37;;b1,0;;mkey;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f24;37;28;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f8;31;2;32;;;;vpos;;v;;r;;d46,31;;b1,0;;mkey;;poffset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f27;31;31;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f33;31;40;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f8;28;2;29;;;;vpos;;v;;r;;d28,28;;b1,0;;mkey;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f22;28;26;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f8;25;2;26;;;;vpos;;v;;r;;d48,25;;b1,0;;mkey;;pvalue;;pduration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f37;25;46;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f23;25;27;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php;f29;25;35;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestPluginComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginComment.php;f0;23;1;29;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2959;1;2980;;;;vpos;;vTestPluginAppModel;;c;;r&#xA;Description&#xA;     Class TestPluginComment;;d51,23;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2973;18;2973;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginComment.php;f8;27;13;27;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2966;13;2966;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginComment.php;f8;25;17;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginCommentFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginCommentFixture.php;f0;23;1;53;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TestPluginCommentFixture;;d55,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginCommentFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginCommentFixture.php;f8;45;16;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\TestPluginComponent.php;f0;23;1;27;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Class TestPluginComponent;;d44,23;;b0,0;;m">
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\TestPluginComponent.php;f8;25;19;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestPluginController.php;f0;23;1;35;;;;vpos;;vTestPluginAppController;;c;;r&#xA;Description&#xA;     Class TestPluginController;;d59,23;;b0,0;;m">
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestPluginController.php;f8;31;2;33;;;;vpos;;v;;r;;d23,31;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestPluginController.php;f8;27;2;29;;;;vpos;;v;;r;;d25,27;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestPluginController.php;f8;25;13;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Utility\TestPluginEngine.php;f0;2;1;4;;;;vpos;;v;;r;;d23,2;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginExceptionRenderer;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Error\TestPluginExceptionRenderer.php;f0;28;1;38;;;;vpos;;vExceptionRenderer;;c;;r&#xA;Description&#xA;     Class TestPluginExceptionRenderer;;d60,28;;b0,0;;m">
				<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Error\TestPluginExceptionRenderer.php;f8;35;2;37;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Renders the response for the exception.;;d26,35;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginLibrary;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\TestPluginLibrary.php;f0;23;1;24;;;;vpos;;v;;r&#xA;Description&#xA;     Class TestPluginLibrary;;d24,23;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginLog;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Log\Engine\TestPluginLog.php;f0;25;1;30;;;;vpos;;vCakeLogInterface;;c;;r&#xA;Description&#xA;     Class TestPluginLog;;d48,25;;b0,0;;m">
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Log\Engine\TestPluginLog.php;f8;27;2;28;;;;vpos;;v;;r;;d40,27;;b1,0;;mtype;;pmessage;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Log\Engine\TestPluginLog.php;f30;27;38;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Log\Engine\TestPluginLog.php;f23;27;28;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestPluginOtherComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\TestPluginOtherComponent.php;f0;23;1;24;;;;vpos;;vComponent;;c;;r&#xA;Description&#xA;     Class TestPluginOtherComponent;;d49,23;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginOtherLibrary;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\TestPluginOtherLibrary.php;f0;23;1;24;;;;vpos;;v;;r&#xA;Description&#xA;     Class TestPluginOtherLibrary;;d29,23;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginPersisterOneBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Behavior\TestPluginPersisterOneBehavior.php;f0;26;1;27;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Behavior to allow for dynamic and atomic manipulation of a Model's associations used for a find call. Most useful for limiting the amount of associations and data returned.;;d59,26;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginPersisterTwoBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Behavior\TestPluginPersisterTwoBehavior.php;f0;26;1;27;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Behavior to allow for dynamic and atomic manipulation of a Model's associations used for a find call. Most useful for limiting the amount of associations and data returned.;;d59,26;;b0,0;;m">
			</treenode>
			<treenode node="TestPluginPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginPost.php;f0;23;1;73;;;;vpos;;vTestPluginAppModel;;c;;r&#xA;Description&#xA;     Class TestPluginPost;;d48,23;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginPost.php;f8;30;13;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginPost.php;f8;37;17;37;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginPost.php;f8;44;17;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validationDomain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginPost.php;f8;71;25;71;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestPluginSession;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f0;7;1;28;;;;vpos;;vCakeSessionHandlerInterface;;c;;r&#xA;Description&#xA;     Test suite plugin session handler;;d63,7;;b0,0;;m">
				<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f8;13;2;14;;;;vpos;;v;;r;;d25,13;;b1,0;;m">
				</treenode>
				<treenode node="destroy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f8;22;2;23;;;;vpos;;v;;r;;d30,22;;b1,0;;mid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f25;22;28;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f8;25;2;26;;;;vpos;;v;;r;;d37,25;;b1,0;;mexpires;;p">
					<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f20;25;28;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="open;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f8;9;2;11;;;;vpos;;v;;r;;d24,9;;b1,0;;m">
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f8;16;2;17;;;;vpos;;v;;r;;d27,16;;b1,0;;mid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f22;16;25;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f8;19;2;20;;;;vpos;;v;;r;;d35,19;;b1,0;;mid;;pdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f28;19;33;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php;f23;19;26;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestPost;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f0;68;1;103;;;;vpos;;vPost;;c;;r&#xA;Description&#xA;     Helper class for testing with mocked datasources;;d28,68;;b0,0;;m">
				<treenode node="getDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;96;2;101;;;;vpos;;vDataSource;;r&#xA;Description&#xA;     Overwritten in order to return the directly set datasource object if available;;d33,96;;b1,0;;m">
				</treenode>
				<treenode node="setDataSourceObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;86;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method to set a datasource object&#xA;&#xA;Parameters:&#xA;    Object $object - The datasource object;;d46,86;;b1,0;;mObject $object;;p">
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f37;86;44;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_dataSourceObject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f11;76;29;76;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;70;18;70;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="dataForAfterSave;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php;f8;78;25;78;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestRegistryPluginModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php;f0;79;1;80;;;;vpos;;vRegistryPluginAppModel;;c;;r&#xA;Description&#xA;     TestRegistryPluginModel class;;d61,79;;b0,0;;m">
			</treenode>
			<treenode node="TestRoute;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Route\TestRoute.php;f0;4;1;6;;;;vpos;;vCakeRoute;;c;;r;;d34,4;;b0,0;;m">
			</treenode>
			<treenode node="TestsAppsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php;f0;23;1;50;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     Class TestsAppsController;;d48,23;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php;f8;29;2;35;;;;vpos;;v;;r;;d25,29;;b1,0;;m">
				</treenode>
				<treenode node="redirect_to;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php;f8;46;2;48;;;;vpos;;v;;r;;d31,46;;b1,0;;m">
				</treenode>
				<treenode node="set_action;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php;f8;41;2;44;;;;vpos;;v;;r;;d30,41;;b1,0;;m">
				</treenode>
				<treenode node="some_method;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php;f8;37;2;39;;;;vpos;;v;;r;;d31,37;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php;f8;27;19;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php;f8;25;13;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestsAppsPostsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f0;23;1;88;;;;vpos;;vAppController;;c;;r&#xA;Description&#xA;     Class TestsAppsPostsController;;d53,23;;b0,0;;m">
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f8;34;2;46;;;;vpos;;vvoid;;r&#xA;Description&#xA;     add method;;d23,34;;b1,0;;m">
				</treenode>
				<treenode node="fixtured;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f8;83;2;86;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Fixturized action for testAction();;d28,83;;b1,0;;m">
				</treenode>
				<treenode node="input_data;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f8;73;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     input_data();;d30,73;;b1,0;;m">
				</treenode>
				<treenode node="post_var;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f8;63;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     post var testing;;d28,63;;b1,0;;m">
				</treenode>
				<treenode node="url_var;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f8;53;2;56;;;;vpos;;vvoid;;r&#xA;Description&#xA;     check URL params;;d27,53;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f8;25;13;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="viewPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php;f8;27;17;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestScaffoldMock;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f0;113;1;134;;;;vpos;;vScaffold;;c;;r&#xA;Description&#xA;     TestScaffoldMock class;;d40,113;;b0,0;;m">
				<treenode node="_scaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f11;121;2;123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Overload _scaffold&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request object for scaffolding;;d52,121;;b2,0;;mCakeRequest $request;;p">
					<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f42;121;50;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php;f8;130;2;132;;;;vpos;;vunknown;;r&#xA;Description&#xA;     Get Params from the Controller.;;d29,130;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestScaffoldView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f0;30;1;42;;;;vpos;;vScaffoldView;;c;;r&#xA;Description&#xA;     TestScaffoldView class;;d44,30;;b0,0;;m">
				<treenode node="testGetFilename;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f8;38;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetFilename method&#xA;&#xA;Parameters:&#xA;    string $action;;d42,38;;b1,0;;mstring $action;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php;f33;38;40;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestsController.php;f0;23;1;39;;;;vpos;;vTestPluginAppController;;c;;r&#xA;Description&#xA;     Class TestsController;;d54,23;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestsController.php;f8;31;2;33;;;;vpos;;v;;r;;d25,31;;b1,0;;m">
				</treenode>
				<treenode node="some_method;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestsController.php;f8;35;2;37;;;;vpos;;v;;r;;d31,35;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestsController.php;f8;29;19;29;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestsController.php;f8;27;16;27;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestsController.php;f8;25;13;25;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestSecurityComponent;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f0;26;1;38;;;;vpos;;vSecurityComponent;;c;;r&#xA;Description&#xA;     TestSecurityComponent;;d54,26;;b0,0;;m">
				<treenode node="validatePost;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f8;34;2;36;;;;vpos;;vbool;;r&#xA;Description&#xA;     validatePost method&#xA;&#xA;Parameters:&#xA;    Controller $controller;;d54,34;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php;f41;34;52;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f0;30;1;431;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Provides a CakePHP wrapper around PHPUnit. Adds in CakePHP's fixtures and gives access to plugin, app and core test cases;;d30,30;;b0,0;;m">
				<treenode node="_mapFileToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f11;342;2;408;;;;vpos;;varray;;r&#xA;Description&#xA;     Find the test case for the passed file. The file could itself be a test.&#xA;&#xA;Parameters:&#xA;    string $file - The file to map&#xA;    string $category - The test file category&#xA;    bool $throwOnMissingFile - Whether or not to throw an exception&#xA;&#xA;Return:&#xA;   array(type, case);;d81,342;;b2,0;;mstring $file;;pstring $category;;pbool $throwOnMissingFile;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f42;342;51;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f35;342;40;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="throwOnMissingFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f53;342;72;342;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_mapFileToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f11;416;2;429;;;;vpos;;vstring;;r&#xA;Description&#xA;     For the given file, what category of test is it? returns app, core or the name of the plugin&#xA;&#xA;Parameters:&#xA;    string $file - The file to map;;d46,416;;b2,0;;mstring $file;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f39;416;44;416;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_parseArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f11;183;2;213;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the CLI options into an array CakeTestDispatcher can use.&#xA;&#xA;Return:&#xA;   Array of params for CakeTestDispatcher;;d33,183;;b2,0;;m">
				</treenode>
				<treenode node="_run;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f11;268;2;274;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Runs the test case from $runnerArgs&#xA;&#xA;Parameters:&#xA;    array $runnerArgs - list of arguments as obtained from _parseArgs()&#xA;    array $options - list of options as constructed by _runnerOptions();;d58,268;;b2,0;;marray $runnerArgs;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f38;268;46;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="runnerArgs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f25;268;36;268;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_runnerOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f11;220;2;241;;;;vpos;;varray;;r&#xA;Description&#xA;     Converts the options passed to the shell as options for the PHPUnit cli runner&#xA;&#xA;Return:&#xA;   Array of params for CakeTestDispatcher;;d37,220;;b2,0;;m">
				</treenode>
				<treenode node="available;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f8;281;2;331;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Shows a list of available test cases and gives the option to run one of them;;d29,281;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f8;44;2;162;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,44;;b1,0;;m">
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f8;170;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initialization method installs PHPUnit and loads all plugins;;d30,170;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f8;248;2;259;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Main entry point to this shell;;d24,248;;b1,0;;m">
				</treenode>
				<treenode node="_dispatcher;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php;f11;37;23;37;;;;vposCakeTestDispatcher;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestShellDispatcher;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f0;25;1;97;;;;vpos;;vShellDispatcher;;c;;r&#xA;Description&#xA;     TestShellDispatcher class;;d50,25;;b0,0;;m">
				<treenode node="_getShell;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f11;90;2;95;;;;vpos;;vmixed;;r&#xA;Description&#xA;     _getShell&#xA;&#xA;Parameters:&#xA;    string $plugin;;d38,90;;b2,0;;mstring $plugin;;p">
					<treenode node="shell;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f30;90;36;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_initEnvironment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f11;53;2;54;;;;vpos;;vvoid;;r&#xA;Description&#xA;     _initEnvironment method;;d39,53;;b2,0;;m">
				</treenode>
				<treenode node="_stop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f11;69;2;72;;;;vpos;;vvoid;;r&#xA;Description&#xA;     _stop method;;d39,69;;b2,0;;mstatus;;p">
					<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f26;69;33;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;61;2;62;;;;vpos;;vvoid;;r&#xA;Description&#xA;     clear method;;d25,61;;b1,0;;m">
				</treenode>
				<treenode node="getShell;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;80;2;82;;;;vpos;;vmixed;;r&#xA;Description&#xA;     getShell&#xA;&#xA;Parameters:&#xA;    string $shell;;d34,80;;b1,0;;mstring $shell;;p">
					<treenode node="shell;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f26;80;32;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;32;15;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="stopped;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;39;16;39;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="TestShell;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php;f8;46;18;46;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestShellTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f0;43;1;343;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Class TestShellTest;;d41,43;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;50;2;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp test case;;d25,50;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;68;2;71;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,68;;b1,0;;m">
				</treenode>
				<treenode node="testAvailableCoreCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;308;2;324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test available list of test cases for core category;;d45,308;;b1,0;;m">
				</treenode>
				<treenode node="testAvailableWithEmptyList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;295;2;301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test available list of test cases for an empty category;;d46,295;;b1,0;;m">
				</treenode>
				<treenode node="testMapAppFileToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;131;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapAppFileToCase;;d40,131;;b1,0;;m">
				</treenode>
				<treenode node="testMapAppFileToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;116;2;124;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapAppFileToCategory;;d44,116;;b1,0;;m">
				</treenode>
				<treenode node="testMapAppTestToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;229;2;237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapAppTestToCase;;d40,229;;b1,0;;m">
				</treenode>
				<treenode node="testMapAppTestToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;214;2;222;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapAppTestToCategory;;d44,214;;b1,0;;m">
				</treenode>
				<treenode node="testMapCoreFileToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;98;2;109;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapCoreFileToCase;;d41,98;;b1,0;;m">
				</treenode>
				<treenode node="testMapCoreFileToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;78;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapCoreFileToCategory;;d45,78;;b1,0;;m">
				</treenode>
				<treenode node="testMapCoreTestToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;196;2;207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapCoreTestToCase;;d41,196;;b1,0;;m">
				</treenode>
				<treenode node="testMapCoreTestToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;176;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapCoreTestToCategory;;d45,176;;b1,0;;m">
				</treenode>
				<treenode node="testMapNotTestToNothing;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;274;2;288;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapNotTestToNothing;;d43,274;;b1,0;;m">
				</treenode>
				<treenode node="testMapPluginFileToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;161;2;169;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapPluginFileToCase;;d43,161;;b1,0;;m">
				</treenode>
				<treenode node="testMapPluginFileToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;146;2;154;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapPluginFileToCategory;;d47,146;;b1,0;;m">
				</treenode>
				<treenode node="testMapPluginTestToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;259;2;267;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapPluginTestToCase;;d43,259;;b1,0;;m">
				</treenode>
				<treenode node="testMapPluginTestToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;244;2;252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMapPluginTestToCategory;;d47,244;;b1,0;;m">
				</treenode>
				<treenode node="testRunnerOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;331;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that correct option for test runner are passed;;d37,331;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestSource;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f0;4;1;29;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f0;26;1;88;;;;vpos;;vDataSource;;c;;r;;d36,4;;b0,0;;m">
				<treenode node="calculate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;84;2;86;;;;vpos;;varray;;r&#xA;Description&#xA;     Just return $func to pass to read() to figure out the COUNT Required for delete/update to work&#xA;&#xA;Parameters:&#xA;    Model $Model&#xA;    type $func&#xA;    type $params;;d67,84;;b1,0;;mModel $Model;;ptype $func;;ptype $params;;p">
					<treenode node="func;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f41;84;46;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f33;84;39;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f48;84;55;84;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f8;14;2;16;;;;vpos;;v;;r;;d76,14;;b1,0;;mmodel;;pfields;;pvalues;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f38;14;45;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f30;14;36;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f57;14;64;14;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f8;26;2;28;;;;vpos;;v;;r;;d50,26;;b1,0;;mmodel;;pid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f38;26;41;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f30;26;36;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f8;6;2;8;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;71;2;73;;;;vpos;;v;;r;;d34,6;;b1,0;;mmodel;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f26;6;32;6;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f32;71;38;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f8;10;2;12;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f8;61;2;63;;;;vpos;;v;;r;;d43,10;;b1,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f29;10;34;10;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f8;18;2;20;;;;vpos;;v;;r;;d77,18;;b1,0;;mmodel;;pqueryData;;precursive;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f28;18;34;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f36;18;46;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f58;18;68;18;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f8;22;2;24;;;;vpos;;v;;r;;d96,22;;b1,0;;mmodel;;pfields;;pvalues;;pconditions;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f76;22;87;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f38;22;45;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f30;22;36;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php;f57;22;64;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php;f11;32;19;32;;;;vpostype;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestStringOutput;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f0;29;1;37;;;;vpos;;vConsoleOutput;;c;;r&#xA;Description&#xA;     Class TestStringOutput;;d45,29;;b0,0;;m">
				<treenode node="_write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f11;33;2;35;;;;vpos;;v;;r;;d37,33;;b2,0;;mmessage;;p">
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f27;33;35;33;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="output;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php;f8;31;15;31;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestsuiteShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestsuiteShell.php;f0;31;1;99;;;;vpos;;vTestShell;;c;;r&#xA;Description&#xA;     Provides a CakePHP wrapper around PHPUnit. Adds in CakePHP's fixtures and gives access to plugin, app and core test cases;;d39,31;;b0,0;;m">
				<treenode node="_parseArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestsuiteShell.php;f11;54;2;79;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse the CLI options into an array CakeTestDispatcher can use.&#xA;&#xA;Return:&#xA;   Array of params for CakeTestDispatcher;;d33,54;;b2,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestsuiteShell.php;f8;38;2;47;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,38;;b1,0;;m">
				</treenode>
				<treenode node="main;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestsuiteShell.php;f8;86;2;97;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Main entry point to this shell;;d24,86;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f0;26;1;581;;;;vpos;;vBakeTask;;c;;r&#xA;Description&#xA;     Task class for creating and updating test files.;;d32,26;;b0,0;;m">
				<treenode node="_addFixture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f11;436;2;444;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Add class name to the fixture list. Sets the app. or plugin.plugin_name. prefix.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the Model class that a fixture might be required for;;d39,436;;b2,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f32;436;37;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_interactive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f11;107;2;124;;;;vpos;;vstring;;r&#xA;Description&#xA;     Handles interactive baking&#xA;&#xA;Parameters:&#xA;    string $type - The type of object to bake a test for&#xA;&#xA;Return:&#xA;   |bool;;d47,107;;b2,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f33;107;38;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_processController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f11;417;2;427;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Process all the models attached to a controller and generate a fixture list.&#xA;&#xA;Parameters:&#xA;    Controller $subject - A controller to pull model names off of;;d49,417;;b2,0;;mController $subject;;p">
					<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f39;417;47;417;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_processModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f11;389;2;408;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Process a model recursively and pull out all the model names converting them to fixture names.&#xA;&#xA;Parameters:&#xA;    Model $subject - A Model class to scan for associations and pull fixtures off of;;d44,389;;b2,0;;mModel $subject;;p">
					<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f34;389;42;389;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;133;2;178;;;;vpos;;vstring;;r&#xA;Description&#xA;     Completes final steps for generating data to create test case.&#xA;&#xA;Parameters:&#xA;    string $type - Type of object to bake test case for ie&#xA;    string $className - the 'cake name' for the class ie&#xA;&#xA;Return:&#xA;   |bool;;d41,133;;b1,0;;mstring $type;;pstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f29;133;39;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f22;133;27;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="buildTestSubject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;277;2;287;;;;vpos;;vobject;;r&#xA;Description&#xA;     Construct an instance of the class to be tested. So that fixtures can be detected&#xA;&#xA;Parameters:&#xA;    string $type - The Type of object you are generating tests for eg&#xA;    string $class - the Classname of the class the test is being generated for&#xA;&#xA;Return:&#xA;   And instance of the class that is going to be tested;;d49,277;;b1,0;;mstring $type;;pstring $class;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f41;277;47;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f34;277;39;277;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;82;2;99;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Execution method always used for tasks;;d27,82;;b1,0;;m">
				</treenode>
				<treenode node="generateConstructor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;483;2;501;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate a constructor code snippet for the type and class name&#xA;&#xA;Parameters:&#xA;    string $type - The Type of object you are generating tests for eg&#xA;    string $fullClassName - The Classname of the class the test is being generated for&#xA;    string $plugin - The plugin name&#xA;&#xA;Return:&#xA;   Constructor snippets for the thing you are building;;d69,483;;b1,0;;mstring $type;;pstring $fullClassName;;pstring $plugin;;p">
					<treenode node="fullClassName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f44;483;58;483;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f60;483;67;483;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f37;483;42;483;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateFixtureList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;372;2;380;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate the list of fixtures that will be required to run this test based on loaded models.&#xA;&#xA;Parameters:&#xA;    object $subject - The object you want to generate fixtures for&#xA;&#xA;Return:&#xA;   Array of fixtures to be included in the test;;d47,372;;b1,0;;mobject $subject;;p">
					<treenode node="subject;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f37;372;45;372;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateUses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;511;2;524;;;;vpos;;varray;;r&#xA;Description&#xA;     Generate the uses() calls for a type &amp; class name&#xA;&#xA;Parameters:&#xA;    string $type - The Type of object you are generating tests for eg&#xA;    string $realType - The package name for the class&#xA;    string $className - The Classname of the class the test is being generated for&#xA;&#xA;Return:&#xA;   An array containing used classes;;d60,511;;b1,0;;mstring $type;;pstring $realType;;pstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f48;511;58;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="realType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f37;511;46;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f30;511;35;511;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getBaseType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;338;2;343;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the base class and package name for a given type.&#xA;&#xA;Parameters:&#xA;    string $type - The type the class having a test&#xA;&#xA;Return:&#xA;   Array of (class, type);;d36,338;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f29;338;34;338;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getClassName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;211;2;237;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the user chosen Class name for the chosen type&#xA;&#xA;Parameters:&#xA;    string $objectType - Type of object to list classes for i&#xA;&#xA;Return:&#xA;   Class name the user chose;;d43,211;;b1,0;;mstring $objectType;;p">
					<treenode node="objectType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f30;211;41;211;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getObjectType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;185;2;203;;;;vpos;;vstring;;r&#xA;Description&#xA;     Interact with the user and get their chosen type. Can exit the script.&#xA;&#xA;Return:&#xA;   Users chosen type;;d33,185;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;549;2;579;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,549;;b1,0;;m">
				</treenode>
				<treenode node="getRealClassName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;297;2;308;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the real class name from the cake short form. If the class name is already suffixed with the type, the type will not be duplicated.&#xA;&#xA;Parameters:&#xA;    string $type - The Type of object you are generating tests for eg&#xA;    string $class - the Classname of the class the test is being generated for&#xA;&#xA;Return:&#xA;   Real class name;;d49,297;;b1,0;;mstring $type;;pstring $class;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f41;297;47;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f34;297;39;297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getTestableMethods;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;352;2;363;;;;vpos;;varray;;r&#xA;Description&#xA;     Get methods declared in the class given. No parent methods will be returned&#xA;&#xA;Parameters:&#xA;    string $className - Name of class to look at&#xA;&#xA;Return:&#xA;   Array of method names;;d48,352;;b1,0;;mstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f36;352;46;352;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getUserFixtures;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;451;2;461;;;;vpos;;varray;;r&#xA;Description&#xA;     Interact with the user to get additional fixtures they want to use.&#xA;&#xA;Return:&#xA;   Array of fixtures the user wants to add;;d35,451;;b1,0;;m">
				</treenode>
				<treenode node="hasMockClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;470;2;473;;;;vpos;;vbool;;r&#xA;Description&#xA;     Is a mock class required for this type of test? Controllers require a mock class.&#xA;&#xA;Parameters:&#xA;    string $type - The type of object tests are being generated for eg;;d37,470;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f30;470;35;470;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isLoadableClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;258;2;267;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if a class with the given package is loaded or can be loaded.&#xA;&#xA;Parameters:&#xA;    string $package - The package of object you are generating tests for eg&#xA;    string $class - the Classname of the class the test is being generated for;;d51,258;;b1,0;;mstring $package;;pstring $class;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f43;258;49;258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="package;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f33;258;41;258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;318;2;328;;;;vpos;;vstring;;r&#xA;Description&#xA;     Map the types that TestTask uses to concrete types that App::uses can use.&#xA;&#xA;Parameters:&#xA;    string $type - The type of thing having a test generated&#xA;    string $plugin - The plugin name;;d41,318;;b1,0;;mstring $type;;pstring $plugin;;p">
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f32;318;39;318;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f25;318;30;318;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testCaseFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;534;2;542;;;;vpos;;vstring;;r&#xA;Description&#xA;     Make the filename for the test case. resolve the suffixes for controllers and get the plugin path if needed.&#xA;&#xA;Parameters:&#xA;    string $type - The Type of object you are generating tests for eg&#xA;    string $className - the Classname of the class the test is being generated for&#xA;&#xA;Return:&#xA;   filename the test should be created on;;d53,534;;b1,0;;mstring $type;;pstring $className;;p">
					<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f41;534;51;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f34;534;39;534;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="typeCanDetectFixtures;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;246;2;249;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether the chosen type can find its own fixtures. Currently only model, and controller are supported&#xA;&#xA;Parameters:&#xA;    string $type - The Type of object you are generating tests for eg;;d46,246;;b1,0;;mstring $type;;p">
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f39;246;44;246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f11;75;21;75;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="baseTypes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;62;18;62;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="classTypes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;47;19;47;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;33;13;33;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php;f8;40;14;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestTaskAppModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f0;129;1;130;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Simulated plugin;;d37,129;;b0,0;;m">
			</treenode>
			<treenode node="TestTaskArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f0;34;1;93;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Test Article model;;d36,34;;b0,0;;m">
				<treenode node="_innerMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f11;90;2;91;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Example protected method;;d35,90;;b2,0;;m">
				</treenode>
				<treenode node="doSomething;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;74;2;75;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Example public method;;d31,74;;b1,0;;m">
				</treenode>
				<treenode node="doSomethingElse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;82;2;83;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Example Secondary public method;;d35,82;;b1,0;;m">
				</treenode>
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;60;28;60;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;48;16;48;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;41;17;41;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestTaskComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f0;137;1;157;;;;vpos;;vTestTaskAppModel;;c;;r&#xA;Description&#xA;     Testing AppMode (TaskComment);;d47,137;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;151;18;151;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;144;17;144;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestTaskCommentsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f0;164;1;172;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     Test Task Comments Controller;;d52,164;;b0,0;;m">
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;171;13;171;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestTaskTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f0;100;1;122;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Tag Testing Model;;d32,100;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;114;28;114;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;107;17;107;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f0;179;1;754;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TestTaskTest class;;d40,179;;b0,0;;m">
				<treenode node="caseFileNameProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f15;629;2;642;;;;vpos;;v;;r;;d47,629;;b1,5;;m">
				</treenode>
				<treenode node="mapTypeProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f15;729;2;743;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for mapType() tests.;;d42,729;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;193;2;204;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,193;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;211;2;215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,211;;b1,0;;m">
				</treenode>
				<treenode node="testBakeBehaviorTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;479;2;492;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking behavior test files,;;d40,479;;b1,0;;m">
				</treenode>
				<treenode node="testBakeComponentTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;456;2;472;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking component test files,;;d41,456;;b1,0;;m">
				</treenode>
				<treenode node="testBakeControllerTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;429;2;449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking controller test files;;d42,429;;b1,0;;m">
				</treenode>
				<treenode node="testBakeHelperTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;499;2;513;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking helper test files,;;d38,499;;b1,0;;m">
				</treenode>
				<treenode node="testBakeModelTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;398;2;422;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking files. The conditionally run tests are known to fail in PHP4 as PHP4 class names are all lower case, breaking the plugin path inflection.;;d37,398;;b1,0;;m">
				</treenode>
				<treenode node="testBakeWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;584;2;595;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake() with a -plugin param;;d38,584;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithOneArg;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;678;2;688;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test execute with a type defined;;d41,678;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithTwoArgs;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;695;2;705;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test execute with type and class name defined;;d42,695;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithTwoArgsLowerCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;712;2;722;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test execute with type and class name defined and lower case.;;d51,712;;b1,0;;m">
				</treenode>
				<treenode node="testFilePathGenerationModelRepeated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;222;2;241;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that file path generation doesn't continuously append paths.;;d55,222;;b1,0;;m">
				</treenode>
				<treenode node="testFixtureArrayGenerationFromController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;274;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the generation of fixtures works correctly.;;d60,274;;b1,0;;m">
				</treenode>
				<treenode node="testFixtureArrayGenerationFromModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;260;2;267;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that the generation of fixtures works correctly.;;d55,260;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateConstructor;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;520;2;532;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Constructor generation ensure that constructClasses is called for controllers;;d43,520;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateUses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;539;2;567;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generateUses();;d36,539;;b1,0;;m">
				</treenode>
				<treenode node="testGetClassName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;328;2;341;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that getClassName returns the user choice as a class name.;;d36,328;;b1,0;;m">
				</treenode>
				<treenode node="testGetObjectType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;288;2;297;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test user interaction to get object type;;d37,288;;b1,0;;m">
				</treenode>
				<treenode node="testGetRealClassname;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;363;2;390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that resolving class names works;;d40,363;;b1,0;;m">
				</treenode>
				<treenode node="testGetUserFixtures;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;348;2;356;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the user interaction for defining additional fixtures.;;d39,348;;b1,0;;m">
				</treenode>
				<treenode node="testInteractiveWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;602;2;627;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test interactive with plugins lists from the plugin;;d45,602;;b1,0;;m">
				</treenode>
				<treenode node="testMapType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;751;2;753;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that mapType returns the correct package names.;;d60,751;;b1,0;;moriginal;;pplugin;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f49;751;58;751;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="original;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f29;751;38;751;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f40;751;47;751;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testMethodIntrospection;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;249;2;253;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that method introspection pulls all relevant non parent class methods into the test case.;;d43,249;;b1,0;;m">
				</treenode>
				<treenode node="testMockClassGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;574;2;577;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that mock class generation works for the appropriate classes;;d43,574;;b1,0;;m">
				</treenode>
				<treenode node="testRegistryClearWhenBuildingTestObjects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;304;2;321;;;;vpos;;vvoid;;r&#xA;Description&#xA;     creating test subjects should clear the registry so the registry is always fresh;;d60,304;;b1,0;;m">
				</treenode>
				<treenode node="testTestCaseFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;650;2;656;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test filename generation for each type + plugins;;d64,650;;b1,0;;mtype;;pclass;;pexpected;;p">
					<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f45;650;51;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f53;650;62;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f38;650;43;650;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testTestCaseFileNamePlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;663;2;671;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test filename generation for plugins.;;d46,663;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php;f8;186;17;186;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestTestShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f0;26;1;36;;;;vpos;;vTestShell;;c;;r&#xA;Description&#xA;     Class TestTestShell;;d38,26;;b0,0;;m">
				<treenode node="mapFileToCase;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;28;2;30;;;;vpos;;v;;r;;d77,28;;b1,0;;mfile;;pcategory;;pthrowOnMissingFile;;p">
					<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f38;28;47;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f31;28;36;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="throwOnMissingFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f49;28;68;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mapFileToCategory;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f8;32;2;34;;;;vpos;;v;;r;;d42,32;;b1,0;;mfile;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php;f35;32;40;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestTheme2View;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f0;58;1;91;;;;vpos;;vThemeView;;c;;r&#xA;Description&#xA;     TestTheme2View class;;d39,58;;b0,0;;m">
				<treenode node="getLayoutFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;87;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     getLayoutFileName method&#xA;&#xA;Parameters:&#xA;    string $name;;d49,87;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f35;87;40;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getViewFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;77;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     getViewFileName method&#xA;&#xA;Parameters:&#xA;    string $name;;d47,77;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f33;77;38;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renderElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;67;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     renderElement method&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    array $params;;d57,67;;b1,0;;mstring $name;;parray $params;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f31;67;36;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f38;67;45;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestThemeView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;101;1;134;;;;vpos;;vView;;c;;r&#xA;Description&#xA;     TestThemeView class;;d33,101;;b0,0;;m">
				<treenode node="getLayoutFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;130;2;132;;;;vpos;;vstring;;r&#xA;Description&#xA;     getLayoutFileName method&#xA;&#xA;Parameters:&#xA;    string $name - The name of the layout to find&#xA;&#xA;Return:&#xA;   Filename for layout file (;;d49,130;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f35;130;40;130;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getViewFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;120;2;122;;;;vpos;;vstring;;r&#xA;Description&#xA;     getViewFileName method&#xA;&#xA;Parameters:&#xA;    string $name - Controller action to find template filename for&#xA;&#xA;Return:&#xA;   Template filename;;d47,120;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f33;120;38;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="renderElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;110;2;112;;;;vpos;;vstring;;r&#xA;Description&#xA;     renderElement method&#xA;&#xA;Parameters:&#xA;    string $name&#xA;    array $params&#xA;&#xA;Return:&#xA;   The given name;;d57,110;;b1,0;;mstring $name;;parray $params;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f31;110;36;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f38;110;45;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="TestUtilityClass;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Utility\TestUtilityClass.php;f0;23;1;24;;;;vpos;;v;;r&#xA;Description&#xA;     Class TestUtilityClass;;d23,23;;b0,0;;m">
			</treenode>
			<treenode node="TestValidate;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;136;1;189;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TestValidate class;;d41,136;;b0,0;;m">
				<treenode node="validateNumber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;173;2;177;;;;vpos;;vvoid;;r&#xA;Description&#xA;     validateNumber method&#xA;&#xA;Parameters:&#xA;    mixed $value&#xA;    mixed $options;;d50,173;;b1,0;;mmixed $value;;pmixed $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f40;173;48;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f32;173;38;173;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="validateTitle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;185;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     validateTitle method&#xA;&#xA;Parameters:&#xA;    mixed $value;;d39,185;;b1,0;;mmixed $value;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f31;185;37;185;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;157;19;157;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;150;13;150;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;143;17;143;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;141;1;183;;;;vpos;;vView;;c;;r&#xA;Description&#xA;     TestView class;;d28,141;;b0,0;;m">
				<treenode node="getLayoutFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;159;2;161;;;;vpos;;vstring;;r&#xA;Description&#xA;     getLayoutFileName method&#xA;&#xA;Parameters:&#xA;    string $name - The name of the layout to find&#xA;&#xA;Return:&#xA;   Filename for layout file (;;d49,159;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f35;159;40;159;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getViewFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;149;2;151;;;;vpos;;vstring;;r&#xA;Description&#xA;     getViewFileName method&#xA;&#xA;Parameters:&#xA;    string $name - Controller action to find template filename for&#xA;&#xA;Return:&#xA;   Template filename;;d47,149;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f33;149;38;149;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="paths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;170;2;172;;;;vpos;;varray;;r&#xA;Description&#xA;     paths method&#xA;&#xA;Parameters:&#xA;    string $plugin - Optional plugin name to scan for view files&#xA;    bool $cached - Set to true to force a refresh of view paths&#xA;&#xA;Return:&#xA;   paths;;d55,170;;b1,0;;mstring $plugin;;pbool $cached;;p">
					<treenode node="cached;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f39;170;46;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f23;170;30;170;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="scripts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;179;2;181;;;;vpos;;varray;;r&#xA;Description&#xA;     Test only function to return instance scripts.&#xA;&#xA;Return:&#xA;   Scripts;;d27,179;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TestViewEventListener;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;247;1;295;;;;vpos;;vCakeEventListener;;c;;r&#xA;Description&#xA;     Class TestViewEventListener;;d57,247;;b0,0;;m">
				<treenode node="afterRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;291;2;293;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterRender method&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - the event being sent;;d37,291;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f29;291;35;291;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;281;2;283;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeRender method&#xA;&#xA;Parameters:&#xA;    CakeEvent $event - the event being sent;;d38,281;;b1,0;;mCakeEvent $event;;p">
					<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f30;281;36;281;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;268;2;273;;;;vpos;;varray;;r&#xA;Description&#xA;     implementedEvents method;;d37,268;;b1,0;;m">
				</treenode>
				<treenode node="afterRenderViewType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;261;28;261;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="beforeRenderViewType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;254;29;254;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TextCoverageReport;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\TextCoverageReport.php;f0;27;1;63;;;;vpos;;vBaseCoverageReport;;c;;r&#xA;Description&#xA;     Generates code coverage reports in Simple plain text from data obtained from PHPUnit;;d52,27;;b0,0;;m">
				<treenode node="generateDiff;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\TextCoverageReport.php;f8;57;2;61;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a 'diff' report for a file. Since diffs are too big for plain text reports a simple file =&gt; % covered is done.&#xA;&#xA;Parameters:&#xA;    string $filename - Name of the file having coverage generated&#xA;    array $fileLines - File data as an array&#xA;    array $coverageData - Array of coverage data to use to generate HTML diffs with;;d68,57;;b1,0;;mstring $filename;;parray $fileLines;;parray $coverageData;;p">
					<treenode node="coverageData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\TextCoverageReport.php;f53;57;66;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fileLines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\TextCoverageReport.php;f41;57;51;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\TextCoverageReport.php;f30;57;39;57;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="report;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\TextCoverageReport.php;f8;34;2;46;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates report text to display.&#xA;&#xA;Return:&#xA;   compiled plain text report;;d26,34;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TextHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f0;33;1;344;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Text helper library.;;d35,33;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;88;2;90;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Call methods from String utility class&#xA;&#xA;Parameters:&#xA;    string $method - Method to call&#xA;    array $params - Parameters to pass to method&#xA;&#xA;Return:&#xA;   Whatever is returned by called method, or false on failure;;d42,88;;b1,0;;mstring $method;;parray $params;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f24;88;31;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f33;88;40;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;69;2;79;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    View $View - the view object the helper is attached to&#xA;    array $settings - Settings array Settings array;;d62,69;;b1,0;;mView $View;;parray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f41;69;50;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f34;69;39;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_insertPlaceHolder;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f11;133;2;137;;;;vpos;;vstring;;r&#xA;Description&#xA;     Saves the placeholder for a string, for later use. This gets around double escaping content in URL's.&#xA;&#xA;Parameters:&#xA;    array $matches - An array of regexp matches&#xA;&#xA;Return:&#xA;   Replaced values;;d49,133;;b2,0;;marray $matches;;p">
					<treenode node="matches;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f39;133;47;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_linkEmails;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f11;166;2;172;;;;vpos;;vstring;;r&#xA;Description&#xA;     Links email addresses&#xA;&#xA;Parameters:&#xA;    string $text - The text to operate on&#xA;    array $options - An array of options to use for the HTML;;d49,166;;b2,0;;mstring $text;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f39;166;47;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f32;166;37;166;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_linkUrls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f11;146;2;156;;;;vpos;;vstring;;r&#xA;Description&#xA;     Replace placeholders with links.&#xA;&#xA;Parameters:&#xA;    string $text - The text to operate on&#xA;    array $htmlOptions - The options for the generated links&#xA;&#xA;Return:&#xA;   The text with links inserted;;d51,146;;b2,0;;mstring $text;;parray $htmlOptions;;p">
					<treenode node="htmlOptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f37;146;49;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f30;146;35;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="autoLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;214;2;217;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convert all links and email addresses to HTML links.&#xA;&#xA;Parameters:&#xA;    string $text - Text&#xA;    array $options - Array of HTML options, and options listed above&#xA;&#xA;Return:&#xA;   The text with links;;d53,214;;b1,0;;mstring $text;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f33;214;41;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f26;214;31;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="autoLinkEmails;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;186;2;200;;;;vpos;;vstring;;r&#xA;Description&#xA;     Adds email links (&lt;a href=&quot;mailto:....) to a given text.&#xA;&#xA;Parameters:&#xA;    string $text - Text&#xA;    array $options - Array of HTML options, and options listed above&#xA;&#xA;Return:&#xA;   The text with links;;d59,186;;b1,0;;mstring $text;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f39;186;47;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f32;186;37;186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="autoLinkUrls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;105;2;124;;;;vpos;;vstring;;r&#xA;Description&#xA;     Adds links (&lt;a href=....) to a given text, by finding text that begins with strings like http:// and ftp://.&#xA;&#xA;Parameters:&#xA;    string $text - Text&#xA;    array $options - Array of HTML options, and options listed above&#xA;&#xA;Return:&#xA;   The text with links;;d57,105;;b1,0;;mstring $text;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f37;105;45;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f30;105;35;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="autoParagraph;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;243;2;255;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats paragraphs around given text for all line breaks &lt;br /&gt; added for single line return &lt;p&gt; added for double line return&#xA;&#xA;Parameters:&#xA;    string $text - Text&#xA;&#xA;Return:&#xA;   The text with proper &lt;p&gt; and &lt;br /&gt; tags;;d38,243;;b1,0;;mstring $text;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f31;243;36;243;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="excerpt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;326;2;328;;;;vpos;;vstring;;r&#xA;Description&#xA;     Extracts an excerpt from the text surrounding the phrase with a number of characters on each side determined by radius.&#xA;&#xA;Parameters:&#xA;    string $text - String to search the phrase in&#xA;    string $phrase - Phrase that will be searched for&#xA;    int $radius - The amount of characters that will be returned on each side of the founded phrase&#xA;    string $ending - Ending that will be appended&#xA;&#xA;Return:&#xA;   Modified string;;d73,326;;b1,0;;mstring $text;;pstring $phrase;;pint $radius;;pstring $ending;;p">
					<treenode node="ending;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f56;326;63;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="phrase;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f32;326;39;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="radius;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f41;326;48;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f25;326;30;326;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="highlight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;230;2;232;;;;vpos;;vstring;;r&#xA;Description&#xA;     Highlights a given phrase in a text. You can specify any expression in highlighter that may include the \1 expression to include the $phrase found.&#xA;&#xA;Parameters:&#xA;    string $text - Text to search the phrase in&#xA;    string $phrase - The phrase that will be searched&#xA;    array $options - An array of html attributes and options&#xA;&#xA;Return:&#xA;   The highlighted text;;d63,230;;b1,0;;mstring $text;;pstring $phrase;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f43;230;51;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="phrase;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f34;230;41;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f27;230;32;230;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="stripLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;265;2;267;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strips given text of all links (&lt;a href=....)&#xA;&#xA;Parameters:&#xA;    string $text - Text&#xA;&#xA;Return:&#xA;   The text without links;;d35,265;;b1,0;;mstring $text;;p">
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f28;265;33;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="tail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;310;2;312;;;;vpos;;vstring;;r&#xA;Description&#xA;     Truncates text starting from the end.&#xA;&#xA;Parameters:&#xA;    string $text - String to truncate&#xA;    int $length - Length of returned string, including ellipsis&#xA;    array $options - An array of html attributes and options&#xA;&#xA;Return:&#xA;   Trimmed string;;d64,310;;b1,0;;mstring $text;;pint $length;;parray $options;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f29;310;36;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f44;310;52;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f22;310;27;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;340;2;342;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a comma separated list where the last two items are joined with 'and', forming natural language.&#xA;&#xA;Parameters:&#xA;    array $list - The list to be joined&#xA;    string $and - The word used to join the last and second last items together with&#xA;    string $separator - The separator used to join all the other items together&#xA;&#xA;Return:&#xA;   The glued together string;;d63,340;;b1,0;;marray $list;;pstring $and;;pstring $separator;;p">
					<treenode node="and;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f31;340;35;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f24;340;29;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f44;340;54;340;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="truncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;288;2;290;;;;vpos;;vstring;;r&#xA;Description&#xA;     Truncates text.&#xA;&#xA;Parameters:&#xA;    string $text - String to truncate&#xA;    int $length - Length of returned string, including ellipsis&#xA;    array $options - An array of html attributes and options&#xA;&#xA;Return:&#xA;   Trimmed string;;d68,288;;b1,0;;mstring $text;;pint $length;;parray $options;;p">
					<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f33;288;40;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f48;288;56;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f26;288;31;288;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_engine;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f11;55;19;55;;;;vposstdClass;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_placeholders;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f11;48;25;48;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Html;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php;f28;29;34;29;;;;vposHtmlHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="TextHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f0;51;1;552;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TextHelperTest class;;d42,51;;b0,0;;m">
				<treenode node="autoLinkEmailProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;412;2;472;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Data provider for autoLinkEmail.;;d41,412;;b1,0;;m">
				</treenode>
				<treenode node="autoLinkProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f15;246;2;313;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for autoLinking;;d43,246;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;58;2;62;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,58;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;69;2;72;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,69;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;118;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutoLink method;;d32,118;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLinkEmailInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;492;2;496;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test invalid email addresses.;;d44,492;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLinkEmails;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;482;2;485;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutoLinkEmails method&#xA;&#xA;Parameters:&#xA;    string $text - The text to link&#xA;    string $expected - The expected results;;d72,482;;b1,0;;mtext;;pexpected;;pattrs;;p">
					<treenode node="attrs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f54;482;60;482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f43;482;52;482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f36;482;41;482;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testAutoLinkEscape;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;218;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test escaping for autoLink;;d38,218;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLinkMixed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;188;2;194;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test mixing URLs and Email addresses in one confusing string.;;d37,188;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLinkOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;201;2;211;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test autoLink() and options.;;d39,201;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLinkUrls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;321;2;324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutoLinkUrls method;;d52,321;;b1,0;;mtext;;pexpected;;p">
					<treenode node="expected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f41;321;50;321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f34;321;39;321;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testAutoLinkUrlsEscape;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;348;2;393;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test autoLinkUrls with the escape option.;;d42,348;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLinkUrlsOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;331;2;341;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the options for autoLinkUrls;;d43,331;;b1,0;;m">
				</treenode>
				<treenode node="testAutoLinkUrlsQueryString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;400;2;405;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test autoLinkUrls with query strings.;;d47,400;;b1,0;;m">
				</treenode>
				<treenode node="testAutoParagraph;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;503;2;550;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAutoParagraph method;;d37,503;;b1,0;;m">
				</treenode>
				<treenode node="testEngineOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;97;2;111;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test engine override;;d38,97;;b1,0;;m">
				</treenode>
				<treenode node="testTextHelperProxyMethodCalls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;79;2;90;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test String class methods are called correctly;;d50,79;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TextHelperTestObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f0;26;1;36;;;;vpos;;vTextHelper;;c;;r&#xA;Description&#xA;     Class TextHelperTestObject;;d46,26;;b0,0;;m">
				<treenode node="attach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;28;2;30;;;;vpos;;v;;r;;d44,28;;b1,0;;mstring;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f35;28;42;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="engine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php;f8;32;2;34;;;;vpos;;v;;r;;d26,32;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TheHtmlTestController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f0;36;1;51;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     TheHtmlTestController class;;d47,36;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;43;13;43;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php;f8;50;13;50;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ThemePosts2Controller;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f0;27;1;51;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ThemePosts2Controller class;;d47,27;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;43;2;49;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,43;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;34;13;34;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="theme;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;36;14;36;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ThemePostsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;78;1;94;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ThemePostsController class;;d46,78;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;87;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,87;;b1,0;;m">
				</treenode>
				<treenode node="theme;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;80;14;80;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ThemeView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ThemeView.php;f0;28;1;30;;;;vpos;;vView;;c;;r&#xA;Description&#xA;     Theme view class;;d29,28;;b0,0;;m">
			</treenode>
			<treenode node="ThemeViewTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f0;98;1;263;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ThemeViewTest class;;d41,98;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;105;2;119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,105;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;126;2;132;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,126;;b1,0;;m">
				</treenode>
				<treenode node="testGetTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;165;2;195;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetTemplate method;;d35,165;;b1,0;;m">
				</treenode>
				<treenode node="testMemoryLeakInPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;246;2;262;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test memory leaks that existed in _paths at one point.;;d41,246;;b1,0;;m">
				</treenode>
				<treenode node="testMissingLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;226;2;239;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingLayout method;;d37,226;;b1,0;;m">
				</treenode>
				<treenode node="testMissingView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;203;2;218;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingView method;;d35,203;;b1,0;;m">
				</treenode>
				<treenode node="testPluginThemedGetTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php;f8;139;2;158;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPluginGetTemplate method;;d47,139;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ThePaper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1922;1;1951;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ThePaper class;;d37,1922;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1950;28;1950;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1943;15;1943;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1929;13;1929;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1936;17;1936;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ThePaperMonkiesFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThePaperMonkiesFixture.php;f0;23;1;41;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ThePaperMonkiesFixture;;d53,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThePaperMonkiesFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThePaperMonkiesFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TheVoid;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2142;1;2157;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TheVoid class;;d36,2142;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2149;13;2149;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2156;17;2156;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ThirdBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php;f0;445;1;446;;;;vpos;;vFirstBehavior;;c;;r&#xA;Description&#xA;     ThirdBehavior;;d42,445;;b0,0;;m">
			</treenode>
			<treenode node="ThirdGenericObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f0;70;1;78;;;;vpos;;vGenericObject;;c;;r&#xA;Description&#xA;     Third Extension of Generic Object;;d47,70;;b0,0;;m">
				<treenode node="callback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php;f8;75;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     ;;d28,75;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Thread;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;1050;1;1072;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Thread class;;d35,1050;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1064;18;1064;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1071;16;1071;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;1057;13;1057;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ThreadFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThreadFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class ThreadFixture;;d44,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThreadFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThreadFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TimeHelper;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f0;31;1;499;;;;vpos;;vAppHelper;;c;;r&#xA;Description&#xA;     Time Helper class for easy use of time data.;;d35,31;;b0,0;;m">
				<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;122;2;124;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Call methods from CakeTime utility class&#xA;&#xA;Parameters:&#xA;    string $method - Method to call&#xA;    array $params - Parameters to pass to method&#xA;&#xA;Return:&#xA;   Whatever is returned by called method, or false on failure;;d42,122;;b1,0;;mstring $method;;parray $params;;p">
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f24;122;31;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f33;122;40;122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;52;2;62;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    View $View - the view object the helper is attached to&#xA;    array $settings - Settings array;;d62,52;;b1,0;;mView $View;;parray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f41;52;50;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f34;52;39;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;104;2;113;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Magic accessor for attributes that were deprecated.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the attribute to get;;d30,104;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f23;104;28;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__isset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;87;2;96;;;;vpos;;vbool;;r&#xA;Description&#xA;     Magic isset check for deprecated attributes.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the attribute to check&#xA;&#xA;Return:&#xA;   |null;;d32,87;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f25;87;30;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="__set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;71;2;79;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Magic accessor for deprecated attributes.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the attribute to set&#xA;    string $value - Value of the attribute to set;;d38,71;;b1,0;;mstring $name;;pstring $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f23;71;28;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f30;71;36;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="convert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;150;2;152;;;;vpos;;vint;;r&#xA;Description&#xA;     Converts given time (in server's time zone) to user's local time, given his/her timezone.&#xA;&#xA;Parameters:&#xA;    string $serverTime - UNIX timestamp&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   UNIX timestamp;;d49,150;;b1,0;;mstring $serverTime;;pstring|DateTimeZone $timezone;;p">
					<treenode node="serverTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f25;150;36;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f38;150;47;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="convertSpecifiers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;137;2;139;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts a string representing the format for the function strftime and returns a windows safe and i18n aware format.&#xA;&#xA;Parameters:&#xA;    string $format - Format with specifiers for strftime function&#xA;    string $time - UNIX timestamp&#xA;&#xA;Return:&#xA;   windows safe and date() function compatible format for strftime;;d58,137;;b1,0;;mstring $format;;pstring $time;;p">
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f35;137;42;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f44;137;49;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="dayAsSql;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;231;2;233;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a partial SQL string to search for all records between two times occurring on the same day.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string $fieldName - Name of database field to compare with&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Partial SQL string;;d69,231;;b1,0;;mint|string|DateTime $dateString;;pstring $fieldName;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f26;231;37;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f39;231;49;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f51;231;60;231;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="daysAsSql;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;216;2;218;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a partial SQL string to search for all records between two dates.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $begin - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    int|string|DateTime $end - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string $fieldName - Name of database field to compare with&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Partial SQL string;;d71,216;;b1,0;;mint|string|DateTime $begin;;pint|string|DateTime $end;;pstring $fieldName;;pstring|DateTimeZone $timezone;;p">
					<treenode node="begin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f27;216;33;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="end;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f35;216;39;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fieldName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f41;216;51;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f53;216;62;216;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="format;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;479;2;481;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted date string, given either a UNIX timestamp or a valid strtotime() date string. This function also accepts a time string and a format string as first and second parameters. In that case this function behaves as a wrapper for TimeHelper::i18nFormat()&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $format - date format string (or a UNIX timestamp, strtotime() valid string or DateTime object)&#xA;    int|string|DateTime $date - UNIX timestamp, strtotime() valid string or DateTime object (or a date format string)&#xA;    bool $invalid - flag to ignore results of fromString == false&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted date string;;d83,479;;b1,0;;mint|string|DateTime $format;;pint|string|DateTime $date;;pbool $invalid;;pstring|DateTimeZone $timezone;;p">
					<treenode node="date;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f33;479;38;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f24;479;31;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="invalid;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f47;479;55;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f65;479;74;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fromString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;174;2;176;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a UNIX timestamp, given either a UNIX timestamp or a valid strtotime() date string.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Parsed timestamp;;d59,174;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f28;174;39;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f41;174;50;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="gmt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;451;2;453;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns gmt as a UNIX timestamp.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $string - UNIX timestamp, strtotime() valid string or DateTime object&#xA;&#xA;Return:&#xA;   UNIX timestamp;;d37,451;;b1,0;;mint|string|DateTime $string;;p">
					<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f21;451;28;451;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="i18nFormat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;495;2;497;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted date string, given either a UNIX timestamp or a valid strtotime() date string. It takes into account the default date format for the current language if a LC_TIME file is used.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $date - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string $format - strftime format string&#xA;    bool $invalid - flag to ignore results of fromString == false&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted and translated date string;;d87,495;;b1,0;;mint|string|DateTime $date;;pstring $format;;pbool $invalid;;pstring|DateTimeZone $timezone;;p">
					<treenode node="date;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f28;495;33;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f35;495;42;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="invalid;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f51;495;59;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f69;495;78;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isThisMonth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;270;2;272;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is within this month&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is within current month;;d60,270;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f29;270;40;270;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f42;270;51;270;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isThisWeek;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;257;2;259;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is within this week.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is within current week;;d59,257;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f28;257;39;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f41;257;50;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isThisYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;283;2;285;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is within current year.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is within current year;;d59,283;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f28;283;39;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f41;283;50;283;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isToday;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;244;2;246;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is today.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string is today;;d56,244;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f25;244;36;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f38;244;47;244;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isTomorrow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;309;2;311;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string is tomorrow.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string was yesterday;;d59,309;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f28;309;39;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f41;309;50;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="isWithinNext;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;439;2;441;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if specified datetime is within the interval specified, else false.&#xA;&#xA;Parameters:&#xA;    string|int $timeInterval - the numeric value with space then time type&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object;;d76,439;;b1,0;;mstring|int $timeInterval;;pint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f45;439;56;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timeInterval;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f30;439;43;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f58;439;67;439;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="nice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;188;2;190;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a nicely formatted date string for given Datetime string.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;    string $format - The format to use&#xA;&#xA;Return:&#xA;   Formatted date string;;d76,188;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;pstring $format;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f22;188;33;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f60;188;67;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f42;188;51;188;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="niceShort;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;201;2;203;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a formatted descriptive date string for given datetime string.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime objectp&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Described, relative date string;;d65,201;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f27;201;38;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f47;201;56;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="serverOffset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;161;2;163;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns server's offset&#xA;&#xA;Return:&#xA;   Offset;;d32,161;;b1,0;;m">
				</treenode>
				<treenode node="timeAgoInWords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;382;2;411;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats a date into a phrase expressing the relative time.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateTime - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    array $options - Default format if timestamp is used in $dateString&#xA;&#xA;Return:&#xA;   Relative time string;;d63,382;;b1,0;;mint|string|DateTime $dateTime;;parray $options;;p">
					<treenode node="dateTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f32;382;41;382;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f43;382;51;382;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toAtom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;348;2;350;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a date formatted for Atom RSS feeds.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted date string;;d55,348;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f24;348;35;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f37;348;46;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toQuarter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;322;2;324;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the quarter&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    bool $range - if true returns a range in Y-m-d format&#xA;&#xA;Return:&#xA;   |array 1, 2, 3, or 4 quarter of year or array if $range true;;d56,322;;b1,0;;mint|string|DateTime $dateString;;pbool $range;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f27;322;38;322;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="range;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f40;322;46;322;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toRSS;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;361;2;363;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats date for RSS feeds&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Formatted date string;;d54,361;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f23;361;34;361;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f36;361;45;361;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toUnix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;335;2;337;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns a UNIX timestamp from a textual datetime description. Wrapper for PHP function strtotime().&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   Unix timestamp;;d55,335;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f24;335;35;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f37;335;46;335;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wasWithinLast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;424;2;426;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if specified datetime was within the interval specified, else false.&#xA;&#xA;Parameters:&#xA;    string|int $timeInterval - the numeric value with space then time type&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object;;d77,424;;b1,0;;mstring|int $timeInterval;;pint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f46;424;57;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timeInterval;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f31;424;44;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f59;424;68;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="wasYesterday;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f8;296;2;298;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given datetime string was yesterday.&#xA;&#xA;Parameters:&#xA;    int|string|DateTime $dateString - UNIX timestamp, strtotime() valid string or DateTime object&#xA;    string|DateTimeZone $timezone - User's timezone string or DateTimeZone object&#xA;&#xA;Return:&#xA;   True if datetime string was yesterday;;d61,296;;b1,0;;mint|string|DateTime $dateString;;pstring|DateTimeZone $timezone;;p">
					<treenode node="dateString;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f30;296;41;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="timezone;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f43;296;52;296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_engine;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php;f11;38;19;38;;;;vposstdClass;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="TimeHelperTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f0;52;1;183;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TimeHelperTest class;;d42,52;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;63;2;66;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,63;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;73;2;76;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,73;;b1,0;;m">
				</treenode>
				<treenode node="testEngineOverride;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;111;2;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test engine override;;d38,111;;b1,0;;m">
				</treenode>
				<treenode node="testTimeAgoInWords;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;132;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test element wrapping in timeAgoInWords;;d38,132;;b1,0;;m">
				</treenode>
				<treenode node="testTimeHelperProxyMethodCalls;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;83;2;104;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test CakeTime class methods are called correctly;;d50,83;;b1,0;;m">
				</treenode>
				<treenode node="CakeTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;56;17;56;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="Time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;54;13;54;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TimeHelperTestObject;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f0;27;1;37;;;;vpos;;vTimeHelper;;c;;r&#xA;Description&#xA;     TimeHelperTestObject class;;d46,27;;b0,0;;m">
				<treenode node="attach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;29;2;31;;;;vpos;;v;;r;;d48,29;;b1,0;;mcakeTime;;p">
					<treenode node="cakeTime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f37;29;46;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="engine;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php;f8;33;2;35;;;;vpos;;v;;r;;d26,33;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TimesheetsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f0;480;1;498;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     TimesheetsController class;;d46,480;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;494;2;496;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,494;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php;f8;487;13;487;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TransactionManyTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3536;1;3549;;;;vpos;;vCakeTestModel;;c;;r;;d53,3536;;b0,0;;m">
				<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3542;2;3547;;;;vpos;;v;;r;;d57,3542;;b1,0;;mcreated;;poptions;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;3542;35;3542;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;3542;45;3542;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3538;13;3538;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3540;17;3540;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TransactionTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3521;1;3534;;;;vpos;;vCakeTestModel;;c;;r;;d49,3521;;b0,0;;m">
				<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3527;2;3532;;;;vpos;;v;;r;;d57,3527;;b1,0;;mcreated;;poptions;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f27;3527;35;3527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f37;3527;45;3527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3523;13;3523;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3525;17;3525;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateArticleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateArticleFixture.php;f0;23;1;71;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TranslateArticleFixture;;d54,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateArticleFixture.php;f8;37;15;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateArticleFixture.php;f8;51;16;51;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateArticleFixture.php;f8;30;14;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateArticleModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3246;1;3269;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TranslateArticleModel class.;;d50,3246;;b0,0;;m">
				<treenode node="displayField;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3267;21;3267;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3253;13;3253;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3260;17;3260;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f0;26;1;711;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Translate behavior;;d46,26;;b0,0;;m">
				<treenode node="_addJoin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;224;2;268;;;;vpos;;varray;;r&#xA;Description&#xA;     Appends a join for translated fields.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model being worked on&#xA;    array $query - The query array to append a join to&#xA;    string $field - The field name being joined&#xA;    string $aliasField - The aliased field name being joined&#xA;    string|array $locale - The locale(s) having joins added&#xA;&#xA;Return:&#xA;   The modified query;;d81,224;;b2,0;;mModel $Model;;parray $query;;pstring $field;;pstring $aliasField;;pstring|array $locale;;p">
					<treenode node="aliasField;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f59;224;70;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f51;224;57;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="locale;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f72;224;79;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f35;224;41;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f43;224;49;224;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_checkConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;196;2;212;;;;vpos;;varray;;r&#xA;Description&#xA;     Check a query's conditions for translated fields. Return an array of translated fields found in the conditions.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model being read&#xA;    array $query - The query array&#xA;&#xA;Return:&#xA;   The list of translated fields that are in the conditions;;d59,196;;b2,0;;mModel $Model;;parray $query;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f43;196;49;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f51;196;57;196;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getLocale;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;531;2;539;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get selected locale for model&#xA;&#xA;Parameters:&#xA;    Model $Model - Model the locale needs to be set/get on&#xA;&#xA;Return:&#xA;   string or false;;d45,531;;b2,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f37;531;43;531;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_prepareTranslations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;489;2;511;;;;vpos;;varray;;r&#xA;Description&#xA;     Prepares the data to be saved for translated records. Add blank fields, and populates data for multi-locale saves.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    array $data - The sparse data that was provided&#xA;&#xA;Return:&#xA;   The fully populated data to save;;d62,489;;b2,0;;mModel $Model;;parray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f55;489;60;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f47;489;53;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_removeField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;653;2;665;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update runtime setting for a given field.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    string $field - The field to update;;d55,653;;b2,0;;mModel $Model;;pstring $field;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f47;653;53;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f39;653;45;653;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setRuntimeData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;371;2;395;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the runtime data.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior;;d50,371;;b2,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f42;371;48;371;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;519;2;523;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterDelete Callback&#xA;&#xA;Parameters:&#xA;    Model $Model - Model the callback was run on;;d43,519;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f35;519;41;519;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;278;2;323;;;;vpos;;varray;;r&#xA;Description&#xA;     afterFind Callback&#xA;&#xA;Parameters:&#xA;    Model $Model - Model find was run on&#xA;    array $results - Array of model results&#xA;    bool $primary - Did the find originate on $model&#xA;&#xA;Return:&#xA;   Modified results;;d69,278;;b1,0;;mModel $Model;;parray $results;;pbool $primary;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f33;278;39;278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f51;278;59;278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f41;278;49;278;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;420;2;479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     afterSave Callback&#xA;&#xA;Parameters:&#xA;    Model $Model - Model the callback is called on&#xA;    bool $created - Whether or not the save created a record&#xA;    array $options - Options passed from Model::save();;d71,420;;b1,0;;mModel $Model;;pbool $created;;parray $options;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f41;420;49;420;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f33;420;39;420;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f51;420;59;420;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;404;2;410;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Restores model data to the original data. This solves issues with saveAssociated and validate = first.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior;;d45,404;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f37;404;43;404;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;101;2;186;;;;vpos;;varray;;r&#xA;Description&#xA;     beforeFind Callback&#xA;&#xA;Parameters:&#xA;    Model $Model - Model find is being run on&#xA;    array $query - Array of Query parameters&#xA;&#xA;Return:&#xA;   Modified query;;d50,101;;b1,0;;mModel $Model;;parray $query;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f34;101;40;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f42;101;48;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;350;2;359;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeSave callback.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model save was called on&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   true;;d62,350;;b1,0;;mModel $Model;;parray $options;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f34;350;40;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f42;350;50;350;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;333;2;337;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeValidate Callback&#xA;&#xA;Parameters:&#xA;    Model $Model - Model invalidFields was called on&#xA;    array $options - Options passed from Model::save();;d66,333;;b1,0;;mModel $Model;;parray $options;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f38;333;44;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f46;333;54;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bindTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;583;2;644;;;;vpos;;vbool;;r&#xA;Description&#xA;     Bind translation for fields, optionally with hasMany association for fake field.&#xA;&#xA;Parameters:&#xA;    Model $Model - using this behavior of model&#xA;    string|array $fields - string with field or array(field1, field2=&gt;AssocName, field3)&#xA;    bool $reset - Leave true to have the fields only modified for the next operation;;d71,583;;b1,0;;mModel $Model;;pstring|array $fields;;pbool $reset;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f47;583;54;583;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f39;583;45;583;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f56;583;62;583;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cleanup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;88;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Cleanup Callback unbinds bound translations and deletes setting information.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model being detached;;d39,88;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f31;88;37;88;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;66;2;80;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Callback&#xA;&#xA;Parameters:&#xA;    Model $Model - Model the behavior is being attached to&#xA;    array $config - Array of configuration information;;d56,66;;b1,0;;mModel $Model;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f37;66;44;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f29;66;35;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="translateModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;550;2;566;;;;vpos;;vModel;;r&#xA;Description&#xA;     Get instance of model for translations.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model to get a translatemodel for;;d46,550;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f38;550;44;550;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unbindTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;676;2;709;;;;vpos;;vbool;;r&#xA;Description&#xA;     Unbind translation for fields, optionally unbinds hasMany association for fake field&#xA;&#xA;Parameters:&#xA;    Model $Model - using this behavior of model&#xA;    string|array $fields - string with field, or array(field1, field2=&gt;AssocName, field3), or null for;;d65,676;;b1,0;;mModel $Model;;pstring|array $fields;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f49;676;56;676;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f41;676;47;676;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_joinTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;40;22;40;;;;vposobject;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_runtimeModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f11;47;25;47;;;;vposModel;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="runtime;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php;f8;33;16;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateBehaviorTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f0;25;1;1422;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TranslateBehaviorTest class;;d49,25;;b0,0;;m">
				<treenode node="testAnotherTranslateTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1186;2;1203;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAnotherTranslateTable method;;d45,1186;;b1,0;;m">
				</treenode>
				<treenode node="testAttachDetach;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1137;2;1179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAttachDetach method;;d36,1137;;b1,0;;m">
				</treenode>
				<treenode node="testCountWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;50;2;61;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that count queries with conditions get the correct joins;;d43,50;;b1,0;;m">
				</treenode>
				<treenode node="testExceptionOnNameTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1361;2;1365;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that an exception is raised when you try to over-write the name attribute.;;d50,1361;;b1,0;;m">
				</treenode>
				<treenode node="testFetchTranslationsWithZero;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;421;2;441;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test loading fields with 0 as the translated value.;;d49,421;;b1,0;;m">
				</treenode>
				<treenode node="testFieldsRestoreAfterBind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1114;2;1130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test restoring fields after temporary binds method;;d46,1114;;b1,0;;m">
				</treenode>
				<treenode node="testLocaleFalseAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;127;2;174;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLocaleFalseAssociations method;;d47,127;;b1,0;;m">
				</treenode>
				<treenode node="testLocaleFalsePlain;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;99;2;120;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLocaleFalsePlain method;;d40,99;;b1,0;;m">
				</treenode>
				<treenode node="testLocaleMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;448;2;500;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLocaleMultiple method;;d38,448;;b1,0;;m">
				</treenode>
				<treenode node="testLocaleSingle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;181;2;260;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLocaleSingle method;;d36,181;;b1,0;;m">
				</treenode>
				<treenode node="testLocaleSingleAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;342;2;414;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLocaleSingleAssociations method;;d48,342;;b1,0;;m">
				</treenode>
				<treenode node="testLocaleSingleCountWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;308;2;335;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLocaleSingleCountWithConditions method;;d55,308;;b1,0;;m">
				</treenode>
				<treenode node="testLocaleSingleWithConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;267;2;301;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLocaleSingleWithConditions method;;d50,267;;b1,0;;m">
				</treenode>
				<treenode node="testMissingTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;507;2;528;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMissingTranslation method;;d42,507;;b1,0;;m">
				</treenode>
				<treenode node="testMixedCreateUpdateWithArrayLocale;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;988;2;1029;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMixedCreateUpdateWithArrayLocale method;;d56,988;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;894;2;932;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleCreate method;;d38,894;;b1,0;;m">
				</treenode>
				<treenode node="testMultipleUpdate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;939;2;981;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMultipleUpdate method;;d38,939;;b1,0;;m">
				</treenode>
				<treenode node="testNoExtraRowsForAssociatedTranslations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1395;2;1420;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that additional records are not inserted for associated translations.;;d60,1395;;b1,0;;m">
				</treenode>
				<treenode node="testReadSelectedFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;568;2;596;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadSelectedFields method;;d42,568;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAllTranslatedAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1037;2;1072;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that saveAll() works with hasMany associations that contain translations.;;d53,1037;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedAtomic;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;726;2;767;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedAtomic method;;d44,726;;b1,0;;m">
				</treenode>
				<treenode node="testSaveAssociatedMultipleLocale;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;694;2;719;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveAssociatedCreate method;;d52,694;;b1,0;;m">
				</treenode>
				<treenode node="testSaveCreate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;603;2;619;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveCreate method;;d34,603;;b1,0;;m">
				</treenode>
				<treenode node="testSaveDeleteIgnoreAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;626;2;649;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test saving/deleting with an alias, uses the model name.;;d45,626;;b1,0;;m">
				</treenode>
				<treenode node="testSaveMultipleLocales;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;656;2;687;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test save multiple locales method;;d43,656;;b1,0;;m">
				</treenode>
				<treenode node="testSavePartialFieldMultipleLocales;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;802;2;865;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that all fields are create with partial data + multiple locales.;;d55,802;;b1,0;;m">
				</treenode>
				<treenode node="testSavePartialFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;774;2;795;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that saving only some of the translated fields allows the record to be found again.;;d41,774;;b1,0;;m">
				</treenode>
				<treenode node="testSaveUpdate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;872;2;887;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveUpdate method;;d34,872;;b1,0;;m">
				</treenode>
				<treenode node="testTranslatedFindList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;535;2;561;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslatedFindList method;;d42,535;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;68;2;92;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslateModel method;;d38,68;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateTableWithPrefix;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1321;2;1335;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslateTableWithPrefix method Tests that is possible to have a translation model with a custom tablePrefix;;d48,1321;;b1,0;;m">
				</treenode>
				<treenode node="testTranslateWithAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1210;2;1313;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTranslateWithAssociations method;;d49,1210;;b1,0;;m">
				</treenode>
				<treenode node="testUnbindTranslation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1372;2;1388;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that translations can be bound and unbound dynamically.;;d41,1372;;b1,0;;m">
				</treenode>
				<treenode node="testUnbindTranslationInfinteLoop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1342;2;1353;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test infinite loops not occurring with unbindTranslation();;d52,1342;;b1,0;;m">
				</treenode>
				<treenode node="testValidation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;1079;2;1107;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testValidation method;;d34,1079;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;32;21;32;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php;f8;39;17;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatedArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3276;1;3320;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TranslatedArticle class.;;d46,3276;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3297;15;3297;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3311;18;3311;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3290;21;3290;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3318;16;3318;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3283;13;3283;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="translateModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3304;23;3304;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatedArticleFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedArticleFixture.php;f0;23;1;48;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TranslatedArticleFixture;;d55,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedArticleFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedArticleFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatedItem;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3121;1;3151;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TranslatedItem class.;;d43,3121;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3142;15;3142;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3135;21;3135;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3128;13;3128;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="translateModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3149;23;3149;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatedItem2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3158;1;3188;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TranslatedItem class.;;d44,3158;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3179;15;3179;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3172;21;3172;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3165;13;3165;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="translateModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3186;23;3186;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatedItemFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedItemFixture.php;f0;23;1;46;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TranslatedItemFixture;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedItemFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedItemFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslatedItemWithTable;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3195;1;3239;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TranslatedItemWithTable class.;;d52,3195;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3223;15;3223;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3216;21;3216;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3202;13;3202;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="translateModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3230;23;3230;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="translateTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3237;23;3237;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3209;17;3209;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateFixture.php;f0;23;1;71;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TranslateFixture;;d47,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateFixture.php;f8;37;15;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateFixture.php;f8;51;16;51;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateFixture.php;f8;30;14;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateTableFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateTableFixture.php;f0;23;1;54;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TranslateTableFixture;;d52,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateTableFixture.php;f8;37;15;37;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateTableFixture.php;f8;50;16;50;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateTableFixture.php;f8;30;14;30;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateTestModel;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3062;1;3084;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TranslateTestModel class.;;d47,3062;;b0,0;;m">
				<treenode node="displayField;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3083;21;3083;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3069;13;3069;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3076;17;3076;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateWithPrefix;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3091;1;3114;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     TranslateTestModel class.;;d48,3091;;b0,0;;m">
				<treenode node="displayField;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3112;21;3112;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3098;13;3098;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tablePrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3105;20;3105;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TranslateWithPrefixFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateWithPrefixFixture.php;f0;24;1;72;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class TranslateWithPrefixFixture;;d57,24;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateWithPrefixFixture.php;f8;38;15;38;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateWithPrefixFixture.php;f8;52;16;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateWithPrefixFixture.php;f8;31;14;31;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TreeBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f0;31;1;1126;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Tree Behavior.;;d41,31;;b0,0;;m">
				<treenode node="_getMax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;1048;2;1067;;;;vpos;;vint;;r&#xA;Description&#xA;     get the maximum index value in the table.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model Instance&#xA;    string $scope - Scoping conditions&#xA;    string $right - Right value&#xA;    int $recursive - Recursive find value&#xA;    bool $created - Whether it's a new record;;d93,1048;;b2,0;;mModel $Model;;pstring $scope;;pstring $right;;pint $recursive;;pbool $created;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f75;1048;83;1048;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f34;1048;40;1048;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f58;1048;68;1048;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="right;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f50;1048;56;1048;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f42;1048;48;1048;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getMin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;1078;2;1089;;;;vpos;;vint;;r&#xA;Description&#xA;     get the minimum index value in the table.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model instance&#xA;    string $scope - Scoping conditions&#xA;    string $left - Left value&#xA;    int $recursive - Recurursive find value;;d74,1078;;b2,0;;mModel $Model;;pstring $scope;;pstring $left;;pint $recursive;;p">
					<treenode node="left;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f50;1078;55;1078;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f34;1078;40;1078;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f57;1078;67;1078;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f42;1078;48;1078;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;242;2;251;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a single node from the tree from its primary key&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $id - The ID of the record to read&#xA;&#xA;Return:&#xA;   |bool The record read or false;;d48,242;;b2,0;;mModel $Model;;pint|string $id;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f43;242;46;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f35;242;41;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_getOptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;479;2;483;;;;vpos;;varray;;r&#xA;Description&#xA;     Convenience method to create default find() options from $arg when it is an associative array.&#xA;&#xA;Parameters:&#xA;    array $arg - Array&#xA;&#xA;Return:&#xA;   Options array;;d38,479;;b2,0;;marray $arg;;p">
					<treenode node="arg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f32;479;36;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_recoverByParentId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;726;2;785;;;;vpos;;vint;;r&#xA;Description&#xA;     _recoverByParentId&#xA;&#xA;Parameters:&#xA;    Model $Model - Model instance&#xA;    int $counter - Counter&#xA;    mixed $parentId - Parent record Id&#xA;&#xA;Return:&#xA;   counter;;d85,726;;b2,0;;mModel $Model;;pint $counter;;pmixed $parentId;;p">
					<treenode node="counter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f53;726;61;726;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f45;726;51;726;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parentId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f67;726;76;726;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_setParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;984;2;1036;;;;vpos;;vbool;;r&#xA;Description&#xA;     Sets the parent of the given node&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $parentId - Parent record Id&#xA;    bool $created - True if newly created record else false&#xA;&#xA;Return:&#xA;   true on success, false on failure;;d81,984;;b2,0;;mModel $Model;;pint|string $parentId;;pbool $created;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f63;984;71;984;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f37;984;43;984;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parentId;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f45;984;54;984;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_sync;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;1104;2;1124;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Table sync method.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model instance&#xA;    int $shift - Shift by&#xA;    string $dir - Direction&#xA;    array $conditions - Conditions&#xA;    bool $created - Whether it's a new record&#xA;    string $field - Field type;;d118,1104;;b2,0;;mModel $Model;;pint $shift;;pstring $dir;;parray $conditions;;pbool $created;;pstring $field;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f60;1104;71;1104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f83;1104;91;1104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f48;1104;52;1104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f101;1104;107;1104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f32;1104;38;1104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="shift;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f40;1104;46;1104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;147;2;166;;;;vpos;;vbool;;r&#xA;Description&#xA;     After delete method.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;&#xA;Return:&#xA;   true to continue, false to abort the delete;;d43,147;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f35;147;41;147;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;91;2;101;;;;vpos;;vbool;;r&#xA;Description&#xA;     After save method. Called after all saves&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    bool $created - indicates whether the node just saved was created or updated&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   true on success, false on failure;;d71,91;;b1,0;;mModel $Model;;pbool $created;;parray $options;;p">
					<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f41;91;49;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f33;91;39;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f51;91;59;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;126;2;137;;;;vpos;;vbool;;r&#xA;Description&#xA;     Stores the record about to be deleted.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    bool $cascade - If true records that depend on this record will also be deleted;;d61,126;;b1,0;;mModel $Model;;pbool $cascade;;p">
					<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f44;126;52;126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f36;126;42;126;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;110;2;115;;;;vpos;;varray;;r&#xA;Description&#xA;     Runs before a find() operation&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using the behavior&#xA;    array $query - Query parameters as set by cake;;d50,110;;b1,0;;mModel $Model;;parray $query;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f34;110;40;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f42;110;48;110;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="beforeSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;180;2;233;;;;vpos;;vbool;;r&#xA;Description&#xA;     Before save method. Called before all saves&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   true to continue, false to abort the save;;d62,180;;b1,0;;mModel $Model;;parray $options;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f34;180;40;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f42;180;50;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="childCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;265;2;292;;;;vpos;;vint;;r&#xA;Description&#xA;     Get the number of child nodes&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string|bool $id - The ID of the record to read or false to read all top level nodes&#xA;    bool $direct - whether to count direct, or all, children&#xA;&#xA;Return:&#xA;   number of child nodes;;d71,265;;b1,0;;mModel $Model;;pint|string|bool $id;;pbool $direct;;p">
					<treenode node="direct;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f54;265;61;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f42;265;45;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f34;265;40;265;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="children;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;311;2;360;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the child nodes of the current model&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $id - The ID of the record to read&#xA;    bool $direct - whether to return only the direct, or all, children&#xA;    string|array $fields - Either a single string of a field name, or an array of field names&#xA;    string $order - SQL ORDER BY conditions (e&#xA;    int $limit - SQL LIMIT clause, for calculating items per page&#xA;    int $page - Page number, for accessing paged data&#xA;    int $recursive - The number of levels deep to fetch associated records&#xA;&#xA;Return:&#xA;   Array of child nodes;;d145,311;;b1,0;;mModel $Model;;pint|string $id;;pbool $direct;;pstring|array $fields;;pstring $order;;pint $limit;;pint $page;;pint $recursive;;p">
					<treenode node="direct;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f52;311;59;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f69;311;76;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f40;311;43;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="limit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f100;311;106;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f32;311;38;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f85;311;91;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="page;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f115;311;120;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f126;311;136;311;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="generateTreeList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;374;2;422;;;;vpos;;varray;;r&#xA;Description&#xA;     A convenience method for returning a hierarchical array used for HTML select boxes&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    string|array $conditions - SQL conditions as a string or as an array('field' =&gt;'value',&#xA;    string $keyPath - A string path to the key, i&#xA;    string $valuePath - A string path to the value, i&#xA;    string $spacer - The character or characters which will be repeated&#xA;    int $recursive - The number of levels deep to fetch associated records&#xA;&#xA;Return:&#xA;   An associative array of records, where the id is the key, and the display field is the value;;d138,374;;b1,0;;mModel $Model;;pstring|array $conditions;;pstring $keyPath;;pstring $valuePath;;pstring $spacer;;pint $recursive;;p">
					<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f48;374;59;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="keyPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f68;374;76;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f40;374;46;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f119;374;129;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="spacer;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f104;374;111;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="valuePath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f85;374;95;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getParentNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;436;2;470;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the parent node&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $id - The ID of the record to read&#xA;    string|array $fields - Fields to get&#xA;    int $recursive - The number of levels deep to fetch associated records&#xA;&#xA;Return:&#xA;   |bool Array of data for the parent node;;d92,436;;b1,0;;mModel $Model;;pint|string $id;;pstring|array $fields;;pint $recursive;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f57;436;64;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f45;436;48;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f37;436;43;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f73;436;83;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;495;2;543;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the path to the given node&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $id - The ID of the record to read&#xA;    string|array $fields - Either a single string of a field name, or an array of field names&#xA;    int $recursive - The number of levels deep to fetch associated records&#xA;&#xA;Return:&#xA;   Array of nodes from top most parent to current node;;d86,495;;b1,0;;mModel $Model;;pint|string $id;;pstring|array $fields;;pint $recursive;;p">
					<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f51;495;58;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f39;495;42;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f31;495;37;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f67;495;77;495;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="moveDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;556;2;597;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reorder the node without changing the parent.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $id - The ID of the record to move&#xA;    int|bool $number - how many places to move the node or true to move to last position&#xA;&#xA;Return:&#xA;   true on success, false on failure;;d65,556;;b1,0;;mModel $Model;;pint|string $id;;pint|bool $number;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f40;556;43;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f32;556;38;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f52;556;59;556;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="moveUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;610;2;651;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reorder the node without changing the parent.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $id - The ID of the record to move&#xA;    int|bool $number - how many places to move the node, or true to move to first position&#xA;&#xA;Return:&#xA;   true on success, false on failure;;d63,610;;b1,0;;mModel $Model;;pint|string $id;;pint|bool $number;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f38;610;41;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f30;610;36;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="number;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f50;610;57;610;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="recover;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;668;2;714;;;;vpos;;vbool;;r&#xA;Description&#xA;     Recover a corrupted tree&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    string $mode - parent or tree&#xA;    string|int $missingParentAction - 'return' to do nothing and return, 'delete' to&#xA;&#xA;Return:&#xA;   true on success, false on failure;;d86,668;;b1,0;;mModel $Model;;pstring $mode;;pstring|int $missingParentAction;;p">
					<treenode node="missingParentAction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f57;668;77;668;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f39;668;44;668;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f31;668;37;668;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="removeFromTree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;846;2;895;;;;vpos;;vbool;;r&#xA;Description&#xA;     Remove the current node from the tree, and reparent all children up one level.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    int|string $id - The ID of the record to remove&#xA;    bool $delete - whether to delete the node after reparenting children (if any)&#xA;&#xA;Return:&#xA;   true on success, false on failure;;d75,846;;b1,0;;mModel $Model;;pint|string $id;;pbool $delete;;p">
					<treenode node="delete;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f58;846;65;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f46;846;49;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f38;846;44;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="reorder;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;807;2;832;;;;vpos;;vbool;;r&#xA;Description&#xA;     Reorder method.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;    array $options - array of options to use in reordering&#xA;&#xA;Return:&#xA;   true on success, false on failure;;d59,807;;b1,0;;mModel $Model;;parray $options;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f31;807;37;807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f39;807;47;807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;64;2;78;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Initiate Tree behavior&#xA;&#xA;Parameters:&#xA;    Model $Model - using this behavior of model&#xA;    array $config - array of configuration settings;;d56,64;;b1,0;;mModel $Model;;parray $config;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f37;64;44;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f29;64;35;64;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="verify;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;907;2;970;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Check if the current tree is valid.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model using this behavior&#xA;&#xA;Return:&#xA;   true if the tree is valid or empty, otherwise an array of (error type [index, node],;;d38,907;;b1,0;;mModel $Model;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f30;907;36;907;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_defaults;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;45;21;45;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_deletedRow;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f11;55;23;55;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="errors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php;f8;38;15;38;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TreeBehaviorAfterTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorAfterTest.php;f0;28;1;74;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TreeBehaviorAfterTest class;;d49,28;;b0,0;;m">
				<treenode node="testAftersaveCallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorAfterTest.php;f8;61;2;73;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the afterSave callback in the model;;d41,61;;b1,0;;m">
				</treenode>
				<treenode node="backupGlobals;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorAfterTest.php;f8;35;22;35;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorAfterTest.php;f8;54;17;54;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorAfterTest.php;f8;42;17;42;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TreeBehaviorNumberTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f0;30;1;1509;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TreeBehaviorNumberTest class;;d50,30;;b0,0;;m">
				<treenode node="testAddInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;484;2;502;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddInvalid method;;d34,484;;b1,0;;m">
				</treenode>
				<treenode node="testAddMiddle;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;423;2;447;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddMiddle method;;d33,423;;b1,0;;m">
				</treenode>
				<treenode node="testAddNotIndexedByModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;509;2;522;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddNotIndexedByModel method;;d44,509;;b1,0;;m">
				</treenode>
				<treenode node="testAddOrphan;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;403;2;416;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddOrphan method;;d33,403;;b1,0;;m">
				</treenode>
				<treenode node="testAddWithPreSpecifiedId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;454;2;477;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddWithPreSpecifiedId method;;d45,454;;b1,0;;m">
				</treenode>
				<treenode node="testArraySyntax;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1419;2;1426;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testArraySyntax method;;d35,1419;;b1,0;;m">
				</treenode>
				<treenode node="testChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1209;2;1232;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testChildren method;;d32,1209;;b1,0;;m">
				</treenode>
				<treenode node="testCountChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1239;2;1257;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCountChildren method;;d37,1239;;b1,0;;m">
				</treenode>
				<treenode node="testDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;997;2;1025;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDelete method;;d30,997;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteDoesNotExist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1032;2;1037;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test deleting a record that doesn't exist.;;d42,1032;;b1,0;;m">
				</treenode>
				<treenode node="testDetectEqualLftsRghts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;376;2;396;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Reproduces a situation where a single node has lft= rght, and all other lft and rght fields follow sequentially;;d44,376;;b1,0;;m">
				</treenode>
				<treenode node="testDetectInvalidLeft;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;80;2;100;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectInvalidLeft method;;d41,80;;b1,0;;m">
				</treenode>
				<treenode node="testDetectInvalidLftsRghts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;355;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectInvalidLftsRghts method;;d46,355;;b1,0;;m">
				</treenode>
				<treenode node="testDetectInvalidParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;134;2;152;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectInvalidParent method;;d43,134;;b1,0;;m">
				</treenode>
				<treenode node="testDetectInvalidParents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;333;2;348;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectInvalidParents method;;d44,333;;b1,0;;m">
				</treenode>
				<treenode node="testDetectInvalidRight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;107;2;127;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectInvalidRight method;;d42,107;;b1,0;;m">
				</treenode>
				<treenode node="testDetectNoneExistentParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;159;2;175;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectNoneExistentParent method;;d48,159;;b1,0;;m">
				</treenode>
				<treenode node="testFindThreaded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1433;2;1508;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFindThreaded method;;d36,1433;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateTreeListFormatting;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1399;2;1412;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the formatting options of generateTreeList();;d50,1399;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateTreeListWithSelfJoin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1382;2;1392;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateTreeListWithSelfJoin method;;d52,1382;;b1,0;;m">
				</treenode>
				<treenode node="testGetParentNode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1264;2;1275;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetParentNode method;;d37,1264;;b1,0;;m">
				</treenode>
				<treenode node="testGetPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1282;2;1295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGetPath method;;d31,1282;;b1,0;;m">
				</treenode>
				<treenode node="testInitialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;63;2;73;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInitialize method;;d34,63;;b1,0;;m">
				</treenode>
				<treenode node="testInsertWithWhitelist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;582;2;594;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInsertWithWhitelist method;;d43,582;;b1,0;;m">
				</treenode>
				<treenode node="testMoveAfter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;629;2;650;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveAfter method;;d33,629;;b1,0;;m">
				</treenode>
				<treenode node="testMoveBefore;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;601;2;622;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveBefore method;;d34,601;;b1,0;;m">
				</treenode>
				<treenode node="testMoveDemoteInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;657;2;682;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveDemoteInvalid method;;d41,657;;b1,0;;m">
				</treenode>
				<treenode node="testMoveDown2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;913;2;936;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveDown2 method;;d33,913;;b1,0;;m">
				</treenode>
				<treenode node="testMoveDownFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;862;2;876;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveDownFail method;;d36,862;;b1,0;;m">
				</treenode>
				<treenode node="testMoveDownLast;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;883;2;906;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveDownLast method;;d36,883;;b1,0;;m">
				</treenode>
				<treenode node="testMoveDownSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;841;2;855;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveDownSuccess method;;d39,841;;b1,0;;m">
				</treenode>
				<treenode node="testMoveInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;689;2;706;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveInvalid method;;d35,689;;b1,0;;m">
				</treenode>
				<treenode node="testMovePromote;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;529;2;548;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMovePromote method;;d35,529;;b1,0;;m">
				</treenode>
				<treenode node="testMoveSelfInvalid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;713;2;731;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveSelfInvalid method;;d39,713;;b1,0;;m">
				</treenode>
				<treenode node="testMoveToRootAndMoveUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;973;2;990;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveToRootAndMoveUp method;;d43,973;;b1,0;;m">
				</treenode>
				<treenode node="testMoveUp2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;781;2;804;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveUp2 method;;d31,781;;b1,0;;m">
				</treenode>
				<treenode node="testMoveUpFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;759;2;774;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveUpFail method;;d34,759;;b1,0;;m">
				</treenode>
				<treenode node="testMoveUpFirst;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;811;2;834;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveUpFirst method;;d35,811;;b1,0;;m">
				</treenode>
				<treenode node="testMoveUpSuccess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;738;2;752;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveUpSuccess method;;d37,738;;b1,0;;m">
				</treenode>
				<treenode node="testMoveWithWhitelist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;555;2;575;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveWithWhitelist method;;d41,555;;b1,0;;m">
				</treenode>
				<treenode node="testNoAmbiguousColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1302;2;1327;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoAmbiguousColumn method;;d41,1302;;b1,0;;m">
				</treenode>
				<treenode node="testRecoverFromMissingParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;310;2;326;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecoverFromMissingParent method;;d48,310;;b1,0;;m">
				</treenode>
				<treenode node="testRecoverUsingParentMode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;182;2;230;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecoverUsingParentMode method;;d46,182;;b1,0;;m">
				</treenode>
				<treenode node="testRecoverUsingParentModeAndDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;237;2;303;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecoverUsingParentModeAndDelete method;;d55,237;;b1,0;;m">
				</treenode>
				<treenode node="testRemove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1044;2;1069;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemove method;;d30,1044;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveAndDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1143;2;1170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveAndDelete method;;d39,1143;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveAndDeleteNoChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1177;2;1202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveAndDeleteNoChildren method;;d49,1177;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveLastTopParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1076;2;1102;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveLastTopParent method;;d43,1076;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveNoChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1109;2;1136;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveNoChildren method;;d40,1109;;b1,0;;m">
				</treenode>
				<treenode node="testReorderBigTreeWithQueryCaching;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1365;2;1375;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test reordering large-ish trees with cacheQueries = true. This caused infinite loops when moving down elements as stale data is returned from the memory cache;;d54,1365;;b1,0;;m">
				</treenode>
				<treenode node="testReorderTree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;1334;2;1356;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReorderTree method;;d35,1334;;b1,0;;m">
				</treenode>
				<treenode node="testSaveNoMove;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;943;2;966;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveNoMove method;;d34,943;;b1,0;;m">
				</treenode>
				<treenode node="backupGlobals;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;37;22;37;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;56;17;56;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php;f8;44;17;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TreeBehaviorScopedTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f0;30;1;590;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TreeBehaviorScopedTest class;;d50,30;;b0,0;;m">
				<treenode node="testAliasesWithScopeInTwoTreeAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;313;2;364;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateTreeListWithSelfJoin method;;d61,313;;b1,0;;m">
				</treenode>
				<treenode node="testArrayScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;100;2;130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testArrayScope method;;d34,100;;b1,0;;m">
				</treenode>
				<treenode node="testDetectEqualLftsRghts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;560;2;588;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Reproduces a situation where a single node has lft= rght, and all other lft and rght fields follow sequentially;;d44,560;;b1,0;;m">
				</treenode>
				<treenode node="testDetectInvalidLftsRghts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;531;2;553;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectInvalidLftsRghts method;;d46,531;;b1,0;;m">
				</treenode>
				<treenode node="testDetectInvalidParents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;501;2;524;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDetectInvalidParents method;;d44,501;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateTreeListWithScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;371;2;403;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateTreeListWithScope method;;d49,371;;b1,0;;m">
				</treenode>
				<treenode node="testMoveDownWithScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;177;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveDownWithScope method;;d41,177;;b1,0;;m">
				</treenode>
				<treenode node="testMoveUpWithScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;160;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveUpWithScope method;;d39,160;;b1,0;;m">
				</treenode>
				<treenode node="testRecoverFromMissingParent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;470;2;494;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecoverFromMissingParent method;;d48,470;;b1,0;;m">
				</treenode>
				<treenode node="testRecoverUsingParentMode;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;410;2;463;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRecoverUsingParentMode method;;d46,410;;b1,0;;m">
				</treenode>
				<treenode node="testSaveWithParentAndInvalidScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;140;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSaveWithParentAndInvalidScope method;;d53,140;;b1,0;;m">
				</treenode>
				<treenode node="testStringScope;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;63;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testStringScope method;;d35,63;;b1,0;;m">
				</treenode>
				<treenode node="testTranslatingTree;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;195;2;306;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests the interaction (non-interference) between TreeBehavior and other behaviors with respect to callback hooks;;d39,195;;b1,0;;m">
				</treenode>
				<treenode node="backupGlobals;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;37;22;37;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;56;17;56;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php;f8;44;17;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="TreeBehaviorTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorTest.php;f0;25;1;41;;;;vpos;;vPHPUnit_Framework_TestSuite;;c;;r&#xA;Description&#xA;     Tree Behavior test;;d59,25;;b0,0;;m">
				<treenode node="suite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorTest.php;f15;32;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     suite method, defines tests for this suite.;;d32,32;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="TreeBehaviorUuidTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f0;31;1;297;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     TreeBehaviorUuidTest class;;d48,31;;b0,0;;m">
				<treenode node="testAddWithPreSpecifiedId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;64;2;89;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAddWithPreSpecifiedId method;;d45,64;;b1,0;;m">
				</treenode>
				<treenode node="testChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;219;2;241;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testChildren method;;d32,219;;b1,0;;m">
				</treenode>
				<treenode node="testGenerateTreeListWithSelfJoin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;285;2;296;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testGenerateTreeListWithSelfJoin method;;d52,285;;b1,0;;m">
				</treenode>
				<treenode node="testMovePromote;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;96;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMovePromote method;;d35,96;;b1,0;;m">
				</treenode>
				<treenode node="testMoveWithWhitelist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;123;2;144;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoveWithWhitelist method;;d41,123;;b1,0;;m">
				</treenode>
				<treenode node="testNoAmbiguousColumn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;248;2;278;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNoAmbiguousColumn method;;d41,248;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveAndDeleteNoChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;186;2;212;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveAndDeleteNoChildren method;;d49,186;;b1,0;;m">
				</treenode>
				<treenode node="testRemoveNoChildren;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;151;2;179;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRemoveNoChildren method;;d40,151;;b1,0;;m">
				</treenode>
				<treenode node="backupGlobals;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;38;22;38;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;57;17;57;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php;f8;45;17;45;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UnauthorizedException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;94;1;109;;;;vpos;;vHttpException;;c;;r&#xA;Description&#xA;     Represents an HTTP 401 error.;;d50,94;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f8;102;2;107;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    string $message - If no message is given 'Unauthorized' will be the message&#xA;    int $code - Status code, defaults to 401;;d59,102;;b1,0;;mstring $message;;pint $code;;p">
					<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f46;102;51;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f29;102;37;102;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="UnconventionalTree;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2674;1;2691;;;;vpos;;vNumberTree;;c;;r&#xA;Description&#xA;     UnconventionalTree class;;d44,2674;;b0,0;;m">
				<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2683;15;2683;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2681;13;2681;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UnconventionalTreeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnconventionalTreeFixture.php;f0;26;1;40;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     UnconventionalTreeFixture class;;d56,26;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnconventionalTreeFixture.php;f8;33;15;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UnderscoreField;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2338;1;2346;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     UnderscoreField class;;d44,2338;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2345;13;2345;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UnderscoreFieldFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnderscoreFieldFixture.php;f0;23;1;50;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     UnderscoreFieldFixture class;;d53,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnderscoreFieldFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnderscoreFieldFixture.php;f8;44;16;44;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UnsignedFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnsignedFixture.php;f0;25;1;60;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Short description for class.;;d46,25;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnsignedFixture.php;f8;39;15;39;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnsignedFixture.php;f8;59;16;59;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnsignedFixture.php;f8;32;14;32;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UpgradeShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f0;27;1;887;;;;vpos;;vAppShell;;c;;r&#xA;Description&#xA;     A shell class to help developers upgrade applications to CakePHP 2.0;;d36,27;;b0,0;;m">
				<treenode node="_filesRegexpUpdate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;756;2;762;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Updates files based on regular expressions.&#xA;&#xA;Parameters:&#xA;    array $patterns - Array of search and replacement patterns;;d50,756;;b2,0;;marray $patterns;;p">
					<treenode node="patterns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f39;756;48;756;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_findFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;770;2;787;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Searches the paths and finds files based on extension.&#xA;&#xA;Parameters:&#xA;    string $extensions - The extensions to include;;d49,770;;b2,0;;mstring $extensions;;p">
					<treenode node="extensions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f31;770;42;770;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_moveAppClasses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;635;2;657;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Move the AppController, and AppModel classes.;;d38,635;;b2,0;;m">
				</treenode>
				<treenode node="_movePhpFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;669;2;748;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Move application php files to where they now should be&#xA;&#xA;Parameters:&#xA;    string $path - The path to move files in&#xA;    array $options - array(recursive, checkFolder);;d51,669;;b2,0;;mstring $path;;parray $options;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f41;669;49;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f34;669;39;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_moveViewFiles;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;600;2;628;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Move application views files to where they now should be;;d37,600;;b2,0;;m">
				</treenode>
				<treenode node="_updateFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;796;2;808;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update a single file.&#xA;&#xA;Parameters:&#xA;    string $file - The file to update&#xA;    array $patterns - The replacement patterns to run;;d50,796;;b2,0;;mstring $file;;parray $patterns;;p">
					<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f32;796;37;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="patterns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f39;796;48;796;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="all;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;84;2;93;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Run all upgrade steps one at a time;;d23,84;;b1,0;;m">
				</treenode>
				<treenode node="basics;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;297;2;342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Upgrade the removed basics functions.;;d26,297;;b1,0;;m">
				</treenode>
				<treenode node="components;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;538;2;552;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update components.;;d30,538;;b1,0;;m">
				</treenode>
				<treenode node="configure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;409;2;424;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update Configure::read() calls with no params.;;d29,409;;b1,0;;m">
				</treenode>
				<treenode node="constants;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;431;2;506;;;;vpos;;vvoid;;r&#xA;Description&#xA;     constants;;d29,431;;b1,0;;m">
				</treenode>
				<treenode node="controller_redirects;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;515;2;529;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update controller redirects.;;d40,515;;b1,0;;m">
				</treenode>
				<treenode node="exceptions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;560;2;591;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Replace cakeError with built-in exceptions. NOTE: this ignores calls where you've passed your own secondary parameters to cakeError().;;d30,560;;b1,0;;m">
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;815;2;885;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,815;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;214;2;248;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update helpers.;;d27,214;;b1,0;;m">
				</treenode>
				<treenode node="i18n;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;258;2;281;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update i18n.;;d24,258;;b1,0;;m">
				</treenode>
				<treenode node="locations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;127;2;205;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Move files and folders to their new homes;;d29,127;;b1,0;;m">
				</treenode>
				<treenode node="request;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;349;2;402;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update the properties moved to CakeRequest.;;d27,349;;b1,0;;m">
				</treenode>
				<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;69;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Shell startup, prints info message about dry run.;;d27,69;;b1,0;;m">
				</treenode>
				<treenode node="tests;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f8;102;2;116;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Update tests.;;d25,102;;b1,0;;m">
				</treenode>
				<treenode node="_files;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;34;18;34;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_map;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;48;16;48;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php;f11;41;18;41;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="User;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;196;1;227;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     User class;;d33,196;;b0,0;;m">
				<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;218;2;225;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeFind() callback used to run ContainableBehaviorTest::testLazyLoad();;d40,218;;b1,0;;mqueryData;;p">
					<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f28;218;38;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;203;13;203;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;210;17;210;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="User2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;4242;1;4307;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     User2 class;;d34,4242;;b0,0;;m">
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4295;2;4305;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,4295;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;4295;30;4295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4270;18;4270;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4284;16;4284;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4249;13;4249;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4256;14;4256;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;4263;17;4263;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UserFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UserFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class UserFixture;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UserFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UserFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UserForm;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;231;1;264;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     UserForm class;;d37,231;;b0,0;;m">
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;254;19;254;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;245;16;245;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;238;17;238;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UsersController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\BakeShellTest.php;f1;29;2;30;;;;vpos;;vAppController;;c;;r;;d0,3;;b0,0;;m">
				<treenode node="authenticate;PHP:Function Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;21;2;47;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;21;2;47;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;21;2;47;;;;vpos;;v;;r;;d1,22;;b0,0;;m">
					<treenode node="this;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f5;23;10;23;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f5;23;10;23;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f5;23;10;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="userFromDB;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;26;14;26;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;26;14;26;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;26;14;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="userFromRequest;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;25;19;25;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;25;19;25;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;25;19;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="edit;PHP:Function Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;49;2;77;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;49;2;77;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;49;2;77;;;;vpos;;v;;r;;d1,50;;b0,0;;mid;;p">
					<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f15;49;18;49;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f15;49;18;49;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f15;49;18;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="this;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f10;55;15;55;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f10;55;15;55;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f10;55;15;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f2;55;7;55;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f2;55;7;55;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f2;55;7;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;79;2;82;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;79;2;82;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f1;79;2;82;;;;vpos;;v;;r;;d1,80;;b0,0;;m">
					<treenode node="this;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f2;81;7;81;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f2;81;7;81;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f2;81;7;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="register;PHP:Function Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;7;2;19;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;7;2;19;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;7;2;19;;;;vpos;;v;;r;;d1,8;;b1,0;;m">
					<treenode node="this;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f5;9;10;9;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f5;9;10;9;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f5;9;10;9;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;12;8;12;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;12;8;12;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f3;12;8;12;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;5;19;5;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;5;19;5;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;5;19;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;4;16;4;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;4;16;4;;C:\xampp\htdocs\ISLL\app\Controller\Codelobster0.php;f8;4;16;4;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Uuid;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2112;1;2120;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Uuid class;;d33,2112;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2119;13;2119;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuidFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class UuidFixture.;;d42,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidFixture.php;f8;43;16;43;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Uuiditem;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3009;1;3025;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Uuiditem class;;d37,3009;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3023;28;3023;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3016;13;3016;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuiditemFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemFixture.php;f0;23;1;49;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class UuiditemFixture;;d46,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuiditemsUuidportfolio;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3032;1;3040;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     UuiditemsPortfolio class;;d51,3032;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3039;13;3039;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuiditemsUuidportfolioFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class UuiditemsUuidportfolioFixture;;d60,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuiditemsUuidportfolioNumericid;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3047;1;3055;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     UuiditemsPortfolioNumericid class;;d60,3047;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3054;13;3054;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuiditemsUuidportfolioNumericidFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioNumericidFixture.php;f0;23;1;47;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class UuiditemsUuidportfolioNumericidFixture;;d69,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioNumericidFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioNumericidFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Uuidportfolio;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2987;1;3002;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Uuidportfolio class;;d42,2987;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3001;28;3001;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2994;13;2994;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuidportfolioFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidportfolioFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class UuidportfolioFixture;;d51,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidportfolioFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidportfolioFixture.php;f8;40;16;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuidTag;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3455;1;3469;;;;vpos;;vCakeTestModel;;c;;r;;d36,3455;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3459;28;3459;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3457;13;3457;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuidTagFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidTagFixture.php;f0;23;1;44;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     Class UuidTagFixture;;d45,23;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidTagFixture.php;f8;30;15;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidTagFixture.php;f8;41;16;41;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuidTagNoWith;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;3488;1;3503;;;;vpos;;vCakeTestModel;;c;;r;;d42,3488;;b0,0;;m">
				<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3494;28;3494;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3490;13;3490;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;3492;17;3492;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuidTree;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2698;1;2706;;;;vpos;;vNumberTree;;c;;r&#xA;Description&#xA;     UuidTree class;;d34,2698;;b0,0;;m">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2705;13;2705;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="UuidTreeFixture;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidTreeFixture.php;f0;24;1;38;;;;vpos;;vCakeTestFixture;;c;;r&#xA;Description&#xA;     UuidTreeFixture class;;d46,24;;b0,0;;m">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidTreeFixture.php;f8;31;15;31;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ValidateItem;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;437;1;479;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ValidateItem class;;d41,437;;b0,0;;m">
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;474;2;477;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeValidate method;;d52,474;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f32;474;40;474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;451;19;451;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;467;18;467;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;444;17;444;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ValidateProfile;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;378;1;430;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ValidateProfile class;;d44,378;;b0,0;;m">
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;424;2;428;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeValidate method;;d52,424;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f32;424;40;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;392;19;392;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;415;18;415;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;406;15;406;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;385;17;385;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ValidateUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f0;326;1;371;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ValidateUser class;;d41,326;;b0,0;;m">
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;366;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeValidate method;;d52,366;;b1,0;;moptions;;p">
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f32;366;40;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f11;349;19;349;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;340;15;340;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php;f8;333;17;333;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Validation;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f0;31;1;1054;;;;vpos;;v;;r&#xA;Description&#xA;     Validation Class. Used for validation of model data;;d17,31;;b0,0;;m">
				<treenode node="_check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f18;886;2;891;;;;vpos;;vbool;;r&#xA;Description&#xA;     Runs a regular expression match.&#xA;&#xA;Parameters:&#xA;    string $check - Value to check against the $regex expression&#xA;    string $regex - Regular expression&#xA;&#xA;Return:&#xA;   Success of match;;d50,886;;b2,5;;mstring $check;;pstring $regex;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f34;886;40;886;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f42;886;48;886;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_defaults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f18;900;2;914;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Get the values to use when value sent to validation method is an array.&#xA;&#xA;Parameters:&#xA;    array $params - Parameters sent to validation method;;d46,900;;b2,5;;marray $params;;p">
					<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f37;900;44;900;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_pass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f18;865;2;877;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Attempts to pass unhandled Validation locales to a class starting with $classPrefix and ending with Validation. For example $classPrefix = 'nl', the class would be `NlValidation`.&#xA;&#xA;Parameters:&#xA;    string $method - The method to call on the other class&#xA;    mixed $check - The value to check or an array of parameters for the method to be called&#xA;    string $classPrefix - The prefix for the class to do the validation&#xA;&#xA;Return:&#xA;   Return of Passed method, false on failure;;d64,865;;b2,5;;mstring $method;;pmixed $check;;pstring $classPrefix;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f42;865;48;865;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="classPrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f50;865;62;865;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f33;865;40;865;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_populateIp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f18;1020;2;1043;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Lazily populate the IP address patterns used for validations;;d41,1020;;b2,5;;m">
				</treenode>
				<treenode node="_reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f18;1050;2;1052;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Reset internal variables for another validation run.;;d36,1050;;b2,5;;m">
				</treenode>
				<treenode node="alphaNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;83;2;92;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a string contains only integer or letters&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;&#xA;Return:&#xA;   Success;;d45,83;;b1,5;;mstring|array $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f37;83;43;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="between;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;119;2;121;;;;vpos;;vbool;;r&#xA;Description&#xA;     Alias of Validator::lengthBetween() for backwards compatibility.&#xA;&#xA;Parameters:&#xA;    string $check - Value to check for length&#xA;    int $min - Minimum value in range (inclusive)&#xA;    int $max - Maximum value in range (inclusive)&#xA;&#xA;Return:&#xA;   Success;;d52,119;;b1,5;;mstring $check;;pint $min;;pint $max;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f32;119;38;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="max;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f46;119;50;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="min;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f40;119;44;119;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="blank;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;133;2;138;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if field is left blank -OR- only whitespace characters are present in its value Whitespace characters include Space, Tab, Carriage Return, Newline&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;&#xA;Return:&#xA;   Success;;d38,133;;b1,5;;mstring|array $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f30;133;36;133;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="boolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;403;2;406;;;;vpos;;vbool;;r&#xA;Description&#xA;     Boolean validation, determines if value passed is a boolean integer or true/false.&#xA;&#xA;Parameters:&#xA;    string $check - a valid boolean&#xA;&#xA;Return:&#xA;   Success;;d40,403;;b1,5;;mstring $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f32;403;38;403;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="cc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;154;2;214;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validation of credit card numbers. Returns true if $check is in the proper credit card format.&#xA;&#xA;Parameters:&#xA;    string|array $check - credit card number to validate&#xA;    string|array $type - 'all' may be passed as a sting, defaults to fast which checks format of most major credit&#xA;    bool $deep - set to true this will check the Luhn algorithm of the credit card&#xA;    string $regex - A custom regex can also be passed, this will be used instead of the defined regex values&#xA;&#xA;Return:&#xA;   Success;;d81,154;;b1,5;;mstring|array $check;;pstring|array $type;;pbool $deep;;pstring $regex;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f27;154;33;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="deep;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f51;154;56;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f66;154;72;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f35;154;40;154;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="comparison;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;227;2;274;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to compare 2 numeric values.&#xA;&#xA;Parameters:&#xA;    string|array $check1 - if string is passed for a string must also be passed for $check2&#xA;    string $operator - Can be either a word or operand&#xA;    int $check2 - only needed if $check1 is a string&#xA;&#xA;Return:&#xA;   Success;;d78,227;;b1,5;;mstring|array $check1;;pstring $operator;;pint $check2;;p">
					<treenode node="check1;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f35;227;42;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="check2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f62;227;69;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f44;227;53;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="custom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;284;2;293;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used when a custom regular expression is needed.&#xA;&#xA;Parameters:&#xA;    string|array $check - When used as a string, $regex must also be a valid regular expression&#xA;    string $regex - If $check is passed as a string, $regex must also be set to valid regular expression&#xA;&#xA;Return:&#xA;   Success;;d54,284;;b1,5;;mstring|array $check;;pstring $regex;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f31;284;37;284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f39;284;45;284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="date;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;319;2;360;;;;vpos;;vbool;;r&#xA;Description&#xA;     Date validation, determines if the string passed is a valid date. keys that expect full month, day and year will validate leap years.&#xA;&#xA;Parameters:&#xA;    string $check - a valid date string&#xA;    string|array $format - Use a string or an array of the keys above&#xA;    string $regex - If a custom regular expression is used this is the only validation that will occur&#xA;&#xA;Return:&#xA;   Success;;d69,319;;b1,5;;mstring $check;;pstring|array $format;;pstring $regex;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f29;319;35;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f37;319;44;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f54;319;60;319;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="datetime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;374;2;383;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validates a datetime value&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;    string|array $dateFormat - Format of the date part&#xA;    string $regex - Regex for the date part&#xA;&#xA;Return:&#xA;   True if the value is valid, false otherwise;;d77,374;;b1,5;;mstring $check;;pstring|array $dateFormat;;pstring $regex;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f33;374;39;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dateFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f41;374;52;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f62;374;68;374;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decimal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;422;2;451;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a value is a valid decimal. Both the sign and exponent are optional.&#xA;&#xA;Parameters:&#xA;    float $check - The value the test for decimal&#xA;    int $places - Decimal places&#xA;    string $regex - If a custom regular expression is used, this is the only validation that will occur&#xA;&#xA;Return:&#xA;   Success;;d71,422;;b1,5;;mfloat $check;;pint $places;;pstring $regex;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f32;422;38;422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="places;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f40;422;47;422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f56;422;62;422;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="email;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;464;2;487;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validates for an email address.&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;    bool $deep - Perform a deeper validation (if true), by also checking availability of host&#xA;    string $regex - Regex to use (if none it will use built in regex)&#xA;&#xA;Return:&#xA;   Success;;d68,464;;b1,5;;mstring $check;;pbool $deep;;pstring $regex;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f30;464;36;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="deep;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f38;464;43;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f53;464;59;464;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="equalTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;496;2;498;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that value is exactly $comparedTo.&#xA;&#xA;Parameters:&#xA;    mixed $check - Value to check&#xA;    mixed $comparedTo - Value to compare&#xA;&#xA;Return:&#xA;   Success;;d53,496;;b1,5;;mmixed $check;;pmixed $comparedTo;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f32;496;38;496;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="comparedTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f40;496;51;496;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="extension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;507;2;518;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that value has a valid file extension.&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;    array $extensions - file extensions to allow&#xA;&#xA;Return:&#xA;   Success;;d92,507;;b1,5;;mstring|array $check;;parray $extensions;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f34;507;40;507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="extensions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f42;507;53;507;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fileSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;987;2;998;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks the filesize&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;    string $operator - See `Validation::comparison()`&#xA;    int|string $size - Size in bytes or human readable string like '5MB'&#xA;&#xA;Return:&#xA;   Success;;d73,987;;b1,5;;mstring|array $check;;pstring $operator;;pint|string $size;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f33;987;39;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="operator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f41;987;50;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="size;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f59;987;64;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="inList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;821;2;829;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a value is in a given list. Comparison is case sensitive by default.&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;    array $list - List to check against&#xA;    bool $caseInsensitive - Set to true for case insensitive comparison&#xA;&#xA;Return:&#xA;   Success;;d72,821;;b1,5;;mstring $check;;parray $list;;pbool $caseInsensitive;;p">
					<treenode node="caseInsensitive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f46;821;62;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f31;821;37;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f39;821;44;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ip;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;527;2;537;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validation of an IP address.&#xA;&#xA;Parameters:&#xA;    string $check - The string to test&#xA;    string $type - The IP Protocol version to validate against&#xA;&#xA;Return:&#xA;   Success;;d51,527;;b1,5;;mstring $check;;pstring $type;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f27;527;33;527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f35;527;40;527;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="lengthBetween;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;104;2;107;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a string length is within s specified range. Spaces are included in the character count. Returns true is string matches value min, max, or between min and max,&#xA;&#xA;Parameters:&#xA;    string $check - Value to check for length&#xA;    int $min - Minimum value in range (inclusive)&#xA;    int $max - Maximum value in range (inclusive)&#xA;&#xA;Return:&#xA;   Success;;d58,104;;b1,5;;mstring $check;;pint $min;;pint $max;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f38;104;44;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="max;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f52;104;56;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="min;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f46;104;50;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="luhn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;924;2;947;;;;vpos;;vbool;;r&#xA;Description&#xA;     Luhn algorithm&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;    bool $deep - If true performs deep check&#xA;&#xA;Return:&#xA;   Success;;d52,924;;b1,5;;mstring|array $check;;pbool $deep;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f29;924;35;924;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="deep;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f37;924;42;924;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="maxLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;557;2;559;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether the length of a string is smaller or equal to a maximal length..&#xA;&#xA;Parameters:&#xA;    string $check - The string to test&#xA;    int $max - The maximal string length&#xA;&#xA;Return:&#xA;   Success;;d48,557;;b1,5;;mstring $check;;pint $max;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f34;557;40;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="max;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f42;557;46;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="mimeType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;957;2;977;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks the mime type of a file.&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;    array|string $mimeTypes - Array of mime types or regex pattern to check&#xA;&#xA;Return:&#xA;   Success;;d63,957;;b1,5;;mstring|array $check;;parray|string $mimeTypes;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f33;957;39;957;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="mimeTypes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f41;957;51;957;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="minLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;546;2;548;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks whether the length of a string is greater or equal to a minimal length.&#xA;&#xA;Parameters:&#xA;    string $check - The string to test&#xA;    int $min - The minimal string length&#xA;&#xA;Return:&#xA;   Success;;d48,546;;b1,5;;mstring $check;;pint $min;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f34;546;40;546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="min;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f42;546;46;546;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="money;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;568;2;576;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a value is a monetary amount.&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;    string $symbolPosition - Where symbol is located (left/right)&#xA;&#xA;Return:&#xA;   Success;;d64,568;;b1,5;;mstring $check;;pstring $symbolPosition;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f30;568;36;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="symbolPosition;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f38;568;53;568;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="multiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;592;2;621;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validate a multiple select. Comparison is case sensitive by default.&#xA;&#xA;Parameters:&#xA;    array $check - Value to check&#xA;    array $options - Options for the check&#xA;    bool $caseInsensitive - Set to true for case insensitive comparison&#xA;&#xA;Return:&#xA;   Success;;d87,592;;b1,5;;marray $check;;parray $options;;pbool $caseInsensitive;;p">
					<treenode node="caseInsensitive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f61;592;77;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f33;592;39;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f41;592;49;592;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="naturalNumber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;641;2;644;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a value is a natural number.&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;    bool $allowZero - Set true to allow zero, defaults to false&#xA;&#xA;Return:&#xA;   Success;;d66,641;;b1,5;;mstring $check;;pbool $allowZero;;p">
					<treenode node="allowZero;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f46;641;56;641;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f38;641;44;641;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="notEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;61;2;70;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a string contains something other than whitespace&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;&#xA;Return:&#xA;   Success;;d41,61;;b1,5;;mstring|array $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f33;61;39;61;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="numeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;629;2;631;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if a value is numeric.&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;&#xA;Return:&#xA;   Success;;d40,629;;b1,5;;mstring $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f32;629;38;629;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="phone;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;654;2;689;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that a value is a valid phone number.&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check (string or array)&#xA;    string $regex - Regular expression to use&#xA;    string $country - Country code (defaults to 'all')&#xA;&#xA;Return:&#xA;   Success;;d71,654;;b1,5;;mstring|array $check;;pstring $regex;;pstring $country;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f30;654;36;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="country;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f53;654;61;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f38;654;44;654;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="postal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;699;2;730;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a given value is a valid postal code.&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;    string $regex - Regular expression to use&#xA;    string $country - Country to use for formatting&#xA;&#xA;Return:&#xA;   Success;;d71,699;;b1,5;;mstring|array $check;;pstring $regex;;pstring $country;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f31;699;37;699;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="country;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f54;699;62;699;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f39;699;45;699;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="range;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;742;2;750;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validate that a number is in specified range. if $lower and $upper are not set, will return true if $check is a legal finite on this platform&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;    int|float $lower - Lower limit&#xA;    int|float $upper - Upper limit&#xA;&#xA;Return:&#xA;   Success;;d68,742;;b1,5;;mstring $check;;pint|float $lower;;pint|float $upper;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f30;742;36;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="lower;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f38;742;44;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="upper;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f53;742;59;742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="ssn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;761;2;783;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a value is a valid Social Security Number.&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check&#xA;    string $regex - Regular expression to use&#xA;    string $country - Country&#xA;&#xA;Return:&#xA;   Success;;d68,761;;b1,5;;mstring|array $check;;pstring $regex;;pstring $country;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f28;761;34;761;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="country;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f51;761;59;761;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="regex;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f36;761;42;761;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="time;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;393;2;395;;;;vpos;;vbool;;r&#xA;Description&#xA;     Time validation, determines if the string passed is a valid time. Validates time as 24hr (HH:MM) or am/pm ([H]H:MM[a|p]m) Does not allow/validate seconds.&#xA;&#xA;Parameters:&#xA;    string $check - a valid time string&#xA;&#xA;Return:&#xA;   Success;;d37,393;;b1,5;;mstring $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f29;393;35;393;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="uploadError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;1007;2;1013;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checking for upload errors&#xA;&#xA;Parameters:&#xA;    string|array $check - Value to check;;d44,1007;;b1,5;;mstring|array $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f36;1007;42;1007;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="url;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;802;2;811;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a value is a valid URL according to http://www.w3.org/Addressing/URL/url-spec.txt&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;    bool $strict - Require URL to be prefixed by a valid scheme (one of http(s)/ftp(s)/file/news/gopher)&#xA;&#xA;Return:&#xA;   Success;;d53,802;;b1,5;;mstring $check;;pbool $strict;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f28;802;34;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="strict;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f36;802;43;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="userDefined;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;840;2;842;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Runs an user-defined validation.&#xA;&#xA;Parameters:&#xA;    string|array $check - value that will be validated in user-defined methods&#xA;    object $object - class that holds validation method&#xA;    string $method - class method name for validation to run&#xA;    array $args - arguments to send to method&#xA;&#xA;Return:&#xA;   user-defined class class method returns;;d76,840;;b1,5;;mstring|array $check;;pobject $object;;pstring $method;;parray $args;;p">
					<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f62;840;67;840;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f36;840;42;840;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f53;840;60;840;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f44;840;51;840;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="uuid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;850;2;853;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks that a value is a valid UUID - http://tools.ietf.org/html/rfc4122&#xA;&#xA;Parameters:&#xA;    string $check - Value to check&#xA;&#xA;Return:&#xA;   Success;;d37,850;;b1,5;;mstring $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f29;850;35;850;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_pattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f18;38;27;38;;;;vposarray;;v;;r;;d-1,-1;;b2,5;;m">
				</treenode>
				<treenode node="errors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php;f15;48;22;48;;;;vposarray;;v;;r;;d-1,-1;;b1,5;;m">
				</treenode>
			</treenode>
			<treenode node="ValidationRuleBehavior;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f0;2483;1;2496;;;;vpos;;vModelBehavior;;c;;r&#xA;Description&#xA;     Behavior for testing validation rules.;;d51,2483;;b0,0;;m">
				<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2489;2;2494;;;;vpos;;v;;r;;d66,2489;;b1,0;;mModel;;poptions;;p">
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f38;2489;44;2489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f46;2489;54;2489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f8;2485;2;2487;;;;vpos;;v;;r;;d56,2485;;b1,0;;mModel;;pconfig;;p">
					<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f37;2485;44;2485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php;f29;2485;35;2485;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="ValidationTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f0;95;1;2439;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     Test Case for Validation Class;;d42,95;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;102;2;110;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,102;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;117;2;123;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,117;;b1,0;;m">
				</treenode>
				<treenode node="testAllCc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;802;2;845;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAllCc method;;d29,802;;b1,0;;m">
				</treenode>
				<treenode node="testAllCcDeep;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;852;2;895;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAllCcDeep method;;d33,852;;b1,0;;m">
				</treenode>
				<treenode node="testAlphaNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;164;2;183;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAlphaNumeric method;;d36,164;;b1,0;;m">
				</treenode>
				<treenode node="testAlphaNumericPassedAsArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;190;2;202;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAlphaNumericPassedAsArray method;;d49,190;;b1,0;;m">
				</treenode>
				<treenode node="testBlank;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;223;2;231;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBlank method;;d29,223;;b1,0;;m">
				</treenode>
				<treenode node="testBlankAsArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;238;2;246;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBlankAsArray method;;d36,238;;b1,0;;m">
				</treenode>
				<treenode node="testBoolean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1509;2;1521;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBoolean method;;d31,1509;;b1,0;;m">
				</treenode>
				<treenode node="testCc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;253;2;690;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testcc method;;d26,253;;b1,0;;m">
				</treenode>
				<treenode node="testComparison;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;902;2;932;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testComparison method;;d34,902;;b1,0;;m">
				</treenode>
				<treenode node="testComparisonAsArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;939;2;968;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testComparisonAsArray method;;d41,939;;b1,0;;m">
				</treenode>
				<treenode node="testCustom;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;975;2;980;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustom method;;d30,975;;b1,0;;m">
				</treenode>
				<treenode node="testCustomAsArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;987;2;991;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustomAsArray method;;d37,987;;b1,0;;m">
				</treenode>
				<treenode node="testCustomRegexForCc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;751;2;755;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustomRegexForCc method;;d40,751;;b1,0;;m">
				</treenode>
				<treenode node="testCustomRegexForCcWithLuhnCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;762;2;767;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testCustomRegexForCcWithLuhnCheck method;;d53,762;;b1,0;;m">
				</treenode>
				<treenode node="testDateCustomRegx;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1528;2;1531;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateCustomRegx method;;d38,1528;;b1,0;;m">
				</treenode>
				<treenode node="testDateDdMMMMyyyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1354;2;1359;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDdMMMMyyyy method;;d38,1354;;b1,0;;m">
				</treenode>
				<treenode node="testDateDdMMMMyyyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1366;2;1369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDdMMMMyyyyLeapYear method;;d46,1366;;b1,0;;m">
				</treenode>
				<treenode node="testDateDdmmyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1034;2;1047;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDdmmyy method;;d34,1034;;b1,0;;m">
				</treenode>
				<treenode node="testDateDdmmyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1054;2;1063;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDdmmyyLeapYear method;;d42,1054;;b1,0;;m">
				</treenode>
				<treenode node="testDateDdmmyyyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;998;2;1011;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDdmmyyyy method;;d36,998;;b1,0;;m">
				</treenode>
				<treenode node="testDateDdmmyyyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1018;2;1027;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDdmmyyyyLeapYear method;;d44,1018;;b1,0;;m">
				</treenode>
				<treenode node="testDateDmyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1070;2;1083;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDmyy method;;d32,1070;;b1,0;;m">
				</treenode>
				<treenode node="testDateDmyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1090;2;1099;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDmyyLeapYear method;;d40,1090;;b1,0;;m">
				</treenode>
				<treenode node="testDateDmyyyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1106;2;1119;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDmyyyy method;;d34,1106;;b1,0;;m">
				</treenode>
				<treenode node="testDateDmyyyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1126;2;1135;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateDmyyyyLeapYear method;;d42,1126;;b1,0;;m">
				</treenode>
				<treenode node="testDateMdyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1214;2;1227;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMdyy method;;d32,1214;;b1,0;;m">
				</treenode>
				<treenode node="testDateMdyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1234;2;1243;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMdyyLeapYear method;;d40,1234;;b1,0;;m">
				</treenode>
				<treenode node="testDateMdyyyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1250;2;1263;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMdyyyy method;;d34,1250;;b1,0;;m">
				</treenode>
				<treenode node="testDateMdyyyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1270;2;1279;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMdyyyyLeapYear method;;d42,1270;;b1,0;;m">
				</treenode>
				<treenode node="testDateMmddyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1178;2;1191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMmddyy method;;d34,1178;;b1,0;;m">
				</treenode>
				<treenode node="testDateMmddyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1198;2;1207;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMmddyyLeapYear method;;d42,1198;;b1,0;;m">
				</treenode>
				<treenode node="testDateMmddyyyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1142;2;1155;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMmddyyyy method;;d36,1142;;b1,0;;m">
				</treenode>
				<treenode node="testDateMmddyyyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1162;2;1171;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMmddyyyyLeapYear method;;d44,1162;;b1,0;;m">
				</treenode>
				<treenode node="testDateMmmmDdyyyy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1376;2;1384;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMmmmDdyyyy method;;d38,1376;;b1,0;;m">
				</treenode>
				<treenode node="testDateMmmmDdyyyyLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1391;2;1397;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMmmmDdyyyyLeapYear method;;d46,1391;;b1,0;;m">
				</treenode>
				<treenode node="testDateMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1476;2;1479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validating dates with multiple formats;;d36,1476;;b1,0;;m">
				</treenode>
				<treenode node="testDateMy;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1404;2;1409;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMy method;;d30,1404;;b1,0;;m">
				</treenode>
				<treenode node="testDateMyNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1416;2;1427;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateMyNumeric method;;d37,1416;;b1,0;;m">
				</treenode>
				<treenode node="testDatetime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2349;2;2371;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDatetime method;;d32,2349;;b1,0;;m">
				</treenode>
				<treenode node="testDateY;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1457;2;1469;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateY method;;d29,1457;;b1,0;;m">
				</treenode>
				<treenode node="testDateYmNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1434;2;1450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateYmNumeric method;;d37,1434;;b1,0;;m">
				</treenode>
				<treenode node="testDateYymmdd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1318;2;1331;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateYymmdd method;;d34,1318;;b1,0;;m">
				</treenode>
				<treenode node="testDateYymmddLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1338;2;1347;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateYymmddLeapYear method;;d42,1338;;b1,0;;m">
				</treenode>
				<treenode node="testDateYyyymmdd;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1286;2;1295;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateYyyymmdd method;;d36,1286;;b1,0;;m">
				</treenode>
				<treenode node="testDateYyyymmddLeapYear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1302;2;1311;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDateYyyymmddLeapYear method;;d44,1302;;b1,0;;m">
				</treenode>
				<treenode node="testDecimalCustomRegex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1652;2;1655;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecimalCustomRegex method;;d42,1652;;b1,0;;m">
				</treenode>
				<treenode node="testDecimalLocaleSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1662;2;1674;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test localized floats with decimal.;;d40,1662;;b1,0;;m">
				</treenode>
				<treenode node="testDecimalWithInvalidPlaces;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1641;2;1645;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test decimal() with invalid places parameter.;;d48,1641;;b1,0;;m">
				</treenode>
				<treenode node="testDecimalWithPlacesNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1538;2;1564;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test numbers with any number of decimal places, including none.;;d45,1538;;b1,0;;m">
				</treenode>
				<treenode node="testDecimalWithPlacesNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1604;2;1634;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test numbers with exactly that many number of decimal places.;;d48,1604;;b1,0;;m">
				</treenode>
				<treenode node="testDecimalWithPlacesTrue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1571;2;1597;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test numbers with any number of decimal places greater than 0, or a float|double.;;d45,1571;;b1,0;;m">
				</treenode>
				<treenode node="testEmail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1681;2;1757;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEmail method;;d29,1681;;b1,0;;m">
				</treenode>
				<treenode node="testEmailCustomRegex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1776;2;1779;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEmailCustomRegex method;;d40,1776;;b1,0;;m">
				</treenode>
				<treenode node="testEmailDeep;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1764;2;1769;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEmailDeep method;;d33,1764;;b1,0;;m">
				</treenode>
				<treenode node="testEqualTo;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1786;2;1793;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testEqualTo method;;d31,1786;;b1,0;;m">
				</treenode>
				<treenode node="testExtension;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2011;2;2033;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExtension method;;d33,2011;;b1,0;;m">
				</treenode>
				<treenode node="testFastCc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;774;2;795;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFastCc method;;d30,774;;b1,0;;m">
				</treenode>
				<treenode node="testFileSize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2426;2;2437;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFileSize method;;d32,2426;;b1,0;;m">
				</treenode>
				<treenode node="testInList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1970;2;1989;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testInList method;;d30,1970;;b1,0;;m">
				</treenode>
				<treenode node="testIpV4;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1800;2;1808;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIpV4 method;;d28,1800;;b1,0;;m">
				</treenode>
				<treenode node="testIpv6;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1815;2;1848;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIp v6;;d28,1815;;b1,0;;m">
				</treenode>
				<treenode node="testLengthBetween;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;209;2;216;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLengthBetween method;;d37,209;;b1,0;;m">
				</treenode>
				<treenode node="testLuhn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;697;2;744;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testLuhn method;;d28,697;;b1,0;;m">
				</treenode>
				<treenode node="testMaxLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1855;2;1862;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMaxLength method;;d33,1855;;b1,0;;m">
				</treenode>
				<treenode node="testMimeType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2378;2;2391;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMimeType method;;d32,2378;;b1,0;;m">
				</treenode>
				<treenode node="testMimeTypeFalse;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2399;2;2404;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMimeTypeFalse method;;d37,2399;;b1,0;;m">
				</treenode>
				<treenode node="testMinLength;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1869;2;1876;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMinLength method;;d33,1869;;b1,0;;m">
				</treenode>
				<treenode node="testMoney;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2040;2;2073;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testMoney method;;d29,2040;;b1,0;;m">
				</treenode>
				<treenode node="testMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2080;2;2125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test Multiple Select Validation;;d32,2080;;b1,0;;m">
				</treenode>
				<treenode node="testNaturalNumber;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2148;2;2162;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNaturalNumber method;;d37,2148;;b1,0;;m">
				</treenode>
				<treenode node="testNotEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;130;2;140;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNotEmpty method;;d32,130;;b1,0;;m">
				</treenode>
				<treenode node="testNotEmptyISO88591AppEncoding;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;147;2;157;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNotEmptyISO88591Encoding method;;d51,147;;b1,0;;m">
				</treenode>
				<treenode node="testNumeric;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2132;2;2141;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNumeric method;;d31,2132;;b1,0;;m">
				</treenode>
				<treenode node="testPassThroughClassFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2298;2;2300;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the pass through calling of an alternate locale with postal();;d47,2298;;b1,0;;m">
				</treenode>
				<treenode node="testPassThroughMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2307;2;2309;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test pass through method;;d41,2307;;b1,0;;m">
				</treenode>
				<treenode node="testPassThroughMethodFailure;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2288;2;2290;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test pass through failure on postal;;d48,2288;;b1,0;;m">
				</treenode>
				<treenode node="testPhone;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2169;2;2213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPhone method;;d29,2169;;b1,0;;m">
				</treenode>
				<treenode node="testPhonePostalSsnPass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2276;2;2280;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that phone and postal pass to other classes.;;d42,2276;;b1,0;;m">
				</treenode>
				<treenode node="testPostal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2220;2;2269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testPostal method;;d30,2220;;b1,0;;m">
				</treenode>
				<treenode node="testRange;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1996;2;2004;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRange method;;d29,1996;;b1,0;;m">
				</treenode>
				<treenode node="testSsn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2316;2;2330;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSsn method;;d27,2316;;b1,0;;m">
				</treenode>
				<treenode node="testTime;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1486;2;1502;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testTime method;;d28,1486;;b1,0;;m">
				</treenode>
				<treenode node="testUploadError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2411;2;2419;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUploadError method;;d35,2411;;b1,0;;m">
				</treenode>
				<treenode node="testUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1883;2;1951;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUrl method;;d27,1883;;b1,0;;m">
				</treenode>
				<treenode node="testUserDefined;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;2337;2;2342;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testUserDefined method;;d35,2337;;b1,0;;m">
				</treenode>
				<treenode node="testUuid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php;f8;1953;2;1963;;;;vpos;;v;;r;;d28,1953;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ValidationTest1;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2164;1;2243;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ValidationTest1 class;;d44,2164;;b0,0;;m">
				<treenode node="customValidationMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2208;2;2210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     customValidationMethod method&#xA;&#xA;Parameters:&#xA;    mixed $data;;d47,2208;;b1,0;;mmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f40;2208;45;2208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="customValidatorWithMessage;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2228;2;2230;;;;vpos;;varray;;r&#xA;Description&#xA;     Custom validator with message;;d51,2228;;b1,0;;mdata;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f44;2228;49;2228;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="customValidatorWithParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2217;2;2221;;;;vpos;;varray;;r&#xA;Description&#xA;     Custom validator with parameters + default values;;d96,2217;;b1,0;;mdata;;pvalidator;;por;;pignoreOnSame;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f43;2217;48;2217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ignoreOnSame;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f74;2217;87;2217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="or;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f62;2217;65;2217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="validator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f50;2217;60;2217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="customValidatorWithSixParams;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2237;2;2241;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test validation with many parameters;;d117,2237;;b1,0;;mdata;;pone;;ptwo;;pthree;;pfour;;pfive;;psix;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f46;2237;51;2237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="five;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f96;2237;101;2237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="four;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f85;2237;90;2237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="one;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f53;2237;57;2237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="six;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f107;2237;111;2237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="three;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f73;2237;79;2237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="two;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f63;2237;67;2237;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f11;2185;19;2185;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2171;13;2171;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2178;17;2178;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2192;17;2192;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ValidationTest2;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f0;2250;1;2300;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     ValidationTest2 class;;d44,2250;;b0,0;;m">
				<treenode node="customValidationMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2287;2;2289;;;;vpos;;vvoid;;r&#xA;Description&#xA;     customValidationMethod method&#xA;&#xA;Parameters:&#xA;    mixed $data;;d47,2287;;b1,0;;mmixed $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f40;2287;45;2287;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2296;2;2298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     schema method;;d40,2296;;b1,0;;mfield;;p">
					<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f24;2296;30;2296;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2257;13;2257;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2264;17;2264;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php;f8;2271;17;2271;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="View;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f0;55;18;55;;;;vpos;;v;;r&#xA;Description&#xA;     View, the V in the MVC triad. View interacts with Helpers and view variables passed in from the controller to render the results of the controller action. Often this is HTML, but can also take the form of JSON, XML, PDF's or streaming files.;;d-1,-1;;b0,0;;m">
				<treenode node="Blocks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f27;53;35;53;;;;vposViewBlock;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Cache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f29;43;36;43;;;;vposCacheHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Form;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f28;44;34;44;;;;vposFormHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Html;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f28;45;34;45;;;;vposHtmlHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Js;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f26;46;30;46;;;;vposJsHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Number;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f30;47;38;47;;;;vposNumberHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Paginator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f33;48;44;48;;;;vposPaginatorHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Rss;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f27;49;32;49;;;;vposRssHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Session;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f31;50;40;50;;;;vposSessionHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f28;51;34;51;;;;vposTextHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f28;52;34;52;;;;vposTimeHelper;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewBlock;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f0;23;1;225;;;;vpos;;v;;r&#xA;Description&#xA;     ViewBlock implements the concept of Blocks or Slots in the View layer. Slots or blocks are combined with extending views and layouts to afford slots of content that are present in a layout or parent view, but are defined by the child view or elements used in the view.;;d16,23;;b0,0;;m">
				<treenode node="APPEND;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f6;30;13;30;;;;vposstring;;v;;r'append';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="PREPEND;PHP:PHP Word;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f6;37;14;37;;;;vposstring;;v;;r'prepend';;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="active;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;212;2;214;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Get the name of the currently open block.&#xA;&#xA;Return:&#xA;   Either null or the name of the last open block;;d26,212;;b1,0;;m">
				</treenode>
				<treenode node="append;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;168;2;170;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Append to an existing or new block. Appending to a new block will create the block.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    string $value - The content for the block;;d46,168;;b1,0;;mstring $name;;pstring $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f24;168;29;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f31;168;37;168;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="concat;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;140;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Concat content to an existing or new block. Concating to a new block will create the block.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    mixed $value - The content for the block&#xA;    string $mode - If ViewBlock::APPEND content will be appended to existing content;;d73,140;;b1,0;;mstring $name;;pmixed $value;;pstring $mode;;p">
					<treenode node="mode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f46;140;51;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f24;140;29;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f31;140;37;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="end;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;109;2;124;;;;vpos;;vvoid;;r&#xA;Description&#xA;     End a capturing block. The compliment to ViewBlock::start();;d23,109;;b1,0;;m">
				</treenode>
				<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;191;2;196;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get the content for a block.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    string $default - Default string&#xA;&#xA;Return:&#xA;   The block content or $default if the block does not exist;;d43,191;;b1,0;;mstring $name;;pstring $default;;p">
					<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f28;191;36;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f21;191;26;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="keys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;203;2;205;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the names of all the existing blocks.&#xA;&#xA;Return:&#xA;   An array containing the blocks;;d24,203;;b1,0;;m">
				</treenode>
				<treenode node="set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;180;2;182;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the content for a block. This will overwrite any existing content.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    mixed $value - The content for the block;;d36,180;;b1,0;;mstring $name;;pmixed $value;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f21;180;26;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f28;180;34;180;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="start;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;75;2;81;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start capturing output for a 'block'&#xA;&#xA;Parameters:&#xA;    string $name - The name of the block to capture for;;d30,75;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f23;75;28;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="startIfEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;95;2;101;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start capturing output for a 'block' if it is empty&#xA;&#xA;Parameters:&#xA;    string $name - The name of the block to capture for;;d37,95;;b1,0;;mstring $name;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f30;95;35;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="unclosed;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f8;221;2;223;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the names of the unclosed/active blocks.&#xA;&#xA;Return:&#xA;   An array of unclosed blocks;;d28,221;;b1,0;;m">
				</treenode>
				<treenode node="_active;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f11;51;19;51;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_blocks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f11;44;19;44;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
				<treenode node="_discardActiveBufferOnEnd;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php;f11;60;37;60;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewPostsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;32;1;71;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     ViewPostsController class;;d45,32;;b0,0;;m">
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;53;2;59;;;;vpos;;vvoid;;r&#xA;Description&#xA;     index method;;d25,53;;b1,0;;m">
				</treenode>
				<treenode node="nocache_multiple_element;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;66;2;69;;;;vpos;;vvoid;;r&#xA;Description&#xA;     nocache_tags_with_element method;;d44,66;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;39;13;39;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;46;13;46;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewTask;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f0;26;1;476;;;;vpos;;vBakeTask;;c;;r&#xA;Description&#xA;     Task class for creating and updating view files.;;d32,26;;b0,0;;m">
				<treenode node="_associations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f11;459;2;474;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns associations for controllers models.&#xA;&#xA;Parameters:&#xA;    Model $model - The Model instance&#xA;&#xA;Return:&#xA;   associations;;d48,459;;b2,0;;mModel $model;;p">
					<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f40;459;46;459;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_interactive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f11;194;2;241;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Handles interactive baking;;d35,194;;b2,0;;m">
				</treenode>
				<treenode node="_loadController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f11;252;2;294;;;;vpos;;varray;;r&#xA;Description&#xA;     Loads Controller and sets variables for the template Available template variables 'modelClass', 'primaryKey', 'displayField', 'singularVar', 'pluralVar', 'singularHumanName', 'pluralHumanName', 'fields', 'foreignKeys', 'belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany'&#xA;&#xA;Return:&#xA;   Returns a variables to be made available to a view template;;d38,252;;b2,0;;m">
				</treenode>
				<treenode node="_methodsToBake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f11;133;2;158;;;;vpos;;varray;;r&#xA;Description&#xA;     Get a list of actions that can / should have views baked for them.&#xA;&#xA;Return:&#xA;   Array of action names that should be baked;;d37,133;;b2,0;;m">
				</treenode>
				<treenode node="all;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;165;2;187;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Bake All views for All controllers.;;d23,165;;b1,0;;m">
				</treenode>
				<treenode node="bake;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;346;2;357;;;;vpos;;vbool;;r&#xA;Description&#xA;     Assembles and writes bakes the view file.&#xA;&#xA;Parameters:&#xA;    string $action - Action to bake&#xA;    string $content - Content to write&#xA;&#xA;Return:&#xA;   Success;;d46,346;;b1,0;;mstring $action;;pstring $content;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f22;346;29;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f31;346;39;346;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="bakeActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;303;2;308;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Bake a view file for each of the supplied actions&#xA;&#xA;Parameters:&#xA;    array $actions - Array of actions to make files for&#xA;    array $vars - The template variables;;d46,303;;b1,0;;marray $actions;;parray $vars;;p">
					<treenode node="actions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f29;303;37;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="vars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f39;303;44;303;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="customAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;315;2;337;;;;vpos;;vvoid;;r&#xA;Description&#xA;     handle creation of baking a custom action view file;;d32,315;;b1,0;;m">
				</treenode>
				<treenode node="execute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;85;2;126;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Execution method always used for tasks;;d27,85;;b1,0;;m">
				</treenode>
				<treenode node="getContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;366;2;379;;;;vpos;;vstring;;r&#xA;Description&#xA;     Builds content from template and variables&#xA;&#xA;Parameters:&#xA;    string $action - name to generate content to&#xA;    array $vars - passed for use in templates&#xA;&#xA;Return:&#xA;   content from template;;d51,366;;b1,0;;mstring $action;;parray $vars;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f28;366;35;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="vars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f37;366;42;366;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;418;2;451;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,418;;b1,0;;m">
				</treenode>
				<treenode node="getTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;387;2;411;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the template name based on the action name&#xA;&#xA;Parameters:&#xA;    string $action - name&#xA;&#xA;Return:&#xA;   template name;;d38,387;;b1,0;;mstring $action;;p">
					<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f29;387;36;387;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;76;2;78;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Override initialize;;d30,76;;b1,0;;m">
				</treenode>
				<treenode node="controllerName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;47;23;47;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="noTemplateActions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;69;26;69;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;40;13;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="scaffoldActions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;61;24;61;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;33;14;33;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="template;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php;f8;54;17;54;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewTaskArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f0;65;1;73;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Test View Task Article Model;;d36,65;;b0,0;;m">
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;72;17;72;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewTaskArticlesController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f0;105;1;163;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     Test View Task Articles Controller;;d52,105;;b0,0;;m">
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;120;2;121;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test public controller action;;d23,120;;b1,0;;m">
				</treenode>
				<treenode node="admin_add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;136;2;137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test admin prefixed controller action;;d29,136;;b1,0;;m">
				</treenode>
				<treenode node="admin_delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;160;2;161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test admin prefixed controller action;;d32,160;;b1,0;;m">
				</treenode>
				<treenode node="admin_edit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;152;2;153;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test admin prefixed controller action;;d30,152;;b1,0;;m">
				</treenode>
				<treenode node="admin_index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;128;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test admin prefixed controller action;;d31,128;;b1,0;;m">
				</treenode>
				<treenode node="admin_view;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;144;2;145;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test admin prefixed controller action;;d30,144;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;112;2;113;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test public controller action;;d25,112;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewTaskComment;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f0;38;1;58;;;;vpos;;vModel;;c;;r&#xA;Description&#xA;     Test View Task Comment Model;;d36,38;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;52;18;52;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;45;17;45;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewTaskCommentsController;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f0;80;1;98;;;;vpos;;vController;;c;;r&#xA;Description&#xA;     Test View Task Comments Controller;;d52,80;;b0,0;;m">
				<treenode node="add;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;95;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Testing public controller action;;d23,95;;b1,0;;m">
				</treenode>
				<treenode node="index;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;87;2;88;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Testing public controller action;;d25,87;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewTaskTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f0;170;1;699;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ViewTaskTest class;;d40,170;;b0,0;;m">
				<treenode node="nameVariations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f15;510;2;512;;;;vpos;;vvoid;;r&#xA;Description&#xA;     static dataprovider for test cases;;d41,510;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;186;2;203;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,186;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;210;2;213;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,210;;b1,0;;m">
				</treenode>
				<treenode node="testBakeActions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;376;2;396;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake actions baking multiple actions.;;d35,376;;b1,0;;m">
				</treenode>
				<treenode node="testBakeEdit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;306;2;315;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking an edit file;;d32,306;;b1,0;;m">
				</treenode>
				<treenode node="testBakeIndex;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;322;2;332;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking an index;;d33,322;;b1,0;;m">
				</treenode>
				<treenode node="testBakeView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;289;2;299;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test Bake method;;d32,289;;b1,0;;m">
				</treenode>
				<treenode node="testBakeWithNoTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;339;2;344;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that baking a view with no template doesn't make a file.;;d42,339;;b1,0;;m">
				</treenode>
				<treenode node="testBakeWithPlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;351;2;369;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test bake() with a -plugin param;;d38,351;;b1,0;;m">
				</treenode>
				<treenode node="testCustomAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;403;2;416;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test baking a customAction (non crud);;d36,403;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteInteractive;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;569;2;606;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test execute into interactive.;;d42,569;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteInteractiveWithAdmin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;631;2;671;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test execute into interactive() with admin methods.;;d51,631;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;423;2;442;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test all();;d38,423;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteIntoAllWithActionName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;449;2;462;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test all() with action parameter;;d52,449;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithActionParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;469;2;479;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test `cake bake view $controller view`;;d46,469;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithAlternateTemplates;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;613;2;624;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test `cake bake view posts index list`;;d53,613;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithController;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;487;2;503;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test `cake bake view $controller` Ensure that views are only baked for actions that exist in the controller.;;d45,487;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithControllerAndAdminFlag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;542;2;562;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test `cake bake view $controller --admin` Which only bakes admin methods, not non-admin methods.;;d57,542;;b1,0;;m">
				</treenode>
				<treenode node="testExecuteWithControllerVariations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;520;2;534;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that both plural and singular forms can be used for baking views.;;d60,520;;b1,0;;mname;;p">
					<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f53;520;58;520;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testGetContent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;220;2;243;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getContent and parsing of Templates.;;d34,220;;b1,0;;m">
				</treenode>
				<treenode node="testGetContentWithAdminAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;250;2;282;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getContent() using an admin_prefixed action.;;d49,250;;b1,0;;m">
				</treenode>
				<treenode node="testGetTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;678;2;697;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test getting templates, make sure noTemplateActions works and prefixed template is used before generic one.;;d35,678;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php;f8;177;17;177;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="ViewTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f0;302;1;1776;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     ViewTest class;;d36,302;;b0,0;;m">
				<treenode node="blockValueProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f15;1481;2;1488;;;;vpos;;varray;;r&#xA;Description&#xA;     Data provider for block related tests.;;d45,1481;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;316;2;341;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,316;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;348;2;357;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,348;;b1,0;;m">
				</treenode>
				<treenode node="testAddInlineScripts;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;677;2;685;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test addInlineScripts method;;d40,677;;b1,0;;m">
				</treenode>
				<treenode node="testAfterLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1045;2;1056;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test afterLayout method;;d35,1045;;b1,0;;m">
				</treenode>
				<treenode node="testAltBadExt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1332;2;1335;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAltBadExt method;;d33,1332;;b1,0;;m">
				</treenode>
				<treenode node="testAltExt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1319;2;1324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testAltExt method;;d30,1319;;b1,0;;m">
				</treenode>
				<treenode node="testBadExt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1306;2;1312;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBadExt method;;d30,1306;;b1,0;;m">
				</treenode>
				<treenode node="testBeforeLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1033;2;1038;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test beforeLayout method;;d36,1033;;b1,0;;m">
				</treenode>
				<treenode node="testBlockAppend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1496;2;1502;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test appending to a block with append.;;d41,1496;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f33;1496;39;1496;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testBlockAppendObjectWithoutToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1513;2;1517;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test appending an object without __toString magic method to a block with append.;;d56,1513;;b1,0;;m">
				</treenode>
				<treenode node="testBlockAppendUndefined;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1553;2;1557;;;;vpos;;vvoid;;r&#xA;Description&#xA;     You should be able to append to undefined blocks.;;d44,1553;;b1,0;;m">
				</treenode>
				<treenode node="testBlockCapture;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1342;2;1349;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test creating a block with capturing output.;;d36,1342;;b1,0;;m">
				</treenode>
				<treenode node="testBlockCaptureAppend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1392;2;1403;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test appending to a block with capturing output.;;d42,1392;;b1,0;;m">
				</treenode>
				<treenode node="testBlockCaptureStartIfEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1356;2;1367;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test block with startIfEmpty;;d48,1356;;b1,0;;m">
				</treenode>
				<treenode node="testBlockCaptureStartStartIfEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1374;2;1385;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test block with startIfEmpty;;d53,1374;;b1,0;;m">
				</treenode>
				<treenode node="testBlockDefaultValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1750;2;1759;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that a view block uses default value when not assigned and uses assigned value when it is;;d41,1750;;b1,0;;m">
				</treenode>
				<treenode node="testBlockPrepend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1525;2;1531;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test prepending to a block with prepend.;;d42,1525;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f34;1525;40;1525;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testBlockPrependObjectWithoutToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1542;2;1546;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test prepending an object without __toString magic method to a block with prepend.;;d57,1542;;b1,0;;m">
				</treenode>
				<treenode node="testBlockPrependUndefined;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1564;2;1568;;;;vpos;;vvoid;;r&#xA;Description&#xA;     You should be able to prepend to undefined blocks.;;d45,1564;;b1,0;;m">
				</treenode>
				<treenode node="testBlockReset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1421;2;1425;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test resetting a block's content.;;d34,1421;;b1,0;;m">
				</treenode>
				<treenode node="testBlocks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1575;2;1580;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting block names;;d30,1575;;b1,0;;m">
				</treenode>
				<treenode node="testBlockSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1410;2;1414;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting a block's content.;;d32,1410;;b1,0;;m">
				</treenode>
				<treenode node="testBlockSetDecimal;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1470;2;1474;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting a block's content to a decimal;;d39,1470;;b1,0;;m">
				</treenode>
				<treenode node="testBlockSetNull;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1433;2;1437;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting a block's content to null;;d36,1433;;b1,0;;m">
				</treenode>
				<treenode node="testBlockSetObjectWithoutToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1460;2;1463;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting a block's content to an object without __toString magic method;;d53,1460;;b1,0;;m">
				</treenode>
				<treenode node="testBlockSetObjectWithToString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1444;2;1449;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test setting a block's content to an object with __toString magic method;;d50,1444;;b1,0;;m">
				</treenode>
				<treenode node="testCamelCasePluginGetTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;478;2;498;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that CamelCase'd plugins still find their view files.;;d50,478;;b1,0;;m">
				</treenode>
				<treenode node="testElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;715;2;731;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test element method;;d31,715;;b1,0;;m">
				</treenode>
				<treenode node="testElementCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;818;2;865;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test elementCache method;;d36,818;;b1,0;;m">
				</treenode>
				<treenode node="testElementCacheHelperNoCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;805;2;811;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test elementCacheHelperNoCache method;;d49,805;;b1,0;;m">
				</treenode>
				<treenode node="testElementCallbacks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;768;2;780;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that elements can have callbacks;;d40,768;;b1,0;;m">
				</treenode>
				<treenode node="testElementCtpFallback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;907;2;915;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that ctp is used as a fallback file extension for elements;;d42,907;;b1,0;;m">
				</treenode>
				<treenode node="testElementExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;692;2;708;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test elementExists method;;d37,692;;b1,0;;m">
				</treenode>
				<treenode node="testElementInexistent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;739;2;741;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test elementInexistent method;;d41,739;;b1,0;;m">
				</treenode>
				<treenode node="testElementInexistent2;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;749;2;751;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test elementInexistent2 method;;d42,749;;b1,0;;m">
				</treenode>
				<treenode node="testElementInexistent3;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;759;2;761;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test elementInexistent3 method;;d42,759;;b1,0;;m">
				</treenode>
				<treenode node="testElementParamsDontOverwriteHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;787;2;798;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that additional element viewVars don't get overwritten with helpers.;;d57,787;;b1,0;;m">
				</treenode>
				<treenode node="testExceptionOnOpenBlock;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1621;2;1623;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that an exception gets thrown when you leave a block open at the end of a view.;;d44,1621;;b1,0;;m">
				</treenode>
				<treenode node="testExtendElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1669;2;1680;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test extend() in an element and a view.;;d37,1669;;b1,0;;m">
				</treenode>
				<treenode node="testExtendLoop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1659;2;1662;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Make sure that extending in a loop causes an exception;;d34,1659;;b1,0;;m">
				</treenode>
				<treenode node="testExtendMissingElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1688;2;1691;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Extending an element which doesn't exist should throw a missing view exception;;d44,1688;;b1,0;;m">
				</treenode>
				<treenode node="testExtendNested;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1630;2;1640;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test nested extended views.;;d36,1630;;b1,0;;m">
				</treenode>
				<treenode node="testExtendSelf;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1648;2;1651;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Make sure that extending the current view with itself causes an exception;;d34,1648;;b1,0;;m">
				</treenode>
				<treenode node="testExtendWithElementBeforeExtend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1698;2;1707;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test extend() preceeded by an element();;d53,1698;;b1,0;;m">
				</treenode>
				<treenode node="testGetLayoutFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;546;2;567;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting layout filenames;;d41,546;;b1,0;;m">
				</treenode>
				<treenode node="testGetLayoutFileNamePlugin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;574;2;591;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getting layout filenames for plugins.;;d47,574;;b1,0;;m">
				</treenode>
				<treenode node="testGetTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;364;2;395;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getViewFileName method;;d35,364;;b1,0;;m">
				</treenode>
				<treenode node="testGetViewFileNames;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;505;2;539;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getViewFileName method;;d40,505;;b1,0;;m">
				</treenode>
				<treenode node="testGetViewFileNameSubdirWithPluginAndViewPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1147;2;1156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render()ing a file in a subdir from a custom viewPath in a plugin.;;d66,1147;;b1,0;;m">
				</treenode>
				<treenode node="testHelperCallbackTriggering;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;950;2;1026;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test the correct triggering of helper callbacks;;d48,950;;b1,0;;m">
				</treenode>
				<treenode node="testLazyLoadHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;937;2;943;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test lazy loading helpers;;d39,937;;b1,0;;m">
				</treenode>
				<treenode node="testLoadHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;922;2;930;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test loadHelpers method;;d35,922;;b1,0;;m">
				</treenode>
				<treenode node="testMagicGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;896;2;900;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test __get allowing access to helpers.;;d32,896;;b1,0;;m">
				</treenode>
				<treenode node="testMemoryLeakInPaths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1727;2;1743;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test memory leaks that existed in _paths at one point.;;d41,1727;;b1,0;;m">
				</treenode>
				<treenode node="testMissingLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;628;2;647;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test for missing layouts;;d37,628;;b1,0;;m">
				</treenode>
				<treenode node="testMissingView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;599;2;620;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test for missing views;;d35,599;;b1,0;;m">
				</treenode>
				<treenode node="testNestedBlocks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1587;2;1598;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that blocks can be nested.;;d36,1587;;b1,0;;m">
				</treenode>
				<treenode node="testPluginGetTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;402;2;417;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getLayoutFileName method on plugin;;d41,402;;b1,0;;m">
				</treenode>
				<treenode node="testPluginPathGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;450;2;471;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that plugin/$plugin_name is only appended to the paths it should be.;;d44,450;;b1,0;;m">
				</treenode>
				<treenode node="testPluginThemedGetTemplate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;424;2;443;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getViewFileName method on plugin;;d47,424;;b1,0;;m">
				</treenode>
				<treenode node="testPropertySettingMagicGet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1714;2;1720;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that setting arbitrary properties still works.;;d47,1714;;b1,0;;m">
				</treenode>
				<treenode node="testRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1089;2;1125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render method;;d30,1089;;b1,0;;m">
				</treenode>
				<treenode node="testRenderCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1208;2;1237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test renderCache method;;d35,1208;;b1,0;;m">
				</treenode>
				<treenode node="testRenderLoadHelper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1063;2;1082;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test renderLoadHelper method;;d40,1063;;b1,0;;m">
				</treenode>
				<treenode node="testRenderStrippingNoCacheTagsOnlyCacheCheck;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1259;2;1267;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that render() will remove the cake:nocache tags when only the Cache.check is true.;;d64,1259;;b1,0;;m">
				</treenode>
				<treenode node="testRenderStrippingNoCacheTagsOnlyCacheHelper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1244;2;1252;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that render() will remove the cake:nocache tags when only the cachehelper is present.;;d65,1244;;b1,0;;m">
				</treenode>
				<treenode node="testRenderUsingViewProperty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1132;2;1139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that View::$view works;;d47,1132;;b1,0;;m">
				</treenode>
				<treenode node="testSet;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1274;2;1298;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSet method;;d27,1274;;b1,0;;m">
				</treenode>
				<treenode node="testStartBlocksTwice;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1606;2;1612;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that starting the same block twice throws an exception;;d40,1606;;b1,0;;m">
				</treenode>
				<treenode node="testUUIDGeneration;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;663;2;670;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test generation of UUIDs method;;d38,663;;b1,0;;m">
				</treenode>
				<treenode node="testViewEvent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;872;2;889;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test element events;;d33,872;;b1,0;;m">
				</treenode>
				<treenode node="testViewFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1180;2;1201;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test getViewFileName method;;d36,1180;;b1,0;;m">
				</treenode>
				<treenode node="testViewVarDefaultValue;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1766;2;1775;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that a view variable uses default value when not assigned and uses assigned value when it is;;d43,1766;;b1,0;;m">
				</treenode>
				<treenode node="testViewVarOverwritingLocalHelperVar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;1164;2;1173;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that view vars can replace the local helper variables and not overwrite the $this-&gt;Helper references;;d56,1164;;b1,0;;m">
				</treenode>
				<treenode node="testViewVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;654;2;656;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test viewVars method;;d32,654;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php;f8;309;17;309;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="WelcomeShell;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\Console\Command\WelcomeShell.php;f0;23;1;33;;;;vpos;;vShell;;c;;r&#xA;Description&#xA;     Class WelcomeShell;;d33,23;;b0,0;;m">
				<treenode node="say_hello;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\Console\Command\WelcomeShell.php;f8;30;2;32;;;;vpos;;vvoid;;r&#xA;Description&#xA;     say_hello method;;d29,30;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="WincacheEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f0;25;1;190;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     Wincache storage engine for cache;;d41,25;;b0,0;;m">
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;129;2;142;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache. This will clear every item in the cache matching the cache config prefix.&#xA;&#xA;Parameters:&#xA;    bool $check - If true, nothing will be cleared, as entries will&#xA;&#xA;Return:&#xA;   True Returns true;;d31,129;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f23;129;29;129;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;184;2;188;;;;vpos;;vbool;;r&#xA;Description&#xA;     Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.&#xA;&#xA;Parameters:&#xA;    string $group - The group to clear&#xA;&#xA;Return:&#xA;   success;;d36,184;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f28;184;34;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;107;2;109;;;;vpos;;vNew;;r&#xA;Description&#xA;     Decrements the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;&#xA;Return:&#xA;   decremented value, false otherwise;;d46,107;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f27;107;31;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f33;107;40;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;117;2;119;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d30,117;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f24;117;28;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;151;2;175;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the `group value` for each of the configured groups If the group initial value was not found, then it initializes the group accordingly.;;d26,151;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;96;2;98;;;;vpos;;vNew;;r&#xA;Description&#xA;     Increments the value of an integer cached key&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to increment&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d46,96;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f27;96;31;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f33;96;40;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;45;2;52;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the Cache Engine&#xA;&#xA;Parameters:&#xA;    array $settings - array of setting for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,45;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f22;45;31;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;80;2;87;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if;;d28,80;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f22;80;26;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f8;62;2;71;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached&#xA;    int $duration - How long to cache the data, in seconds&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d48,62;;b1,0;;mstring $key;;pmixed $value;;pint $duration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f37;62;46;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f23;62;27;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f29;62;35;62;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_compiledGroupNames;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php;f11;33;31;33;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
				</treenode>
			</treenode>
			<treenode node="WincacheEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f0;25;1;261;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     WincacheEngineTest class;;d46,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;32;2;38;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;45;2;51;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,45;;b1,0;;m">
				</treenode>
				<treenode node="testClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;183;2;191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test the clearing of cache keys;;d29,183;;b1,0;;m">
				</treenode>
				<treenode node="testDecrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;129;2;149;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecrement method;;d33,129;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;115;2;122;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCache method;;d35,115;;b1,0;;m">
				</treenode>
				<treenode node="testExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;81;2;108;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExpiry method;;d30,81;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;245;2;260;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test clearing a cache group;;d34,245;;b1,0;;m">
				</treenode>
				<treenode node="testGroupDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;226;2;238;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deleteing from a groups-enabled config is possible;;d35,226;;b1,0;;m">
				</treenode>
				<treenode node="testGroupsReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;200;2;219;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that configuring groups for stored keys return the correct values when read/written Shows that altering the group value is equivalent to deleting all keys under the same group;;d39,200;;b1,0;;m">
				</treenode>
				<treenode node="testIncrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;156;2;176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIncrement method;;d33,156;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php;f8;58;2;74;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteCache method;;d41,58;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XcacheEngine;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f0;24;1;209;;;;vpos;;vCacheEngine;;c;;r&#xA;Description&#xA;     Xcache storage engine for cache;;d39,24;;b0,0;;m">
				<treenode node="_auth;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f11;183;2;208;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Populates and reverses $_SERVER authentication values Makes necessary changes (and reverting them back) in $_SERVER&#xA;&#xA;Parameters:&#xA;    bool $reverse - Revert changes;;d44,183;;b2,0;;mbool $reverse;;p">
					<treenode node="reverse;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f26;183;34;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;132;2;140;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete all keys from the cache&#xA;&#xA;Parameters:&#xA;    bool $check - If true no deletes will occur and instead CakePHP will rely&#xA;&#xA;Return:&#xA;   True if the cache was successfully cleared, false otherwise;;d31,132;;b1,0;;mbool $check;;p">
					<treenode node="check;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f23;132;29;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="clearGroup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;169;2;171;;;;vpos;;vbool;;r&#xA;Description&#xA;     Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.&#xA;&#xA;Parameters:&#xA;    string $group - The group to clear&#xA;&#xA;Return:&#xA;   success;;d36,169;;b1,0;;mstring $group;;p">
					<treenode node="group;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f28;169;34;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="decrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;111;2;113;;;;vpos;;vNew;;r&#xA;Description&#xA;     Decrements the value of an integer cached key. If the cache key is not an integer it will be treated as 0&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to subtract&#xA;&#xA;Return:&#xA;   decremented value, false otherwise;;d46,111;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f27;111;31;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f33;111;40;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;121;2;123;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   True if the value was successfully deleted, false if it didn't exist or couldn't be removed;;d30,121;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f24;121;28;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="groups;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;149;2;160;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the `group value` for each of the configured groups If the group initial value was not found, then it initializes the group accordingly.;;d26,149;;b1,0;;m">
				</treenode>
				<treenode node="increment;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;99;2;101;;;;vpos;;vNew;;r&#xA;Description&#xA;     Increments the value of an integer cached key If the cache key is not an integer it will be treated as 0&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    int $offset - How much to increment&#xA;&#xA;Return:&#xA;   incremented value, false otherwise;;d46,99;;b1,0;;mstring $key;;pint $offset;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f27;99;31;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f33;99;40;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="init;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;45;2;57;;;;vpos;;vbool;;r&#xA;Description&#xA;     Initialize the Cache Engine&#xA;&#xA;Parameters:&#xA;    array $settings - array of setting for the engine&#xA;&#xA;Return:&#xA;   True if the engine has been successfully initialized, false if not;;d43,45;;b1,0;;marray $settings;;p">
					<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f22;45;31;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;79;2;89;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Read a key from the cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;&#xA;Return:&#xA;   The cached data, or false if the data doesn't exist, has expired, or if there was an error fetching it;;d28,79;;b1,0;;mstring $key;;p">
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f22;79;26;79;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;67;2;71;;;;vpos;;vbool;;r&#xA;Description&#xA;     Write data for key into cache&#xA;&#xA;Parameters:&#xA;    string $key - Identifier for the data&#xA;    mixed $value - Data to be cached&#xA;    int $duration - How long to cache the data, in seconds&#xA;&#xA;Return:&#xA;   True if the data was successfully cached, false on failure;;d48,67;;b1,0;;mstring $key;;pmixed $value;;pint $duration;;p">
					<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f37;67;46;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f23;67;27;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f29;67;35;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php;f8;34;17;34;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XcacheEngineTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f0;25;1;270;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     XcacheEngineTest class;;d44,25;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;32;2;40;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,32;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;47;2;53;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,47;;b1,0;;m">
				</treenode>
				<treenode node="testClearCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;146;2;156;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testClearCache method;;d34,146;;b1,0;;m">
				</treenode>
				<treenode node="testDecrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;163;2;178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDecrement method;;d33,163;;b1,0;;m">
				</treenode>
				<treenode node="testDeleteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;132;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testDeleteCache method;;d35,132;;b1,0;;m">
				</treenode>
				<treenode node="testExpiry;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;103;2;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testExpiry method;;d30,103;;b1,0;;m">
				</treenode>
				<treenode node="testGroupClear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;254;2;269;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test clearing a cache group;;d34,254;;b1,0;;m">
				</treenode>
				<treenode node="testGroupDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;235;2;247;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that deleteing from a groups-enabled config is possible;;d35,235;;b1,0;;m">
				</treenode>
				<treenode node="testGroupsReadWrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;209;2;228;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Tests that configuring groups for stored keys return the correct values when read/written Shows that altering the group value is equivalent to deleting all keys under the same group;;d39,209;;b1,0;;m">
				</treenode>
				<treenode node="testIncrement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;185;2;200;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testIncrement method;;d33,185;;b1,0;;m">
				</treenode>
				<treenode node="testReadAndWriteCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;80;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testReadAndWriteCache method;;d41,80;;b1,0;;m">
				</treenode>
				<treenode node="testSettings;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php;f8;60;2;73;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSettings method;;d32,60;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="Xml;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f0;29;1;392;;;;vpos;;v;;r&#xA;Description&#xA;     XML handling for CakePHP.;;d10,29;;b0,0;;m">
				<treenode node="_createChild;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f18;298;2;324;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper to _fromArray(). It will create childs of arrays&#xA;&#xA;Parameters:&#xA;    array $data - Array with informations to create childs;;d47,298;;b2,5;;marray $data;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f40;298;45;298;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_fromArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f18;235;2;290;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Recursive method to create childs from array&#xA;&#xA;Parameters:&#xA;    DOMDocument $dom - Handler to DOMDocument&#xA;    DOMElement $node - Handler to DOMElement (child)&#xA;    array - &amp;$data Array of data to append to the $node&#xA;    string $format - Either 'attribute' or 'tags';;d68,235;;b2,5;;mDOMDocument $dom;;pDOMElement $node;;parray;;pstring $format;;p">
					<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f52;235;57;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="dom;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f38;235;42;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="format;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f59;235;66;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="node;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f44;235;49;235;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_loadXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f18;127;2;151;;;;vpos;;vSimpleXmlElement;;r&#xA;Description&#xA;     Parse the input data and create either a SimpleXmlElement object or a DOMDocument.&#xA;&#xA;Parameters:&#xA;    string $input - The input to load&#xA;    array $options - The options to use&#xA;&#xA;Return:&#xA;   |DOMDocument;;d54,127;;b2,5;;mstring $input;;parray $options;;p">
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f36;127;42;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f44;127;52;127;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_toArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f18;355;2;390;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Recursive method to toArray&#xA;&#xA;Parameters:&#xA;    SimpleXMLElement $xml - SimpleXMLElement object&#xA;    array - &amp;$parentData Parent array with data&#xA;    string $ns - Namespace of current child&#xA;    array $namespaces - List of namespaces in XML;;d74,355;;b2,5;;mSimpleXMLElement $xml;;parray;;pstring $ns;;parray $namespaces;;p">
					<treenode node="namespaces;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f61;355;72;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="ns;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f56;355;59;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="parentData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f43;355;54;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="xml;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f36;355;40;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="build;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f15;86;2;117;;;;vpos;;vSimpleXMLElement;;r&#xA;Description&#xA;     Initialize SimpleXMLElement or DOMDocument from a given XML string, file path, URL or array.&#xA;&#xA;Parameters:&#xA;    string|array $input - XML string, a path to a file, a URL or an array&#xA;    array $options - The options to use&#xA;&#xA;Return:&#xA;   |DOMDocument SimpleXMLElement or DOMDocument;;d58,86;;b1,5;;mstring|array $input;;parray $options;;p">
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f30;86;36;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f38;86;46;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="fromArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f15;191;2;223;;;;vpos;;vSimpleXMLElement;;r&#xA;Description&#xA;     Transform an array into a SimpleXMLElement&#xA;&#xA;Parameters:&#xA;    array $input - Array with data&#xA;    array $options - The options to use&#xA;&#xA;Return:&#xA;   |DOMDocument SimpleXMLElement or DOMDocument;;d62,191;;b1,5;;marray $input;;parray $options;;p">
					<treenode node="input;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f34;191;40;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f42;191;50;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="toArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f15;333;2;344;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns this XML structure as an array.&#xA;&#xA;Parameters:&#xA;    SimpleXMLElement|DOMDocument|DOMNode $obj - SimpleXMLElement, DOMDocument or DOMNode instance&#xA;&#xA;Return:&#xA;   Array representation of the XML structure;;d38,333;;b1,5;;mSimpleXMLElement|DOMDocument|DOMNode $obj;;p">
					<treenode node="obj;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php;f32;333;36;333;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
			</treenode>
			<treenode node="XmlArticle;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f0;26;1;46;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     Article class;;d39,26;;b0,0;;m">
				<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;40;18;40;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;33;13;33;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XmlException;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php;f0;573;1;574;;;;vpos;;vCakeException;;c;;r&#xA;Description&#xA;     Exception class for Xml. This exception will be thrown from Xml when it encounters an error.;;d41,573;;b0,0;;m">
			</treenode>
			<treenode node="XmlTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f0;79;1;1216;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     XmlTest class;;d35,79;;b0,0;;m">
				<treenode node="invalidArrayDataProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f15;513;2;549;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider for fromArray() failures;;d51,513;;b1,5;;m">
				</treenode>
				<treenode node="invalidDataProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f15;174;2;181;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider function for testBuildInvalidData;;d46,174;;b1,5;;m">
				</treenode>
				<treenode node="invalidToArrayDataProvider;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f15;1114;2;1119;;;;vpos;;varray;;r&#xA;Description&#xA;     data provider for toArray() failures;;d53,1114;;b1,5;;m">
				</treenode>
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;101;2;105;;;;vpos;;vvoid;;r&#xA;Description&#xA;     setUp method;;d25,101;;b1,0;;m">
				</treenode>
				<treenode node="tearDown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;112;2;115;;;;vpos;;vvoid;;r&#xA;Description&#xA;     tearDown method;;d28,112;;b1,0;;m">
				</treenode>
				<treenode node="testAmpInText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;1183;2;1192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test ampersand in text elements.;;d33,1183;;b1,0;;m">
				</treenode>
				<treenode node="testBuild;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;122;2;167;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuild method;;d29,122;;b1,0;;m">
				</treenode>
				<treenode node="testBuildEmptyTag;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;210;2;217;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test build with a single empty tag;;d37,210;;b1,0;;m">
				</treenode>
				<treenode node="testBuildInvalidData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;190;2;192;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testBuildInvalidData;;d46,190;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f38;190;44;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testBuildInvalidDataSimpleXml;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;200;2;203;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that building SimpleXmlElement with invalid XML causes the right exception.;;d49,200;;b1,0;;m">
				</treenode>
				<treenode node="testCdata;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;1101;2;1107;;;;vpos;;vvoid;;r&#xA;Description&#xA;     test that CDATA blocks don't get screwed up by SimpleXml;;d29,1101;;b1,0;;m">
				</treenode>
				<treenode node="testFromArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;224;2;388;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFromArray method;;d33,224;;b1,0;;m">
				</treenode>
				<treenode node="testFromArrayFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;557;2;564;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFromArrayFail method;;d43,557;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f35;557;41;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testFromArrayNonSequentialKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;395;2;425;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test non-sequential keys in list types.;;d50,395;;b1,0;;m">
				</treenode>
				<treenode node="testFromArrayPretty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;432;2;506;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testFromArrayPretty method;;d39,432;;b1,0;;m">
				</treenode>
				<treenode node="testFromArrayUnterminatedError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;571;2;599;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that there are not unterminated errors when building xml;;d50,571;;b1,0;;m">
				</treenode>
				<treenode node="testNamespace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;984;2;1094;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testNamespace;;d33,984;;b1,0;;m">
				</treenode>
				<treenode node="testNoEntityLoading;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;1199;2;1214;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that entity loading is disabled by default.;;d39,1199;;b1,0;;m">
				</treenode>
				<treenode node="testRss;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;768;2;836;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRss;;d27,768;;b1,0;;m">
				</treenode>
				<treenode node="testSoap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;928;2;977;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testSoap;;d28,928;;b1,0;;m">
				</treenode>
				<treenode node="testToArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;606;2;761;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToArray method;;d31,606;;b1,0;;m">
				</treenode>
				<treenode node="testToArrayFail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;1128;2;1130;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testToArrayFail method;;d41,1128;;b1,0;;mvalue;;p">
					<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f33;1128;39;1128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="testWithModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;1137;2;1176;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testWithModel method;;d33,1137;;b1,0;;m">
				</treenode>
				<treenode node="testXmlRpc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;843;2;921;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testXmlRpc;;d30,843;;b1,0;;m">
				</treenode>
				<treenode node="autoFixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;86;21;86;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;92;17;92;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XmlUser;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f0;53;1;72;;;;vpos;;vCakeTestModel;;c;;r&#xA;Description&#xA;     User class;;d36,53;;b0,0;;m">
				<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;67;16;67;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php;f8;60;13;60;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XmlView;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f0;53;1;140;;;;vpos;;vView;;c;;r&#xA;Description&#xA;     A view class that is used for creating XML responses.;;d27,53;;b0,0;;m">
				<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f8;67;2;73;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    Controller $controller - Controller instance;;d60,67;;b1,0;;mController $controller;;p">
					<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f40;67;51;67;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="_serialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f11;114;2;138;;;;vpos;;vstring;;r&#xA;Description&#xA;     Serialize view vars.&#xA;&#xA;Parameters:&#xA;    array $serialize - The viewVars that need to be serialized&#xA;&#xA;Return:&#xA;   The serialized data;;d43,114;;b2,0;;marray $serialize;;p">
					<treenode node="serialize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f31;114;41;114;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="loadHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f8;80;2;85;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Skip loading helpers if this is a _serialize based view.;;d31,80;;b1,0;;m">
				</treenode>
				<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f8;99;2;106;;;;vpos;;vstring;;r&#xA;Description&#xA;     Render a XML view.&#xA;&#xA;Parameters:&#xA;    string $view - The view being rendered&#xA;    string $layout - The layout being rendered&#xA;&#xA;Return:&#xA;   The rendered view;;d54,99;;b1,0;;mstring $view;;pstring $layout;;p">
					<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f38;99;45;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
					<treenode node="view;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f24;99;29;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
					</treenode>
				</treenode>
				<treenode node="subDir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php;f8;60;15;60;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="XmlViewTest;PHP:Class Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php;f0;28;1;195;;;;vpos;;vCakeTestCase;;c;;r&#xA;Description&#xA;     XmlViewTest;;d39,28;;b0,0;;m">
				<treenode node="setUp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php;f8;30;2;33;;;;vpos;;v;;r;;d25,30;;b1,0;;m">
				</treenode>
				<treenode node="testRenderSerializeNoHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php;f8;84;2;96;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test that rendering with _serialize does not load helpers;;d48,84;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithoutView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php;f8;40;2;77;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRenderWithoutView method;;d41,40;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithoutViewMultiple;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php;f8;103;2;125;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render with an array in _serialize;;d49,103;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithoutViewMultipleAndAlias;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php;f8;132;2;154;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Test render with an array in _serialize and alias;;d57,132;;b1,0;;m">
				</treenode>
				<treenode node="testRenderWithView;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php;f8;161;2;193;;;;vpos;;vvoid;;r&#xA;Description&#xA;     testRenderWithView method;;d38,161;;b1,0;;m">
				</treenode>
			</treenode>
			<treenode node="__;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;580;2;589;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns a translated string if one is found;s Otherwise, the submitted message.&#xA;&#xA;Parameters:&#xA;    string $singular - Text to translate&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   translated string;;d38,580;;b0,0;;mstring $singular;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f24;580;29;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f13;580;22;580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__c;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;771;2;779;;;;vpos;;vtranslated;;r&#xA;Description&#xA;     The category argument allows a specific category of the locale settings to be used for fetching a message. Valid categories are: LC_CTYPE, LC_NUMERIC, LC_TIME, LC_COLLATE, LC_MONETARY, LC_MESSAGES and LC_ALL.&#xA;&#xA;Parameters:&#xA;    string $msg - String to translate&#xA;    int $category - Category&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   string;;d45,771;;b0,0;;mstring $msg;;pint $category;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f31;771;36;771;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f20;771;29;771;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f14;771;18;771;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__call;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;190;2;192;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;820;2;827;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Provide non fatal errors on missing method calls.&#xA;&#xA;Parameters:&#xA;    string $method - Method to invoke&#xA;    array $params - Array of params for the method;;d42,190;;b1,0;;mstring $method;;parray $params;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f24;190;31;190;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f24;820;31;820;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f33;190;40;190;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f33;820;40;820;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__construct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;332;2;355;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;172;2;181;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;83;2;86;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;697;2;774;;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;77;2;97;;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f8;35;2;36;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;68;2;73;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;45;2;50;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;317;2;342;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;75;2;82;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;184;2;202;;;;vpos;;v;;r&#xA;Description&#xA;     Constructor&#xA;&#xA;Parameters:&#xA;    Controller $controller - A controller object to pull View::_passedVars from;;d60,332;;b1,0;;mController $controller;;p">
				<treenode node="collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f49;75;60;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f29;83;36;83;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f40;332;51;332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="ds;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f57;697;60;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f29;697;32;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f29;77;37;77;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f29;317;37;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f46;317;55;317;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f41;172;50;172;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f62;75;71;75;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="stderr;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f45;184;52;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="stdin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f61;184;67;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="stdout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f29;184;36;184;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;697;48;697;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f34;172;39;172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__d;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;630;2;638;;;;vpos;;vtranslated;;r&#xA;Description&#xA;     Allows you to override the current domain for a single message lookup.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $msg - String to translate&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   string;;d43,630;;b0,0;;mstring $domain;;pstring $msg;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f29;630;34;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f14;630;21;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f23;630;27;630;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__dc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;695;2;703;;;;vpos;;vtranslated;;r&#xA;Description&#xA;     Allows you to override the current domain for a single message lookup. It also allows you to specify a category.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $msg - Message to translate&#xA;    int $category - Category&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   string;;d55,695;;b0,0;;mstring $domain;;pstring $msg;;pint $category;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f41;695;46;695;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f30;695;39;695;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f15;695;22;695;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f24;695;28;695;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__dcn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;737;2;745;;;;vpos;;vplural;;r&#xA;Description&#xA;     Allows you to override the current domain for a single plural message lookup. It also allows you to specify a category. Returns correct plural form of message identified by $singular and $plural for count $count from domain $domain.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $singular - Singular string to translate&#xA;    string $plural - Plural&#xA;    int $count - Count&#xA;    int $category - Category&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   form of translated string;;d78,737;;b0,0;;mstring $domain;;pstring $singular;;pstring $plural;;pint $count;;pint $category;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f64;737;69;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f53;737;62;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f45;737;51;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f16;737;23;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f36;737;43;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f25;737;34;737;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__destruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;427;2;434;;;;vpos;;v;;r&#xA;Description&#xA;     Closes the current datasource.;;d30,427;;b1,0;;m">
			</treenode>
			<treenode node="__dn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;657;2;665;;;;vpos;;vplural;;r&#xA;Description&#xA;     Allows you to override the current domain for a single plural message lookup. Returns correct plural form of message identified by $singular and $plural for count $count from domain $domain.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $singular - Singular string to translate&#xA;    string $plural - Plural&#xA;    int $count - Count&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   form of translated string;;d66,657;;b0,0;;mstring $domain;;pstring $singular;;pstring $plural;;pint $count;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f52;657;57;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f44;657;50;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f15;657;22;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f35;657;42;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f24;657;33;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__dx;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;846;2;854;;;;vpos;;vtranslated;;r&#xA;Description&#xA;     Allows you to override the current domain for a single message lookup.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $context - Context of the text&#xA;    string $msg - String to translate&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   string;;d54,846;;b0,0;;mstring $domain;;pstring $context;;pstring $msg;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f40;846;45;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f24;846;32;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f15;846;22;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f34;846;38;846;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__dxc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;913;2;921;;;;vpos;;vtranslated;;r&#xA;Description&#xA;     Allows you to override the current domain for a single message lookup. It also allows you to specify a category.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $context - Context of the text&#xA;    string $msg - Message to translate&#xA;    int $category - Category&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   string;;d66,913;;b0,0;;mstring $domain;;pstring $context;;pstring $msg;;pint $category;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f52;913;57;913;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f41;913;50;913;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f25;913;33;913;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f16;913;23;913;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f35;913;39;913;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__dxcn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;956;2;964;;;;vpos;;vplural;;r&#xA;Description&#xA;     Allows you to override the current domain for a single plural message lookup. It also allows you to specify a category. Returns correct plural form of message identified by $singular and $plural for count $count from domain $domain.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $context - Context of the text&#xA;    string $singular - Singular string to translate&#xA;    string $plural - Plural&#xA;    int $count - Count&#xA;    int $category - Category&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   form of translated string;;d89,956;;b0,0;;mstring $domain;;pstring $context;;pstring $singular;;pstring $plural;;pint $count;;pint $category;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f75;956;80;956;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f64;956;73;956;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f26;956;34;956;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f56;956;62;956;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f17;956;24;956;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f47;956;54;956;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f36;956;45;956;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__dxn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;874;2;882;;;;vpos;;vplural;;r&#xA;Description&#xA;     Allows you to override the current domain for a single plural message lookup. Returns correct plural form of message identified by $singular and $plural for count $count from domain $domain.&#xA;&#xA;Parameters:&#xA;    string $domain - Domain&#xA;    string $context - Context of the text&#xA;    string $singular - Singular string to translate&#xA;    string $plural - Plural&#xA;    int $count - Count&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   form of translated string;;d77,874;;b0,0;;mstring $domain;;pstring $context;;pstring $singular;;pstring $plural;;pint $count;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f63;874;68;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f25;874;33;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f55;874;61;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="domain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f16;874;23;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f46;874;53;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f35;874;44;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;833;2;852;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;201;2;220;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;904;2;921;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;389;2;409;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;90;2;98;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;489;2;499;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Magic accessor for helpers. Provides access to attributes that were deprecated.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the attribute to get;;d30,833;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f23;833;28;833;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f23;201;28;201;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f23;904;28;904;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f23;389;28;389;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f23;90;28;90;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f23;489;28;489;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__isset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;876;2;885;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;835;2;896;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;351;2;380;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;266;2;275;;;;vpos;;vbool;;r&#xA;Description&#xA;     Magic isset check for deprecated attributes.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the attribute to check;;d32,876;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f25;876;30;876;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f25;835;30;835;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f25;351;30;351;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f25;266;30;266;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__n;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;606;2;615;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns correct plural form of message identified by $singular and $plural for count $count. Some languages have more than one form for plural messages dependent on the count.&#xA;&#xA;Parameters:&#xA;    string $singular - Singular text to translate&#xA;    string $plural - Plural text&#xA;    int $count - Count&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   plural form of translated string;;d56,606;;b0,0;;mstring $singular;;pstring $plural;;pint $count;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f42;606;47;606;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f34;606;40;606;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f25;606;32;606;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f14;606;23;606;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;861;2;868;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;230;2;243;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;418;2;437;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Magic accessor for deprecated attributes.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the attribute to set&#xA;    mixed $value - Value of the attribute to set;;d38,861;;b1,0;;mstring $name;;pmixed $value;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f23;861;28;861;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f23;230;28;230;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f23;418;28;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f30;861;36;861;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f30;230;36;230;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f30;418;36;418;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__x;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;794;2;803;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns a translated string if one is found;s Otherwise, the submitted message.&#xA;&#xA;Parameters:&#xA;    string $context - Context of the text&#xA;    string $singular - Text to translate&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   translated string;;d49,794;;b0,0;;mstring $context;;pstring $singular;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f35;794;40;794;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f14;794;22;794;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f24;794;33;794;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__xc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;991;2;999;;;;vpos;;vtranslated;;r&#xA;Description&#xA;     The category argument allows a specific category of the locale settings to be used for fetching a message. Valid categories are: LC_CTYPE, LC_NUMERIC, LC_TIME, LC_COLLATE, LC_MONETARY, LC_MESSAGES and LC_ALL.&#xA;&#xA;Parameters:&#xA;    string $context - Context of the text&#xA;    string $msg - String to translate&#xA;    int $category - Category&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   string;;d56,991;;b0,0;;mstring $context;;pstring $msg;;pint $category;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f42;991;47;991;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="category;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f31;991;40;991;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f15;991;23;991;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f25;991;29;991;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__xn;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;821;2;830;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns correct plural form of message identified by $singular and $plural for count $count. Some languages have more than one form for plural messages dependent on the count.&#xA;&#xA;Parameters:&#xA;    string $context - Context of the text&#xA;    string $singular - Singular text to translate&#xA;    string $plural - Plural text&#xA;    int $count - Count&#xA;    mixed $args - Array with arguments or multiple arguments in function&#xA;&#xA;Return:&#xA;   plural form of translated string;;d67,821;;b0,0;;mstring $context;;pstring $singular;;pstring $plural;;pint $count;;pmixed $args;;p">
				<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f53;821;58;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="context;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f15;821;23;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f45;821;51;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plural;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f36;821;43;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="singular;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f25;821;34;821;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_addToWhitelist;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f11;227;2;237;;;;vpos;;vvoid;;r&#xA;Description&#xA;     If $model's whitelist property is non-empty, $field will be added to it. Note: this method should *only* be used in beforeValidate or beforeSave to ensure that it only modifies the whitelist for the current save operation. Also make sure you explicitly set the value of the field which you are allowing.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    string $field - Field to be added to $model's whitelist;;d58,227;;b2,0;;mModel $model;;pstring $field;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f50;227;56;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f42;227;48;227;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_addToWhiteList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;2605;2;2622;;;;vpos;;varray;;r&#xA;Description&#xA;     Helper method for saveAll() and friends, to add foreign key to fieldlist&#xA;&#xA;Parameters:&#xA;    string $key - fieldname to be added to list&#xA;    array $options - Options list&#xA;&#xA;Return:&#xA;   options;;d52,2605;;b2,0;;mstring $key;;parray $options;;p">
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;2605;40;2605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;2605;50;2605;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_afterScaffoldSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;1181;2;1183;;;;vpos;;vbool;;r&#xA;Description&#xA;     Alias to afterScaffoldSave()&#xA;&#xA;Parameters:&#xA;    string $method - Method name;;d48,1181;;b2,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f39;1181;46;1181;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_afterScaffoldSaveError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;1204;2;1206;;;;vpos;;vbool;;r&#xA;Description&#xA;     Alias to afterScaffoldSaveError()&#xA;&#xA;Parameters:&#xA;    string $method - Method name;;d53,1204;;b2,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f44;1204;51;1204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_arrayDiffAssoc;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f11;541;2;566;;;;vpos;;varray;;r&#xA;Description&#xA;     Extended array_diff_assoc noticing change from/to NULL values.&#xA;&#xA;Parameters:&#xA;    array $array1 - Base array&#xA;    array $array2 - Corresponding array checked for equality&#xA;&#xA;Return:&#xA;   Difference as array with array(keys =&gt; values) from input array;;d54,541;;b2,0;;marray $array1;;parray $array2;;p">
				<treenode node="array1;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f36;541;43;541;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="array2;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f45;541;52;541;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_beforeScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;1158;2;1160;;;;vpos;;vbool;;r&#xA;Description&#xA;     Alias to beforeScaffold()&#xA;&#xA;Parameters:&#xA;    string $method - Method name;;d45,1158;;b2,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f36;1158;43;1158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_cacheDescription;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f11;295;2;313;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Cache the DataSource description&#xA;&#xA;Parameters:&#xA;    string $object - The name of the object (model) to cache&#xA;    mixed $data - The description of the model, usually a string or array;;d61,295;;b2,0;;mstring $object;;pmixed $data;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f47;295;52;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f38;295;45;295;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_checkUnitTest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;773;2;793;;;;vpos;;vbool;;r&#xA;Description&#xA;     Action to create a Unit Test&#xA;&#xA;Return:&#xA;   Success;;d37,773;;b2,0;;m">
			</treenode>
			<treenode node="_clean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;920;2;945;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Removes harmful content from output;;d29,920;;b2,0;;m">
			</treenode>
			<treenode node="_clearCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3841;2;3863;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Clears cache for this model.&#xA;&#xA;Parameters:&#xA;    string $type - If null this deletes cached views if Cache&#xA;&#xA;Return:&#xA;   True on delete, null otherwise;;d46,3841;;b2,0;;mstring $type;;p">
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f32;3841;37;3841;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_collectForeignKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;2866;2;2876;;;;vpos;;varray;;r&#xA;Description&#xA;     Collects foreign keys from associations.&#xA;&#xA;Parameters:&#xA;    string $type - Association type;;d61,2866;;b2,0;;mstring $type;;p">
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f40;2866;45;2866;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_columns;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f11;602;2;637;;;;vpos;;varray;;r&#xA;Description&#xA;     Formats Schema columns from Model Object.&#xA;&#xA;Parameters:&#xA;    array - &amp;$Obj model object&#xA;&#xA;Return:&#xA;   Formatted columns;;d36,602;;b2,0;;marray;;p">
				<treenode node="Obj;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f30;602;34;602;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_compareIndexes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f11;661;2;703;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Compare two schema indexes.&#xA;&#xA;Parameters:&#xA;    array $new - New indexes&#xA;    array $old - Old indexes&#xA;&#xA;Return:&#xA;   False on failure or array of indexes to add and drop;;d48,661;;b2,0;;marray $new;;parray $old;;p">
				<treenode node="new;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f36;661;40;661;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="old;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f42;661;46;661;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_compareTableParameters;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f11;646;2;652;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Compare two schema files table Parameters.&#xA;&#xA;Parameters:&#xA;    array $new - New indexes&#xA;    array $old - Old indexes&#xA;&#xA;Return:&#xA;   False on failure, or an array of parameters to add &amp; drop;;d56,646;;b2,0;;marray $new;;parray $old;;p">
				<treenode node="new;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f44;646;48;646;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="old;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f50;646;54;646;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_confirm;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;513;2;520;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a string to be used as onclick handler for confirm dialogs.&#xA;&#xA;Parameters:&#xA;    string $message - Message to be displayed&#xA;    string $okCode - Code to be executed after user chose 'OK'&#xA;    string $cancelCode - Code to be executed after user chose 'Cancel'&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   onclick JS code;;d86,513;;b2,0;;mstring $message;;pstring $okCode;;pstring $cancelCode;;parray $options;;p">
				<treenode node="cancelCode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f48;513;59;513;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f29;513;37;513;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="okCode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f39;513;46;513;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f66;513;74;513;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_constructLinkedModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1065;2;1086;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Protected helper method to create associated models of a given class.&#xA;&#xA;Parameters:&#xA;    string $assoc - Association name&#xA;    string $className - Class name&#xA;    string $plugin - name of the plugin where $className is located;;d85,1065;;b2,0;;mstring $assoc;;pstring $className;;pstring $plugin;;p">
				<treenode node="assoc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;1065;48;1065;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f50;1065;60;1065;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f69;1065;76;1065;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_controllerName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;824;2;826;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the proper controller plural name for the specified controller class name&#xA;&#xA;Parameters:&#xA;    string $name - Controller class name&#xA;&#xA;Return:&#xA;   Controller plural name;;d43,824;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f36;824;41;824;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_controllerPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;814;2;816;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the proper controller path for the specified controller class name&#xA;&#xA;Parameters:&#xA;    string $name - Controller class name&#xA;&#xA;Return:&#xA;   Path to controller;;d43,814;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f36;814;41;814;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_createLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1015;2;1050;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Create a set of associations.;;d35,1015;;b2,0;;m">
			</treenode>
			<treenode node="_deleteDependent;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;2730;2;2776;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Cascades model deletes through associated hasMany and hasOne child records.&#xA;&#xA;Parameters:&#xA;    string $id - ID of record that was deleted&#xA;    bool $cascade - Set to true to delete records that depend on this record;;d52,2730;;b2,0;;mstring $id;;pbool $cascade;;p">
				<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;2730;50;2730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f37;2730;40;2730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_deleteLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;2784;2;2801;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Cascades model deletes through HABTM join keys.&#xA;&#xA;Parameters:&#xA;    string $id - ID of record that was deleted;;d38,2784;;b2,0;;mstring $id;;p">
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f33;2784;36;2784;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_displayHelp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;458;2;467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Display the help in the correct format&#xA;&#xA;Parameters:&#xA;    string $command - The command to get help for;;d43,458;;b2,0;;mstring $command;;p">
				<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f33;458;41;458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_doSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1784;2;1969;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Saves model data (based on white-list, if supplied) to the database. By default, validation occurs before save.&#xA;&#xA;Parameters:&#xA;    array $data - Data to save&#xA;    array $options - can have following keys:&#xA;&#xA;Return:&#xA;   On success Model::$data if its not empty or true, false on failure;;d62,1784;;b2,0;;marray $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f28;1784;33;1784;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;1784;50;1784;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_elementCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;1172;2;1194;;;;vpos;;vstring;;r&#xA;Description&#xA;     Checks if an element is cached and returns the cached data if present&#xA;&#xA;Parameters:&#xA;    string $name - Element name&#xA;    string $data - Data&#xA;    array $options - Element options&#xA;&#xA;Return:&#xA;   |null;;d58,1172;;b2,0;;mstring $name;;pstring $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f41;1172;46;1172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f34;1172;39;1172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f48;1172;56;1172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_encodeUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;348;2;354;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encodes a URL for use in HTML attributes.&#xA;&#xA;Parameters:&#xA;    string $url - The URL to encode&#xA;&#xA;Return:&#xA;   The URL encoded for both URL &amp; HTML contexts;;d37,348;;b2,0;;mstring $url;;p">
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f31;348;35;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_evaluate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;955;2;964;;;;vpos;;vstring;;r&#xA;Description&#xA;     Sandbox method to evaluate a template / view script in.&#xA;&#xA;Parameters:&#xA;    string $viewFile - Filename of the view&#xA;    array $dataForView - Data to include in rendered view&#xA;&#xA;Return:&#xA;   Rendered output;;d55,955;;b2,0;;mstring $viewFile;;parray $dataForView;;p">
				<treenode node="dataForView;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f41;955;53;955;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f30;955;39;955;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_filterResults;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3332;2;3337;;;;vpos;;varray;;r&#xA;Description&#xA;     Passes query results through model and behavior afterFind() methods.&#xA;&#xA;Parameters:&#xA;    array $results - Results to filter&#xA;    bool $primary - If this is the primary model results (results from model where the find operation was performed)&#xA;&#xA;Return:&#xA;   Set of filtered results;;d62,3332;;b2,0;;marray $results;;pbool $primary;;p">
				<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f45;3332;53;3332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f35;3332;43;3332;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_findAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3095;2;3101;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles the before/after filter logic for find('all') operations. Only called by Model::find().&#xA;&#xA;Parameters:&#xA;    string $state - Either &quot;before&quot; or &quot;after&quot;&#xA;    array $query - Query&#xA;    array $results - Results;;d65,3095;;b2,0;;mstring $state;;parray $query;;parray $results;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f37;3095;43;3095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f45;3095;53;3095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f29;3095;35;3095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_findCount;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3134;2;3175;;;;vpos;;vint;;r&#xA;Description&#xA;     Handles the before/after filter logic for find('count') operations. Only called by Model::find().&#xA;&#xA;Parameters:&#xA;    string $state - Either &quot;before&quot; or &quot;after&quot;&#xA;    array $query - Query&#xA;    array $results - Results&#xA;&#xA;Return:&#xA;   The number of records found, or false;;d67,3134;;b2,0;;mstring $state;;parray $query;;parray $results;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f39;3134;45;3134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f47;3134;55;3134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;3134;37;3134;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_findFirst;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3112;2;3123;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles the before/after filter logic for find('first') operations. Only called by Model::find().&#xA;&#xA;Parameters:&#xA;    string $state - Either &quot;before&quot; or &quot;after&quot;&#xA;    array $query - Query&#xA;    array $results - Results;;d67,3112;;b2,0;;mstring $state;;parray $query;;parray $results;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f39;3112;45;3112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f47;3112;55;3112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;3112;37;3112;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_findList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3186;2;3235;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles the before/after filter logic for find('list') operations. Only called by Model::find().&#xA;&#xA;Parameters:&#xA;    string $state - Either &quot;before&quot; or &quot;after&quot;&#xA;    array $query - Query&#xA;    array $results - Results&#xA;&#xA;Return:&#xA;   Key/value pairs of primary keys/display field values of all records found;;d66,3186;;b2,0;;mstring $state;;parray $query;;parray $results;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f38;3186;44;3186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f46;3186;54;3186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f30;3186;36;3186;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_findNeighbors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3246;2;3297;;;;vpos;;varray;;r&#xA;Description&#xA;     Detects the previous field's value, then uses logic to find the 'wrapping' rows and return them.&#xA;&#xA;Parameters:&#xA;    string $state - Either &quot;before&quot; or &quot;after&quot;&#xA;    array $query - Query&#xA;    array $results - Results;;d71,3246;;b2,0;;mstring $state;;parray $query;;parray $results;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f43;3246;49;3246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f51;3246;59;3246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f35;3246;41;3246;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_findThreaded;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3308;2;3322;;;;vpos;;varray;;r&#xA;Description&#xA;     In the event of ambiguous results returned (multiple top level results, with different parent_ids) top level results with different parent_ids to the first result will be dropped&#xA;&#xA;Parameters:&#xA;    string $state - Either &quot;before&quot; or &quot;after&quot;&#xA;    array $query - Query&#xA;    array $results - Results&#xA;&#xA;Return:&#xA;   Threaded results;;d70,3308;;b2,0;;mstring $state;;parray $query;;parray $results;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;3308;48;3308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f50;3308;58;3308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="state;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f34;3308;40;3308;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_formatAttribute;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;486;2;502;;;;vpos;;vstring;;r&#xA;Description&#xA;     Formats an individual attribute, and returns the string value of the composed attribute. Works with minimized attributes that have the same value as their name such as 'disabled' and 'checked'&#xA;&#xA;Parameters:&#xA;    string $key - The name of the attribute to create&#xA;    string $value - The value of the attribute to create&#xA;    bool $escape - Define if the value must be escaped&#xA;&#xA;Return:&#xA;   The composed attribute;;d67,486;;b2,0;;mstring $key;;pstring $value;;pbool $escape;;p">
				<treenode node="escape;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f51;486;58;486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f37;486;41;486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f43;486;49;486;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_generateAssociation;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1095;2;1144;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Build an array-based association from string.&#xA;&#xA;Parameters:&#xA;    string $type - 'belongsTo', 'hasOne', 'hasMany', 'hasAndBelongsToMany'&#xA;    string $assocKey - Association key;;d59,1095;;b2,0;;mstring $type;;pstring $assocKey;;p">
				<treenode node="assocKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f48;1095;57;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f41;1095;46;1095;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_getAcoKeys;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f11;158;2;160;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the keys used in an ACO&#xA;&#xA;Parameters:&#xA;    array $keys - Permission model info&#xA;&#xA;Return:&#xA;   ACO keys;;d39,158;;b2,0;;marray $keys;;p">
				<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f32;158;37;158;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_getElementFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;1098;2;1111;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Finds an element filename, returns false on failure.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the element to find&#xA;&#xA;Return:&#xA;   Either a string to the element filename or false when one can't be found;;d47,1098;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f40;1098;45;1098;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_getExtensions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;1084;2;1090;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the extensions that view files can use.&#xA;&#xA;Return:&#xA;   Array of extensions view files use;;d37,1084;;b2,0;;m">
			</treenode>
			<treenode node="_getInput;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;547;2;570;;;;vpos;;vEither;;r&#xA;Description&#xA;     Prompts the user for input, and returns it.&#xA;&#xA;Parameters:&#xA;    string $prompt - Prompt text&#xA;    string|array $options - Array or string of options&#xA;    string $default - Default input value&#xA;&#xA;Return:&#xA;   the default value, or the user-provided input;;d59,547;;b2,0;;mstring $prompt;;pstring|array $options;;pstring $default;;p">
				<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f49;547;57;547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f39;547;47;547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="prompt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f30;547;37;547;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_getLayoutFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;1055;2;1077;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns layout filename for this template as a string.&#xA;&#xA;Parameters:&#xA;    string $name - The name of the layout to find&#xA;&#xA;Return:&#xA;   Filename for layout file (;;d53,1055;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f39;1055;44;1055;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_getScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;533;2;535;;;;vpos;;vScaffold;;r&#xA;Description&#xA;     Returns a scaffold object to use for dynamically scaffolded controllers.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request instance;;d55,533;;b2,0;;mCakeRequest $request;;p">
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f45;533;53;533;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_getViewFileName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;987;2;1024;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns filename of given action's template file (.ctp) as a string. CamelCased action names will be under_scored! This means that you can have LongActionNames that refer to long_action_names.ctp views.&#xA;&#xA;Parameters:&#xA;    string $name - Controller action to find template filename for&#xA;&#xA;Return:&#xA;   Template filename;;d51,987;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f37;987;42;987;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_getViewObject;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;1238;2;1247;;;;vpos;;vView;;r&#xA;Description&#xA;     Constructs the view class instance based on the controller property;;d37,1238;;b2,0;;m">
			</treenode>
			<treenode node="_initInputField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;765;2;774;;;;vpos;;varray;;r&#xA;Description&#xA;     Sets the defaults for an input tag. Will set the name, value, and id attributes for an array of html attributes.&#xA;&#xA;Parameters:&#xA;    string $field - The field name to initialize&#xA;    array $options - Array of options to use while initializing an input field&#xA;&#xA;Return:&#xA;   Array options for the form input;;d64,765;;b2,0;;mstring $field;;parray $options;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f36;765;42;765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f44;765;52;765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_isPrivateAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;510;2;525;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the request's action is marked as private, with an underscore, or if the request is attempting to directly accessing a prefixed action.&#xA;&#xA;Parameters:&#xA;    ReflectionMethod $method - The method to be invoked&#xA;    CakeRequest $request - The request to check;;d85,510;;b2,0;;mReflectionMethod $method;;pCakeRequest $request;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f54;510;61;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f75;510;83;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_isUUIDField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1977;2;1980;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check if the passed in field is a UUID field&#xA;&#xA;Parameters:&#xA;    string $field - the field to check;;d41,1977;;b2,0;;mstring $field;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f33;1977;39;1977;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_loadModels;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;250;2;258;;;;vpos;;vbool;;r&#xA;Description&#xA;     If $uses is an array load each of the models in the array;;d34,250;;b2,0;;m">
			</treenode>
			<treenode node="_mergeControllerVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;543;2;587;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Merge components, helpers, and uses vars from Controller::$_mergeParent and PluginAppController.;;d43,543;;b2,0;;m">
			</treenode>
			<treenode node="_mergeUses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;598;2;609;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Helper method for merging the $uses property together.&#xA;&#xA;Parameters:&#xA;    array $merge - The data to merge in;;d39,598;;b2,0;;marray $merge;;p">
				<treenode node="merge;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f31;598;37;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_mergeVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f11;195;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Merges this objects $property with the property in $class' definition. This classes value for the property will be merged on top of $class'&#xA;&#xA;Parameters:&#xA;    array $properties - The name of the properties to merge&#xA;    string $class - The class to merge the property with&#xA;    bool $normalize - Set to true to run the properties through Hash::normalize() before merging;;d71,195;;b2,0;;marray $properties;;pstring $class;;pbool $normalize;;p">
				<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f44;195;50;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="normalize;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f52;195;62;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="properties;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f31;195;42;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_modelKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;844;2;846;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the proper underscored model key for associations&#xA;&#xA;Parameters:&#xA;    string $name - Model class name&#xA;&#xA;Return:&#xA;   Singular model key;;d37,844;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f30;844;35;844;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_modelName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;834;2;836;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the proper model camelized name (singularized) for the specified name&#xA;&#xA;Parameters:&#xA;    string $name - Name&#xA;&#xA;Return:&#xA;   Camelized and singularized model name;;d38,834;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f31;834;36;834;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_modelNameFromKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;854;2;856;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the proper model name from a foreign key&#xA;&#xA;Parameters:&#xA;    string $key - Foreign key&#xA;&#xA;Return:&#xA;   Model name;;d44,854;;b2,0;;mstring $key;;p">
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f38;854;42;854;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_name;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;669;2;698;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the input field name for the current tag. Creates input name attributes using CakePHP's data[Model][field] formatting.&#xA;&#xA;Parameters:&#xA;    array|string $options - If an array, should be an array of attributes that $key needs to be added to&#xA;    string $field - Field name&#xA;    string $key - The name of the attribute to be set, defaults to 'name'&#xA;&#xA;Return:&#xA;   If an array was given for $options, an array with $key set will be returned;;d76,669;;b2,0;;marray|string $options;;pstring $field;;pstring $key;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f46;669;52;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f61;669;65;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f26;669;34;669;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_noPrefixTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f11;713;2;715;;;;vpos;;vstring;;r&#xA;Description&#xA;     Trim the table prefix from the full table name, and return the prefix-less table.&#xA;&#xA;Parameters:&#xA;    string $prefix - Table prefix&#xA;    string $table - Full table name&#xA;&#xA;Return:&#xA;   Prefix-less table name;;d52,713;;b2,0;;mstring $prefix;;pstring $table;;p">
				<treenode node="prefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f35;713;42;713;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f44;713;50;713;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_normalizeXmlData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1270;2;1283;;;;vpos;;varray;;r&#xA;Description&#xA;     Normalize `Xml::toArray()` to use in `Model::save()`&#xA;&#xA;Parameters:&#xA;    array $xml - XML as array;;d50,1270;;b2,0;;marray $xml;;p">
				<treenode node="xml;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f44;1270;48;1270;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_parseAttributes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;452;2;474;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a space-delimited string with items of the $options array. If a key of $options array happens to be one of those listed in `Helper::$_minimizedAttributes`&#xA;&#xA;Parameters:&#xA;    array $options - Array of options&#xA;    array $exclude - Array of options to be excluded, the options here will not be part of the return&#xA;    string $insertBefore - String to be inserted before options&#xA;    string $insertAfter - String to be inserted after options&#xA;&#xA;Return:&#xA;   Composed attributes;;d106,452;;b2,0;;marray $options;;parray $exclude;;pstring $insertBefore;;pstring $insertAfter;;p">
				<treenode node="exclude;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f47;452;55;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="insertAfter;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f85;452;97;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="insertBefore;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f64;452;77;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f37;452;45;452;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_parseBeforeRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;807;2;820;;;;vpos;;varray;;r&#xA;Description&#xA;     Parse beforeRedirect Response&#xA;&#xA;Parameters:&#xA;    mixed $response - Response from beforeRedirect callback&#xA;    string|array $url - The same value of beforeRedirect&#xA;    int $status - The same value of beforeRedirect&#xA;    bool $exit - The same value of beforeRedirect&#xA;&#xA;Return:&#xA;   Array with keys url, status and exit;;d74,807;;b2,0;;mmixed $response;;pstring|array $url;;pint $status;;pbool $exit;;p">
				<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f67;807;72;807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f41;807;50;807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f58;807;65;807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f52;807;56;807;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_paths;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;1120;2;1162;;;;vpos;;varray;;r&#xA;Description&#xA;     Return all possible paths to find view files in order&#xA;&#xA;Parameters:&#xA;    string $plugin - Optional plugin name to scan for view files&#xA;    bool $cached - Set to false to force a refresh of view paths&#xA;&#xA;Return:&#xA;   paths;;d59,1120;;b2,0;;mstring $plugin;;pbool $cached;;p">
				<treenode node="cached;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f43;1120;50;1120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f27;1120;34;1120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_pluginPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;904;2;909;;;;vpos;;vstring;;r&#xA;Description&#xA;     Find the correct path for a plugin. Scans $pluginPaths for the plugin you want.&#xA;&#xA;Parameters:&#xA;    string $pluginName - Name of the plugin you want ie&#xA;&#xA;Return:&#xA;   path path to the correct plugin;;d45,904;;b2,0;;mstring $pluginName;;p">
				<treenode node="pluginName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f32;904;43;904;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_pluralHumanName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;894;2;896;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the plural human name used in views&#xA;&#xA;Parameters:&#xA;    string $name - Controller name&#xA;&#xA;Return:&#xA;   Plural human name;;d44,894;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f37;894;42;894;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_pluralName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;874;2;876;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the plural name for views&#xA;&#xA;Parameters:&#xA;    string $name - Name to use&#xA;&#xA;Return:&#xA;   Plural name for views;;d39,874;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f32;874;37;874;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_prepareUpdateFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;2200;2;2221;;;;vpos;;varray;;r&#xA;Description&#xA;     Helper method for `Model::updateCounterCache()`. Checks the fields to be updated for&#xA;&#xA;Parameters:&#xA;    array $data - The fields of the record that will be updated&#xA;&#xA;Return:&#xA;   Returns updated foreign key values, along with an 'old' key containing the old;;d48,2200;;b2,0;;marray $data;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f41;2200;46;2200;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_readDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;3020;2;3033;;;;vpos;;varray;;r&#xA;Description&#xA;     Read from the datasource&#xA;&#xA;Parameters:&#xA;    string $type - Type of find operation (all / first / count / neighbors / list / threaded)&#xA;    array $query - Option fields (conditions / fields / joins / limit / offset / order / page / group / callbacks);;d51,3020;;b2,0;;mstring $type;;parray $query;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f43;3020;49;3020;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;3020;41;3020;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;911;2;945;;;;vpos;;vstring;;r&#xA;Description&#xA;     Renders and returns output for given view filename with its array of data. Handles parent/extended views.&#xA;&#xA;Parameters:&#xA;    string $viewFile - Filename of the view&#xA;    array $data - Data to include in rendered view&#xA;&#xA;Return:&#xA;   Rendered output;;d56,911;;b2,0;;mstring $viewFile;;parray $data;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f39;911;44;911;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f28;911;37;911;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_renderElement;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;1207;2;1229;;;;vpos;;vstring;;r&#xA;Description&#xA;     Renders an element and fires the before and afterRender callbacks for it and writes to the cache if a cache is used&#xA;&#xA;Parameters:&#xA;    string $file - Element file path&#xA;    array $data - Data to render&#xA;    array $options - Element options;;d59,1207;;b2,0;;mstring $file;;parray $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f42;1207;47;1207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f35;1207;40;1207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f49;1207;57;1207;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_requireFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f11;724;2;733;;;;vpos;;vbool;;r&#xA;Description&#xA;     Attempts to require the schema file specified.&#xA;&#xA;Parameters:&#xA;    string $path - Filesystem path to the file&#xA;    string $file - Filesystem basename of the file&#xA;&#xA;Return:&#xA;   True when a file was successfully included, false on failure;;d47,724;;b2,0;;mstring $path;;pstring $file;;p">
				<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f40;724;45;724;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f33;724;38;724;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_reset;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;910;2;913;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Resets the vars used by Helper::clean() to null;;d29,910;;b2,0;;m">
			</treenode>
			<treenode node="_saveMulti;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1990;2;2112;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Saves model hasAndBelongsToMany data to the database.&#xA;&#xA;Parameters:&#xA;    array $joined - Data to save&#xA;    int|string $id - ID of record in this model&#xA;    DataSource $db - Datasource instance;;d50,1990;;b2,0;;marray $joined;;pint|string $id;;pDataSource $db;;p">
				<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f45;1990;48;1990;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f40;1990;43;1990;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="joined;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;1990;38;1990;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_scaffoldError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;1229;2;1231;;;;vpos;;vbool;;r&#xA;Description&#xA;     Alias to scaffoldError()&#xA;&#xA;Parameters:&#xA;    string $method - Method name;;d44,1229;;b2,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f35;1229;42;1229;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_selectedArray;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;884;2;903;;;;vpos;;varray;;r&#xA;Description&#xA;     Transforms a recordset from a hasAndBelongsToMany association to a list of selected options for a multiple select element&#xA;&#xA;Parameters:&#xA;    string|array $data - Data array or model name&#xA;    string $key - Field name;;d55,884;;b2,0;;mstring|array $data;;pstring $key;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f35;884;40;884;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f42;884;46;884;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f11;172;2;181;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Allows setting of multiple properties of the object in a single line of code. Will only set properties that are part of a class declaration.&#xA;&#xA;Parameters:&#xA;    array $properties - An associative array containing properties and corresponding values;;d48,172;;b2,0;;marray $properties;;p">
				<treenode node="properties;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f25;172;36;172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_setAliasData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;1250;2;1262;;;;vpos;;varray;;r&#xA;Description&#xA;     Move values to alias&#xA;&#xA;Parameters:&#xA;    array $data - Data;;d41,1250;;b2,0;;marray $data;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f34;1250;39;1250;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_singularHumanName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;884;2;886;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates the singular human name used in views&#xA;&#xA;Parameters:&#xA;    string $name - Controller name&#xA;&#xA;Return:&#xA;   Singular human name;;d46,884;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f39;884;44;884;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_singularName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;864;2;866;;;;vpos;;vstring;;r&#xA;Description&#xA;     creates the singular name for use in views.&#xA;&#xA;Parameters:&#xA;    string $name - The plural underscored value&#xA;&#xA;Return:&#xA;   name;;d41,864;;b2,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f34;864;39;864;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_stop;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f11;143;2;145;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Stop execution of the current script. Wraps exit() making testing easier.&#xA;&#xA;Parameters:&#xA;    int|string $status - see http://php;;d39,143;;b2,0;;mint|string $status;;p">
				<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f26;143;33;143;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_useLogger;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;919;2;935;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Used to enable or disable logging stream output to stdout and stderr If you don't wish to see in your stdout or stderr everything that is logged through CakeLog, call this function with first param as false&#xA;&#xA;Parameters:&#xA;    bool $enable - whether to enable CakeLog output or not;;d47,919;;b2,0;;mbool $enable;;p">
				<treenode node="enable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f31;919;38;919;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_values;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f11;574;2;594;;;;vpos;;varray;;r&#xA;Description&#xA;     Formats Schema columns from Model Object.&#xA;&#xA;Parameters:&#xA;    array $values - Options keys(type, null, default, key, length, extra)&#xA;&#xA;Return:&#xA;   Formatted values;;d37,574;;b2,0;;marray $values;;p">
				<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f28;574;35;574;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="_welcome;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;236;2;243;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Displays a header for the shell;;d31,236;;b2,0;;m">
			</treenode>
			<treenode node="_wordWrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f18;373;2;411;;;;vpos;;vstring;;r&#xA;Description&#xA;     Unicode aware version of wordwrap as helper method.&#xA;&#xA;Parameters:&#xA;    string $text - The text to format&#xA;    int $width - The width to wrap to&#xA;    string $break - The line is broken using the optional break parameter&#xA;    bool $cut - If the cut is set to true, the string is always wrapped at the specified width&#xA;&#xA;Return:&#xA;   Formatted text;;d86,373;;b2,5;;mstring $text;;pint $width;;pstring $break;;pbool $cut;;p">
				<treenode node="break;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f57;373;63;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="cut;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f72;373;76;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f37;373;42;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f44;373;50;373;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addClass;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;784;2;791;;;;vpos;;varray;;r&#xA;Description&#xA;     Adds the given class to the element options&#xA;&#xA;Parameters:&#xA;    array $options - Array options/attributes to add a class to&#xA;    string $class - The class name being added&#xA;    string $key - the key to use for class&#xA;&#xA;Return:&#xA;   Array of options with $key set;;d77,784;;b1,0;;marray $options;;pstring $class;;pstring $key;;p">
				<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f46;784;52;784;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f61;784;65;784;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f26;784;34;784;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="addScript;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;765;2;773;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Adds a script block or other element to be inserted in $scripts_for_layout in the `&lt;head /&gt;` of a document layout&#xA;&#xA;Parameters:&#xA;    string $name - Either the key name for the script, or the script content&#xA;    string $content - The content of the script being added, optional;;d51,765;;b1,0;;mstring $name;;pstring $content;;p">
				<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f34;765;42;765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f27;765;32;765;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="after;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;146;2;147;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After callback to be implemented in subclasses.&#xA;&#xA;Parameters:&#xA;    array $event - Schema object properties;;d41,146;;b1,0;;marray $event;;p">
				<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f23;146;29;146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;204;2;205;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3801;2;3802;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After delete is called after any delete occurs on the attached model.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior;;d43,204;;b1,0;;mModel $model;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f35;204;41;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1136;2;1137;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Called after the controller action is run and rendered.;;d31,1136;;b1,0;;m">
			</treenode>
			<treenode node="afterFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;132;2;133;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3755;2;3757;;;;vpos;;vmixed;;r&#xA;Description&#xA;     After find callback. Can be used to modify any results returned by find.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    mixed $results - The results of the find operation&#xA;    bool $primary - Whether this model is being queried directly (vs&#xA;&#xA;Return:&#xA;   An array value will replace the value of $results - any other value will be ignored;;d69,132;;b1,0;;mModel $model;;pmixed $results;;pbool $primary;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f33;132;39;132;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="primary;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f51;132;59;132;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f37;3755;45;3755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="results;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f41;132;49;132;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;3755;35;3755;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;848;2;849;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After layout callback. afterLayout is called after the layout has rendered.&#xA;&#xA;Parameters:&#xA;    string $layoutFile - The layout file that was rendered;;d42,848;;b1,0;;mstring $layoutFile;;p">
				<treenode node="layoutFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f29;848;40;848;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;826;2;827;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After render callback. afterRender is called after the view file is rendered but before the layout has been rendered.&#xA;&#xA;Parameters:&#xA;    string $viewFile - The view file that was rendered;;d40,826;;b1,0;;mstring $viewFile;;p">
				<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f29;826;38;826;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterRenderFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;873;2;874;;;;vpos;;vvoid;;r&#xA;Description&#xA;     After render file callback. Called after any view fragment is rendered.&#xA;&#xA;Parameters:&#xA;    string $viewFile - The file just be rendered&#xA;    string $content - The content that was rendered;;d54,873;;b1,0;;mstring $viewFile;;pstring $content;;p">
				<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f44;873;52;873;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f33;873;42;873;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;182;2;184;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3781;2;3782;;;;vpos;;vbool;;r&#xA;Description&#xA;     afterSave is called after a model is saved.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    bool $created - True if this save created a new record&#xA;    array $options - Options passed from Model::save();;d71,182;;b1,0;;mModel $model;;pbool $created;;parray $options;;p">
				<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f41;182;49;182;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;3781;35;3781;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f33;182;39;182;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f51;182;59;182;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f37;3781;45;3781;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterScaffoldSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1169;2;1171;;;;vpos;;vbool;;r&#xA;Description&#xA;     This method should be overridden in child classes.&#xA;&#xA;Parameters:&#xA;    string $method - name of method called either edit or update&#xA;&#xA;Return:&#xA;   Success;;d44,1169;;b1,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f35;1169;42;1169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterScaffoldSaveError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1192;2;1194;;;;vpos;;vbool;;r&#xA;Description&#xA;     This method should be overridden in child classes.&#xA;&#xA;Parameters:&#xA;    string $method - name of method called either edit or update&#xA;&#xA;Return:&#xA;   Success;;d49,1192;;b1,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f40;1192;47;1192;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="afterValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;156;2;158;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3822;2;3823;;;;vpos;;vmixed;;r&#xA;Description&#xA;     afterValidate is called just after model data was validated, you can use this callback to perform any data cleanup or preparation if needed&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;&#xA;Return:&#xA;   False will stop this event from being passed to other behaviors;;d45,156;;b1,0;;mModel $model;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f37;156;43;156;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="allow;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;128;2;130;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;59;2;60;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;86;2;88;;;;vpos;;vbool;;r&#xA;Description&#xA;     No op method, allow cannot be done with PhpAcl&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d50,128;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
				<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f29;128;33;128;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f29;59;33;59;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f29;86;33;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f35;128;42;128;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f35;59;42;59;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="actions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f35;86;43;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f23;128;27;128;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f23;59;27;59;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f23;86;27;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f51;86;57;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="am;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;294;2;304;;;;vpos;;varray;;r&#xA;Description&#xA;     Merge a group of arrays&#xA;&#xA;Return:&#xA;   All array parameters merged into one;;d15,294;;b0,0;;m">
			</treenode>
			<treenode node="append;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;657;2;659;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Append to an existing or new block. Appending to a new block will create the block.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    mixed $value - The content for the block;;d46,657;;b1,0;;mstring $name;;pmixed $value;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f24;657;29;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f31;657;37;657;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="arrayTrim;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;165;2;171;;;;vpos;;varray;;r&#xA;Description&#xA;     Removes trailing spaces on all array elements (to prepare for searching)&#xA;&#xA;Parameters:&#xA;    array $array - Array to trim&#xA;&#xA;Return:&#xA;   Trimmed array;;d35,165;;b1,0;;marray $array;;p">
				<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f27;165;33;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="assetTimestamp;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;364;2;399;;;;vpos;;vstring;;r&#xA;Description&#xA;     Adds a timestamp to a file based resource based on the value of `Asset.timestamp` in Configure. If Asset.timestamp is true and debug &gt; 0, or Asset.timestamp === 'force' a timestamp will be added.&#xA;&#xA;Parameters:&#xA;    string $path - The file path to timestamp, the path must be inside WWW_ROOT&#xA;&#xA;Return:&#xA;   Path with a timestamp added, or not;;d39,364;;b1,0;;mstring $path;;p">
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f32;364;37;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="assetUrl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;309;2;340;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate URL for given asset file. Depending on options passed provides full URL with domain name. Also calls Helper::assetTimestamp() to add timestamp to local files&#xA;&#xA;Parameters:&#xA;    string|array $path - Path string or URL array&#xA;    array $options - Options array&#xA;&#xA;Return:&#xA;   Generated URL;;d53,309;;b1,0;;mstring|array $path;;parray $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f33;309;41;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f26;309;31;309;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="assign;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;683;2;685;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Set the content for a block. This will overwrite any existing content.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    mixed $value - The content for the block;;d39,683;;b1,0;;mstring $name;;pmixed $value;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f24;683;29;683;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f31;683;37;683;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="associations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3654;2;3656;;;;vpos;;varray;;r&#xA;Description&#xA;     Get associations;;d32,3654;;b1,0;;m">
			</treenode>
			<treenode node="before;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;136;2;138;;;;vpos;;vbool;;r&#xA;Description&#xA;     Before callback to be implemented in subclasses.&#xA;&#xA;Parameters:&#xA;    array $event - Schema object properties&#xA;&#xA;Return:&#xA;   Should process continue;;d42,136;;b1,0;;marray $event;;p">
				<treenode node="event;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f24;136;30;136;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeDelete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;194;2;196;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3791;2;3793;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Before delete is called before any delete occurs on the attached model, but after the model's beforeDelete is called. Returning false from a beforeDelete will abort the delete.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    bool $cascade - If true records that depend on this record will also be deleted&#xA;&#xA;Return:&#xA;   False if the operation should abort;;d61,194;;b1,0;;mModel $model;;pbool $cascade;;p">
				<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f44;194;52;194;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f30;3791;38;3791;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f36;194;42;194;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeFilter;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1095;2;1096;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Called before the controller action. You can use this method to configure and customize components or perform logic that needs to happen before each controller action.;;d32,1095;;b1,0;;m">
			</treenode>
			<treenode node="beforeFind;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;120;2;122;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3742;2;3744;;;;vpos;;vbool;;r&#xA;Description&#xA;     beforeFind can be used to cancel find operations, or modify the query that will be executed. By returning null/false you can abort a find. By returning an array you can modify/replace the query that is going to be run.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    array $query - Data used to execute this query, i&#xA;&#xA;Return:&#xA;   |array False or null will abort the operation;;d50,120;;b1,0;;mModel $model;;parray $query;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f34;120;40;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f42;120;48;120;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f28;3742;34;3742;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;837;2;838;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Before layout callback. beforeLayout is called before the layout is rendered.&#xA;&#xA;Parameters:&#xA;    string $layoutFile - The layout about to be rendered;;d43,837;;b1,0;;mstring $layoutFile;;p">
				<treenode node="layoutFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f30;837;41;837;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeRedirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;293;2;294;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1127;2;1128;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;160;2;161;;;;vpos;;vvoid;;r&#xA;Description&#xA;     beforeRedirect method;;d34,293;;b1,0;;m">
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f43;160;54;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f54;1127;59;1127;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f78;160;83;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f38;1127;45;1127;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f62;160;69;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f32;1127;36;1127;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f56;160;60;160;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeRender;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;814;2;815;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;325;2;329;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1105;2;1106;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;128;2;129;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Before render callback. beforeRender is called before the view file is rendered.&#xA;&#xA;Parameters:&#xA;    string $viewFile - The view file that is going to be rendered;;d41,814;;b1,0;;mstring $viewFile;;p">
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f41;325;52;325;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f41;128;52;128;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f30;814;39;814;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeRenderFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;860;2;861;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Before render file callback. Called before any view fragment is rendered.&#xA;&#xA;Parameters:&#xA;    string $viewFile - The file about to be rendered;;d45,860;;b1,0;;mstring $viewFile;;p">
				<treenode node="viewFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f34;860;43;860;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeSave;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;169;2;171;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3768;2;3770;;;;vpos;;vmixed;;r&#xA;Description&#xA;     beforeSave is called before a model is saved. Returning false from a beforeSave callback will abort the save operation.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   False if the operation should abort;;d62,169;;b1,0;;mModel $model;;parray $options;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f34;169;40;169;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f42;169;50;169;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f28;3768;36;3768;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeScaffold;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1146;2;1148;;;;vpos;;vbool;;r&#xA;Description&#xA;     This method should be overridden in child classes.&#xA;&#xA;Parameters:&#xA;    string $method - name of method called example index, edit, etc&#xA;&#xA;Return:&#xA;   Success;;d41,1146;;b1,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f32;1146;39;1146;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="beforeValidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;145;2;147;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3813;2;3815;;;;vpos;;vmixed;;r&#xA;Description&#xA;     beforeValidate is called before a model is validated, you can use this callback to add behavior validation rules into a models validate array. Returning false will allow you to make the validation fail.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    array $options - Options passed from Model::save()&#xA;&#xA;Return:&#xA;   False or null will abort the operation;;d66,145;;b1,0;;mModel $model;;parray $options;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f38;145;44;145;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f46;145;54;145;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f32;3813;40;3813;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="begin;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;148;2;150;;;;vpos;;vbool;;r&#xA;Description&#xA;     Begin a transaction&#xA;&#xA;Return:&#xA;   Returns true if a transaction is not in progress;;d25,148;;b1,0;;m">
			</treenode>
			<treenode node="bindModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;942;2;970;;;;vpos;;vbool;;r&#xA;Description&#xA;     Bind model associations on the fly.&#xA;&#xA;Parameters:&#xA;    array $params - Set of bindings (indexed by binding type)&#xA;    bool $reset - Set to false to make the binding permanent&#xA;&#xA;Return:&#xA;   Success;;d51,942;;b1,0;;marray $params;;pbool $reset;;p">
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;942;34;942;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;942;42;942;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="blocks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;622;2;624;;;;vpos;;varray;;r&#xA;Description&#xA;     Get the names of all the existing blocks.&#xA;&#xA;Return:&#xA;   An array containing the blocks;;d26,622;;b1,0;;m">
			</treenode>
			<treenode node="build;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;105;2;128;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;101;2;118;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Builds schema object properties.&#xA;&#xA;Parameters:&#xA;    array $data - Loaded object properties;;d30,105;;b1,0;;marray $data;;p">
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f29;101;36;101;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f23;105;28;105;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="buildQuery;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3044;2;3084;;;;vpos;;varray;;r&#xA;Description&#xA;     Builds the query array that is used by the data source to generate the query to fetch the data.&#xA;&#xA;Parameters:&#xA;    string $type - Type of find operation (all / first / count / neighbors / list / threaded)&#xA;    array $query - Option fields (conditions / fields / joins / limit / offset / order / page / group / callbacks)&#xA;&#xA;Return:&#xA;   |null Query array or null if it could not be build for some reasons;;d63,3044;;b1,0;;mstring $type;;parray $query;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f45;3044;51;3044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f28;3044;33;3044;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="cache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;424;2;472;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Reads/writes temporary data to cache files or session.&#xA;&#xA;Parameters:&#xA;    string $path - File path within /tmp to save the file&#xA;    mixed $data - The data to save to the temporary file&#xA;    mixed $expires - A valid strtotime string when the data expires&#xA;    string $target - The target of the cached data;s either 'cache' or 'public'&#xA;&#xA;Return:&#xA;   The contents of the temporary file;;d77,424;;b0,0;;mstring $path;;pmixed $data;;pmixed $expires;;pstring $target;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f23;424;28;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="expires;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f37;424;45;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f16;424;21;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="target;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f58;424;65;424;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="check;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;165;2;192;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;94;2;144;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;72;2;74;;;;vpos;;vbool;;r&#xA;Description&#xA;     Main ACL check function. Checks to see if the ARO (access request object) has access to the ACO (access control object).&#xA;&#xA;Parameters:&#xA;    string $aro - ARO&#xA;    string $aco - ACO&#xA;    string $action - Action&#xA;&#xA;Return:&#xA;   true if access is granted, false otherwise;;d50,165;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
				<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f29;165;33;165;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f29;94;33;94;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f29;72;33;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f35;165;42;165;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f35;94;42;94;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f35;72;42;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f23;165;27;165;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f23;94;27;94;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f23;72;27;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="clean;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;410;2;424;;;;vpos;;vstring;;r&#xA;Description&#xA;     Used to remove harmful tags from content. Removes a number of well known XSS attacks from content. However, is not guaranteed to remove all possibilities. Escaping content is the best way to prevent all possible attacks.&#xA;&#xA;Parameters:&#xA;    string|array $output - Either an array of strings to clean or a single string to clean&#xA;&#xA;Return:&#xA;   |array|null Cleaned content for output;;d32,410;;b1,0;;mstring|array $output;;p">
				<treenode node="output;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f23;410;30;410;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="cleanInsert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;259;2;311;;;;vpos;;vstring;;r&#xA;Description&#xA;     Cleans up a String::insert() formatted string with given $options depending on the 'clean' key in $options. The default method used is text but html is also available. The goal of this function is to replace all whitespace and unneeded markup around placeholders that did not get replaced by String::insert().&#xA;&#xA;Parameters:&#xA;    string $str - String to clean&#xA;    array $options - Options list;;d52,259;;b1,5;;mstring $str;;parray $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f42;259;50;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f36;259;40;259;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="cleanup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;104;2;108;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Clean up any initialization this behavior has done on a model. Called when a behavior is dynamically detached from a model using Model::detach().&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior;;d39,104;;b1,0;;mModel $model;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f31;104;37;104;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="clear;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1598;2;1601;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;718;2;726;;;;vpos;;vbool;;r&#xA;Description&#xA;     This function is a convenient wrapper class to create(false) and, as the name suggests, clears the id, data, and validation errors.&#xA;&#xA;Return:&#xA;   Always true upon success;;d25,1598;;b1,0;;m">
			</treenode>
			<treenode node="clearCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;488;2;544;;;;vpos;;vtrue;;r&#xA;Description&#xA;     Used to delete files in the cache directories, or clear contents of cache directories&#xA;&#xA;Parameters:&#xA;    string|array $params - As String name to be searched for deletion, if name is a directory all files in&#xA;    string $type - Directory in tmp/cache defaults to view directory&#xA;    string $ext - The file extension you are deleting&#xA;&#xA;Return:&#xA;   if files found and deleted false otherwise;;d69,488;;b0,0;;mstring|array $params;;pstring $type;;pstring $ext;;p">
				<treenode node="ext;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f54;488;58;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f21;488;28;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f37;488;42;488;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="close;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;420;2;422;;;;vpos;;vbool;;r&#xA;Description&#xA;     Closes a connection. Override in subclasses.;;d25,420;;b1,0;;m">
			</treenode>
			<treenode node="column;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;176;2;178;;;;vpos;;vstring;;r&#xA;Description&#xA;     Converts column types to basic types&#xA;&#xA;Parameters:&#xA;    string $real - Real column type (i&#xA;&#xA;Return:&#xA;   Abstract column type (i;;d31,176;;b1,0;;mstring $real;;p">
				<treenode node="real;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f24;176;29;176;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="commit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;157;2;159;;;;vpos;;vbool;;r&#xA;Description&#xA;     Commit a transaction&#xA;&#xA;Return:&#xA;   Returns true if a transaction is in progress;;d26,157;;b1,0;;m">
			</treenode>
			<treenode node="compare;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;449;2;526;;;;vpos;;varray;;r&#xA;Description&#xA;     Compares two sets of schemas.&#xA;&#xA;Parameters:&#xA;    array|object $old - Schema object or array&#xA;    array|object $new - Schema object or array&#xA;&#xA;Return:&#xA;   Tables (that are added, dropped, or changed;;d44,449;;b1,0;;marray|object $old;;parray|object $new;;p">
				<treenode node="new;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f31;449;35;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="old;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f25;449;29;449;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="config;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;43;2;54;;;;vpos;;vbool;;r&#xA;Description&#xA;     Loads configuration files. Receives a set of configuration files to load. Example:&#xA;&#xA;Return:&#xA;   Success;;d19,43;;b0,0;;m">
			</treenode>
			<treenode node="constructClasses;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;636;2;644;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Loads Model classes based on the uses property see Controller::loadModel();s for more info. Loads Components and prepares them for initialization.&#xA;&#xA;Return:&#xA;   true if models found and instance created;;d36,636;;b1,0;;m">
			</treenode>
			<treenode node="convertSlash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;1055;2;1060;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convert forward slashes to underscores and removes first and last underscores in a string&#xA;&#xA;Parameters:&#xA;    string $string - String to convert&#xA;&#xA;Return:&#xA;   with underscore remove from start and end of string;;d32,1055;;b0,0;;mstring $string;;p">
				<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f23;1055;30;1055;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="crazyMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;238;2;240;;;;vpos;;vvoid;;r&#xA;Description&#xA;     crazyMethod method&#xA;&#xA;Parameters:&#xA;    mixed $param&#xA;    mixed $paramTwo&#xA;    mixed $paramThree&#xA;    mixed $paramFour&#xA;    mixed $paramFive&#xA;    mixed $paramSix&#xA;    mixed $paramSeven;;d116,238;;b1,0;;mmixed $param;;pmixed $paramTwo;;pmixed $paramThree;;pmixed $paramFour;;pmixed $paramFive;;pmixed $paramSix;;pmixed $paramSeven;;p">
				<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f29;238;35;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramFive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f73;238;83;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramFour;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f61;238;71;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramSeven;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f96;238;107;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramSix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f85;238;94;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramThree;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f48;238;59;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramTwo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f37;238;46;238;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="create;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;190;2;192;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1567;2;1590;;;;vpos;;vbool;;r&#xA;Description&#xA;     Used to create new records. The &quot;C&quot; CRUD.&#xA;&#xA;Parameters:&#xA;    Model $Model - The Model to be created&#xA;    array $fields - An Array of fields to be saved&#xA;    array $values - An Array of values to save&#xA;&#xA;Return:&#xA;   success;;d70,190;;b1,0;;mModel $Model;;parray $fields;;parray $values;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f24;1567;29;1567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f38;190;45;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="filterKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f41;1567;51;1567;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f30;190;36;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f54;190;61;190;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="createFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;736;2;766;;;;vpos;;vbool;;r&#xA;Description&#xA;     Creates a file at given path&#xA;&#xA;Parameters:&#xA;    string $path - Where to put the file&#xA;    string $contents - Content to put in the file&#xA;&#xA;Return:&#xA;   Success;;d46,736;;b1,0;;mstring $path;;pstring $contents;;p">
				<treenode node="contents;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f35;736;44;736;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f28;736;33;736;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="debug;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;72;2;120;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prints out debug information about given variable.&#xA;&#xA;Parameters:&#xA;    mixed $var - Variable to show debug information for&#xA;    bool $showHtml - If set to true, the method prints the debug data in a browser-friendly way&#xA;    bool $showFrom - If set to true, the method prints from where the function was called;;d58,72;;b0,0;;mmixed $var;;pbool $showHtml;;pbool $showFrom;;p">
				<treenode node="showFrom;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f40;72;49;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="showHtml;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f22;72;31;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f16;72;20;72;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="deconstruct;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1292;2;1375;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Deconstructs a complex data type (array or object) into a single field value.&#xA;&#xA;Parameters:&#xA;    string $field - The name of the field to be deconstructed&#xA;    array|object $data - An array or object to be deconstructed into a field&#xA;&#xA;Return:&#xA;   The resulting data that should be assigned to a field;;d44,1292;;b1,0;;mstring $field;;parray|object $data;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f37;1292;42;1292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f29;1292;35;1292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="delete;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;232;2;234;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2670;2;2721;;;;vpos;;vbool;;r&#xA;Description&#xA;     Delete a record(s) in the datasource.&#xA;&#xA;Parameters:&#xA;    Model $Model - The model class having record(s) deleted&#xA;    mixed $conditions - The conditions to use for deleting&#xA;&#xA;Return:&#xA;   Success;;d58,232;;b1,0;;mModel $Model;;pmixed $conditions;;p">
				<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;2670;44;2670;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f38;232;49;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f24;2670;27;2670;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f30;232;36;232;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="deleteAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2812;2;2858;;;;vpos;;vbool;;r&#xA;Description&#xA;     Deletes multiple model records based on a set of conditions.&#xA;&#xA;Parameters:&#xA;    mixed $conditions - Conditions to match&#xA;    bool $cascade - Set to true to delete records that depend on this record&#xA;    bool $callbacks - Run callbacks&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d77,2812;;b1,0;;mmixed $conditions;;pbool $cascade;;pbool $callbacks;;p">
				<treenode node="callbacks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f57;2812;67;2812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="cascade;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f40;2812;48;2812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;2812;38;2812;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="deny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;140;2;142;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;70;2;71;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;99;2;101;;;;vpos;;vbool;;r&#xA;Description&#xA;     deny ARO access to ACO&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d49,140;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
				<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f28;140;32;140;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f28;70;32;70;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f28;99;32;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f34;140;41;140;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f34;70;41;70;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f34;99;41;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f22;140;26;140;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f22;70;26;70;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f22;99;26;99;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="describe;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;121;2;141;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a Model description (metadata) or null if none found.&#xA;&#xA;Parameters:&#xA;    Model|string $model - The model to describe&#xA;&#xA;Return:&#xA;   |null Array of Metadata for the $model;;d34,121;;b1,0;;mModel|string $model;;p">
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f26;121;32;121;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="disableCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;990;2;992;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Forces the user's browser not to cache the results of the current request.;;d32,990;;b1,0;;m">
			</treenode>
			<treenode node="dispatchMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f8;117;2;134;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Calls a method on this object with the given parameters. Provides an OO wrapper for `call_user_func_array`&#xA;&#xA;Parameters:&#xA;    string $method - Name of the method to call&#xA;    array $params - Parameter list to use when calling $method&#xA;&#xA;Return:&#xA;   Returns the result of the method call;;d60,117;;b1,0;;mstring $method;;parray $params;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f32;117;39;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f41;117;48;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="dispatchShell;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;377;2;385;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Dispatch a command to another Shell. Similar to Object::requestAction() but intended for running shells from other shells.&#xA;&#xA;Return:&#xA;   The return of the other shell;;d33,377;;b1,0;;m">
			</treenode>
			<treenode node="domId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;637;2;656;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Generates a DOM ID for the selected element, if one is not set. Uses the current View::entity() settings to generate a CamelCased id attribute.&#xA;&#xA;Parameters:&#xA;    array|string $options - Either an array of html attributes to add $id into, or a string&#xA;    string $id - The name of the 'id' attribute&#xA;&#xA;Return:&#xA;   If $options was an array, an array will be returned with $id set;;d52,637;;b1,0;;marray|string $options;;pstring $id;;p">
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f40;637;43;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f23;637;31;637;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="element;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;397;2;426;;;;vpos;;vstring;;r&#xA;Description&#xA;     Renders a piece of PHP with provided parameters and returns HTML, XML, or any other string.&#xA;&#xA;Parameters:&#xA;    string $name - Name of template file in the/app/View/Elements/ folder,&#xA;    array $data - Array of data to be made available to the rendered view (i&#xA;    array $options - Array of options&#xA;&#xA;Return:&#xA;   Rendered Element;;d69,397;;b1,0;;mstring $name;;parray $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f32;397;37;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f25;397;30;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f49;397;57;397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="elementExists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;436;2;438;;;;vpos;;vbool;;r&#xA;Description&#xA;     Checks if an element exists&#xA;&#xA;Parameters:&#xA;    string $name - Name of template file in the /app/View/Elements/ folder,&#xA;&#xA;Return:&#xA;   Success;;d38,436;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f31;436;36;436;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="emptyMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;162;2;164;;;;vpos;;vvoid;;r&#xA;Description&#xA;     emptyMethod method;;d31,162;;b1,0;;m">
			</treenode>
			<treenode node="enabled;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;273;2;275;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check whether the conditions for the Datasource being available are satisfied. Often used from connect() to check for support before establishing a connection.&#xA;&#xA;Return:&#xA;   Whether or not the Datasources conditions for use are met;;d27,273;;b1,0;;m">
			</treenode>
			<treenode node="end;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;706;2;708;;;;vpos;;vvoid;;r&#xA;Description&#xA;     End a capturing block. The compliment to View::start();;d23,706;;b1,0;;m">
			</treenode>
			<treenode node="entity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;594;2;596;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns the entity reference of the current context as an array of identity parts&#xA;&#xA;Return:&#xA;   An array containing the identity elements of an entity;;d26,594;;b1,0;;m">
			</treenode>
			<treenode node="env;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;320;2;408;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets an environment variable from available sources, and provides emulation for unsupported or inconsistent environment variables (i.e. DOCUMENT_ROOT on IIS, or SCRIPT_NAME in CGI mode). Also exposes some additional custom environment information.&#xA;&#xA;Parameters:&#xA;    string $key - Environment variable name&#xA;&#xA;Return:&#xA;   |bool|null Environment variable setting;;d20,320;;b0,0;;mstring $key;;p">
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f14;320;18;320;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="err;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;665;2;667;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Outputs a single or multiple error messages to stderr. If no parameters are passed outputs just a newline.&#xA;&#xA;Parameters:&#xA;    string|array $message - A string or an array of strings to output&#xA;    int $newlines - Number of newlines to append;;d53,665;;b1,0;;mstring|array $message;;pint $newlines;;p">
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f21;665;29;665;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="newlines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f38;665;47;665;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="error;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;703;2;710;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Displays a formatted error message and exits the application with status code 1&#xA;&#xA;Parameters:&#xA;    string $title - Title of the error&#xA;    string $message - An optional error message;;d48,703;;b1,0;;mstring $title;;pstring $message;;p">
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f31;703;39;703;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f23;703;29;703;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="escapeField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3513;2;3528;;;;vpos;;vstring;;r&#xA;Description&#xA;     Escapes the field name and prepends the model name. Escaping is done according to the current database driver's rules.&#xA;&#xA;Parameters:&#xA;    string $field - Field to escape (e&#xA;    string $alias - Alias for the model (e&#xA;&#xA;Return:&#xA;   The name of the escaped field for this Model (i;;d59,3513;;b1,0;;mstring $field;;pstring $alias;;p">
				<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f44;3513;50;3513;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f29;3513;35;3513;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="excerpt;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;656;2;687;;;;vpos;;vstring;;r&#xA;Description&#xA;     Extracts an excerpt from the text surrounding the phrase with a number of characters on each side determined by radius.&#xA;&#xA;Parameters:&#xA;    string $text - String to search the phrase in&#xA;    string $phrase - Phrase that will be searched for&#xA;    int $radius - The amount of characters that will be returned on each side of the founded phrase&#xA;    string $ellipsis - Ending that will be appended&#xA;&#xA;Return:&#xA;   Modified string;;d82,656;;b1,5;;mstring $text;;pstring $phrase;;pint $radius;;pstring $ellipsis;;p">
				<treenode node="ellipsis;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f63;656;72;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="phrase;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f39;656;46;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="radius;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f48;656;55;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f32;656;37;656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="exists;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2888;2;2904;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if a record with particular ID exists.&#xA;&#xA;Parameters:&#xA;    int|string $id - ID of record to check for existence&#xA;&#xA;Return:&#xA;   True if such a record exists;;d36,2888;;b1,0;;mint|string $id;;p">
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f24;2888;27;2888;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="extend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;719;2;752;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Provides view or element extension/inheritance. Views can extends a parent view and populate blocks in the parent template.&#xA;&#xA;Parameters:&#xA;    string $name - The view or element to 'extend' the current one with;;d31,719;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f24;719;29;719;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="fetch;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;696;2;698;;;;vpos;;vstring;;r&#xA;Description&#xA;     Fetch the content for a block. If a block is empty or undefined '' will be returned.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    string $default - Default text&#xA;&#xA;Return:&#xA;   default The block content or $default if the block does not exist;;d45,696;;b1,0;;mstring $name;;pstring $default;;p">
				<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f30;696;38;696;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f23;696;28;696;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="field;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;617;2;625;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1647;2;1677;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the currently-used model field of the rendering context. Strips off field suffixes such as year, month, day, hour, min, meridian when the current entity is longer than 2 elements.;;d25,617;;b1,0;;m">
				<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f30;1647;41;1647;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f23;1647;28;1647;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f50;1647;56;1647;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="fileExistsInPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;1030;2;1042;;;;vpos;;vFull;;r&#xA;Description&#xA;     Searches include path for files.&#xA;&#xA;Parameters:&#xA;    string $file - File to look for&#xA;&#xA;Return:&#xA;   path to file if exists, otherwise false;;d34,1030;;b0,0;;mstring $file;;p">
				<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f27;1030;32;1030;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="find;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2984;2;2994;;;;vpos;;varray;;r&#xA;Description&#xA;     Queries the datasource and returns a result set array.&#xA;&#xA;Parameters:&#xA;    string $type - Type of find operation (all / first / count / neighbors / list / threaded)&#xA;    array $query - Option fields (conditions / fields / joins / limit / offset / order / page / group / callbacks)&#xA;&#xA;Return:&#xA;   |null Array of records, or Null on failure;;d57,2984;;b1,0;;mstring $type;;parray $query;;p">
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f39;2984;45;2984;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f22;2984;27;2984;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="fiveParamMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;222;2;224;;;;vpos;;vvoid;;r&#xA;Description&#xA;     fiveParamMethod method&#xA;&#xA;Parameters:&#xA;    mixed $param&#xA;    mixed $paramTwo&#xA;    mixed $paramThree&#xA;    mixed $paramFour&#xA;    mixed $paramFive;;d89,222;;b1,0;;mmixed $param;;pmixed $paramTwo;;pmixed $paramThree;;pmixed $paramFour;;pmixed $paramFive;;p">
				<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f33;222;39;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramFive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f77;222;87;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramFour;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f65;222;75;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramThree;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f52;222;63;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramTwo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f41;222;50;222;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="flash;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1007;2;1014;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Shows a message to the user for $pause seconds, then redirects to $url. Uses flash.ctp as the default layout for the message. Does not work if the current debug level is higher than 0.&#xA;&#xA;Parameters:&#xA;    string $message - Message to display to the user&#xA;    string|array $url - Relative string or array-based URL to redirect to after the time expires&#xA;    int $pause - Time to show the message&#xA;    string $layout - Layout you want to use, defaults to 'flash';;d70,1007;;b1,0;;mstring $message;;pstring|array $url;;pint $pause;;pstring $layout;;p">
				<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f51;1007;58;1007;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f23;1007;31;1007;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="pause;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f39;1007;45;1007;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f33;1007;37;1007;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="fourParamMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;208;2;210;;;;vpos;;vvoid;;r&#xA;Description&#xA;     fourParamMethod method&#xA;&#xA;Parameters:&#xA;    mixed $param&#xA;    mixed $paramTwo&#xA;    mixed $paramThree&#xA;    mixed $paramFour;;d77,208;;b1,0;;mmixed $param;;pmixed $paramTwo;;pmixed $paramThree;;pmixed $paramFour;;p">
				<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f33;208;39;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramFour;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f65;208;75;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramThree;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f52;208;63;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramTwo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f41;208;50;208;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="generateTable;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;408;2;440;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generate the schema code for a table.&#xA;&#xA;Parameters:&#xA;    string $table - Table name you want returned&#xA;    array $fields - Array of field information to generate the table with&#xA;&#xA;Return:&#xA;   Variable declaration for a schema class;;d48,408;;b1,0;;mstring $table;;parray $fields;;p">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f39;408;46;408;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f31;408;37;408;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="get;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;609;2;614;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the contents of the given View variable.&#xA;&#xA;Parameters:&#xA;    string $var - The view var you want the contents of&#xA;    mixed $default - The default/fallback content of $var&#xA;&#xA;Return:&#xA;   The content of the named var if its set, otherwise $default;;d44,609;;b1,0;;mstring $var;;pmixed $default;;p">
				<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f27;609;35;609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f21;609;25;609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getAclLink;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;148;2;150;;;;vpos;;varray;;r&#xA;Description&#xA;     Get an array of access-control links between the given Aro and Aco&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;&#xA;Return:&#xA;   Indexed array with: 'aro', 'aco' and 'link';;d40,148;;b1,0;;mstring $aro;;pstring $aco;;p">
				<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f34;148;38;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f28;148;32;148;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getAffectedRows;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3598;2;3600;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the number of rows affected by the last query.&#xA;&#xA;Return:&#xA;   Number of rows;;d35,3598;;b1,0;;m">
			</treenode>
			<treenode node="getAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3664;2;3706;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets all the models with which this model is associated.&#xA;&#xA;Parameters:&#xA;    string $type - Only result associations of this type&#xA;&#xA;Return:&#xA;   |null Associations;;d45,3664;;b1,0;;mstring $type;;p">
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;3664;36;3664;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getColumnType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1429;2;1455;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the column type of a column in the model.&#xA;&#xA;Parameters:&#xA;    string $column - The name of the model column&#xA;&#xA;Return:&#xA;   Column type;;d40,1429;;b1,0;;mstring $column;;p">
				<treenode node="column;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;1429;38;1429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getColumnTypes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1409;2;1421;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an associative array of field names and column types.&#xA;&#xA;Return:&#xA;   Field types indexed by field name;;d34,1409;;b1,0;;m">
			</treenode>
			<treenode node="getCurrentType;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;824;2;826;;;;vpos;;vstring;;r&#xA;Description&#xA;     Retrieve the current view type;;d34,824;;b1,0;;m">
			</treenode>
			<treenode node="getDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3640;2;3647;;;;vpos;;vDataSource;;r&#xA;Description&#xA;     Gets the DataSource to which this model is bound.&#xA;&#xA;Return:&#xA;   A DataSource object;;d33,3640;;b1,0;;m">
			</treenode>
			<treenode node="getEventManager;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;364;2;373;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;802;2;810;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;653;2;660;;;;vpos;;vCakeEventManager;;r&#xA;Description&#xA;     Returns the CakeEventManager manager instance that is handling any callbacks. You can use this instance to register any new listeners or callbacks to the controller events, or create your own events and trigger them at will.;;d35,364;;b1,0;;m">
			</treenode>
			<treenode node="getID;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3536;2;3554;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the current record's ID&#xA;&#xA;Parameters:&#xA;    int $list - Index on which the composed ID is located&#xA;&#xA;Return:&#xA;   The ID of the current record, false if no ID;;d34,3536;;b1,0;;mint $list;;p">
				<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f23;3536;28;3536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getInsertID;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3570;2;3572;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the ID of the last record this model inserted.&#xA;&#xA;Return:&#xA;   Last inserted ID;;d31,3570;;b1,0;;m">
			</treenode>
			<treenode node="getLastInsertID;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3561;2;3563;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the ID of the last record this model inserted.&#xA;&#xA;Return:&#xA;   Last inserted ID;;d35,3561;;b1,0;;m">
			</treenode>
			<treenode node="getNumRows;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3589;2;3591;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the number of rows returned from the last query.&#xA;&#xA;Return:&#xA;   Number of rows;;d30,3589;;b1,0;;m">
			</treenode>
			<treenode node="getOptionParser;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;477;2;481;;;;vpos;;vConsoleOptionParser;;r&#xA;Description&#xA;     Gets the option parser instance and configures it.;;d35,477;;b1,0;;m">
			</treenode>
			<treenode node="getSchemaName;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;411;2;413;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the schema name. Override this in subclasses.&#xA;&#xA;Return:&#xA;   |null The schema name;;d33,411;;b1,0;;m">
			</treenode>
			<treenode node="getVar;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;598;2;600;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the contents of the given View variable(s)&#xA;&#xA;Parameters:&#xA;    string $var - The view var you want the contents of&#xA;&#xA;Return:&#xA;   The content of the named var if its set, otherwise null;;d30,598;;b1,0;;mstring $var;;p">
				<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f24;598;28;598;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="getVars;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;587;2;589;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a list of variables available in the current View context&#xA;&#xA;Return:&#xA;   Array of the set view variable names;;d27,587;;b1,0;;m">
			</treenode>
			<treenode node="getVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1540;2;1554;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the expression for a model virtual field&#xA;&#xA;Parameters:&#xA;    string $field - Name of field to look for&#xA;&#xA;Return:&#xA;   If $field is string expression bound to virtual field $field;;d48,1540;;b1,0;;mstring $field;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f33;1540;39;1540;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="grant;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;124;2;126;;;;vpos;;vbool;;r&#xA;Description&#xA;     Allow $aro to have access to action $actions in $aco&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d50,124;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
				<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f29;124;33;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f35;124;42;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f23;124;27;124;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="h;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;201;2;231;;;;vpos;;vstring;;r&#xA;Description&#xA;     Convenience method for htmlspecialchars.&#xA;&#xA;Parameters:&#xA;    string|array|object $text - Text to wrap through htmlspecialchars&#xA;    bool $double - Encode existing html entities&#xA;    string $charset - Character set to use when escaping&#xA;&#xA;Return:&#xA;   Wrapped text;;d52,201;;b0,0;;mstring|array|object $text;;pbool $double;;pstring $charset;;p">
				<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f35;201;43;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="double;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f19;201;26;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f12;201;17;201;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasAny;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2912;2;2914;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if a record that meets given conditions exists.&#xA;&#xA;Parameters:&#xA;    array $conditions - SQL conditions array&#xA;&#xA;Return:&#xA;   True if such a record exists;;d44,2912;;b1,0;;marray $conditions;;p">
				<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f24;2912;35;2912;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1466;2;1490;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns true if the supplied field exists in the model's database table.&#xA;&#xA;Parameters:&#xA;    string|array $name - Name of field to look for, or an array of names&#xA;    bool $checkVirtual - checks if the field is declared as virtual&#xA;&#xA;Return:&#xA;   If $name is a string, returns a boolean indicating whether the field exists;;d56,1466;;b1,0;;mstring|array $name;;pbool $checkVirtual;;p">
				<treenode node="checkVirtual;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f33;1466;46;1466;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f26;1466;31;1466;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1499;2;1505;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;341;2;354;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check that a method is callable on a model. This will check both the model's own methods, its inherited methods and methods that could be callable through behaviors.&#xA;&#xA;Parameters:&#xA;    string $method - The method to be called&#xA;&#xA;Return:&#xA;   True on method being callable;;d36,1499;;b1,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;1499;34;1499;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f27;341;32;341;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hasTask;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;330;2;332;;;;vpos;;vbool;;r&#xA;Description&#xA;     Check to see if this shell has a task with the provided name.&#xA;&#xA;Parameters:&#xA;    string $task - The task name to check&#xA;&#xA;Return:&#xA;   Success;;d32,330;;b1,0;;mstring $task;;p">
				<treenode node="task;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f25;330;30;330;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="header;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;829;2;831;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Convenience and object wrapper method for CakeResponse::header().&#xA;&#xA;Parameters:&#xA;    string $status - The header message that is being set;;d33,829;;b1,0;;mstring $status;;p">
				<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f24;829;31;829;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="highlight;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;429;2;465;;;;vpos;;vstring;;r&#xA;Description&#xA;     Highlights a given phrase in a text. You can specify any expression in highlighter that may include the \1 expression to include the $phrase found.&#xA;&#xA;Parameters:&#xA;    string $text - Text to search the phrase in&#xA;    string|array $phrase - The phrase or phrases that will be searched&#xA;    array $options - An array of html attributes and options&#xA;&#xA;Return:&#xA;   The highlighted text;;d70,429;;b1,5;;mstring $text;;pstring|array $phrase;;parray $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f50;429;58;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="phrase;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f41;429;48;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f34;429;39;429;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="hr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;688;2;692;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Outputs a series of minus characters to the standard output, acts as a visual separator.&#xA;&#xA;Parameters:&#xA;    int $newlines - Number of newlines to pre- and append&#xA;    int $width - Width of the line, defaults to 63;;d48,688;;b1,0;;mint $newlines;;pint $width;;p">
				<treenode node="newlines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f20;688;29;688;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f35;688;41;688;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="httpCodes;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;712;2;714;;;;vpos;;varray;;r&#xA;Description&#xA;     Queries &amp; sets valid HTTP response codes &amp; messages.&#xA;&#xA;Parameters:&#xA;    int|array $code - If $code is an integer, then the corresponding code/message is&#xA;&#xA;Return:&#xA;   Associative array of the HTTP codes as keys, and the message;;d41,712;;b1,0;;mint|array $code;;p">
				<treenode node="code;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f27;712;32;712;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="implementedEvents;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;782;2;793;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;617;2;624;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns a list of all events that will fire in the model during it's lifecycle. You can override this function to add your own listener callbacks;;d37,782;;b1,0;;m">
			</treenode>
			<treenode node="in;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;510;2;537;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Prompts the user for input, and returns it.&#xA;&#xA;Parameters:&#xA;    string $prompt - Prompt text&#xA;    string|array $options - Array or string of options&#xA;    string $default - Default input value&#xA;&#xA;Return:&#xA;   Either the default value, or the user-provided input;;d63,510;;b1,0;;mstring $prompt;;pstring|array $options;;pstring $default;;p">
				<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f46;510;54;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f29;510;37;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="prompt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f20;510;27;510;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="inherit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;152;2;154;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;81;2;82;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;111;2;113;;;;vpos;;vbool;;r&#xA;Description&#xA;     No op method&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d52,152;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
				<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f31;152;35;152;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f31;81;35;81;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f31;111;35;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f37;152;44;152;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f37;81;44;81;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f37;111;44;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f25;152;29;152;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f25;81;29;81;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f25;111;29;111;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="initialize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;301;2;302;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;81;2;92;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;48;2;49;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;58;2;61;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;107;2;108;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;212;2;215;;;;vpos;;vvoid;;r&#xA;Description&#xA;     initialize method;;d52,301;;b1,0;;mcontroller;;p">
				<treenode node="component;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f38;48;48;48;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f38;58;48;58;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Component;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f38;81;48;81;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f39;301;50;301;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f39;107;50;107;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="insert;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;195;2;246;;;;vpos;;vstring;;r&#xA;Description&#xA;     Replaces variable placeholders inside a $str with any given $data. Each key in the $data array corresponds to a variable placeholder name in $str. Example: `String::insert(':name is :age years old.', array('name' =&gt; 'Bob', '65'));s` Returns: Bob is 65 years old.&#xA;&#xA;Parameters:&#xA;    string $str - A string containing variable placeholders&#xA;    array $data - A key =&gt; val array where each key stands for a placeholder variable name&#xA;    array $options - An array of options, see description above;;d64,195;;b1,5;;mstring $str;;parray $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f37;195;42;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f44;195;52;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f31;195;35;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="insertQueryData;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;325;2;393;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Replaces `{$__cakeID__$}` and `{$__cakeForeignKey__$}` placeholders in query data.&#xA;&#xA;Parameters:&#xA;    string $query - Query string needing replacements done&#xA;    array $data - Array of data with values that will be inserted in placeholders&#xA;    string $association - Name of association model being replaced&#xA;    Model $Model - Model instance&#xA;    array $stack - The context stack&#xA;&#xA;Return:&#xA;   String of query data with placeholders replaced, or false on failure;;d84,325;;b1,0;;mstring $query;;parray $data;;pstring $association;;pModel $Model;;parray $stack;;p">
				<treenode node="association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f48;325;60;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f41;325;46;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f68;325;74;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="query;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f33;325;39;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="stack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f76;325;82;325;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="invalidate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3484;2;3486;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Marks a field as invalid, optionally setting the name of validation rule (in case of multiple validation for field) that was broken.&#xA;&#xA;Parameters:&#xA;    string $field - The name of the field to invalidate&#xA;    mixed $value - Name of validation rule that was not failed, or validation message to;;d51,3484;;b1,0;;mstring $field;;pmixed $value;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f28;3484;34;3484;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;3484;42;3484;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="invalidFields;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3471;2;3473;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of fields that have failed the validation of the current model.&#xA;&#xA;Parameters:&#xA;    array|string $options - An optional array of custom options to be made available in the beforeValidate callback&#xA;&#xA;Return:&#xA;   Array of invalid fields and their error messages;;d51,3471;;b1,0;;marray|string $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;3471;39;3471;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="invokeAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;479;2;500;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Dispatches the controller action. Checks that the action exists and isn't private.&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request instance&#xA;&#xA;Return:&#xA;   The resulting response;;d52,479;;b1,0;;mCakeRequest $request;;p">
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f42;479;50;479;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="isForeignKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3494;2;3503;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if given field name is a foreign key in this model.&#xA;&#xA;Parameters:&#xA;    string $field - Returns true if the input string ends in &quot;_id&quot;&#xA;&#xA;Return:&#xA;   True if the field is a foreign key listed in the belongsTo array;;d38,3494;;b1,0;;mstring $field;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f30;3494;36;3494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="isUnique;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3379;2;3427;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns false if any fields passed match any (by default, all if $or = false) of their matching values.&#xA;&#xA;Parameters:&#xA;    array $fields - Field/value pairs to search (if no values specified, they are pulled from $this-&gt;data)&#xA;    bool|array $or - If false, all fields specified must match in order for a false return value&#xA;&#xA;Return:&#xA;   False if any records matching any fields are found;;d47,3379;;b1,0;;marray $fields;;pbool|array $or;;p">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f26;3379;33;3379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="or;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f35;3379;38;3379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="isVirtualField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1513;2;1530;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if the supplied field is a model Virtual Field&#xA;&#xA;Parameters:&#xA;    string $field - Name of field to look for&#xA;&#xA;Return:&#xA;   indicating whether the field exists as a model virtual field;;d40,1513;;b1,0;;mstring $field;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f32;1513;38;1513;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="joinModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3716;2;3731;;;;vpos;;varray;;r&#xA;Description&#xA;     Gets the name and fields to be used by a join model. This allows specifying join fields in the association definition.&#xA;&#xA;Parameters:&#xA;    string|array $assoc - The model to be joined&#xA;    array $keys - Any join keys which must be merged with the keys queried;;d52,3716;;b1,0;;mstring|array $assoc;;parray $keys;;p">
				<treenode node="assoc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;3716;33;3716;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f35;3716;40;3716;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="lastAffected;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;262;2;264;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the number of rows affected by last query.&#xA;&#xA;Parameters:&#xA;    mixed $source - The source name&#xA;&#xA;Return:&#xA;   Number of rows affected by last query;;d46,262;;b1,0;;mmixed $source;;p">
				<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f30;262;37;262;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="lastInsertId;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;242;2;244;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns the ID generated from the previous INSERT operation.&#xA;&#xA;Parameters:&#xA;    mixed $source - The source name&#xA;&#xA;Return:&#xA;   Last ID key generated in previous INSERT;;d46,242;;b1,0;;mmixed $source;;p">
				<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f30;242;37;242;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="lastNumRows;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;252;2;254;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns the number of rows returned by last operation.&#xA;&#xA;Parameters:&#xA;    mixed $source - The source name&#xA;&#xA;Return:&#xA;   Number of rows returned by last operation;;d45,252;;b1,0;;mmixed $source;;p">
				<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f29;252;36;252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="listSources;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;94;2;113;;;;vpos;;varray;;r&#xA;Description&#xA;     Caches/returns cached results for child instances&#xA;&#xA;Parameters:&#xA;    mixed $data - Unused in this class&#xA;&#xA;Return:&#xA;   |null Array of sources available in this datasource;;d43,94;;b1,0;;mmixed $data;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f29;94;34;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="load;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;155;2;177;;;;vpos;;varray;;r&#xA;Description&#xA;     Reads database and creates schema tables.&#xA;&#xA;Parameters:&#xA;    array $options - Schema object properties&#xA;&#xA;Return:&#xA;   Set of name and tables;;d42,155;;b1,0;;marray $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f22;155;30;155;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="loadHelper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;974;2;976;;;;vpos;;vHelper;;r&#xA;Description&#xA;     Loads a helper. Delegates to the `HelperCollection::load()` to load the helper&#xA;&#xA;Parameters:&#xA;    string $helperName - Name of the helper to load&#xA;    array $settings - Settings for the helper&#xA;&#xA;Return:&#xA;   a constructed helper object;;d62,974;;b1,0;;mstring $helperName;;parray $settings;;p">
				<treenode node="helperName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f28;974;39;974;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f41;974;50;974;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="loadHelpers;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;892;2;898;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Interact with the HelperCollection to load all the helpers.;;d31,892;;b1,0;;m">
			</treenode>
			<treenode node="loadModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;726;2;745;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;285;2;307;;;;vpos;;vbool;;r&#xA;Description&#xA;     Loads and instantiates models required by this controller. If the model is non existent, it will throw a missing database table error, as CakePHP generates dynamic models for the time being.&#xA;&#xA;Parameters:&#xA;    string $modelClass - Name of model class to load&#xA;    int|string $id - Initial ID the instanced model class should have&#xA;&#xA;Return:&#xA;   True if the model was found;;d59,726;;b1,0;;mstring $modelClass;;pint|string $id;;p">
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f47;726;50;726;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f47;285;50;285;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="modelClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f27;726;38;726;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f27;285;38;285;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="loadTasks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;314;2;321;;;;vpos;;vbool;;r&#xA;Description&#xA;     Loads tasks defined in public $tasks;;d29,314;;b1,0;;m">
			</treenode>
			<treenode node="log;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f8;157;2;163;;;;vpos;;vbool;;r&#xA;Description&#xA;     Convenience method to write a message to CakeLog. See CakeLog::write() for more information on writing to logs.&#xA;&#xA;Parameters:&#xA;    string $msg - Log message&#xA;    int $type - Error type constant&#xA;    null|string|array $scope - The scope(s) a log message is being created in&#xA;&#xA;Return:&#xA;   Success of log write;;d59,157;;b1,0;;mstring $msg;;pint $type;;pnull|string|array $scope;;p">
				<treenode node="msg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f21;157;25;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f44;157;50;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f27;157;32;157;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="LogError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;1012;2;1017;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Shortcut to Log::write.&#xA;&#xA;Parameters:&#xA;    string $message - Message to write to log;;d29,1012;;b0,0;;mstring $message;;p">
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f19;1012;27;1012;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_encode_mimeheader;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;435;2;437;;;;vpos;;vstring;;r&#xA;Description&#xA;     Encode string for MIME header&#xA;&#xA;Parameters:&#xA;    string $str - The string being encoded&#xA;    string $charset - specifies the name of the character set in which str is represented in&#xA;    string $transferEncoding - specifies the scheme of MIME encoding&#xA;    string $linefeed - specifies the EOL (end-of-line) marker with which&#xA;    int $indent - [definition unknown and appears to have no affect]&#xA;&#xA;Return:&#xA;   A converted version of the string represented in ASCII;;d115,435;;b0,0;;mstring $str;;pstring $charset;;pstring $transferEncoding;;pstring $linefeed;;pint $indent;;p">
				<treenode node="charset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f37;435;45;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="indent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f102;435;109;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="linefeed;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f82;435;91;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f31;435;35;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="transferEncoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f57;435;74;435;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_stripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;198;2;200;;;;vpos;;vint;;r&#xA;Description&#xA;     Find position of first occurrence of a case-insensitive string.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the position of the first occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    int $offset - The position in $haystack to start searching&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The numeric position of the first occurrence of $needle in the $haystack string, or false;;d72,198;;b0,0;;mstring $haystack;;pstring $needle;;pint $offset;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f54;198;63;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f21;198;30;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f32;198;39;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f41;198;48;198;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_stristr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;218;2;220;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds first occurrence of a string within another, case insensitive.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the first occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack, or false if $needle is not found;;d74,218;;b0,0;;mstring $haystack;;pstring $needle;;pbool $part;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f56;218;65;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f21;218;30;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f32;218;39;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f41;218;46;218;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strlen;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;234;2;236;;;;vpos;;vint;;r&#xA;Description&#xA;     Get string length.&#xA;&#xA;Parameters:&#xA;    string $string - The string being checked for length&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   The number of characters in string $string having character encoding encoding;;d47,234;;b0,0;;mstring $string;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f29;234;38;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f20;234;27;234;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;252;2;254;;;;vpos;;vint;;r&#xA;Description&#xA;     Find position of first occurrence of a string.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string being checked&#xA;    string $needle - The position counted from the beginning of haystack&#xA;    int $offset - The search offset&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The numeric position of the first occurrence of $needle in the $haystack string;;d71,252;;b0,0;;mstring $haystack;;pstring $needle;;pint $offset;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f53;252;62;252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f20;252;29;252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f31;252;38;252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f40;252;47;252;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strrchr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;272;2;274;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds the last occurrence of a character in a string within another.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack;;d74,272;;b0,0;;mstring $haystack;;pstring $needle;;pbool $part;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f56;272;65;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f21;272;30;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f32;272;39;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f41;272;46;272;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strrichr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;292;2;294;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds the last occurrence of a character in a string within another, case insensitive.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack;;d75,292;;b0,0;;mstring $haystack;;pstring $needle;;pbool $part;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f57;292;66;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f22;292;31;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f33;292;40;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f42;292;47;292;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strripos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;310;2;312;;;;vpos;;vint;;r&#xA;Description&#xA;     Finds position of last occurrence of a string within another, case insensitive&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the position of the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    int $offset - The position in $haystack to start searching&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The numeric position of the last occurrence of $needle in the $haystack string,;;d73,310;;b0,0;;mstring $haystack;;pstring $needle;;pint $offset;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f55;310;64;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f22;310;31;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f33;310;40;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f42;310;49;310;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strrpos;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;329;2;331;;;;vpos;;vint;;r&#xA;Description&#xA;     Find position of last occurrence of a string in a string.&#xA;&#xA;Parameters:&#xA;    string $haystack - The string being checked, for the last occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    int $offset - May be specified to begin searching an arbitrary number of characters into the string&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The numeric position of the last occurrence of $needle in the $haystack string;;d72,329;;b0,0;;mstring $haystack;;pstring $needle;;pint $offset;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f54;329;63;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f21;329;30;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f32;329;39;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="offset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f41;329;48;329;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strstr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;349;2;351;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds first occurrence of a string within another&#xA;&#xA;Parameters:&#xA;    string $haystack - The string from which to get the first occurrence of $needle&#xA;    string $needle - The string to find in $haystack&#xA;    bool $part - Determines which portion of $haystack this function returns&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   |bool The portion of $haystack, or true if $needle is not found;;d73,349;;b0,0;;mstring $haystack;;pstring $needle;;pbool $part;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f55;349;64;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f20;349;29;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f31;349;38;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="part;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f40;349;45;349;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strtolower;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;364;2;366;;;;vpos;;vstring;;r&#xA;Description&#xA;     Make a string lowercase&#xA;&#xA;Parameters:&#xA;    string $string - The string being lowercased&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   with all alphabetic characters converted to lowercase;;d51,364;;b0,0;;mstring $string;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f33;364;42;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f24;364;31;364;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_strtoupper;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;379;2;381;;;;vpos;;vstring;;r&#xA;Description&#xA;     Make a string uppercase&#xA;&#xA;Parameters:&#xA;    string $string - The string being uppercased&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   with all alphabetic characters converted to uppercase;;d51,379;;b0,0;;mstring $string;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f33;379;42;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f24;379;31;379;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_substr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;412;2;414;;;;vpos;;vstring;;r&#xA;Description&#xA;     Get part of string&#xA;&#xA;Parameters:&#xA;    string $string - The string being checked&#xA;    int $start - The first position used in $string&#xA;    int $length - The maximum length of the returned string&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   The portion of $string specified by the $string and $length parameters;;d71,412;;b0,0;;mstring $string;;pint $start;;pint $length;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f53;412;62;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f37;412;44;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="start;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f29;412;35;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="string;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f20;412;27;412;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="mb_substr_count;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;395;2;397;;;;vpos;;vint;;r&#xA;Description&#xA;     Count the number of substring occurrences&#xA;&#xA;Parameters:&#xA;    string $haystack - The string being checked&#xA;    string $needle - The string being found&#xA;    string $encoding - Character encoding name to use&#xA;&#xA;Return:&#xA;   The number of times the $needle substring occurs in the $haystack string;;d64,395;;b0,0;;mstring $haystack;;pstring $needle;;pstring $encoding;;p">
				<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f46;395;55;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="haystack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f26;395;35;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="needle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f37;395;44;395;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="methodWithOptionalParam;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;248;2;250;;;;vpos;;vvoid;;r&#xA;Description&#xA;     methodWithOptionalParam method&#xA;&#xA;Parameters:&#xA;    mixed $param;;d56,248;;b1,0;;mmixed $param;;p">
				<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f41;248;47;248;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="model;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;603;2;608;;;;vpos;;vstring;;r&#xA;Description&#xA;     Gets the currently-used model of the rendering context.;;d25,603;;b1,0;;m">
			</treenode>
			<treenode node="nl;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;676;2;678;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a single or multiple linefeeds sequences.&#xA;&#xA;Parameters:&#xA;    int $multiplier - Number of times the linefeed sequence should be repeated;;d37,676;;b1,0;;mint $multiplier;;p">
				<treenode node="multiplier;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f20;676;31;676;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="oneParamMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;172;2;174;;;;vpos;;vvoid;;r&#xA;Description&#xA;     oneParamMethod method&#xA;&#xA;Parameters:&#xA;    mixed $param;;d40,172;;b1,0;;mmixed $param;;p">
				<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f32;172;38;172;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="onError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;214;2;215;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3831;2;3832;;;;vpos;;vvoid;;r&#xA;Description&#xA;     DataSource error callback&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    string $error - Error generated in DataSource;;d47,214;;b1,0;;mModel $model;;pstring $error;;p">
				<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f39;214;45;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f31;214;37;214;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="out;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;609;2;622;;;;vpos;;vint;;r&#xA;Description&#xA;     Outputs a single or multiple messages to stdout. If no parameters are passed outputs just a newline.&#xA;&#xA;Parameters:&#xA;    string|array $message - A string or an array of strings to output&#xA;    int $newlines - Number of newlines to append&#xA;    int $level - The message's output level, see above&#xA;&#xA;Return:&#xA;   |bool Returns the number of bytes returned from writing to stdout;;d77,609;;b1,0;;mstring|array $message;;pint $newlines;;pint $level;;p">
				<treenode node="level;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f53;609;59;609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f21;609;29;609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="newlines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f38;609;47;609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="output;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;802;2;804;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns a string generated by a helper method&#xA;&#xA;Parameters:&#xA;    string $str - String to be output;;d30,802;;b1,0;;mstring $str;;p">
				<treenode node="str;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f24;802;28;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="overwrite;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;638;2;654;;;;vpos;;vint;;r&#xA;Description&#xA;     Overwrite some already output text.&#xA;&#xA;Parameters:&#xA;    array|string $message - The message to output&#xA;    int $newlines - Number of newlines to append&#xA;    int $size - The number of bytes to overwrite&#xA;&#xA;Return:&#xA;   |bool Returns the number of bytes returned from writing to stdout;;d66,638;;b1,0;;marray|string $message;;pint $newlines;;pint $size;;p">
				<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f27;638;35;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="newlines;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f37;638;46;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="size;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f52;638;57;638;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="paginate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1084;2;1086;;;;vpos;;varray;;r&#xA;Description&#xA;     Handles automatic pagination of model records.&#xA;&#xA;Parameters:&#xA;    Model|string $object - Model to paginate (e&#xA;    string|array $scope - Conditions to use while paginating&#xA;    array $whitelist - List of allowed options for paging&#xA;&#xA;Return:&#xA;   Model query results;;d82,1084;;b1,0;;mModel|string $object;;pstring|array $scope;;parray $whitelist;;p">
				<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f26;1084;33;1084;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="scope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f42;1084;48;1084;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="whitelist;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f60;1084;70;1084;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="pluginSplit;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;1035;2;1046;;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;249;2;258;;;;vpos;;varray;;r&#xA;Description&#xA;     Splits a dot syntax plugin name into its plugin and filename. If $name does not have a dot, then index 0 will be null. It checks if the plugin is loaded, else filename will stay unchanged for filenames containing dot&#xA;&#xA;Parameters:&#xA;    string $name - The name you want to plugin split&#xA;    bool $fallback - If true uses the plugin set in the current CakeRequest when parsed plugin is not loaded&#xA;&#xA;Return:&#xA;   Array with 2 indexes;;d54,1035;;b1,0;;mstring $name;;pbool $fallback;;p">
				<treenode node="dotAppend;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f29;249;39;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fallback;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f36;1035;45;1035;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f29;1035;34;1035;;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f22;249;27;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f49;249;56;249;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="postConditions;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1028;2;1073;;;;vpos;;varray;;r&#xA;Description&#xA;     Converts POST'ed form data to a model conditions array, suitable for use in a Model::find() call.&#xA;&#xA;Parameters:&#xA;    array $data - POST'ed data organized by model and field&#xA;    string|array $op - A string containing an SQL comparison operator, or an array matching operators&#xA;    string $bool - SQL boolean operator: AND, OR, XOR, etc&#xA;    bool $exclusive - If true, and $op is an array, fields not included in $op will not be&#xA;&#xA;Return:&#xA;   |null An array of model conditions;;d96,1028;;b1,0;;marray $data;;pstring|array $op;;pstring $bool;;pbool $exclusive;;p">
				<treenode node="bool;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f61;1028;66;1028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f32;1028;37;1028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="exclusive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f76;1028;86;1028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="op;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f49;1028;52;1028;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="pr;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;275;2;280;;;;vpos;;vvoid;;r&#xA;Description&#xA;     print_r() convenience function&#xA;&#xA;Parameters:&#xA;    mixed $var - Variable to print out;;d19,275;;b0,0;;mmixed $var;;p">
				<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f13;275;17;275;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="prepend;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;670;2;672;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Prepend to an existing or new block. Prepending to a new block will create the block.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the block&#xA;    mixed $value - The content for the block;;d47,670;;b1,0;;mstring $name;;pmixed $value;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f25;670;30;670;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f32;670;38;670;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="query;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3443;2;3447;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Returns a resultset for a given SQL statement. Custom SQL queries should be performed with this method.&#xA;&#xA;Parameters:&#xA;    string $sql - SQL statement&#xA;&#xA;Return:&#xA;   Resultset array or boolean indicating success / failure depending on the query executed;;d29,3443;;b1,0;;mstring $sql;;p">
				<treenode node="sql;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f23;3443;27;3443;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="read;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;204;2;206;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1612;2;1635;;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;191;2;339;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Used to read records from the Datasource. The &quot;R&quot; in CRUD&#xA;&#xA;Parameters:&#xA;    Model $Model - The model being read&#xA;    array $queryData - An array of query data used to find the data you want&#xA;    int $recursive - Number of levels of association;;d77,204;;b1,0;;mModel $Model;;parray $queryData;;pint $recursive;;p">
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f22;1612;29;1612;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f38;1612;41;1612;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f28;204;34;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f22;191;30;191;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="queryData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f36;204;46;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f58;204;68;204;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="readConfigFile;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;153;2;157;;;;vpos;;varray;;r&#xA;Description&#xA;     Parses an INI file and returns an array that reflects the INI file's section structure. Double-quote friendly.&#xA;&#xA;Parameters:&#xA;    string $filename - File&#xA;&#xA;Return:&#xA;   INI section structure;;d43,153;;b1,0;;mstring $filename;;p">
				<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f32;153;41;153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="redirect;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;759;2;796;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Redirects to given $url, after turning off $this-&gt;autoRender. Script execution is halted after the redirect.&#xA;&#xA;Parameters:&#xA;    string|array $url - A string or array-based URL pointing to another location within the app,&#xA;    int|array|null $status - HTTP status code (eg: 301)&#xA;    bool $exit - If true, exit() will be called after the redirect;;d62,759;;b1,0;;mstring|array $url;;pint|array|null $status;;pbool $exit;;p">
				<treenode node="exit;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f48;759;53;759;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="status;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f32;759;39;759;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f26;759;30;759;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="referer;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;971;2;981;;;;vpos;;vstring;;r&#xA;Description&#xA;     Returns the referring URL for this request.&#xA;&#xA;Parameters:&#xA;    string $default - Default URL to use if HTTP_REFERER cannot be read from headers&#xA;    bool $local - If true, restrict referring URLs to local server&#xA;&#xA;Return:&#xA;   Referring URL;;d58,971;;b1,0;;mstring $default;;pbool $local;;p">
				<treenode node="default;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f25;971;33;971;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="local;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f42;971;48;971;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="render;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;464;2;484;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;930;2;961;;;;vpos;;vstring;;r&#xA;Description&#xA;     Renders view for given view file and layout.&#xA;&#xA;Parameters:&#xA;    string $view - Name of view file to use&#xA;    string $layout - Layout to use&#xA;&#xA;Return:&#xA;   |null Rendered content or null if content already rendered and returned earlier;;d54,464;;b1,0;;mstring $view;;pstring $layout;;p">
				<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f38;464;45;464;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f38;930;45;930;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="view;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f24;464;29;464;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f24;930;29;930;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="renderCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;559;2;580;;;;vpos;;vbool;;r&#xA;Description&#xA;     Render cached view. Works in concert with CacheHelper and Dispatcher to render cached view files.&#xA;&#xA;Parameters:&#xA;    string $filename - the cache file to include&#xA;    string $timeStart - the page render start time&#xA;&#xA;Return:&#xA;   Success of rendering the cached file;;d52,559;;b1,0;;mstring $filename;;pstring $timeStart;;p">
				<treenode node="filename;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f29;559;38;559;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="timeStart;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f40;559;50;559;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="renderLayout;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;512;2;549;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Renders a layout. Returns output from _render(). Returns false on error. Several variables are created for use in layout.&#xA;&#xA;Parameters:&#xA;    string $content - Content to render in a view, wrapped by the surrounding layout&#xA;    string $layout - Layout name&#xA;&#xA;Return:&#xA;   Rendered output, or false on error;;d56,512;;b1,0;;mstring $content;;pstring $layout;;p">
				<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f30;512;38;512;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f40;512;47;512;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="requestAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f8;69;2;107;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Calls a controller's method from any location. Can be used to connect controllers together or tie plugins into a main application. requestAction can be used to return rendered views or fetch the return value from controller actions.&#xA;&#xA;Parameters:&#xA;    string|array $url - String or array-based URL&#xA;    array $extra - if array includes the key &quot;return&quot; it sets the AutoRender to true&#xA;&#xA;Return:&#xA;   Boolean true or false on success/failure, or contents;;d55,69;;b1,0;;mstring|array $url;;parray $extra;;p">
				<treenode node="extra;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f37;69;43;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f31;69;35;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="resetAssociations;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3346;2;3367;;;;vpos;;vbool;;r&#xA;Description&#xA;     This resets the association arrays for the model back to those originally defined in the model. Normally called at the end of each call to Model::find()&#xA;&#xA;Return:&#xA;   Success;;d37,3346;;b1,0;;m">
			</treenode>
			<treenode node="resolveKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;402;2;404;;;;vpos;;vstring;;r&#xA;Description&#xA;     To-be-overridden in subclasses.&#xA;&#xA;Parameters:&#xA;    Model $Model - Model instance&#xA;    string $key - Key name to make&#xA;&#xA;Return:&#xA;   Key name for model;;d48,402;;b1,0;;mModel $Model;;pstring $key;;p">
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f42;402;46;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f34;402;40;402;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="revoke;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f8;137;2;139;;;;vpos;;vbool;;r&#xA;Description&#xA;     Deny access for $aro to action $action in $aco&#xA;&#xA;Parameters:&#xA;    string $aro - ARO The requesting object identifier&#xA;    string $aco - ACO The controlled object identifier&#xA;    string $action - Action (defaults to *)&#xA;&#xA;Return:&#xA;   Success;;d51,137;;b1,0;;mstring $aro;;pstring $aco;;pstring $action;;p">
				<treenode node="aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f30;137;34;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f36;137;43;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php;f24;137;28;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="rollback;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;166;2;168;;;;vpos;;vbool;;r&#xA;Description&#xA;     Rollback a transaction&#xA;&#xA;Return:&#xA;   Returns true if a transaction is in progress;;d28,166;;b1,0;;m">
			</treenode>
			<treenode node="runCommand;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;406;2;450;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Runs the Shell with the provided argv.&#xA;&#xA;Parameters:&#xA;    string $command - The command name to run on this shell&#xA;    array $argv - Array of arguments to run the shell with;;d45,406;;b1,0;;mstring $command;;parray $argv;;p">
				<treenode node="argv;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f38;406;43;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f28;406;36;406;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="save;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1730;2;1765;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Saves model data (based on white-list, if supplied) to the database. By default, validation occurs before save. Passthrough method to _doSave() with transaction handling.&#xA;&#xA;Parameters:&#xA;    array $data - Data to save&#xA;    bool|array $validate - Either a boolean, or an array&#xA;    array $fieldList - List of fields to allow to be saved&#xA;&#xA;Return:&#xA;   On success Model::$data if its not empty or true, false on failure;;d76,1730;;b1,0;;marray $data;;pbool|array $validate;;parray $fieldList;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f22;1730;27;1730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fieldList;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f54;1730;64;1730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;1730;45;1730;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="saveAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2258;2;2273;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Backwards compatible passthrough method for: saveMany(), validateMany(), saveAssociated() and validateAssociated()&#xA;&#xA;Parameters:&#xA;    array $data - Record data to save&#xA;    array $options - Options to use when saving record data, See $options above&#xA;&#xA;Return:&#xA;   If atomic: True on success, or false on failure;;d62,2258;;b1,0;;marray $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f25;2258;30;2258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;2258;50;2258;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="saveAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2430;2;2596;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Saves a single record, as well as all its directly associated records.&#xA;&#xA;Parameters:&#xA;    array $data - Record data to save&#xA;    array $options - Options to use when saving record data, See $options above&#xA;&#xA;Return:&#xA;   If atomic: True on success, or false on failure;;d66,2430;;b1,0;;marray $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f32;2430;37;2430;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f46;2430;54;2430;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="saveField;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1693;2;1703;;;;vpos;;vbool;;r&#xA;Description&#xA;     Saves the value of a single field to the database, based on the current model ID.&#xA;&#xA;Parameters:&#xA;    string $name - Name of the table field&#xA;    mixed $value - Value of the field&#xA;    bool|array $validate - Either a boolean, or an array&#xA;&#xA;Return:&#xA;   |array See Model::save() False on failure or an array of model data on success;;d61,1693;;b1,0;;mstring $name;;pmixed $value;;pbool|array $validate;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;1693;32;1693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;1693;51;1693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f34;1693;40;1693;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="saveMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2297;2;2376;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Saves multiple individual records for a single model&#xA;&#xA;Parameters:&#xA;    array $data - Record data to save&#xA;    array $options - Options to use when saving record data, See $options above&#xA;&#xA;Return:&#xA;   If atomic: True on success, or false on failure;;d60,2297;;b1,0;;marray $data;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f26;2297;31;2297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f40;2297;48;2297;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="scaffoldError;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;1217;2;1219;;;;vpos;;vbool;;r&#xA;Description&#xA;     This method should be overridden in child classes. If not it will render a scaffold error. Method MUST return true in child classes&#xA;&#xA;Parameters:&#xA;    string $method - name of method called example index, edit, etc&#xA;&#xA;Return:&#xA;   Success;;d40,1217;;b1,0;;mstring $method;;p">
				<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f31;1217;38;1217;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="schema;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1384;2;1402;;;;vpos;;varray;;r&#xA;Description&#xA;     Returns an array of table metadata (column names and types) from the database. $field =&gt; keys(type, null, default, key, length, extra)&#xA;&#xA;Parameters:&#xA;    bool|string $field - Set to true to reload schema, or a string to return a specific field&#xA;&#xA;Return:&#xA;   |null Array of table metadata;;d40,1384;;b1,0;;mbool|string $field;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f24;1384;30;1384;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="set;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;803;2;818;;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;257;2;259;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1195;2;1242;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;842;2;853;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Allows a template or element to set a variable that will be available in a layout or other element. Analogous to Controller::set().&#xA;&#xA;Parameters:&#xA;    string|array $one - A string or an array of data&#xA;    string|array $two - Value in case $one is a string (which then works as the key);;d40,803;;b1,0;;mstring|array $one;;pstring|array $two;;p">
				<treenode node="one;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f21;803;25;803;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f21;1195;25;1195;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f21;842;25;842;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="properties;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f21;257;32;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="two;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f27;803;31;803;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;1195;31;1195;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f27;842;31;842;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setAction;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;869;2;875;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Internally redirects one action to another. Does not perform another HTTP request unlike Controller::redirect()&#xA;&#xA;Parameters:&#xA;    string $action - The new action to be 'redirected' to&#xA;&#xA;Return:&#xA;   Returns the return value of the called action;;d36,869;;b1,0;;mstring $action;;p">
				<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f27;869;34;869;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setConfig;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;284;2;286;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the configuration for the DataSource. Merges the $config information with the _baseConfig and the existing $config property.&#xA;&#xA;Parameters:&#xA;    array $config - The configuration array;;d46,284;;b1,0;;marray $config;;p">
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f27;284;34;284;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setDataSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3609;2;3633;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the DataSource to which this model is bound.&#xA;&#xA;Parameters:&#xA;    string $dataSource - The name of the DataSource, as defined in app/Config/database;;d51,3609;;b1,0;;mstring $dataSource;;p">
				<treenode node="dataSource;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;3609;42;3609;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setEntity;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;529;2;587;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets this helper's model and field properties to the dot-separated value-pair in $entity.&#xA;&#xA;Parameters:&#xA;    string $entity - A field name, like &quot;ModelName&#xA;    bool $setScope - Sets the view scope to the model specified in $tagValue;;d55,529;;b1,0;;mstring $entity;;pbool $setScope;;p">
				<treenode node="entity;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f27;529;34;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="setScope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f36;529;45;529;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setInsertID;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3580;2;3582;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the ID of the last record this model inserted&#xA;&#xA;Parameters:&#xA;    int|string $id - Last inserted ID;;d34,3580;;b1,0;;mint|string $id;;p">
				<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f29;3580;32;3580;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setRequest;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;453;2;467;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets the request objects and configures a number of controller properties based on the contents of the request. The properties that get set are&#xA;&#xA;Parameters:&#xA;    CakeRequest $request - Request instance;;d50,453;;b1,0;;mCakeRequest $request;;p">
				<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f40;453;48;453;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setSource;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;1153;2;1178;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Sets a custom table for your model class. Used by your controller to select a database table.&#xA;&#xA;Parameters:&#xA;    string $tableName - Name of the custom table;;d39,1153;;b1,0;;mstring $tableName;;p">
				<treenode node="tableName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;1153;37;1153;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="setup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;93;2;94;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Setup this behavior with the specified configuration settings.&#xA;&#xA;Parameters:&#xA;    Model $model - Model using this behavior&#xA;    array $config - Configuration settings for $model;;d56,93;;b1,0;;mModel $model;;parray $config;;p">
				<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f37;93;44;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f29;93;35;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="shortPath;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;802;2;806;;;;vpos;;vstring;;r&#xA;Description&#xA;     Makes absolute file path easier to read&#xA;&#xA;Parameters:&#xA;    string $file - Absolute file path&#xA;&#xA;Return:&#xA;   short path;;d34,802;;b1,0;;mstring $file;;p">
				<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f27;802;32;802;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="shutdown;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;317;2;318;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;138;2;139;;;;vpos;;vvoid;;r&#xA;Description&#xA;     shutdown method;;d50,317;;b1,0;;mcontroller;;p">
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f37;317;48;317;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f37;138;48;138;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="shutdownProcess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;689;2;691;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Perform the various shutdown processes for this controller. Fire the Components and Controller callbacks in the correct order.;;d35,689;;b1,0;;m">
			</treenode>
			<treenode node="sortByKey;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;165;2;184;;;;vpos;;varray;;r&#xA;Description&#xA;     Sorts given $array by key $sortBy.&#xA;&#xA;Parameters:&#xA;    array - &amp;$array Array to sort&#xA;    string $sortBy - Sort by this key&#xA;    string $order - Sort order asc/desc (ascending or descending)&#xA;    int $type - Type of sorting to perform&#xA;&#xA;Return:&#xA;   |null Sorted array, or null if not an array;;d76,165;;b0,0;;marray;;pstring $sortBy;;pstring $order;;pint $type;;p">
				<treenode node="array;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f21;165;27;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f38;165;44;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="sortBy;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f29;165;36;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f54;165;59;165;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="stackTrace;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;140;2;149;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Outputs a stack trace based on the supplied options.&#xA;&#xA;Parameters:&#xA;    array $options - Format for outputting stack trace&#xA;&#xA;Return:&#xA;   Formatted stack trace;;d47,140;;b0,0;;marray $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f27;140;35;140;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="start;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;633;2;635;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start capturing output for a 'block'&#xA;&#xA;Parameters:&#xA;    string $name - The name of the block to capture for;;d30,633;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f23;633;28;633;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="startIfEmpty;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;644;2;646;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Start capturing output for a 'block' if it has no content&#xA;&#xA;Parameters:&#xA;    string $name - The name of the block to capture for;;d37,644;;b1,0;;mstring $name;;p">
				<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f30;644;35;644;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="startup;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f8;309;2;310;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;117;2;118;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;227;2;229;;;;vpos;;vvoid;;r&#xA;Description&#xA;     startup method;;d49,309;;b1,0;;mcontroller;;p">
				<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php;f36;309;47;309;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f36;117;47;117;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="startupProcess;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;674;2;677;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Perform the startup process for this controller. Fire the Components and Controller callbacks in the correct order.;;d34,674;;b1,0;;m">
			</treenode>
			<treenode node="stripLinks;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;474;2;476;;;;vpos;;vstring;;r&#xA;Description&#xA;     Strips given text of all links (&lt;a href=....).&#xA;&#xA;Parameters:&#xA;    string $text - Text&#xA;&#xA;Return:&#xA;   The text without links;;d42,474;;b1,5;;mstring $text;;p">
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f35;474;40;474;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="stripslashes_deep;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f1;557;2;566;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Recursively strips slashes from all values in an array&#xA;&#xA;Parameters:&#xA;    array $values - Array of values to strip slashes&#xA;&#xA;Return:&#xA;   What is returned from calling stripslashes;;d37,557;;b0,0;;marray $values;;p">
				<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\basics.php;f28;557;35;557;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="tail;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;494;2;516;;;;vpos;;vstring;;r&#xA;Description&#xA;     Truncates text starting from the end.&#xA;&#xA;Parameters:&#xA;    string $text - String to truncate&#xA;    int $length - Length of returned string, including ellipsis&#xA;    array $options - An array of options&#xA;&#xA;Return:&#xA;   Trimmed string;;d71,494;;b1,5;;mstring $text;;pint $length;;parray $options;;p">
				<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f36;494;43;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f51;494;59;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f29;494;34;494;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="threeParamMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;195;2;197;;;;vpos;;vvoid;;r&#xA;Description&#xA;     threeParamMethod method&#xA;&#xA;Parameters:&#xA;    mixed $param&#xA;    mixed $paramTwo&#xA;    mixed $paramThree;;d66,195;;b1,0;;mmixed $param;;pmixed $paramTwo;;pmixed $paramThree;;p">
				<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f34;195;40;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramThree;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f53;195;64;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramTwo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f42;195;51;195;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="tokenize;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;108;2;172;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Tokenizes a string using $separator, ignoring any instance of $separator that appears between $leftBound and $rightBound.&#xA;&#xA;Parameters:&#xA;    string $data - The data to tokenize&#xA;    string $separator - The token to split the data on&#xA;    string $leftBound - The left boundary to ignore separators in&#xA;    string $rightBound - The right boundary to ignore separators in&#xA;&#xA;Return:&#xA;   Array of tokens in $data or original input if empty;;d95,108;;b1,5;;mstring $data;;pstring $separator;;pstring $leftBound;;pstring $rightBound;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f33;108;38;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="leftBound;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f58;108;68;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="rightBound;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f76;108;87;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f40;108;50;108;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="toList;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;698;2;707;;;;vpos;;vstring;;r&#xA;Description&#xA;     Creates a comma separated list where the last two items are joined with 'and', forming natural language.&#xA;&#xA;Parameters:&#xA;    array $list - The list to be joined&#xA;    string $and - The word used to join the last and second last items together with&#xA;    string $separator - The separator used to join all the other items together&#xA;&#xA;Return:&#xA;   The glued together string;;d70,698;;b1,5;;marray $list;;pstring $and;;pstring $separator;;p">
				<treenode node="and;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f38;698;42;698;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="list;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f31;698;36;698;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="separator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f51;698;61;698;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="toString;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php;f8;44;2;47;;;;vpos;;vstring;;r&#xA;Description&#xA;     Object-to-string conversion. Each class can override this method as necessary.&#xA;&#xA;Return:&#xA;   The name of this class;;d28,44;;b1,0;;m">
			</treenode>
			<treenode node="truncate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;536;2;643;;;;vpos;;vstring;;r&#xA;Description&#xA;     Truncates text.&#xA;&#xA;Parameters:&#xA;    string $text - String to truncate&#xA;    int $length - Length of returned string, including ellipsis&#xA;    array $options - An array of html attributes and options&#xA;&#xA;Return:&#xA;   Trimmed string;;d75,536;;b1,5;;mstring $text;;pint $length;;parray $options;;p">
				<treenode node="length;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f40;536;47;536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f55;536;63;536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f33;536;38;536;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="twoParamMethod;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;183;2;185;;;;vpos;;vvoid;;r&#xA;Description&#xA;     twoParamMethod method&#xA;&#xA;Parameters:&#xA;    mixed $param&#xA;    mixed $paramTwo;;d51,183;;b1,0;;mmixed $param;;pmixed $paramTwo;;p">
				<treenode node="param;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f32;183;38;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="paramTwo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f40;183;49;183;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="unbindModel;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;992;2;1008;;;;vpos;;vbool;;r&#xA;Description&#xA;     Turn off associations on the fly.&#xA;&#xA;Parameters:&#xA;    array $params - Set of bindings to unbind (indexed by binding type)&#xA;    bool $reset - Set to false to make the unbinding permanent&#xA;&#xA;Return:&#xA;   Success;;d53,992;;b1,0;;marray $params;;pbool $reset;;p">
				<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f29;992;36;992;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="reset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f38;992;44;992;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="update;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;219;2;221;;;;vpos;;vbool;;r&#xA;Description&#xA;     Update a record(s) in the datasource.&#xA;&#xA;Parameters:&#xA;    Model $Model - Instance of the model class being updated&#xA;    array $fields - Array of fields to be updated&#xA;    array $values - Array of values to be update $fields to&#xA;    mixed $conditions - The array of conditions to use&#xA;&#xA;Return:&#xA;   Success;;d90,219;;b1,0;;mModel $Model;;parray $fields;;parray $values;;pmixed $conditions;;p">
				<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f70;219;81;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f38;219;45;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="Model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f30;219;36;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="values;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f54;219;61;219;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="updateAll;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2656;2;2658;;;;vpos;;vbool;;r&#xA;Description&#xA;     Updates multiple model records based on a set of conditions.&#xA;&#xA;Parameters:&#xA;    array $fields - Set of fields and values, indexed by fields&#xA;    mixed $conditions - Conditions to match, true for all records&#xA;&#xA;Return:&#xA;   True on success, false on failure;;d56,2656;;b1,0;;marray $fields;;pmixed $conditions;;p">
				<treenode node="conditions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;2656;47;2656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;2656;34;2656;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="updateCounterCache;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2122;2;2191;;;;vpos;;vvoid;;r&#xA;Description&#xA;     Updates the counter cache of belongsTo associations after a save or delete operation&#xA;&#xA;Parameters:&#xA;    array $keys - Optional foreign key data, defaults to the information $this-&gt;data&#xA;    bool $created - True if a new record was created, otherwise only associations with;;d71,2122;;b1,0;;marray $keys;;pbool $created;;p">
				<treenode node="created;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f53;2122;61;2122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="keys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f36;2122;41;2122;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="url;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;257;2;259;;;;vpos;;vstring;;r&#xA;Description&#xA;     Finds URL for specified action.&#xA;&#xA;Parameters:&#xA;    string|array $url - Either a relative string url like `/products/view/23` or&#xA;    bool $full - If true, the full base URL will be prepended to the result&#xA;&#xA;Return:&#xA;   Full translated URL with base path;;d49,257;;b1,0;;mstring|array $url;;pbool $full;;p">
				<treenode node="full;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f34;257;39;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f21;257;25;257;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="uuid;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;782;2;792;;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;31;2;96;;;;vpos;;vstring;;r&#xA;Description&#xA;     Generates a unique, non-random DOM ID for an object, based on the object type and the target URL.&#xA;&#xA;Parameters:&#xA;    string $object - Type of object, i&#xA;    string $url - The object's target URL;;d37,782;;b1,0;;mstring $object;;pstring $url;;p">
				<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f22;782;29;782;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f31;782;35;782;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="validate;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;883;2;891;;;;vpos;;vint;;r&#xA;Description&#xA;     Returns number of errors in a submitted FORM.&#xA;&#xA;Return:&#xA;   Number of errors;;d28,883;;b1,0;;m">
			</treenode>
			<treenode node="validateAssociated;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2643;2;2645;;;;vpos;;varray;;r&#xA;Description&#xA;     Validates a single record, as well as all its directly associated records.&#xA;&#xA;Parameters:&#xA;    array - &amp;$data Record data to validate&#xA;    array $options - Options to use when validating record data (see above), See also $options of validates()&#xA;&#xA;Return:&#xA;   |bool If atomic: True on success, or false on failure;;d64,2643;;b1,0;;marray;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f37;2643;42;2643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f44;2643;52;2643;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="validateErrors;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;902;2;919;;;;vpos;;varray;;r&#xA;Description&#xA;     Validates models passed by parameters. Takes a list of models as a variable argument. Example:&#xA;&#xA;Return:&#xA;   Validation errors, or false if none;;d34,902;;b1,0;;m">
			</treenode>
			<treenode node="validateMany;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;2397;2;2399;;;;vpos;;vbool;;r&#xA;Description&#xA;     Validates multiple individual records for a single model&#xA;&#xA;Parameters:&#xA;    array - &amp;$data Record data to validate&#xA;    array $options - Options to use when validating record data (see above), See also $options of validates()&#xA;&#xA;Return:&#xA;   |array If atomic: True on success, or false on failure;;d58,2397;;b1,0;;marray;;parray $options;;p">
				<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f31;2397;36;2397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f38;2397;46;2397;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="validates;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3458;2;3460;;;;vpos;;vbool;;r&#xA;Description&#xA;     Returns true if all fields pass validation. Will validate hasAndBelongsToMany associations that use the 'with' key as well. Since _saveMulti is incapable of exiting a save operation.&#xA;&#xA;Parameters:&#xA;    array $options - An optional array of custom options to be made available in the beforeValidate callback&#xA;&#xA;Return:&#xA;   True if there are no errors;;d47,3458;;b1,0;;marray $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f27;3458;35;3458;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="validator;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;3872;2;3880;;;;vpos;;vModelValidator;;r&#xA;Description&#xA;     Returns an instance of a model validator for this class&#xA;&#xA;Parameters:&#xA;    ModelValidator $instance - Model validator instance;;d60,3872;;b1,0;;mModelValidator $instance;;p">
				<treenode node="instance;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f42;3872;51;3872;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="value;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;710;2;755;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Gets the data for the current tag&#xA;&#xA;Parameters:&#xA;    array|string $options - If an array, should be an array of attributes that $key needs to be added to&#xA;    string $field - Field name&#xA;    string $key - The name of the attribute to be set, defaults to 'value'&#xA;&#xA;Return:&#xA;   If an array was given for $options, an array with $key set will be returned;;d74,710;;b1,0;;marray|string $options;;pstring $field;;pstring $key;;p">
				<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f43;710;49;710;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f58;710;62;710;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f23;710;31;710;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="webroot;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;267;2;295;;;;vpos;;vstring;;r&#xA;Description&#xA;     Checks if a file exists when theme is used, if no file is found default location is returned&#xA;&#xA;Parameters:&#xA;    string $file - The file to create a webroot path to&#xA;&#xA;Return:&#xA;   Web accessible path to file;;d32,267;;b1,0;;mstring $file;;p">
				<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f25;267;30;267;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="wordWrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;356;2;362;;;;vpos;;vstring;;r&#xA;Description&#xA;     Unicode and newline aware version of wordwrap.&#xA;&#xA;Parameters:&#xA;    string $text - The text to format&#xA;    int $width - The width to wrap to&#xA;    string $break - The line is broken using the optional break parameter&#xA;    bool $cut - If the cut is set to true, the string is always wrapped at the specified width&#xA;&#xA;Return:&#xA;   Formatted text;;d82,356;;b1,5;;mstring $text;;pint $width;;pstring $break;;pbool $cut;;p">
				<treenode node="break;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f53;356;59;356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="cut;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f68;356;72;356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f33;356;38;356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="width;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f40;356;46;356;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="wrap;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f15;327;2;345;;;;vpos;;vstring;;r&#xA;Description&#xA;     Wraps text to a specific width, can optionally wrap at word breaks.&#xA;&#xA;Parameters:&#xA;    string $text - The text to format&#xA;    array|int $options - Array of options to use, or an integer to wrap the text to&#xA;&#xA;Return:&#xA;   Formatted text;;d56,327;;b1,5;;mstring $text;;parray|int $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f36;327;44;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php;f29;327;34;327;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="wrapText;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;588;2;590;;;;vpos;;vstring;;r&#xA;Description&#xA;     Wrap a block of text. Allows you to set the width, and indenting on a block of text.&#xA;&#xA;Parameters:&#xA;    string $text - Text the text to format&#xA;    string|int|array $options - Array of options to use, or an integer to wrap the text to&#xA;&#xA;Return:&#xA;   Wrapped / indented text;;d53,588;;b1,0;;mstring $text;;pstring|int|array $options;;p">
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f33;588;41;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f26;588;31;588;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="write;PHP:Function Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;348;2;396;;;;vpos;;vmixed;;r&#xA;Description&#xA;     Writes schema file from object or options.&#xA;&#xA;Parameters:&#xA;    array|object $object - Schema object or options array&#xA;    array $options - Schema object properties to override object&#xA;&#xA;Return:&#xA;   False or string written to file;;d52,348;;b1,0;;marray|object $object;;parray $options;;p">
				<treenode node="object;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f23;348;30;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
				<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f32;348;40;348;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
				</treenode>
			</treenode>
			<treenode node="__backAssociation;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;572;26;572;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="__backContainableAssociation;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;593;37;593;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="__backInnerAssociation;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;579;31;579;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="__backOriginalAssociation;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;586;34;586;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="__safeUpdateMode;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;601;25;601;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="_alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f41;23;48;23;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f43;31;50;31;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f22;38;29;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="_association;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;131;24;131;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_associationKeys;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;551;28;551;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;563;25;563;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_attributeFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;157;28;157;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_baseConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f11;40;23;40;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_cleaned;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;97;20;97;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_Collection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f11;46;23;46;;;;vposComponentCollection;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_componentMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f11;67;25;67;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_current;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;272;20;272;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_currentType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;280;24;280;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f37;66;43;66;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f38;79;44;79;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f38;37;44;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="_descriptions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f11;47;25;47;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_details;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f52;23;61;23;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f54;31;63;31;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f33;38;42;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="_entityPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;139;23;139;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_eventManager;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;297;25;297;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;655;25;655;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;308;25;308;;;;vposCakeEventManager;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_eventManagerConfigured;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;304;35;304;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f28;20;35;20;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f34;20;41;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="_fieldSuffixes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;113;26;113;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_forced_from_dbo_;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f21;35;39;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="_helperMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;47;22;47;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_insertID;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;629;21;629;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_lastWritten;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;174;24;174;;;;vposint;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_mergeParent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;300;24;300;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_minimizedAttributeFormat;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;164;37;164;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_minimizedAttributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;146;32;146;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_modelScope;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;123;23;123;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_parents;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;265;20;265;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_passedVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;234;23;234;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;251;18;251;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_pathsForPlugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;258;27;258;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_responseClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f11;120;26;120;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;118;19;118;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_scripts;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;244;20;244;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_SERVER;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f5;80;13;80;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f5;89;13;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="_sourceConfigured;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;637;29;637;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_sources;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f11;54;20;54;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_stack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f11;287;18;287;;;;vposarray;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_tainted;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;90;20;90;;;;vposmixed;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_taskMap;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f11;145;20;145;;;;vposstring;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_transactionStarted;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f11;68;31;68;;;;vposbool;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f27;66;33;66;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f28;79;34;79;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f28;37;34;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="_validator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f11;662;22;662;;;;vposModelValidator;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="_View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f11;104;17;104;;;;vposView;;v;;r;;d-1,-1;;b2,0;;m">
			</treenode>
			<treenode node="Aco;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;61;12;61;;;;vposPhpAco;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="action;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\private_action.ctp;f113;19;120;19;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_action.ctp;f92;19;99;19;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f73;19;80;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="actions;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f12;76;20;76;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="actsAs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;482;15;482;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f11;74;18;74;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="admin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f14;20;20;20;;;;vpos;;v;;r&#xA;Description&#xA;     Bake Template for Controller action generation.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="alias;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;255;14;255;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f41;23;47;23;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f43;34;49;34;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f21;52;27;52;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="appDir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php;f1;26;8;26;;C:\xampp\htdocs\ISLL\app\Console\cake.php;f1;27;8;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="arg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f37;45;41;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="args;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f2;43;7;43;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;86;13;86;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="arguments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f12;25;22;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="argv;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php;f28;47;33;47;;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f28;53;33;53;;C:\xampp\htdocs\ISLL\app\Console\cake.php;f28;46;33;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Aro;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;54;12;54;;;;vposPhpAro;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="assoc;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f26;104;32;104;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f55;65;61;65;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="assocData;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f66;30;76;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="associationName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f34;66;50;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="associations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f12;22;25;22;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f14;30;27;30;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f11;37;24;37;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f12;22;25;22;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f14;33;27;33;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f13;29;26;29;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f12;28;25;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="assocName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f52;30;62;30;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="assocType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f75;27;85;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="attributes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp;f3;99;14;99;;C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp;f3;95;14;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="autoLayout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;141;19;141;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;173;19;173;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="autoRender;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;166;19;166;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="bar;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\nocache_multiple_element.ctp;f12;5;16;5;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="barfoo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\sub2.ctp;f7;1;14;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="baseDir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\header.php;f39;51;47;51;;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\footer.php;f25;23;33;23;;;;vpos;;v;;r&#xA;Description&#xA;     Short description for file.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="batman;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\multiple_nocache.ctp;f12;2;19;2;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="behavior;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f63;80;72;80;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Behaviors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;489;18;489;;;;vposBehaviorCollection;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="belongsTo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;318;18;318;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="belongsToCount;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f1;137;16;137;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="bindKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f29;56;37;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="bindParam;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f4;52;14;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="bindType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f17;52;26;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="bindVal;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f41;56;49;56;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Blocks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;69;15;69;;;;vposViewBlock;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="boot;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f27;174;32;174;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="bootstrapping;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f5;150;19;150;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="cacheAction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;171;20;171;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;242;20;242;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="cacheQueries;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;271;21;271;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="cacheSources;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;76;21;76;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;503;21;503;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="cakeDescription;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\default.ctp;f0;4;16;4;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\error.ctp;f0;7;16;7;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\default.ctp;f0;7;16;7;;C:\xampp\htdocs\ISLL\app\View\Layouts\error.ctp;f0;16;16;16;;C:\xampp\htdocs\ISLL\app\View\Layouts\default.ctp;f0;16;16;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="cakeVersion;PHP:Var Name;C:\xampp\htdocs\ISLL\app\View\Layouts\default.ctp;f0;17;12;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="called;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f2;51;9;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="cases;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\menu.php;f27;24;33;24;;;;vpos;;v;;r&#xA;Description&#xA;     Short description for file.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="channel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\rss\default.ctp;f11;3;19;3;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\rss\default.ctp;f11;1;19;1;;C:\xampp\htdocs\ISLL\app\View\Layouts\rss\default.ctp;f11;1;19;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="class;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_table.ctp;f133;19;139;19;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_helper.ctp;f78;21;84;21;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource.ctp;f95;21;101;21;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_controller.ctp;f78;21;84;21;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_connection.ctp;f100;19;106;19;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_component.ctp;f78;21;84;21;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_behavior.ctp;f78;21;84;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="className;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f20;54;30;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="command;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;79;16;79;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="compact;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f6;44;14;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="component;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f26;31;36;31;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;191;19;191;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;60;19;60;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f12;30;23;30;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="Components;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;180;19;180;;;;vposComponentCollection;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="composerInstall;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php;f1;28;17;28;;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f1;36;17;36;;C:\xampp\htdocs\ISLL\app\Console\cake.php;f1;29;17;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="config;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource_config.ctp;f107;19;114;19;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\more.load.php;f0;18;7;18;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\load.php;f0;18;7;18;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\var_test2.php;f0;1;7;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\var_test.php;f0;1;7;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\htmlhelper_tags.php;f0;2;7;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\acl.php;f0;20;7;20;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;61;15;61;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;31;15;31;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\acl.php;f0;95;7;95;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\ff00_ffef.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2c80_2cff.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2c60_2c7f.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2c00_2c5f.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2460_24ff.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2150_218f.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2100_214f.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\1f00_1fff.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\1e00_1eff.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0530_058f.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0500_052f.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0400_04ff.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0370_03ff.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0250_02af.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0180_024F.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0100_017f.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0080_00ff.php;f0;39;7;39;;C:\xampp\htdocs\ISLL\lib\Cake\Config\config.php;f0;19;7;19;;C:\xampp\htdocs\ISLL\app\Config\acl.php;f0;116;7;116;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="connected;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\test_nocache_tags.ctp;f1;63;11;63;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\home.ctp;f2;48;12;48;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php;f8;33;18;33;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp;f2;94;12;94;;C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp;f2;90;12;90;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="connection;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;56;19;56;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="connectionError;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp;f20;95;36;95;;C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp;f20;91;36;91;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="construction;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f17;45;30;45;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="content;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\wide.ctp;f11;1;19;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\default.ctp;f11;0;19;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\default.ctp;f0;1;8;1;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Emails\text\default.ctp;f11;16;19;16;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Emails\html\default.ctp;f0;17;8;17;;C:\xampp\htdocs\ISLL\app\View\Emails\text\default.ctp;f11;16;19;16;;C:\xampp\htdocs\ISLL\app\View\Emails\html\default.ctp;f0;17;8;17;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="controller;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\private_action.ctp;f55;16;66;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_action.ctp;f57;17;68;17;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="controllerName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f14;24;29;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="count;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\extract.ctp;f0;1;6;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="currentModelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f20;25;37;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="data;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\xml\index.ctp;f0;1;5;1;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;89;13;89;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f36;50;41;50;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f36;81;41;81;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f37;51;42;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="db;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f2;27;5;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="defaultModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f1;28;14;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="dependency;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f24;20;35;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="details;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f51;23;59;23;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f53;34;61;34;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f31;52;39;52;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="dispatcher;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f0;59;11;59;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f0;61;11;61;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php;f0;22;11;22;;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f0;23;11;23;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f0;68;11;68;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f0;70;11;70;;C:\xampp\htdocs\ISLL\app\Console\cake.php;f0;23;11;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="Dispatcher;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f0;104;11;104;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f0;113;11;113;;;;vposDispatcher;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="displayField;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;73;21;73;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f4;64;17;64;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="done;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f1;65;6;65;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f2;78;7;78;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f2;36;7;36;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f1;49;6;49;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f1;80;6;80;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f2;50;7;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ds;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_table.ctp;f163;19;166;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="duration;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\core.php;f0;336;9;336;;C:\xampp\htdocs\ISLL\app\Config\core.php;f0;355;9;355;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="e;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\home.ctp;f20;49;22;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="elementCache;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;218;21;218;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="elementCacheSettings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;227;29;227;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="enabled;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_connection.ctp;f11;27;19;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="encoding;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;177;10;177;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="engine;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\core.php;f0;333;7;333;;C:\xampp\htdocs\ISLL\app\Config\core.php;f0;352;7;352;;;;vpos;;v;;r&#xA;Description&#xA;     Configure the cache handlers that CakePHP will use for internal metadata like class maps, and model schema.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="error;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\scaffold_error.ctp;f10;34;16;34;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\pdo_error.ctp;f17;21;23;21;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\fatal_error.ctp;f14;20;20;20;;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f15;23;21;23;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="errorMsg;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp;f2;97;11;97;;C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp;f2;93;11;93;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="exception;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\missing_connection.php;f16;21;26;21;;;;vpos;;v;;r&#xA;Description&#xA;     Missing Connection error page;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="excerpt;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f1;25;9;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="ext;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;148;12;148;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;213;12;213;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="failed;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f2;81;9;81;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f2;91;9;91;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f2;90;9;90;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f2;100;9;100;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="field;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f20;20;26;20;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f27;21;33;21;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f22;22;28;22;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f23;87;29;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="fields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f9;20;16;20;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f16;21;23;21;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f11;22;18;22;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="fieldset;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;76;17;76;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="file;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_view.ctp;f71;23;76;23;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_layout.ctp;f97;19;102;19;;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;49;13;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="filePresent;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\test_nocache_tags.ctp;f3;48;15;48;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\home.ctp;f2;29;14;29;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp;f2;75;14;75;;C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp;f1;71;13;71;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="findMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;644;20;644;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="findQueryType;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;510;22;510;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="firstName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;141;18;141;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="fixtures;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f17;34;26;34;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="foo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\nocache_multiple_element.ctp;f12;1;16;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="foobar;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\sub1.ctp;f7;3;14;3;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="form;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\type_check.ctp;f19;0;24;0;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="formatted;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\json\index.ctp;f0;4;10;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="found;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f0;24;6;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="fullClassName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f14;25;28;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="habtmCount;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f1;163;12;163;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="hasAndBelongsToMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;471;28;471;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="hasMany;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;410;16;410;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="hasOne;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;361;15;361;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="hasRendered;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;185;20;185;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;98;16;98;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;40;16;40;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;95;16;95;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f11;50;19;50;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="Helpers;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;62;16;62;;;;vposHelperCollection;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="html;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\helper_overwrite.ctp;f5;1;10;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="httpHost;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;161;10;161;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="i;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f0;127;2;127;;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f36;49;38;49;;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f37;23;39;23;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f40;119;42;119;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f7;53;9;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="id;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;81;11;81;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="import;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\fixture.ctp;f10;37;17;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="imported;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php;f0;35;9;35;;;;vpos;;v;;r&#xA;Description&#xA;     ControllerTask Test Case;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="index;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f3;139;9;139;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="indexParams;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f2;55;14;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="install;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php;f1;27;9;27;;C:\xampp\htdocs\ISLL\app\Console\cake.php;f1;28;9;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="interactive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;65;20;65;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="isKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f1;21;7;21;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f3;29;9;29;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f1;21;7;21;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f3;32;9;32;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="isScaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f5;27;16;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="item;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\json\index.ctp;f26;9;31;9;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="k;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f30;49;32;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="key;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f27;89;31;89;;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f22;46;26;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="lastName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;148;17;148;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;126;15;126;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;158;15;158;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="layoutPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;133;19;133;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;134;19;134;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="len;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f15;53;19;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="line;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\default.ctp;f21;3;26;3;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Emails\html\default.ctp;f21;19;26;19;;C:\xampp\htdocs\ISLL\app\View\Emails\html\default.ctp;f21;19;26;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="logInfo;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f33;36;41;36;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="mapMethods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;84;19;84;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="match;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f1;50;7;50;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="message;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\pdo_error.ctp;f12;19;20;19;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource.ctp;f17;22;25;22;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_connection.ctp;f11;22;19;22;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\flash.ctp;f42;16;50;16;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Errors\error500.ctp;f15;0;23;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Errors\error400.ctp;f15;0;23;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\session_helper.ctp;f15;3;23;3;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Errors\error500.ctp;f15;1;23;1;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\flash.ctp;f44;23;52;23;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Errors\error500.ctp;f15;7;23;7;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Errors\error400.ctp;f15;7;23;7;;C:\xampp\htdocs\ISLL\app\View\Layouts\flash.ctp;f30;35;38;35;;C:\xampp\htdocs\ISLL\app\View\Errors\error500.ctp;f15;16;23;16;;C:\xampp\htdocs\ISLL\app\View\Errors\error400.ctp;f15;16;23;16;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="messages;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\extract.ctp;f0;2;9;2;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="method;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f27;70;34;70;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="methodCalls;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php;f8;155;20;155;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="methods;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;265;16;265;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f15;70;23;70;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="model;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\fixture.ctp;f14;23;20;23;;;;vpos;;v;;r&#xA;Description&#xA;     Fixture Template file;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="modelClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f38;39;49;39;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f36;40;47;40;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f50;29;61;29;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;275;19;275;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f56;34;67;34;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f50;43;61;43;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f46;17;57;17;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;131;19;131;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="modelKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;284;17;284;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="modelObj;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f11;66;20;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="name;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;84;13;84;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\test_nocache_tags.ctp;f26;26;31;26;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\session_helper.ctp;f16;1;21;1;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;248;13;248;;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;35;13;35;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;64;13;64;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f14;24;19;24;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;93;13;93;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="namedConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f0;74;12;74;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="noLogs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f0;21;7;21;;;;vpos;;v;;r&#xA;Description&#xA;     SQL Dump element. Dumps out SQL log information;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="null;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\footer.php;f3;28;8;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="OptionParser;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;58;21;58;;;;vposConsoleOptionParser;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="options;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php;f8;47;16;47;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="order;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;530;14;530;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="otherFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f2;96;14;96;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="otherModelName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f4;68;19;68;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="otherPluralHumanName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f1;95;22;95;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="otherPluralName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f4;69;20;69;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="otherSingularVar;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f0;129;17;129;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f1;94;18;94;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="out;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f3;120;7;120;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pageTitle;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\flash.ctp;f18;3;28;3;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\flash.ctp;f18;11;28;11;;C:\xampp\htdocs\ISLL\app\View\Layouts\flash.ctp;f18;20;28;20;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="paging;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\json\index.ctp;f0;2;7;2;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="params;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f1;26;8;26;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;72;15;72;;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f2;54;9;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="passedArgs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;91;19;91;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;249;19;249;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="path;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_view.ctp;f20;29;25;29;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_layout.ctp;f20;29;25;29;;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;42;13;42;;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f19;27;24;27;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="paths;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_view.ctp;f1;28;7;28;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_layout.ctp;f1;28;7;28;;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f0;25;6;25;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pause;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\flash.ctp;f47;7;53;7;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\flash.ctp;f47;14;53;14;;C:\xampp\htdocs\ISLL\app\View\Layouts\flash.ctp;f67;24;73;24;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="plugin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_plugin.ctp;f102;19;109;19;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_helper.ctp;f19;16;26;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource.ctp;f19;16;26;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_controller.ctp;f19;16;26;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_component.ctp;f19;16;26;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_behavior.ctp;f19;16;26;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;77;15;77;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;68;15;68;;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\menu.php;f28;30;35;30;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;240;15;240;;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;63;15;63;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;220;15;220;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f18;21;25;21;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f18;21;25;21;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;101;15;101;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pluginDot;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_helper.ctp;f0;16;10;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource.ctp;f0;16;10;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_controller.ctp;f0;16;10;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_component.ctp;f0;16;10;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_behavior.ctp;f0;16;10;16;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pluginPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f39;21;50;21;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp;f44;21;55;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pluginPattern;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f1;49;15;49;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="plugins;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\menu.php;f17;27;25;27;;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f4;44;12;44;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pluralHumanName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f47;58;63;58;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f15;17;31;17;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f63;34;79;34;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f58;46;74;46;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f33;17;49;17;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f61;48;77;48;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pluralName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f25;26;36;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="pluralVar;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f23;16;33;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f23;16;33;16;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f23;16;33;16;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f23;16;33;16;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f23;16;33;16;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f23;16;33;16;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="postConstruct;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f11;55;25;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="preConstruct;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f11;53;24;53;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="prefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\core.php;f0;342;7;342;;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f23;53;30;53;;C:\xampp\htdocs\ISLL\app\Config\core.php;f0;361;7;361;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="prefixes;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f0;42;9;42;;;;vpos;;v;;r&#xA;Description&#xA;     Connects the default, built-in routes, including prefix and plugin routes. The following routes are created in the order below:;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="primaryKey;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f123;50;134;50;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f101;45;112;45;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f70;29;81;29;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;111;19;111;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f145;44;156;44;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f118;48;129;48;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f54;23;65;23;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f4;54;15;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="records;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\fixture.ctp;f10;55;18;55;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="recursive;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;519;18;519;;;;vposint;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="relation;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f40;29;49;29;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f54;66;63;66;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="relations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f0;126;10;126;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f0;92;10;92;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="request;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;201;16;201;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;61;16;61;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;105;16;105;;;;vposCakeRequest;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="response;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;208;17;208;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;113;17;113;;;;vposCakeResponse;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="review;PHP:Var Name;C:\xampp\htdocs\ISLL\app\View\SysReviews\index.ctp;f31;21;38;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="root;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php;f1;25;6;25;;C:\xampp\htdocs\ISLL\app\Console\cake.php;f1;26;6;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="rootInstall;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php;f1;35;13;35;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="s;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php;f1;156;3;156;;;;vpos;;v;;r&#xA;Description&#xA;     Full URL prefix;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="scaffold;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;257;17;257;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="scaffoldFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f9;20;24;20;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f15;20;30;20;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f26;19;41;19;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="schema;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\fixture.ctp;f10;46;17;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="schemaName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;96;19;96;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="scripts_for_layout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\js\default.ctp;f11;0;30;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\default.ctp;f7;19;26;19;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\js\default.ctp;f11;0;30;0;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="settings;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;33;17;33;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\test_nocache_tags.ctp;f4;20;13;20;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\home.ctp;f2;15;11;15;;C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php;f8;74;17;74;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php;f8;53;17;53;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp;f2;61;11;61;;C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp;f1;57;10;57;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="shortParams;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f1;51;13;51;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="singularHumanName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f38;17;56;17;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f57;76;75;76;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f32;17;50;17;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f60;78;78;78;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f83;19;101;19;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f65;38;83;38;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="singularName;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f25;41;38;41;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="singularVar;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f7;29;19;29;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f28;26;40;26;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f59;27;71;27;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f43;29;55;29;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="source;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f22;26;29;26;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="sources;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f1;23;9;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="spiderman;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\multiple_nocache.ctp;f12;8;22;8;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="sqlLogs;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f17;21;25;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="stack;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp;f43;23;49;23;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="stderr;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;159;15;159;;;;vposConsoleOutput;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="stdin;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;166;14;166;;;;vposConsoleInput;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="stdout;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;152;15;152;;;;vposConsoleOutput;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="subDir;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;156;15;156;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="superman;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\cache_layout.ctp;f11;7;20;7;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="sysreviews;PHP:Var Name;C:\xampp\htdocs\ISLL\app\View\SysReviews\index.ctp;f16;21;27;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="table;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_table.ctp;f102;19;108;19;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;103;14;103;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f1;49;7;49;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\fixture.ctp;f10;28;16;28;;;;vpos;;v;;r&#xA;Description&#xA;     CakePHP(tm) : Rapid Development Framework (http://cakephp.org) Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org);;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="tablePrefix;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;233;20;233;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="tables;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php;f8;70;15;70;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="tableToModel;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;262;21;262;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="tags;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;83;13;83;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="taskNames;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;116;18;116;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;109;14;109;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="Tasks;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;138;14;138;;;;vposTaskCollection;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="test;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Console\Templates\test\classes\test_object.ctp;f11;1;16;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="text;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp;f2;37;7;37;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="theme;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;163;14;163;;C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php;f8;54;14;54;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="this;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp;f9;28;14;28;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp;f16;21;21;21;;C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp;f6;18;11;18;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\scaffold_error.ctp;f6;35;11;35;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\private_action.ctp;f11;26;16;26;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\pdo_error.ctp;f11;35;16;35;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_view.ctp;f99;19;104;19;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_table.ctp;f11;26;16;26;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_plugin.ctp;f11;42;16;42;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_layout.ctp;f10;28;15;28;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_helper.ctp;f11;38;16;38;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource_config.ctp;f11;26;16;26;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource.ctp;f11;31;16;31;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_database.ctp;f11;30;16;30;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_controller.ctp;f11;38;16;38;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_connection.ctp;f5;39;10;39;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_component.ctp;f11;38;16;38;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_behavior.ctp;f11;38;16;38;;C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_action.ctp;f11;40;16;40;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Posts\themed.ctp;f11;2;16;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Layouts\default.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Emails\text\themed.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\json\index.ctp;f16;2;21;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\sequencial_nocache.ctp;f7;3;12;3;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\parent_view.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\parent_2.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\parent_1.ctp;f0;1;5;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\open_block.ctp;f0;1;5;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\nocache_multiple_element.ctp;f11;8;16;8;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\nested_extends.ctp;f0;1;5;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\helper_overwrite.ctp;f5;2;10;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_with_element.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_self.ctp;f6;0;11;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_missing_element.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_loop_inner.ctp;f6;0;11;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_loop.ctp;f6;0;11;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_element.ctp;f6;0;11;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\cache_form.ctp;f12;2;17;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\xml\default.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\rss\default.ctp;f5;1;10;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\json\default.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\text\japanese.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\text\default.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\html\thin.ctp;f19;4;24;4;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\html\japanese.ctp;f19;4;24;4;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\html\default.ctp;f19;4;24;4;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\multi_cache.ctp;f7;3;12;3;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\flash.ctp;f11;4;16;4;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\default.ctp;f0;2;5;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\cache_layout.ctp;f11;5;16;5;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\cache_empty_sections.ctp;f19;3;24;3;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\banana.ctp;f6;2;11;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\ajax2.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\ajax.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Errors\error500.ctp;f6;7;11;7;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Errors\error400.ctp;f6;10;11;10;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\custom_helper.ctp;f22;0;27;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\nested_element.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\image.ctp;f5;2;10;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\sub1.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\plain.ctp;f7;2;12;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\contains_nocache.ctp;f7;3;12;3;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\parent_element.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\html_call.ctp;f5;1;10;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\extended_missing_element.ctp;f6;0;11;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\extended_element.ctp;f6;0;11;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\View\Layouts\Emails\text\default.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Layouts\Emails\text\plug_default.ctp;f11;1;16;1;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Errors\error500.ctp;f6;8;11;8;;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\View\index.ctp;f18;5;23;5;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp;f55;143;60;143;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\xml\default.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\rss\default.ctp;f21;5;26;5;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\Emails\text\default.ctp;f11;16;16;16;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\Emails\html\default.ctp;f19;10;24;10;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\flash.ctp;f11;10;16;10;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\error.ctp;f12;12;17;12;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\default.ctp;f12;12;17;12;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\ajax.ctp;f11;7;16;7;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Errors\error500.ctp;f6;14;11;14;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Errors\error400.ctp;f6;17;11;17;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f33;52;38;52;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f33;83;38;83;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f34;53;39;53;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f22;68;27;68;;C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp;f12;15;17;15;;C:\xampp\htdocs\ISLL\app\View\Layouts\xml\default.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\app\View\Layouts\rss\default.ctp;f21;5;26;5;;C:\xampp\htdocs\ISLL\app\View\Layouts\js\default.ctp;f11;0;16;0;;C:\xampp\htdocs\ISLL\app\View\Layouts\Emails\text\default.ctp;f11;16;16;16;;C:\xampp\htdocs\ISLL\app\View\Layouts\Emails\html\default.ctp;f19;19;24;19;;C:\xampp\htdocs\ISLL\app\View\Layouts\flash.ctp;f11;19;16;19;;C:\xampp\htdocs\ISLL\app\View\Layouts\error.ctp;f12;21;17;21;;C:\xampp\htdocs\ISLL\app\View\Layouts\default.ctp;f12;22;17;22;;C:\xampp\htdocs\ISLL\app\View\Layouts\ajax.ctp;f11;16;16;16;;C:\xampp\htdocs\ISLL\app\View\Errors\error500.ctp;f6;23;11;23;;C:\xampp\htdocs\ISLL\app\View\Errors\error400.ctp;f6;26;11;26;;C:\xampp\htdocs\ISLL\app\View\Users\Codelobster0.php;f5;2;10;2;;C:\xampp\htdocs\ISLL\app\View\Users\authenticate.ctp;f5;2;10;2;;C:\xampp\htdocs\ISLL\app\View\SysReviews\index.ctp;f37;0;42;0;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="time;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\custom_helper.ctp;f42;0;47;0;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="title;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\session_helper.ctp;f16;2;22;2;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="type;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp;f27;50;32;50;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp;f27;81;32;81;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp;f28;51;33;51;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f10;28;15;28;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="typeCount;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f2;116;12;116;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="url;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\flash.ctp;f71;7;75;7;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Errors\error400.ctp;f13;5;17;5;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\flash.ctp;f73;14;77;14;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Errors\error400.ctp;f13;12;17;12;;C:\xampp\htdocs\ISLL\app\View\Layouts\flash.ctp;f75;24;79;24;;C:\xampp\htdocs\ISLL\app\View\Errors\error400.ctp;f13;21;17;21;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="useConsistentAfterFind;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;622;31;622;;;;vposbool;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="useDbConfig;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;55;20;55;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f10;38;22;38;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="user;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\xml\index.ctp;f19;2;24;2;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\json\index.ctp;f11;5;16;5;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="userPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php;f8;40;17;40;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="users;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\xml\index.ctp;f9;2;15;2;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="uses;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;84;13;84;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp;f15;20;20;20;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php;f8;124;13;124;;;;vposmixed;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="useTable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;63;17;63;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f4;48;13;48;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="uuids;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;192;14;192;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="validate;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;211;17;211;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f11;84;20;84;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="validationDomain;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;225;25;225;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="validationErrors;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;178;25;178;;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;218;25;218;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;291;25;291;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="validations;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f33;87;45;87;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="validator;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp;f35;89;45;89;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="value;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\test_nocache_tags.ctp;f35;26;41;26;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\japanese.ctp;f30;0;36;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\custom.ctp;f31;0;37;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\japanese.ctp;f36;0;42;0;;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\custom.ctp;f37;0;43;0;;C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php;f30;46;36;46;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="var;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\TestsApps\index.ctp;f60;0;64;0;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="variable;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\cache_layout.ctp;f12;10;21;10;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="vendorPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php;f0;58;11;58;;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php;f0;60;11;60;;C:\xampp\htdocs\ISLL\app\webroot\test.php;f0;67;11;67;;C:\xampp\htdocs\ISLL\app\webroot\index.php;f0;69;11;69;;;;vpos;;v;;r&#xA;Description&#xA;     This auto-detects CakePHP as a composer installed library. You may remove this if you are not planning to use composer (not recommended, though).;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="versionFile;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Config\config.php;f0;18;12;18;;;;vpos;;v;;r&#xA;Description&#xA;     Core Configurations.;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="view;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;119;13;119;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;149;13;149;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="View;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\footer.php;f3;29;8;29;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;206;13;206;;;;vposView;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="viewClass;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;198;18;198;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="viewPath;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;105;17;105;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;127;17;127;;;;vposstring;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="viewTaskComment;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\View\index.ctp;f37;16;53;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="viewTaskComments;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\View\index.ctp;f16;16;33;16;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="viewVars;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\View\View.php;f8;112;17;112;;C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php;f8;141;17;141;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="virtualFields;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;544;22;544;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="wannaUseSession;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp;f10;54;26;54;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="whitelist;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php;f8;496;18;496;;;;vposarray;;v;;r;;d-1,-1;;b1,0;;m">
			</treenode>
			<treenode node="x;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\cache_empty_sections.ctp;f21;4;23;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
			<treenode node="y;PHP:Var Name;C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\cache_empty_sections.ctp;f21;1;23;1;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
			</treenode>
		</phptree>
		<jstree>
		</jstree>
		<scsstree>
		</scsstree>
		<lesstree>
		</lesstree>
	</codestructure><cakedata>
	</cakedata>
	<dplmenupath>
	</dplmenupath><laravael>
	</laravael><smartyassings>
	</smartyassings><twigtemplate>
	</twigtemplate><yiidata>
	</yiidata>
	<todoblock>
	</todoblock>
	<filescache>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\view.ctp" crc="-700017381"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\index.ctp" crc="-534751154"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Scaffolds\form.ctp" crc="35209250"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TimeHelper.php" crc="-2000721675"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\TextHelper.php" crc="2146808106"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\SessionHelper.php" crc="1840118084"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\RssHelper.php" crc="1433513548"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PrototypeEngineHelper.php" crc="729001712"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\PaginatorHelper.php" crc="-1151049086"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\NumberHelper.php" crc="473154275"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\MootoolsEngineHelper.php" crc="-1848727624"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsHelper.php" crc="-2036873819"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JsBaseEngineHelper.php" crc="1624883135"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\JqueryEngineHelper.php" crc="882854820"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\HtmlHelper.php" crc="-916200499"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\FormHelper.php" crc="376300630"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper\CacheHelper.php" crc="1822792921"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\scaffold_error.ctp" crc="-1695048591"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\private_action.ctp" crc="762977030"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\pdo_error.ctp" crc="292122295"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_view.ctp" crc="-846525042"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_table.ctp" crc="1929095051"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_plugin.ctp" crc="-987907231"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_layout.ctp" crc="1710313762"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_helper.ctp" crc="-1797384544"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource_config.ctp" crc="1662089833"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_datasource.ctp" crc="-2093110747"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_database.ctp" crc="683708822"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_controller.ctp" crc="247622752"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_connection.ctp" crc="-1722173784"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_component.ctp" crc="74583026"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_behavior.ctp" crc="-303702614"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\missing_action.ctp" crc="-52569624"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Errors\fatal_error.ctp" crc="-792268399"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\sql_dump.ctp" crc="1774770207"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Elements\exception_stack_trace.ctp" crc="2121510740"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\XmlView.php" crc="2023025140"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\ViewBlock.php" crc="678215135"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\View.php" crc="-588859772"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\ThemeView.php" crc="521955908"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\ScaffoldView.php" crc="736071267"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\MediaView.php" crc="-1451215743"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\JsonView.php" crc="-39061842"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\HelperCollection.php" crc="-741839481"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\View\Helper.php" crc="-1693108466"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Xml.php" crc="-1683041167"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Validation.php" crc="84158744"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\String.php" crc="-424272078"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Set.php" crc="880861701"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Security.php" crc="1209979290"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Sanitize.php" crc="1529198590"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\ObjectCollection.php" crc="1426239644"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Inflector.php" crc="1141920796"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Hash.php" crc="62439124"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Folder.php" crc="-1634097691"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\File.php" crc="931664375"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\Debugger.php" crc="1381249532"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\ClassRegistry.php" crc="-2007498883"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeTime.php" crc="-1336782419"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Utility\CakeNumber.php" crc="-1404364591"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\xdebug.php" crc="-1073672001"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\phpunit.php" crc="-846922663"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\missing_connection.php" crc="1723902229"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\menu.php" crc="-1979329113"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\header.php" crc="-1736522944"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\templates\footer.php" crc="335078232"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeTextReporter.php" crc="-1784547628"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeHtmlReporter.php" crc="1803659675"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Reporter\CakeBaseReporter.php" crc="-1091059144"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestModel.php" crc="-993068310"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeTestFixture.php" crc="-898085380"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Fixture\CakeFixtureManager.php" crc="2134280627"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\TextCoverageReport.php" crc="-384438916"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\HtmlCoverageReport.php" crc="1322367577"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\Coverage\BaseCoverageReport.php" crc="68028977"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\ControllerTestCase.php" crc="680441678"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteDispatcher.php" crc="736593663"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuiteCommand.php" crc="246183087"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestSuite.php" crc="308351300"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestRunner.php" crc="1050931693"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestLoader.php" crc="1908628662"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\TestSuite\CakeTestCase.php" crc="-1722671235"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\webroot\theme\test_theme\css\webroot_test.css" crc="432441117"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\webroot\theme\test_theme\css\theme_webroot.css" crc="-437045644"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\webroot\js\one\theme_one.js" crc="-1535119997"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\webroot\js\theme.js" crc="627784406"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\webroot\css\theme_webroot.css" crc="-184140013"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\webroot\css\test_asset.css" crc="-1965307178"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Posts\themed.ctp" crc="1644919087"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Posts\scaffold.index.ctp" crc="-1597515583"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Posts\index.ctp" crc="146585034"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Plugin\TestPlugin\Tests\index.ctp" crc="2024947764"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Plugin\TestPlugin\Layouts\plugin_default.ctp" crc="-251769547"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Plugin\TestPlugin\Emails\text\test_plugin_tpl.ctp" crc="-1100646430"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Layouts\default.ctp" crc="633115294"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Emails\text\themed.ctp" crc="-493000973"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Themed\TestTheme\Elements\test_element.ctp" crc="-831866933"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\TestsApps\json\index.ctp" crc="1962822989"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\TestsApps\index.ctp" crc="-1515277926"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\xml\index.ctp" crc="1016557662"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\json\index.ctp" crc="-191401873"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\test_nocache_tags.ctp" crc="2131004527"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\sequencial_nocache.ctp" crc="-330641009"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\scaffold.form.ctp" crc="1926881719"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\parent_view.ctp" crc="228534334"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\parent_2.ctp" crc="-1986835690"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\parent_1.ctp" crc="-1163188917"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\open_block.ctp" crc="-68416436"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\nocache_multiple_element.ctp" crc="79791725"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\nested_extends.ctp" crc="-462691131"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\multiple_nocache.ctp" crc="868599979"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\index.ctp" crc="-939490556"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\helper_overwrite.ctp" crc="1761336230"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_with_element.ctp" crc="-1825896984"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_self.ctp" crc="1444817302"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_missing_element.ctp" crc="1306079760"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_loop_inner.ctp" crc="881505013"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_loop.ctp" crc="-1914764970"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\extend_element.ctp" crc="1558699593"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\cache_form.ctp" crc="-1833229237"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Posts\cache_empty_sections.ctp" crc="1921594968"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\page.home.ctp" crc="-1802173886"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\home.ctp" crc="1116168937"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Pages\extract.ctp" crc="2070647438"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\xml\default.ctp" crc="1218661985"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\rss\default.ctp" crc="-2064000544"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\json\default.ctp" crc="-2092531437"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\js\default.ctp" crc="1733970171"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\text\japanese.ctp" crc="-1174879357"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\text\default.ctp" crc="-731958306"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\html\thin.ctp" crc="-34314140"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\html\japanese.ctp" crc="-1626764317"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\Emails\html\default.ctp" crc="779008656"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\multi_cache.ctp" crc="-870757076"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\flash.ctp" crc="1480113736"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\default.ctp" crc="31928488"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\cache_layout.ctp" crc="1548461669"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\cache_empty_sections.ctp" crc="2000790440"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\banana.ctp" crc="-1531087459"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\ajax2.ctp" crc="166537639"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Layouts\ajax.ctp" crc="-2092531437"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Helper\BananaHelper.php" crc="-819463104"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Errors\error500.ctp" crc="560614158"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Errors\error400.ctp" crc="-1538946375"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\wide.ctp" crc="-1901405448"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\japanese.ctp" crc="-1106417341"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\default.ctp" crc="1867808157"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\custom_helper.ctp" crc="1984185040"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\text\custom.ctp" crc="-1308826518"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\nested_element.ctp" crc="580137418"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\long_line.ctp" crc="-351784536"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\japanese.ctp" crc="-454120243"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\image.ctp" crc="1667375140"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\html.ctp" crc="-1219461014"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\default.ctp" crc="-2080325449"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Emails\html\custom.ctp" crc="-2081836451"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\sub2.ctp" crc="1532612439"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\sub1.ctp" crc="-1295533432"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\plain.ctp" crc="32795088"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\nocache\contains_nocache.ctp" crc="752543445"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\type_check.ctp" crc="806741154"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\test_element.xml" crc="-43359040"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\test_element.ctp" crc="-1202031492"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\session_helper.ctp" crc="-739709920"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\parent_element.ctp" crc="-1089126801"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\html_call.ctp" crc="412935218"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\extended_missing_element.ctp" crc="-137722528"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\View\Elements\extended_element.ctp" crc="2022638498"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Vendor\Test\MyTest.php" crc="385123188"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Vendor\Test\hello.php" crc="-1560662907"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Vendor\somename\some.name.php" crc="1491779453"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Vendor\sample\configure_test_vendor_sample.php" crc="-1203960800"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Vendor\css\test_asset.css" crc="-1965307178"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Vendor\welcome.php" crc="1085401069"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Utility\TestAppEngine.php" crc="-1751250202"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\View\Layouts\Emails\text\default.ctp" crc="-2133848567"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\Console\Command\WelcomeShell.php" crc="-727596845"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\Console\Command\ExampleShell.php" crc="-460652813"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPluginTwo\Config\bootstrap.php" crc="1498461988"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\webroot\js\test_plugin\test.js" crc="-1018949375"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\webroot\css\test_plugin_asset.css" crc="1934403269"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\webroot\root.js" crc="1723171695"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Tests\scaffold.form.ctp" crc="941987851"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Tests\index.ctp" crc="-907955882"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Layouts\Emails\text\plug_default.ctp" crc="318074280"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Layouts\default.ctp" crc="1091219430"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Helper\TestPluginAppHelper.php" crc="-166442933"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Helper\PluggedHelperHelper.php" crc="-786349799"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Helper\OtherHelperHelper.php" crc="1810112000"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Errors\error500.ctp" crc="160565394"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Emails\text\test_plugin_tpl.ctp" crc="561778687"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Elements\sub_dir\sub_element.ctp" crc="-607807232"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Elements\translate.ctp" crc="2122251822"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Elements\test_plugin_element.ctp" crc="955519345"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\View\Elements\plugin_element.ctp" crc="-222588435"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Vendor\sample\sample_plugin.php" crc="982092445"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Vendor\Example\ExampleExample.php" crc="362162907"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Vendor\welcome.php" crc="1267958808"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Utility\TestPluginEngine.php" crc="947028578"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Session\TestPluginSession.php" crc="77327463"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Database\TestDriver.php" crc="1089247777"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\Database\DboDummy.php" crc="2051417588"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestSource.php" crc="1963777689"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Datasource\TestOtherSource.php" crc="15713720"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Behavior\TestPluginPersisterTwoBehavior.php" crc="1593597538"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\Behavior\TestPluginPersisterOneBehavior.php" crc="-1365397657"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginPost.php" crc="-1105376746"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginComment.php" crc="1720104478"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthUser.php" crc="-780669214"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAuthors.php" crc="1925252616"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Model\TestPluginAppModel.php" crc="401926054"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Route\TestRoute.php" crc="1328463222"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\TestDispatcherFilter.php" crc="-1586718071"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Routing\Filter\Test2DispatcherFilter.php" crc="628774565"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Log\Engine\TestPluginLog.php" crc="-596896254"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Error\TestPluginExceptionRenderer.php" crc="-529319591"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Custom\Package\CustomLibClass.php" crc="-118106949"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\Cache\Engine\TestPluginCacheEngine.php" crc="-842550094"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\TestPluginOtherLibrary.php" crc="-287607914"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Lib\TestPluginLibrary.php" crc="1516511546"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\TestPluginOtherComponent.php" crc="-2045529962"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\TestPluginComponent.php" crc="-2054250103"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\PluginsComponent.php" crc="1150042168"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\Component\OtherComponent.php" crc="-106309269"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestsController.php" crc="-1570418235"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestPluginController.php" crc="901815038"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Controller\TestPluginAppController.php" crc="1049102979"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Console\Command\Task\OtherTaskTask.php" crc="-1991334784"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Console\Command\ExampleShell.php" crc="-445121371"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\Schema\schema.php" crc="616291435"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\routes.php" crc="303287428"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\nested.ini" crc="-1082510997"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\more.load.php" crc="-1786207706"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\load.php" crc="-1101811605"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\custom_config.php" crc="-403174507"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\bootstrap.php" crc="-763705028"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\TestPlugin\Config\acl.ini.php" crc="-1004338363"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\PluginJs\webroot\js\one\plugin_one.js" crc="2105098999"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\PluginJs\webroot\js\plugin_js.js" crc="-2037789483"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Plugin\PluginJs\Config\bootstrap.php" crc="2094199349"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Session\TestAppLibSession.php" crc="764141839"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Database\TestLocalDriver.php" crc="1864492820"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2Source.php" crc="-1301753796"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Datasource\Test2OtherSource.php" crc="-357263563"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Behavior\PersisterTwoBehaviorBehavior.php" crc="1036167155"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Behavior\PersisterOneBehaviorBehavior.php" crc="1018631256"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Post.php" crc="1578590650"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterTwo.php" crc="-1805219272"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\PersisterOne.php" crc="1554084140"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Extract.php" crc="755399378"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\Comment.php" crc="1402752271"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Model\AppModel.php" crc="2135774154"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Utility\TestUtilityClass.php" crc="865678523"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Log\Engine\TestAppLog.php" crc="-1474414522"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Cache\Engine\TestAppCacheEngine.php" crc="-855917780"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Lib\Library.php" crc="-1457013887"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Error\TestAppsExceptionRenderer.php" crc="166528908"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsPostsController.php" crc="-869589646"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestsAppsController.php" crc="-1449811996"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestConfigsController.php" crc="1410067306"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\TestAppsErrorController.php" crc="480344314"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\PagesController.php" crc="787909645"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Controller\AppController.php" crc="-1420853586"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Console\Templates\test\views\admin_edit.ctp" crc="1303800009"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Console\Templates\test\classes\test_object.ctp" crc="58271102"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Console\Command\SampleShell.php" crc="1883191376"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\var_test2.php" crc="1192149351"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\var_test.php" crc="1245091248"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\routes.php" crc="270597239"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\no_section.ini" crc="-1898020663"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\nested.ini" crc="1281337685"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\htmlhelper_tags.php" crc="-90749353"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\htmlhelper_minimized.ini" crc="-1878302911"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\empty.php" crc="-171290510"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\empty.ini" crc="1531244080"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\acl.php" crc="-559834074"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\acl.ini.php" crc="-1004338363"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\test_app\Config\acl.ini" crc="-1004338363"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidTreeFixture.php" crc="631060723"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidTagFixture.php" crc="-2131579543"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidportfolioFixture.php" crc="352055788"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioNumericidFixture.php" crc="1279388612"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemsUuidportfolioFixture.php" crc="156726239"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuiditemFixture.php" crc="712940567"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UuidFixture.php" crc="-195119590"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UserFixture.php" crc="2052971064"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnsignedFixture.php" crc="-1343657258"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnderscoreFieldFixture.php" crc="1026250424"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\UnconventionalTreeFixture.php" crc="-1311044444"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateWithPrefixFixture.php" crc="-1601183024"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateTableFixture.php" crc="-394283380"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateFixture.php" crc="1551495918"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedItemFixture.php" crc="-219010290"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslatedArticleFixture.php" crc="-67409653"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TranslateArticleFixture.php" crc="428612167"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThreadFixture.php" crc="1999070833"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ThePaperMonkiesFixture.php" crc="-1532639459"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginCommentFixture.php" crc="883053766"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TestPluginArticleFixture.php" crc="1269012769"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\TagFixture.php" crc="-1744217896"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SyfileFixture.php" crc="951866856"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoryFixture.php" crc="-1980936633"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\StoriesTagFixture.php" crc="-1171257991"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingFixture.php" crc="-670729631"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SomethingElseFixture.php" crc="1392271593"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\soap_response.xml" crc="-2008194578"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\soap_request.xml" crc="-605819570"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SiteFixture.php" crc="-727007490"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SessionFixture.php" crc="2039009375"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SecondaryModelFixture.php" crc="-1454494198"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\SampleFixture.php" crc="-381088890"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\sample.xml" crc="-1522520796"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\rss.xml" crc="-1273819325"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProjectFixture.php" crc="-902656455"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductUpdateAllFixture.php" crc="765414667"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ProductFixture.php" crc="-316056060"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrimaryModelFixture.php" crc="427766952"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PrefixTestFixture.php" crc="-1238805617"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostsTagFixture.php" crc="1242821474"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PostFixture.php" crc="2043386304"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PortfolioFixture.php" crc="1724808852"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PlayerFixture.php" crc="1243564870"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\PersonFixture.php" crc="885077022"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\OverallFavoriteFixture.php" crc="-414705985"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumericArticleFixture.php" crc="-318874775"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumberTreeTwoFixture.php" crc="-914399134"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NumberTreeFixture.php" crc="899366481"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\NodeFixture.php" crc="-271177148"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyUserFixture.php" crc="1591696775"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyProductFixture.php" crc="243732915"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoryFixture.php" crc="-786360978"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyUsersFixture.php" crc="-1744702786"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MyCategoriesMyProductsFixture.php" crc="1102348746"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\MessageFixture.php" crc="-1762579226"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinThingFixture.php" crc="581767255"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinCFixture.php" crc="-566539704"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinBFixture.php" crc="-1801897680"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinAFixture.php" crc="1223348817"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinACFixture.php" crc="-1319327798"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\JoinABFixture.php" crc="-436478876"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemsPortfolioFixture.php" crc="1220041339"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ItemFixture.php" crc="1482144116"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\InnoFixture.php" crc="-357590685"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ImageFixture.php" crc="855623558"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\HomeFixture.php" crc="250492712"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildsPlayerFixture.php" crc="2123381233"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GuildFixture.php" crc="-324109981"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\GroupUpdateAllFixture.php" crc="-1987718369"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitsUuidTagFixture.php" crc="-407848960"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FruitFixture.php" crc="215132815"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FlagTreeFixture.php" crc="751975365"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FixturizedTestCase.php" crc="234220698"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FilmFileFixture.php" crc="1127589099"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeatureSetFixture.php" crc="-846125617"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\FeaturedFixture.php" crc="-594650224"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ExteriorTypeCategoryFixture.php" crc="-2060445650"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainsSiteFixture.php" crc="777069015"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DomainFixture.php" crc="-476868413"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentFixture.php" crc="824569559"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DocumentDirectoryFixture.php" crc="-1696171372"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeFixture.php" crc="-1734834979"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceTypeCategoryFixture.php" crc="-874681097"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DeviceFixture.php" crc="-1609504287"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DependencyFixture.php" crc="2027232983"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DatatypeFixture.php" crc="999273784"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\DataTestFixture.php" crc="-804369840"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserNonstandardPrimaryKeyFixture.php" crc="-175521176"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCacheUserFixture.php" crc="788575697"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostNonstandardPrimaryKeyFixture.php" crc="-399328122"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CounterCachePostFixture.php" crc="752058709"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentFixture.php" crc="-2046858249"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ContentAccountFixture.php" crc="204608839"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CommentFixture.php" crc="-979645892"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CdFixture.php" crc="-1641403831"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryThreadFixture.php" crc="1281535580"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CategoryFixture.php" crc="-721068836"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CampaignFixture.php" crc="2053598318"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CallbackFixture.php" crc="703572423"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CakeSessionFixture.php" crc="-31876166"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\CacheTestModelFixture.php" crc="941173759"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BookFixture.php" crc="-1878519800"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BinaryTestFixture.php" crc="1623744662"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BidFixture.php" crc="-1055503184"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingMessageFixture.php" crc="-1710046788"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BiddingFixture.php" crc="-1062540831"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BasketFixture.php" crc="925174408"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeTagFixture.php" crc="423519682"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeCommentFixture.php" crc="-135766909"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticlesBakeTagFixture.php" crc="-559757798"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\BakeArticleFixture.php" crc="119618095"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserFixture.php" crc="265345294"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthUserCustomFieldFixture.php" crc="-496044819"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AuthorFixture.php" crc="-189938022"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AttachmentFixture.php" crc="323766281"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AssertTagsTestCase.php" crc="-1772552571"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticlesTagFixture.php" crc="-1622327528"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFixture.php" crc="-347241114"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFeaturedsTagsFixture.php" crc="1245237642"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArticleFeaturedFixture.php" crc="1944086767"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroTwoFixture.php" crc="-923963241"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoTwoFixture.php" crc="-1590866005"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArosAcoFixture.php" crc="1854784441"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AroFixture.php" crc="1144919968"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorsPlayerFixture.php" crc="-612484787"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\ArmorFixture.php" crc="1321987100"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AppleFixture.php" crc="-57652613"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AnotherArticleFixture.php" crc="566735299"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AfterTreeFixture.php" crc="1493926748"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdvertisementFixture.php" crc="-56352831"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AdFixture.php" crc="1507048719"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoTwoFixture.php" crc="-1047557291"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoFixture.php" crc="1014666390"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AcoActionFixture.php" crc="482450362"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Fixture\AccountFixture.php" crc="-1138034966"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TimeHelperTest.php" crc="511276388"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\TextHelperTest.php" crc="2068281689"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\SessionHelperTest.php" crc="743126586"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\RssHelperTest.php" crc="-471957008"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PrototypeEngineHelperTest.php" crc="334052985"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\PaginatorHelperTest.php" crc="-1138337619"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\NumberHelperTest.php" crc="556681715"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\MootoolsEngineHelperTest.php" crc="-1678137984"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JsHelperTest.php" crc="-1076602470"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\JqueryEngineHelperTest.php" crc="1938275120"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\HtmlHelperTest.php" crc="-1336810109"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\FormHelperTest.php" crc="-1465524988"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\Helper\CacheHelperTest.php" crc="1728451982"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\XmlViewTest.php" crc="-1217950786"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ViewTest.php" crc="-1354255232"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ThemeViewTest.php" crc="1894557594"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\ScaffoldViewTest.php" crc="442728669"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\MediaViewTest.php" crc="931429734"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\JsonViewTest.php" crc="1592008195"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperTest.php" crc="886010605"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\View\HelperCollectionTest.php" crc="-1647473003"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\XmlTest.php" crc="1440224573"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ValidationTest.php" crc="-2092230693"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\StringTest.php" crc="1636632510"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SetTest.php" crc="310460913"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SecurityTest.php" crc="890826896"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\SanitizeTest.php" crc="1598246220"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ObjectCollectionTest.php" crc="-1318409920"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\InflectorTest.php" crc="893252347"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\HashTest.php" crc="-659556185"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FolderTest.php" crc="-731920120"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\FileTest.php" crc="754383089"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\DebuggerTest.php" crc="1441899634"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\ClassRegistryTest.php" crc="-1621806998"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeTimeTest.php" crc="-1953467542"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Utility\CakeNumberTest.php" crc="2081329655"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\Fixture\CakeFixtureManagerTest.php" crc="-1451131627"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\HtmlCoverageReportTest.php" crc="1367746117"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\ControllerTestCaseTest.php" crc="-1581423173"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestSuiteTest.php" crc="-724058282"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestFixtureTest.php" crc="-2018526923"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\TestSuite\CakeTestCaseTest.php" crc="1723801664"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\RedirectRouteTest.php" crc="-1962255534"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\PluginShortRouteTest.php" crc="-2089382040"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Route\CakeRouteTest.php" crc="1791447174"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\Filter\AssetDispatcherTest.php" crc="211511667"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\RouterTest.php" crc="2134012841"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Routing\DispatcherTest.php" crc="878772239"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpSocketTest.php" crc="1359463004"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\HttpResponseTest.php" crc="283099186"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\DigestAuthenticationTest.php" crc="874217760"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Http\BasicAuthenticationTest.php" crc="-776197086"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\SmtpTransportTest.php" crc="714299657"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\MailTransportTest.php" crc="-628817081"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\DebugTransportTest.php" crc="1974525745"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\Email\CakeEmailTest.php" crc="-1490272771"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeSocketTest.php" crc="-1411476585"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeResponseTest.php" crc="400281977"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Network\CakeRequestTest.php" crc="-1424864786"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationSetTest.php" crc="1518367931"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Validator\CakeValidationRuleTest.php" crc="-1910132150"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\DatabaseSessionTest.php" crc="1955535907"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Session\CacheSessionTest.php" crc="541699553"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqlserverTest.php" crc="-1829927952"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\SqliteTest.php" crc="-633695698"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\PostgresTest.php" crc="414798950"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\Database\MysqlTest.php" crc="1766872460"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DboSourceTest.php" crc="689811875"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\DataSourceTest.php" crc="-385793447"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Datasource\CakeSessionTest.php" crc="377026389"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorUuidTest.php" crc="1619154198"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorTest.php" crc="-1100268430"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorScopedTest.php" crc="1177976265"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorNumberTest.php" crc="-1149579735"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TreeBehaviorAfterTest.php" crc="817789001"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\TranslateBehaviorTest.php" crc="-928396203"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\ContainableBehaviorTest.php" crc="1482592373"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\Behavior\AclBehaviorTest.php" crc="-492517415"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelWriteTest.php" crc="403345576"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelValidationTest.php" crc="1381657489"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTestBase.php" crc="771086631"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelTest.php" crc="1265855907"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\models.php" crc="-1676026844"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelReadTest.php" crc="109394720"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelIntegrationTest.php" crc="1300152736"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelDeleteTest.php" crc="-952030701"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ModelCrossSchemaHabtmTest.php" crc="-1290725916"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\ConnectionManagerTest.php" crc="-792780851"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\CakeSchemaTest.php" crc="1967720538"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\BehaviorCollectionTest.php" crc="-1271312565"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Model\AclNodeTest.php" crc="1406004691"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\SyslogLogTest.php" crc="-249234852"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\FileLogTest.php" crc="-1087487445"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\Engine\ConsoleLogTest.php" crc="1626426440"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\LogEngineCollectionTest.php" crc="1570231574"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Log\CakeLogTest.php" crc="1843588920"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\MultibyteTest.php" crc="650013913"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\L10nTest.php" crc="477032063"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\I18n\I18nTest.php" crc="-619081309"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventTest.php" crc="-1405195827"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Event\CakeEventManagerTest.php" crc="-906231552"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ExceptionRendererTest.php" crc="1124990957"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Error\ErrorHandlerTest.php" crc="-827782763"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ObjectTest.php" crc="948486815"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\ConfigureTest.php" crc="101441535"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\CakePluginTest.php" crc="1117332145"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Core\AppTest.php" crc="-1319465433"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\FormAuthenticateTest.php" crc="1753766206"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\DigestAuthenticateTest.php" crc="409311204"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\CrudAuthorizeTest.php" crc="-320364413"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ControllerAuthorizeTest.php" crc="1191001744"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BlowfishAuthenticateTest.php" crc="-1080165215"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\BasicAuthenticateTest.php" crc="-1471613905"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Auth\ActionsAuthorizeTest.php" crc="325159447"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\PhpAclTest.php" crc="1420158521"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\IniAclTest.php" crc="-724445102"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\Acl\DbAclTest.php" crc="1862360240"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SessionComponentTest.php" crc="-568714943"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\SecurityComponentTest.php" crc="-1006211872"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\RequestHandlerComponentTest.php" crc="559010081"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\PaginatorComponentTest.php" crc="-1857338188"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\EmailComponentTest.php" crc="187238672"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\CookieComponentTest.php" crc="209498872"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AuthComponentTest.php" crc="1628141047"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\Component\AclComponentTest.php" crc="922164635"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ScaffoldTest.php" crc="-1949373560"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\PagesControllerTest.php" crc="-1691384162"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerTest.php" crc="-1315326598"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ControllerMergeVarsTest.php" crc="-425067078"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentTest.php" crc="-1283571642"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Controller\ComponentCollectionTest.php" crc="-1731065067"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ViewTaskTest.php" crc="-804812902"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TestTaskTest.php" crc="2081344403"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\TemplateTaskTest.php" crc="-2078774871"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ProjectTaskTest.php" crc="-1484243785"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\PluginTaskTest.php" crc="82537291"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ModelTaskTest.php" crc="1058361723"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\FixtureTaskTest.php" crc="-1639768985"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ExtractTaskTest.php" crc="-1606937766"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\DbConfigTaskTest.php" crc="1187279138"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\ControllerTaskTest.php" crc="1511786"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\Task\CommandTaskTest.php" crc="-1950067060"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\TestShellTest.php" crc="-414434386"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\SchemaShellTest.php" crc="2119986259"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CompletionShellTest.php" crc="215846012"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\CommandListShellTest.php" crc="1281037374"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\BakeShellTest.php" crc="2090572616"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\ApiShellTest.php" crc="-293023077"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\Command\AclShellTest.php" crc="-356312482"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\TaskCollectionTest.php" crc="1138522529"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellTest.php" crc="-856059695"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ShellDispatcherTest.php" crc="580532839"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\HelpFormatterTest.php" crc="765623978"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOutputTest.php" crc="1112253220"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleOptionParserTest.php" crc="-593853089"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\ConsoleErrorHandlerTest.php" crc="1506535015"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllTasksTest.php" crc="-1481666672"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllShellsTest.php" crc="744565509"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllConsoleTest.php" crc="-1473565517"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Console\AllConsoleLibsTest.php" crc="1628305519"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\PhpReaderTest.php" crc="-1488439986"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Configure\IniReaderTest.php" crc="2144237532"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\XcacheEngineTest.php" crc="10052099"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\WincacheEngineTest.php" crc="631034038"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\RedisEngineTest.php" crc="-947446619"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcacheEngineTest.php" crc="1697068143"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\MemcachedEngineTest.php" crc="571519801"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\FileEngineTest.php" crc="-293503878"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\Engine\ApcEngineTest.php" crc="-757545722"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\Cache\CacheTest.php" crc="1702382589"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\BasicsTest.php" crc="-699151783"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllViewTest.php" crc="1509899635"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllUtilityTest.php" crc="1848453574"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllTestSuiteTest.php" crc="190438073"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllTestsTest.php" crc="514002808"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllRoutingTest.php" crc="1383446814"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllNetworkTest.php" crc="-1408732293"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllLogTest.php" crc="250999031"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllI18nTest.php" crc="895430307"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllHelpersTest.php" crc="-11511308"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllEventTest.php" crc="1716965570"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllErrorTest.php" crc="-360733532"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllDbRelatedTest.php" crc="735547296"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllDatabaseTest.php" crc="-907513867"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllCoreTest.php" crc="-175818259"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllControllerTest.php" crc="-741911402"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllConsoleTest.php" crc="-367455993"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllConfigureTest.php" crc="100858128"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllComponentsTest.php" crc="-1131436378"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllCacheTest.php" crc="-1085106341"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\Case\AllBehaviorsTest.php" crc="2046653470"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\View\index.ctp" crc="1350244989"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\Scaffold.ctp" crc="749149340"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoHelpersOrComponents.ctp" crc="-2008069512"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\NoActions.ctp" crc="-1239841685"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\ActionsWithNoSessions.ctp" crc="506441400"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Test\bake_compare\Controller\ActionsUsingSessions.ctp" crc="1043832617"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\RedirectRoute.php" crc="-2044619598"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\PluginShortRoute.php" crc="-961820572"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\Route\CakeRoute.php" crc="1410827667"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\CacheDispatcher.php" crc="-378793034"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\Filter\AssetDispatcher.php" crc="256487113"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\Router.php" crc="-780523557"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\DispatcherFilter.php" crc="-2052558678"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Routing\Dispatcher.php" crc="1878004480"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocketResponse.php" crc="-1427269883"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpSocket.php" crc="941531393"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\HttpResponse.php" crc="994555470"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\DigestAuthentication.php" crc="1453326198"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Http\BasicAuthentication.php" crc="-1622000054"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\SmtpTransport.php" crc="1885367422"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\MailTransport.php" crc="-417402233"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\DebugTransport.php" crc="-803094629"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\CakeEmail.php" crc="1013160461"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\Email\AbstractTransport.php" crc="153500193"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeSocket.php" crc="807618155"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeResponse.php" crc="-931277367"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Network\CakeRequest.php" crc="-1351042155"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationSet.php" crc="876624052"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Validator\CakeValidationRule.php" crc="-424469295"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\DatabaseSession.php" crc="1045062338"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CakeSessionHandlerInterface.php" crc="1444743972"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Session\CacheSession.php" crc="2014941158"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlserver.php" crc="-1166793827"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Sqlite.php" crc="2054063266"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Postgres.php" crc="588419316"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\Database\Mysql.php" crc="676991482"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DboSource.php" crc="-1007630593"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\DataSource.php" crc="167484460"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Datasource\CakeSession.php" crc="-1295121661"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TreeBehavior.php" crc="-480939441"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\TranslateBehavior.php" crc="1694111124"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\ContainableBehavior.php" crc="810123922"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Behavior\AclBehavior.php" crc="1059821640"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Permission.php" crc="-1846297482"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelValidator.php" crc="-776351694"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\ModelBehavior.php" crc="-829819044"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Model.php" crc="-1148106965"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\I18nModel.php" crc="-575361252"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\ConnectionManager.php" crc="-1870608370"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\CakeSchema.php" crc="-667271184"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\BehaviorCollection.php" crc="1594307375"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Aro.php" crc="167269359"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\AcoAction.php" crc="1601103736"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\Aco.php" crc="-1325824507"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Model\AclNode.php" crc="1373476068"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\SyslogLog.php" crc="940946694"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\FileLog.php" crc="305813875"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\ConsoleLog.php" crc="615442032"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Log\Engine\BaseLog.php" crc="262141650"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Log\LogEngineCollection.php" crc="-2073965089"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLogInterface.php" crc="-886648431"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Log\CakeLog.php" crc="881708672"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\I18n\Multibyte.php" crc="586221662"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\I18n\L10n.php" crc="-488655335"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\I18n\I18n.php" crc="378701776"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventManager.php" crc="1055577642"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEventListener.php" crc="1257967976"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Event\CakeEvent.php" crc="1053529764"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Error\exceptions.php" crc="-866383647"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Error\ExceptionRenderer.php" crc="1152024232"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Error\ErrorHandler.php" crc="1719314783"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Core\Object.php" crc="-1094181336"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Core\Configure.php" crc="-762356435"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Core\CakePlugin.php" crc="-1883340856"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Core\App.php" crc="-2037585718"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\SimplePasswordHasher.php" crc="-543999421"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\FormAuthenticate.php" crc="304618347"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\DigestAuthenticate.php" crc="1596784860"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\CrudAuthorize.php" crc="-1243514436"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ControllerAuthorize.php" crc="-468348090"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishPasswordHasher.php" crc="-896094330"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BlowfishAuthenticate.php" crc="-862606022"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BasicAuthenticate.php" crc="704235437"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthorize.php" crc="-934169376"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\BaseAuthenticate.php" crc="-828951722"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\ActionsAuthorize.php" crc="-843877898"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Auth\AbstractPasswordHasher.php" crc="677876468"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\PhpAcl.php" crc="-1838161580"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\IniAcl.php" crc="1445676974"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\DbAcl.php" crc="187642271"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\Acl\AclInterface.php" crc="-2032390359"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SessionComponent.php" crc="2065912261"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\SecurityComponent.php" crc="1861769398"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\RequestHandlerComponent.php" crc="-1347010438"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\PaginatorComponent.php" crc="290933291"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\EmailComponent.php" crc="-2073945642"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\CookieComponent.php" crc="-1834413478"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AuthComponent.php" crc="-1621844668"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component\AclComponent.php" crc="-2143651698"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Scaffold.php" crc="-1550043411"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Controller.php" crc="292570042"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\ComponentCollection.php" crc="148967708"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\Component.php" crc="1244077668"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Controller\CakeErrorController.php" crc="-1250103463"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\css\cake.generic.css" crc="-1395785336"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\test.php" crc="-1796608569"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\index.php" crc="1136539058"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\webroot\.htaccess" crc="664552048"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Pages\home.ctp" crc="-147421809"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\xml\default.ctp" crc="-1226178100"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\rss\default.ctp" crc="-2123680797"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\js\default.ctp" crc="417298255"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\Emails\text\default.ctp" crc="-42562546"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\Emails\html\default.ctp" crc="-1745318212"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\flash.ctp" crc="-429194959"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\error.ctp" crc="1821414949"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\default.ctp" crc="1821414949"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Layouts\ajax.ctp" crc="1699896257"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Helper\AppHelper.php" crc="-1982779077"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Errors\error500.ctp" crc="1813517165"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Errors\error400.ctp" crc="-1550588671"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Emails\text\default.ctp" crc="207713985"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\View\Emails\html\default.ctp" crc="-705731625"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Test\Case\AllTestsTest.php" crc="-1855962667"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Model\AppModel.php" crc="1467988256"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Controller\PagesController.php" crc="-185303449"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Controller\AppController.php" crc="665835881"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\Command\AppShell.php" crc="-1308180789"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Console\cake.php" crc="-1751937562"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\sessions.php" crc="-639929808"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\i18n.php" crc="-1412825473"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\Schema\db_acl.php" crc="-1319852270"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\routes.php" crc="1068503264"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\core.php" crc="2034998152"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\bootstrap.php" crc="-983543081"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\acl.php" crc="1402755015"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\Config\acl.ini.php" crc="-2032799655"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\index.php" crc="-1521482630"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\skel\.htaccess" crc="1437620246"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\view.ctp" crc="-260876440"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\index.ctp" crc="-495042697"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\views\form.ctp" crc="-370449472"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\test.ctp" crc="-383039100"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\model.ctp" crc="1026055734"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\fixture.ctp" crc="-1364173739"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\classes\controller.ctp" crc="1393799306"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Templates\default\actions\controller_actions.ctp" crc="-1042566914"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ViewTask.php" crc="-500102755"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TestTask.php" crc="399944013"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\TemplateTask.php" crc="759673358"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ProjectTask.php" crc="1161122338"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\PluginTask.php" crc="-92194132"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ModelTask.php" crc="799693298"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\FixtureTask.php" crc="309125267"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ExtractTask.php" crc="-766579573"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\DbConfigTask.php" crc="456472552"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\ControllerTask.php" crc="-1074296673"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\CommandTask.php" crc="1288482154"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\Task\BakeTask.php" crc="-1071193278"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\UpgradeShell.php" crc="453597605"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestsuiteShell.php" crc="81642994"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\TestShell.php" crc="-1432270481"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ServerShell.php" crc="-84306528"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\SchemaShell.php" crc="857570006"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\I18nShell.php" crc="-1105175650"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ConsoleShell.php" crc="549103039"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CompletionShell.php" crc="-1597243656"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\CommandListShell.php" crc="479909890"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\BakeShell.php" crc="-1720017603"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AppShell.php" crc="-1388152312"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\ApiShell.php" crc="1076944014"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Command\AclShell.php" crc="-623544782"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\TaskCollection.php" crc="-1272772103"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ShellDispatcher.php" crc="-9006220"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\Shell.php" crc="496786366"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\HelpFormatter.php" crc="705877330"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOutput.php" crc="-540448494"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleOptionParser.php" crc="2013776520"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputSubcommand.php" crc="741431230"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputOption.php" crc="139567351"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInputArgument.php" crc="-222304849"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleInput.php" crc="1151286372"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\ConsoleErrorHandler.php" crc="759293051"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Console\cake.php" crc="736455842"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Configure\PhpReader.php" crc="1346249378"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Configure\IniReader.php" crc="583995015"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Configure\ConfigReaderInterface.php" crc="-432557238"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\ff00_ffef.php" crc="402333804"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2c80_2cff.php" crc="2024854204"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2c60_2c7f.php" crc="-503246730"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2c00_2c5f.php" crc="729683624"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2460_24ff.php" crc="490921933"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2150_218f.php" crc="1344982454"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\2100_214f.php" crc="-961555175"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\1f00_1fff.php" crc="-615955249"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\1e00_1eff.php" crc="1327121521"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0530_058f.php" crc="1253795857"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0500_052f.php" crc="-1891213142"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0400_04ff.php" crc="1293406374"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0370_03ff.php" crc="-1830767131"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0250_02af.php" crc="1551276560"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0180_024F.php" crc="-64499657"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0100_017f.php" crc="-98589030"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\unicode\casefolding\0080_00ff.php" crc="1653647708"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\routes.php" crc="-438486550"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Config\config.php" crc="-336359655"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\XcacheEngine.php" crc="-1207382719"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\WincacheEngine.php" crc="557133270"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\RedisEngine.php" crc="1483427779"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcacheEngine.php" crc="340065026"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\MemcachedEngine.php" crc="624922649"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\FileEngine.php" crc="2013874244"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Engine\ApcEngine.php" crc="-1412933931"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\CacheEngine.php" crc="-756467449"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\Cache\Cache.php" crc="2040205986"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\VERSION.txt" crc="1346394061"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\LICENSE.txt" crc="1453263421"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\bootstrap.php" crc="842144256"/>
		<file name="C:\xampp\htdocs\ISLL\lib\Cake\basics.php" crc="1224117094"/>
		<file name="C:\xampp\htdocs\ISLL\app\webroot\css\cake.generic.css" crc="-1736626245"/>
		<file name="C:\xampp\htdocs\ISLL\app\webroot\test.php" crc="-867615318"/>
		<file name="C:\xampp\htdocs\ISLL\app\webroot\index.php" crc="1684373862"/>
		<file name="C:\xampp\htdocs\ISLL\app\webroot\.htaccess" crc="664552048"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Users\register.ctp" crc="925006480"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Users\authenticate.ctp" crc="645220356"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\SysReviews\viewall.ctp" crc="1992057457"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\SysReviews\add.ctp" crc="-467569230"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Pages\home.ctp" crc="470631628"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\xml\default.ctp" crc="-1226178100"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\rss\default.ctp" crc="-188138940"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\js\default.ctp" crc="1643713173"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\Emails\text\default.ctp" crc="-42562546"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\Emails\html\default.ctp" crc="1644956851"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\flash.ctp" crc="365386138"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\error.ctp" crc="-294465656"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\default.ctp" crc="203430738"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Layouts\ajax.ctp" crc="1909231399"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Helper\AppHelper.php" crc="-357833536"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Errors\error500.ctp" crc="-1666581142"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Errors\error400.ctp" crc="420334063"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Emails\text\default.ctp" crc="-558328381"/>
		<file name="C:\xampp\htdocs\ISLL\app\View\Emails\html\default.ctp" crc="716549767"/>
		<file name="C:\xampp\htdocs\ISLL\app\Model\AppModel.php" crc="1537343685"/>
		<file name="C:\xampp\htdocs\ISLL\app\Controller\UsersController.php" crc="-378329754"/>
		<file name="C:\xampp\htdocs\ISLL\app\Controller\SysReviewsController.php" crc="508367833"/>
		<file name="C:\xampp\htdocs\ISLL\app\Controller\PagesController.php" crc="1783121622"/>
		<file name="C:\xampp\htdocs\ISLL\app\Controller\AppController.php" crc="-497072534"/>
		<file name="C:\xampp\htdocs\ISLL\app\Console\Command\AppShell.php" crc="-1388152312"/>
		<file name="C:\xampp\htdocs\ISLL\app\Console\cake.php" crc="1941559780"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\Schema\sessions.php" crc="-1036169690"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\Schema\i18n.php" crc="1056263670"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\Schema\db_acl.php" crc="-80643049"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\routes.php" crc="-1481163693"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\database.php" crc="1664627792"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\core.php" crc="-1450768946"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\bootstrap.php" crc="688788402"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\acl.php" crc="-1822880323"/>
		<file name="C:\xampp\htdocs\ISLL\app\Config\acl.ini.php" crc="189843962"/>
		<file name="C:\xampp\htdocs\ISLL\app\index.php" crc="2043644913"/>
		<file name="C:\xampp\htdocs\ISLL\app\.htaccess" crc="1437620246"/>
		<file name="C:\xampp\htdocs\ISLL\index.php" crc="-710439584"/>
		<file name="C:\xampp\htdocs\ISLL\build.xml" crc="-1312932039"/>
		<file name="C:\xampp\htdocs\ISLL\.travis.yml" crc="1614851574"/>
		<file name="C:\xampp\htdocs\ISLL\.htaccess" crc="-1581282577"/>
	</filescache>
</project>
